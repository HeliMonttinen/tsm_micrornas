%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUCAGAGUAGAAUGAAURAUUGUCUUCUUUCUUUCAGUUCUUGGCAGUGWAGAUAUUGAAGCAGGAAAUAGUCAAUGUGGGGGGAGGAAGKYAUUAUCUAUUKUUUGUUCUUAAAGAUURKUY\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[78.34936523 187.50000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[100.00000000 275.00000000]
[89.02532959 297.46234131]
[69.30399323 312.82687378]
[49.58266068 328.19140625]
[29.86132431 343.55593872]
[10.13998890 358.92047119]
[-13.02675533 349.52355957]
[-9.58134651 374.28500366]
[-29.30268288 389.64953613]
[-49.02401733 405.01406860]
[-71.74322510 394.58154297]
[-96.72939301 393.75012207]
[-120.09186554 402.64926147]
[-138.19281006 419.89324951]
[-148.21368408 442.79702759]
[-148.59411621 467.79412842]
[-139.27484131 490.99221802]
[-121.70701599 508.77905273]
[-98.62615967 518.38500977]
[-96.52651215 543.29669189]
[-94.42685699 568.20831299]
[-92.32720184 593.11999512]
[-90.22754669 618.03167725]
[-88.12789154 642.94335938]
[-86.02824402 667.85504150]
[-83.92858887 692.76672363]
[-81.82893372 717.67840576]
[-79.72927856 742.59002686]
[-77.62962341 767.50170898]
[-75.52997589 792.41339111]
[-73.43032074 817.32507324]
[-94.57772827 830.65875244]
[-108.92058563 851.13513184]
[-133.70123291 847.83068848]
[-158.48188782 844.52624512]
[-183.26252747 841.22180176]
[-208.04318237 837.91735840]
[-232.82383728 834.61291504]
[-249.48269653 815.97204590]
[-274.26333618 812.66754150]
[-290.92221069 794.02667236]
[-307.58105469 775.38580322]
[-324.23992920 756.74493408]
[-340.89877319 738.10406494]
[-349.63104248 714.67871094]
[-373.90054321 708.67938232]
[-392.54141235 725.33825684]
[-389.29663086 750.12677002]
[-366.99600220 761.42645264]
[-350.33715820 780.06732178]
[-333.67828369 798.70819092]
[-317.01943970 817.34912109]
[-300.36056519 835.98999023]
[-299.85092163 860.98480225]
[-283.19207764 879.62567139]
[-258.41140747 882.93011475]
[-237.45005798 869.30578613]
[-212.66941833 872.61022949]
[-187.88876343 875.91467285]
[-163.10810852 879.21917725]
[-138.32746887 882.52362061]
[-113.54681396 885.82806396]
[-105.07068634 909.34729004]
[-88.15612030 927.75646973]
[-65.43692017 938.18902588]
[-40.45074844 939.02044678]
[-17.08827209 930.12127686]
[1.01267540 912.87725830]
[11.03354836 889.97351074]
[11.41396904 864.97644043]
[2.09470296 841.77832031]
[-15.47312355 823.99151611]
[-38.55397797 814.38555908]
[-40.65362930 789.47387695]
[-42.75328445 764.56219482]
[-44.85293961 739.65051270]
[-46.95259094 714.73889160]
[-49.05224609 689.82720947]
[-51.15189743 664.91552734]
[-53.25155258 640.00384521]
[-55.35120392 615.09216309]
[-57.45085907 590.18048096]
[-59.55051422 565.26879883]
[-61.65016556 540.35717773]
[-63.74982071 515.44549561]
[-42.60240936 502.11178589]
[-28.25955772 481.63540649]
[-22.95462990 457.20474243]
[-27.51366997 432.62396240]
[-7.79233456 417.25939941]
[11.92900181 401.89486694]
[31.65033722 386.53033447]
[51.37167358 371.16580200]
[71.09300995 355.80126953]
[90.81434631 340.43673706]
[110.53568268 325.07220459]
[135.00000000 319.92468262]
[145.97467041 297.46234131]
[135.00000000 275.00000000]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[117.49999975 297.46233928 28.47466705 232.07849253 180.00000000 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-86.30188125 456.24067962 63.35458712 306.04357611 283.28508865 1.00000000]
[-86.30188125 456.24067962 63.35458712 283.28508865 260.52660120 1.00000000]
[-86.30188125 456.24067962 63.35458712 260.52660120 237.76811374 1.00000000]
[-86.30188125 456.24067962 63.35458712 237.76811374 215.00962629 1.00000000]
[-86.30188125 456.24067962 63.35458712 215.00962629 192.25113883 1.00000000]
[-86.30188125 456.24067962 63.35458712 192.25113883 169.49265138 1.00000000]
[-86.30188125 456.24067962 63.35458712 169.49265138 146.73416392 1.00000000]
[-86.30188125 456.24067962 63.35458712 146.73416392 123.97567647 1.00000000]
[-86.30188125 456.24067962 63.35458712 123.97567647 101.21718902 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-50.87825816 876.52986989 63.35458712 249.14735747 226.38887002 1.00000000]
[-50.87825816 876.52986989 63.35458712 226.38887002 203.63038256 1.00000000]
[]
[]
[]
[]
[]
[-266.33738057 847.79883540 36.01426010 338.52279057 297.90457471 1.00000000]
[-266.33738057 847.79883540 36.01426010 297.90457471 257.28635886 1.00000000]
[]
[]
[]
[]
[-367.44656740 734.65999992 26.77024824 7.39171564 311.72050244 1.00000000]
[-367.44656740 734.65999992 26.77024824 311.72050244 256.04928924 1.00000000]
[-367.44656740 734.65999992 26.77024824 256.04928924 200.37807604 1.00000000]
[-367.44656740 734.65999992 26.77024824 200.37807604 144.70686285 1.00000000]
[-367.44656740 734.65999992 26.77024824 144.70686285 89.03564965 1.00000000]
[]
[]
[]
[]
[-266.33738057 847.79883540 36.01426010 199.14100642 158.52279057 1.00000000]
[-266.33738057 847.79883540 36.01426010 158.52279057 117.90457471 1.00000000]
[-266.33738057 847.79883540 36.01426010 117.90457471 77.28635886 1.00000000]
[-266.33738057 847.79883540 36.01426010 77.28635886 36.66814301 1.00000000]
[]
[]
[]
[]
[]
[-50.87825816 876.52986989 63.35458712 171.56055102 148.80206356 1.00000000]
[-50.87825816 876.52986989 63.35458712 148.80206356 126.04357611 1.00000000]
[-50.87825816 876.52986989 63.35458712 126.04357611 103.28508865 1.00000000]
[-50.87825816 876.52986989 63.35458712 103.28508865 80.52660120 1.00000000]
[-50.87825816 876.52986989 63.35458712 80.52660120 57.76811374 1.00000000]
[-50.87825816 876.52986989 63.35458712 57.76811374 35.00962629 1.00000000]
[-50.87825816 876.52986989 63.35458712 35.00962629 12.25113883 1.00000000]
[-50.87825816 876.52986989 63.35458712 12.25113883 349.49265138 1.00000000]
[-50.87825816 876.52986989 63.35458712 349.49265138 326.73416392 1.00000000]
[-50.87825816 876.52986989 63.35458712 326.73416392 303.97567647 1.00000000]
[-50.87825816 876.52986989 63.35458712 303.97567647 281.21718902 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-86.30188125 456.24067962 63.35458712 69.14735747 46.38887002 1.00000000]
[-86.30188125 456.24067962 63.35458712 46.38887002 23.63038256 1.00000000]
[-86.30188125 456.24067962 63.35458712 23.63038256 0.87189511 1.00000000]
[-86.30188125 456.24067962 63.35458712 0.87189511 338.11340765 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[117.49999975 297.46233928 28.47466705 104.15698340 52.07849123 1.00000000]
[117.49999975 297.46233928 28.47466705 52.07849123 360.00000000 1.00000000]
[117.49999975 297.46233928 28.47466705 360.00000000 307.92150825 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 114]
[2 113]
[3 112]
[4 111]
[6 110]
[7 109]
[8 108]
[9 107]
[10 104]
[11 103]
[12 102]
[13 101]
[14 100]
[16 99]
[17 98]
[18 97]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[32 88]
[33 87]
[34 86]
[35 85]
[36 84]
[37 83]
[38 82]
[39 81]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
] def

init

% Start Annotations
75 74 12 1.00 0.60 0.67 omark 44 74 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
