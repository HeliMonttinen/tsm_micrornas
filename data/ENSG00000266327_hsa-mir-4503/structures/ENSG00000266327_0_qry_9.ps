%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUCAGAGUAGAAUAAAUGAUUGUCUUCUUUCCUUUGGUUCUUGGCAAUGUAGAUAUUUAAGCAGGAAAUAGAAACAGAAAUWGAAAUUUAUAUGUAAAUUCUAUUUCCUGCUUAAAUAUCUACAUUGYCAAUUUCAAUUUGGGGGGAGGAAGUCAUUUAUUAUUUCUUGUUCUUAAAGAUURKU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[89.02532959 222.46234131]
[100.00000000 244.92468262]
[100.00000000 269.92468262]
[100.00000000 294.92468262]
[100.00000000 319.92468262]
[82.11197662 337.38946533]
[78.14201355 362.07223511]
[89.65147400 384.26531982]
[112.11371613 395.24017334]
[119.95290375 418.97930908]
[127.79209137 442.71847534]
[135.63128662 466.45761108]
[143.47047424 490.19674683]
[151.30966187 513.93591309]
[159.14884949 537.67504883]
[166.98803711 561.41418457]
[174.82722473 585.15332031]
[182.66641235 608.89251709]
[190.50559998 632.63165283]
[173.86648560 651.29016113]
[198.34478760 656.37078857]
[206.18397522 680.10992432]
[214.02316284 703.84906006]
[221.86235046 727.58825684]
[229.70153809 751.32739258]
[237.54072571 775.06652832]
[245.37991333 798.80566406]
[253.21910095 822.54479980]
[261.05828857 846.28399658]
[268.89749146 870.02313232]
[259.39337158 893.14611816]
[267.23257446 916.88525391]
[257.72845459 940.00823975]
[248.22434998 963.13116455]
[238.72024536 986.25415039]
[215.53578186 995.60729980]
[202.48037720 1016.92761230]
[204.68869019 1041.82995605]
[221.29219055 1060.52014160]
[219.51803589 1085.45703125]
[217.74386597 1110.39404297]
[205.20280457 1132.02087402]
[214.55572510 1155.20544434]
[212.78157043 1180.14245605]
[211.00740051 1205.07934570]
[209.23324585 1230.01635742]
[207.45907593 1254.95336914]
[205.68492126 1279.89025879]
[203.91075134 1304.82727051]
[202.13659668 1329.76416016]
[200.36242676 1354.70117188]
[198.58827209 1379.63818359]
[196.81411743 1404.57507324]
[195.03994751 1429.51208496]
[193.26579285 1454.44909668]
[191.49162292 1479.38598633]
[189.71746826 1504.32299805]
[187.94329834 1529.26000977]
[186.16914368 1554.19689941]
[184.39497375 1579.13391113]
[182.62081909 1604.07080078]
[180.84666443 1629.00781250]
[179.07249451 1653.94482422]
[177.29833984 1678.88171387]
[175.52416992 1703.81872559]
[173.75001526 1728.75573730]
[171.97584534 1753.69262695]
[170.20169067 1778.62963867]
[168.42752075 1803.56665039]
[166.65336609 1828.50354004]
[164.87921143 1853.44055176]
[149.37678528 1873.05371094]
[125.52378845 1880.53930664]
[101.67079926 1888.02490234]
[85.28308105 1869.14526367]
[63.52068329 1856.84082031]
[38.89486694 1852.53161621]
[14.24734020 1856.71484375]
[-7.57770014 1868.90783691]
[-24.06175041 1887.70349121]
[-33.30263138 1910.93286133]
[-34.23399353 1935.91552734]
[-26.74835968 1959.76855469]
[-11.70953655 1979.73937988]
[9.14707088 1993.52343750]
[33.41471100 1999.53027344]
[58.29302216 1997.06652832]
[80.91116333 1986.41674805]
[98.65911865 1968.80957031]
[109.48886108 1946.27697754]
[112.15068817 1921.41906738]
[136.00367737 1913.93347168]
[159.85667419 1906.44787598]
[183.78579712 1913.68640137]
[205.68484497 1901.62695312]
[212.36050415 1877.53466797]
[199.79095459 1855.92431641]
[201.56512451 1830.98742676]
[203.33927917 1806.05041504]
[205.11344910 1781.11340332]
[206.88760376 1756.17651367]
[208.66175842 1731.23950195]
[210.43592834 1706.30261230]
[212.21008301 1681.36560059]
[213.98425293 1656.42858887]
[215.75840759 1631.49169922]
[217.53257751 1606.55468750]
[219.30673218 1581.61767578]
[221.08090210 1556.68078613]
[222.85505676 1531.74377441]
[224.62922668 1506.80676270]
[226.40338135 1481.86987305]
[228.17753601 1456.93286133]
[229.95170593 1431.99597168]
[231.72586060 1407.05895996]
[233.50003052 1382.12194824]
[235.27418518 1357.18505859]
[237.04835510 1332.24804688]
[238.82250977 1307.31103516]
[240.59667969 1282.37414551]
[242.37083435 1257.43713379]
[244.14498901 1232.50012207]
[245.91915894 1207.56323242]
[247.69331360 1182.62622070]
[249.46748352 1157.68920898]
[262.00854492 1136.06237793]
[252.65562439 1112.87780762]
[254.42977905 1087.94091797]
[256.20394897 1063.00390625]
[275.28628540 1046.85266113]
[280.99789429 1022.51379395]
[271.09240723 999.55993652]
[280.59652710 976.43695068]
[290.10061646 953.31396484]
[299.60473633 930.19097900]
[321.87237549 918.82647705]
[331.37646484 895.70349121]
[323.53729248 871.96435547]
[302.13229370 859.04827881]
[294.29309082 835.30908203]
[286.45391846 811.56994629]
[278.61471558 787.83081055]
[270.77554321 764.09167480]
[262.93634033 740.35253906]
[255.09715271 716.61334229]
[247.25796509 692.87420654]
[239.41877747 669.13507080]
[231.57958984 645.39593506]
[223.74040222 621.65679932]
[215.90121460 597.91766357]
[208.06202698 574.17846680]
[200.22283936 550.43933105]
[192.38365173 526.70019531]
[184.54446411 502.96102905]
[176.70527649 479.22189331]
[168.86608887 455.48275757]
[161.02690125 431.74359131]
[153.18771362 408.00445557]
[145.34852600 384.26531982]
[156.85798645 362.07223511]
[152.88801575 337.38946533]
[135.00000000 319.92468262]
[135.00000000 294.92468262]
[135.00000000 269.92468262]
[135.00000000 244.92468262]
[145.97467041 222.46234131]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[117.49999894 222.46233918 28.47466711 232.07849231 180.00000000 1.00000000]
[117.49999894 222.46233918 28.47466711 180.00000000 127.92150787 1.00000000]
[]
[]
[]
[117.49999923 355.74191287 39.86382195 243.96025382 207.41153733 1.00000000]
[117.49999923 355.74191287 39.86382195 207.41153733 170.86282083 1.00000000]
[117.49999923 355.74191287 39.86382195 170.86282083 134.31410433 1.00000000]
[117.49999923 355.74191287 39.86382195 134.31410433 97.76538783 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[295.38492645 894.42480479 36.01426010 222.65296548 182.03474963 1.00000000]
[295.38492645 894.42480479 36.01426010 182.03474963 141.41653378 1.00000000]
[]
[]
[]
[241.28989282 1026.03508313 39.86382195 266.30411143 229.75539493 1.00000000]
[241.28989282 1026.03508313 39.86382195 229.75539493 193.20667843 1.00000000]
[241.28989282 1026.03508313 39.86382195 193.20667843 156.65796194 1.00000000]
[241.28989282 1026.03508313 39.86382195 156.65796194 120.10924544 1.00000000]
[]
[]
[233.60567487 1134.04165187 28.47466729 236.14799121 184.06949929 1.00000000]
[233.60567487 1134.04165187 28.47466729 184.06949929 131.99100736 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[180.41614678 1881.65429519 32.20889362 241.15900712 195.48740083 1.00000000]
[]
[]
[38.70668827 1926.12607595 73.59467347 328.82082974 309.26272138 1.00000000]
[38.70668827 1926.12607595 73.59467347 309.26272138 289.70461302 1.00000000]
[38.70668827 1926.12607595 73.59467347 289.70461302 270.14650467 1.00000000]
[38.70668827 1926.12607595 73.59467347 270.14650467 250.58839631 1.00000000]
[38.70668827 1926.12607595 73.59467347 250.58839631 231.03028795 1.00000000]
[38.70668827 1926.12607595 73.59467347 231.03028795 211.47217959 1.00000000]
[38.70668827 1926.12607595 73.59467347 211.47217959 191.91407123 1.00000000]
[38.70668827 1926.12607595 73.59467347 191.91407123 172.35596288 1.00000000]
[38.70668827 1926.12607595 73.59467347 172.35596288 152.79785452 1.00000000]
[38.70668827 1926.12607595 73.59467347 152.79785452 133.23974616 1.00000000]
[38.70668827 1926.12607595 73.59467347 133.23974616 113.68163780 1.00000000]
[38.70668827 1926.12607595 73.59467347 113.68163780 94.12352944 1.00000000]
[38.70668827 1926.12607595 73.59467347 94.12352944 74.56542108 1.00000000]
[38.70668827 1926.12607595 73.59467347 74.56542108 55.00731273 1.00000000]
[38.70668827 1926.12607595 73.59467347 55.00731273 35.44920437 1.00000000]
[38.70668827 1926.12607595 73.59467347 35.44920437 15.89109601 1.00000000]
[38.70668827 1926.12607595 73.59467347 15.89109601 356.33298765 1.00000000]
[]
[]
[180.41614678 1881.65429519 32.20889362 129.66641656 83.99481027 1.00000000]
[180.41614678 1881.65429519 32.20889362 83.99481027 38.32320398 1.00000000]
[180.41614678 1881.65429519 32.20889362 38.32320398 352.65159769 1.00000000]
[180.41614678 1881.65429519 32.20889362 352.65159769 306.97999140 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[233.60567487 1134.04165187 28.47466729 56.14799116 4.06949924 1.00000000]
[233.60567487 1134.04165187 28.47466729 4.06949924 311.99100741 1.00000000]
[]
[]
[241.28989282 1026.03508313 39.86382195 68.02975318 31.48103668 1.00000000]
[241.28989282 1026.03508313 39.86382195 31.48103668 354.93232018 1.00000000]
[241.28989282 1026.03508313 39.86382195 354.93232018 318.38360369 1.00000000]
[]
[]
[]
[295.38492645 894.42480479 36.01426010 83.27118134 42.65296548 1.00000000]
[295.38492645 894.42480479 36.01426010 42.65296548 2.03474963 1.00000000]
[295.38492645 894.42480479 36.01426010 2.03474963 321.41653378 1.00000000]
[295.38492645 894.42480479 36.01426010 321.41653378 280.79831792 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[117.49999923 355.74191287 39.86382195 45.68589557 9.13717908 1.00000000]
[117.49999923 355.74191287 39.86382195 9.13717908 332.58846258 1.00000000]
[117.49999923 355.74191287 39.86382195 332.58846258 296.03974608 1.00000000]
[]
[]
[]
[117.49999894 222.46233918 28.47466711 52.07849145 360.00000000 1.00000000]
[117.49999894 222.46233918 28.47466711 360.00000000 307.92150828 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[4 173]
[5 172]
[7 170]
[8 169]
[9 168]
[10 167]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[26 153]
[27 152]
[28 151]
[29 150]
[30 149]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[37 140]
[38 139]
[39 138]
[40 137]
[44 134]
[45 133]
[46 132]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 98]
[78 97]
[79 96]
] def

init

% Start Annotations
104 134 12 1.00 0.60 0.67 omark 44 136 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
