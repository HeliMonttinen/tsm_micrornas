%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAAAAAAAAGAAGGAAAAUGCACCAUAUUUAUUCAGUGUCAGUGAAUAUGACACCUCAAAGAAGUAAUACUGUUAUCUAAAAUACUGUUAUCUUCRCAGCYUAUUUCAGGUAACAGUAUUACUUCUUUGAGGUGUCAUACCGAAGACCAAUGAAAUACCAAAACAACAAGGUGAACAGUGAGCUAUUCAGGUAGAG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[475.00000000 125.00000000]
[456.37222290 141.67350769]
[450.48242188 165.96980286]
[459.40725708 189.32247925]
[480.00000000 203.49780273]
[505.00000000 203.49780273]
[525.59271240 189.32247925]
[534.51757812 165.96980286]
[528.62780762 141.67350769]
[510.00000000 125.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[660.00000000 125.00000000]
[660.00000000 150.00000000]
[660.00000000 175.00000000]
[660.00000000 200.00000000]
[660.00000000 225.00000000]
[642.74304199 243.08860779]
[640.36175537 267.97494507]
[653.87530518 289.00787354]
[677.50000000 297.18548584]
[701.12469482 289.00787354]
[714.63824463 267.97494507]
[712.25695801 243.08860779]
[695.00000000 225.00000000]
[695.00000000 200.00000000]
[695.00000000 175.00000000]
[695.00000000 150.00000000]
[695.00000000 125.00000000]
[695.00000000 100.00000000]
[745.00000000 100.00000000]
[745.00000000 125.00000000]
[745.00000000 150.00000000]
[745.00000000 175.00000000]
[745.00000000 200.00000000]
[745.00000000 225.00000000]
[745.00000000 250.00000000]
[745.00000000 275.00000000]
[745.00000000 300.00000000]
[745.00000000 325.00000000]
[745.00000000 350.00000000]
[745.00000000 375.00000000]
[745.00000000 400.00000000]
[745.00000000 425.00000000]
[745.00000000 450.00000000]
[745.00000000 475.00000000]
[745.00000000 500.00000000]
[745.00000000 525.00000000]
[745.00000000 550.00000000]
[745.00000000 575.00000000]
[745.00000000 600.00000000]
[745.00000000 625.00000000]
[745.00000000 650.00000000]
[745.00000000 675.00000000]
[745.00000000 700.00000000]
[745.00000000 725.00000000]
[745.00000000 750.00000000]
[745.00000000 775.00000000]
[745.00000000 800.00000000]
[745.00000000 825.00000000]
[734.02532959 847.46234131]
[745.00000000 869.92468262]
[745.00000000 894.92468262]
[745.00000000 919.92468262]
[745.00000000 944.92468262]
[745.00000000 969.92468262]
[734.02532959 992.38702393]
[714.30401611 1007.75152588]
[694.58264160 1023.11608887]
[670.32086182 1017.08569336]
[646.48724365 1024.63269043]
[630.11846924 1043.52880859]
[626.04748535 1068.19519043]
[635.47619629 1091.34899902]
[655.62072754 1106.15429688]
[680.53363037 1108.23974609]
[702.85931396 1096.98974609]
[716.00634766 1075.72583008]
[716.09301758 1050.72595215]
[735.81433105 1035.36145020]
[755.53570557 1019.99688721]
[780.00000000 1014.84936523]
[790.97467041 992.38702393]
[780.00000000 969.92468262]
[780.00000000 944.92468262]
[780.00000000 919.92468262]
[780.00000000 894.92468262]
[780.00000000 869.92468262]
[790.97467041 847.46234131]
[780.00000000 825.00000000]
[780.00000000 800.00000000]
[780.00000000 775.00000000]
[780.00000000 750.00000000]
[780.00000000 725.00000000]
[780.00000000 700.00000000]
[780.00000000 675.00000000]
[780.00000000 650.00000000]
[780.00000000 625.00000000]
[780.00000000 600.00000000]
[780.00000000 575.00000000]
[780.00000000 550.00000000]
[780.00000000 525.00000000]
[780.00000000 500.00000000]
[780.00000000 475.00000000]
[780.00000000 450.00000000]
[780.00000000 425.00000000]
[780.00000000 400.00000000]
[780.00000000 375.00000000]
[780.00000000 350.00000000]
[780.00000000 325.00000000]
[780.00000000 300.00000000]
[780.00000000 275.00000000]
[780.00000000 250.00000000]
[780.00000000 225.00000000]
[780.00000000 200.00000000]
[780.00000000 175.00000000]
[780.00000000 150.00000000]
[780.00000000 125.00000000]
[780.00000000 100.00000000]
[1105.00000000 100.00000000]
[1105.00000000 125.00000000]
[1105.00000000 150.00000000]
[1105.00000000 175.00000000]
[1105.00000000 200.00000000]
[1105.00000000 225.00000000]
[1094.02539062 247.46234131]
[1074.30395508 262.82687378]
[1049.33166504 261.65063477]
[1029.61035156 277.01516724]
[1024.64318848 301.51675415]
[1004.92181396 316.88128662]
[980.45745850 322.02880859]
[969.48278809 344.49114990]
[949.76147461 359.85568237]
[924.99066162 356.47817993]
[903.07971191 368.51605225]
[892.64611816 391.23477173]
[897.79345703 415.69912720]
[883.88458252 436.47274780]
[869.97564697 457.24633789]
[856.06677246 478.01995850]
[831.07238770 478.54867554]
[809.46740723 491.12744141]
[796.66839600 512.60266113]
[795.88409424 537.59033203]
[807.31115723 559.82592773]
[828.08477783 573.73480225]
[852.99682617 575.82995605]
[875.80169678 565.58605957]
[890.78210449 545.57135010]
[894.18231201 520.80364990]
[885.14984131 497.49240112]
[899.05871582 476.71878052]
[912.96759033 455.94519043]
[926.87652588 435.17156982]
[951.45709229 430.61141968]
[968.48828125 412.31011963]
[971.27185059 387.46554565]
[990.99316406 372.10101318]
[1015.45745850 366.95349121]
[1026.43212891 344.49114990]
[1046.15344238 329.12661743]
[1071.12585449 330.30285645]
[1090.84716797 314.93832397]
[1095.81433105 290.43673706]
[1115.53564453 275.07220459]
[1140.00000000 269.92468262]
[1150.97460938 247.46234131]
[1140.00000000 225.00000000]
[1140.00000000 200.00000000]
[1161.65063477 187.50000000]
[1140.00000000 175.00000000]
[1140.00000000 150.00000000]
[1140.00000000 125.00000000]
[1140.00000000 100.00000000]
[1165.00000000 100.00000000]
[1190.00000000 100.00000000]
[1215.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[492.50000000 163.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[492.50000000 163.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[492.50000000 163.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[492.50000000 163.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[492.50000000 163.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[492.50000000 163.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[492.50000000 163.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[492.50000000 163.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[492.50000000 163.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[677.50000000 258.97147640 38.21401848 242.74528147 204.55896110 1.00000000]
[677.50000000 258.97147640 38.21401848 204.55896110 166.37264073 1.00000000]
[677.50000000 258.97147640 38.21401848 166.37264073 128.18632037 1.00000000]
[677.50000000 258.97147640 38.21401848 128.18632037 90.00000000 1.00000000]
[677.50000000 258.97147640 38.21401848 90.00000000 51.81367963 1.00000000]
[677.50000000 258.97147640 38.21401848 51.81367963 13.62735927 1.00000000]
[677.50000000 258.97147640 38.21401848 13.62735927 335.44103890 1.00000000]
[677.50000000 258.97147640 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[762.49999918 847.46233943 28.47466659 232.07849344 180.00000000 1.00000000]
[762.49999918 847.46233943 28.47466659 180.00000000 127.92150736 1.00000000]
[]
[]
[]
[]
[762.49999836 992.38701854 28.47466565 232.07849604 180.00000000 1.00000000]
[]
[]
[671.77096030 1063.07236275 46.00953986 299.72276209 268.19390804 1.00000000]
[671.77096030 1063.07236275 46.00953986 268.19390804 236.66505399 1.00000000]
[671.77096030 1063.07236275 46.00953986 236.66505399 205.13619994 1.00000000]
[671.77096030 1063.07236275 46.00953986 205.13619994 173.60734588 1.00000000]
[671.77096030 1063.07236275 46.00953986 173.60734588 142.07849183 1.00000000]
[671.77096030 1063.07236275 46.00953986 142.07849183 110.54963778 1.00000000]
[671.77096030 1063.07236275 46.00953986 110.54963778 79.02078373 1.00000000]
[671.77096030 1063.07236275 46.00953986 79.02078373 47.49192968 1.00000000]
[671.77096030 1063.07236275 46.00953986 47.49192968 15.96307562 1.00000000]
[671.77096030 1063.07236275 46.00953986 15.96307562 344.43422157 1.00000000]
[]
[]
[762.49999836 992.38701854 28.47466565 104.15698117 52.07848763 1.00000000]
[762.49999836 992.38701854 28.47466565 52.07848763 360.00000000 1.00000000]
[762.49999836 992.38701854 28.47466565 360.00000000 307.92150907 1.00000000]
[]
[]
[]
[]
[762.49999918 847.46233943 28.47466659 52.07849032 360.00000000 1.00000000]
[762.49999918 847.46233943 28.47466659 360.00000000 307.92150879 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1122.49999763 247.46233925 28.47466709 232.07849242 180.00000000 1.00000000]
[]
[1060.22873733 295.97674604 36.01426010 293.00581566 252.38759981 1.00000000]
[1060.22873733 295.97674604 36.01426010 252.38759981 211.76938395 1.00000000]
[1060.22873733 295.97674604 36.01426010 211.76938395 171.15116810 1.00000000]
[]
[997.95747682 344.49115300 28.47466729 284.15698378 232.07849186 1.00000000]
[997.95747682 344.49115300 28.47466729 232.07849186 180.00000000 1.00000000]
[]
[932.26209909 395.67322753 39.86382195 296.03874570 259.49002920 1.00000000]
[932.26209909 395.67322753 39.86382195 259.49002920 222.94131271 1.00000000]
[932.26209909 395.67322753 39.86382195 222.94131271 186.39259621 1.00000000]
[932.26209909 395.67322753 39.86382195 186.39259621 149.84387971 1.00000000]
[]
[]
[]
[844.59189970 526.61297174 49.92949042 283.28658410 254.28977491 1.00000000]
[844.59189970 526.61297174 49.92949042 254.28977491 225.29296573 1.00000000]
[844.59189970 526.61297174 49.92949042 225.29296573 196.29615654 1.00000000]
[844.59189970 526.61297174 49.92949042 196.29615654 167.29934736 1.00000000]
[844.59189970 526.61297174 49.92949042 167.29934736 138.30253818 1.00000000]
[844.59189970 526.61297174 49.92949042 138.30253818 109.30572899 1.00000000]
[844.59189970 526.61297174 49.92949042 109.30572899 80.30891981 1.00000000]
[844.59189970 526.61297174 49.92949042 80.30891981 51.31211062 1.00000000]
[844.59189970 526.61297174 49.92949042 51.31211062 22.31530144 1.00000000]
[844.59189970 526.61297174 49.92949042 22.31530144 353.31849225 1.00000000]
[844.59189970 526.61297174 49.92949042 353.31849225 324.32168307 1.00000000]
[]
[]
[]
[932.26209909 395.67322753 39.86382195 97.76438745 61.21567096 1.00000000]
[932.26209909 395.67322753 39.86382195 61.21567096 24.66695446 1.00000000]
[932.26209909 395.67322753 39.86382195 24.66695446 348.11823796 1.00000000]
[]
[997.95747682 344.49115300 28.47466729 104.15698373 52.07849181 1.00000000]
[997.95747682 344.49115300 28.47466729 52.07849181 360.00000000 1.00000000]
[]
[1060.22873733 295.97674604 36.01426010 113.00581566 72.38759981 1.00000000]
[1060.22873733 295.97674604 36.01426010 72.38759981 31.76938395 1.00000000]
[1060.22873733 295.97674604 36.01426010 31.76938395 351.15116810 1.00000000]
[]
[1122.49999763 247.46233925 28.47466709 104.15698346 52.07849133 1.00000000]
[1122.49999763 247.46233925 28.47466709 52.07849133 360.00000000 1.00000000]
[1122.49999763 247.46233925 28.47466709 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 27]
[17 26]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
[78 114]
[79 113]
[80 112]
[81 111]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[88 102]
[89 101]
[90 100]
[141 196]
[142 195]
[143 194]
[144 193]
[145 191]
[146 190]
[147 187]
[148 186]
[151 183]
[152 182]
[154 180]
[155 179]
[159 176]
[160 175]
[161 174]
[162 173]
] def

init

% Start Annotations
105 142 12 1.00 0.60 0.67 omark 50 86 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
