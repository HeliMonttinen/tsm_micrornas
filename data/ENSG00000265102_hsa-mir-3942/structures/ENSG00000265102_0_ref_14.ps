%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAAAAAAAGGGAAAGAAAGAAGAAGGAAAAUGCACCAUAUUUAUUCAGUGUCAGUGAAUAUUSCACCUCAAAGAAGUAACACUGUUAUCUGCAAUAUGGACUGUGAAGACCAAUGAAAUACCAAAACAACAAGGUGAACAAUGAGCUAUUCAGGUAGAG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[600.00000000 100.00000000]
[625.00000000 100.00000000]
[650.00000000 100.00000000]
[675.00000000 100.00000000]
[700.00000000 100.00000000]
[725.00000000 100.00000000]
[750.00000000 100.00000000]
[775.00000000 100.00000000]
[800.00000000 100.00000000]
[825.00000000 100.00000000]
[850.00000000 100.00000000]
[875.00000000 100.00000000]
[900.00000000 100.00000000]
[925.00000000 100.00000000]
[950.00000000 100.00000000]
[975.00000000 100.00000000]
[1000.00000000 100.00000000]
[1025.00000000 100.00000000]
[1025.00000000 125.00000000]
[1025.00000000 150.00000000]
[1025.00000000 175.00000000]
[1025.00000000 200.00000000]
[1025.00000000 225.00000000]
[1025.00000000 250.00000000]
[1007.11199951 267.46478271]
[1003.14202881 292.14755249]
[1014.65148926 314.34063721]
[1037.11376953 325.31549072]
[1061.69433594 320.75576782]
[1082.12878418 335.15832520]
[1102.56323242 349.56091309]
[1103.25463867 374.55136108]
[1116.50500488 395.75103760]
[1138.66589355 407.32238770]
[1163.63488770 406.07913208]
[1179.57458496 425.33859253]
[1195.51428223 444.59805298]
[1211.45397949 463.85751343]
[1227.39367676 483.11697388]
[1229.72827148 508.00772095]
[1249.16516113 523.73059082]
[1273.99438477 520.81311035]
[1296.15905762 532.37695312]
[1318.32385254 543.94085693]
[1340.48864746 555.50469971]
[1355.32714844 575.62481689]
[1380.31848145 576.28485107]
[1386.48461914 600.51245117]
[1405.30114746 616.97265625]
[1430.13366699 619.86187744]
[1452.22656250 608.16143799]
[1463.79052734 585.99664307]
[1460.74804688 561.18249512]
[1444.17199707 542.46789551]
[1419.90673828 536.45135498]
[1396.50781250 545.25415039]
[1381.66931152 525.13409424]
[1356.67810059 524.47406006]
[1334.51330566 512.91015625]
[1312.34851074 501.34628296]
[1290.18371582 489.78240967]
[1278.37219238 467.74865723]
[1254.35693359 460.80145264]
[1238.41723633 441.54199219]
[1222.47753906 422.28253174]
[1206.53784180 403.02304077]
[1190.59814453 383.76358032]
[1196.48791504 359.46725464]
[1189.26391602 335.53372192]
[1170.91540527 318.55334473]
[1146.49499512 313.20178223]
[1122.72680664 320.95272827]
[1102.29235840 306.55014038]
[1081.85803223 292.14755249]
[1077.88806152 267.46478271]
[1060.00000000 250.00000000]
[1060.00000000 225.00000000]
[1060.00000000 200.00000000]
[1060.00000000 175.00000000]
[1060.00000000 150.00000000]
[1060.00000000 125.00000000]
[1060.00000000 100.00000000]
[1260.00000000 100.00000000]
[1460.00000000 100.00000000]
[1460.00000000 125.00000000]
[1460.00000000 150.00000000]
[1440.90136719 166.13203430]
[1433.75732422 190.08955383]
[1440.90136719 214.04705811]
[1460.00000000 230.17909241]
[1460.00000000 255.17909241]
[1443.72460938 274.15570068]
[1443.72460938 299.15570068]
[1460.00000000 318.13232422]
[1460.00000000 343.13232422]
[1449.02539062 365.59466553]
[1460.00000000 388.05700684]
[1460.00000000 413.05700684]
[1442.11193848 430.52178955]
[1438.14196777 455.20455933]
[1449.65148926 477.39761353]
[1472.11376953 488.37249756]
[1479.95288086 512.11163330]
[1487.79211426 535.85076904]
[1495.63122559 559.58990479]
[1480.68725586 579.63177490]
[1477.33203125 604.40563965]
[1486.40673828 627.70043945]
[1505.63635254 643.67608643]
[1530.19995117 648.32739258]
[1553.93908691 640.48822021]
[1570.90234375 622.12390137]
[1576.83679199 597.83843994]
[1570.25476074 573.72045898]
[1552.80639648 555.81646729]
[1528.86608887 548.61505127]
[1521.02685547 524.87591553]
[1513.18774414 501.13677979]
[1505.34851074 477.39761353]
[1516.85803223 455.20455933]
[1512.88806152 430.52178955]
[1495.00000000 413.05700684]
[1495.00000000 388.05700684]
[1505.97460938 365.59466553]
[1495.00000000 343.13232422]
[1495.00000000 318.13232422]
[1511.27539062 299.15570068]
[1511.27539062 274.15570068]
[1495.00000000 255.17909241]
[1495.00000000 230.17909241]
[1514.09863281 214.04705811]
[1521.24267578 190.08955383]
[1514.09863281 166.13203430]
[1495.00000000 150.00000000]
[1495.00000000 125.00000000]
[1495.00000000 100.00000000]
[1520.00000000 100.00000000]
[1545.00000000 100.00000000]
[1570.00000000 100.00000000]
[1595.00000000 100.00000000]
[1620.00000000 100.00000000]
[1645.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1042.49999923 285.81723469 39.86382195 243.96025387 207.41153737 1.00000000]
[1042.49999923 285.81723469 39.86382195 207.41153737 170.86282088 1.00000000]
[1042.49999923 285.81723469 39.86382195 170.86282088 134.31410438 1.00000000]
[1042.49999923 285.81723469 39.86382195 134.31410438 97.76538788 1.00000000]
[1042.49999923 285.81723469 39.86382195 97.76538788 61.21667138 1.00000000]
[]
[]
[1148.86418236 360.78477815 47.64193249 193.62628205 163.20434570 1.00000000]
[1148.86418236 360.78477815 47.64193249 163.20434570 132.78240934 1.00000000]
[1148.86418236 360.78477815 47.64193249 132.78240934 102.36047299 1.00000000]
[1148.86418236 360.78477815 47.64193249 102.36047299 71.93853663 1.00000000]
[]
[]
[]
[]
[1258.11561062 492.79026766 32.20889362 197.47740129 151.80579500 1.00000000]
[1258.11561062 492.79026766 32.20889362 151.80579500 106.13418871 1.00000000]
[1258.11561062 492.79026766 32.20889362 106.13418871 60.46258242 1.00000000]
[]
[]
[]
[1368.49824298 550.37943844 28.47466729 169.63058231 117.55209046 1.00000000]
[1368.49824298 550.37943844 28.47466729 117.55209046 65.47359834 1.00000000]
[1422.36376458 578.48232609 42.10271758 182.99182529 148.44966199 1.00000000]
[1422.36376458 578.48232609 42.10271758 148.44966199 113.90749863 1.00000000]
[1422.36376458 578.48232609 42.10271758 113.90749863 79.36533528 1.00000000]
[1422.36376458 578.48232609 42.10271758 79.36533528 44.82317192 1.00000000]
[1422.36376458 578.48232609 42.10271758 44.82317192 10.28100856 1.00000000]
[1422.36376458 578.48232609 42.10271758 10.28100856 335.73884520 1.00000000]
[1422.36376458 578.48232609 42.10271758 335.73884520 301.19668184 1.00000000]
[1422.36376458 578.48232609 42.10271758 301.19668184 266.65451849 1.00000000]
[1422.36376458 578.48232609 42.10271758 266.65451849 232.11235507 1.00000000]
[1368.49824298 550.37943844 28.47466729 349.63058189 297.55209001 1.00000000]
[1368.49824298 550.37943844 28.47466729 297.55209001 245.47359826 1.00000000]
[]
[]
[]
[1258.11561062 492.79026766 32.20889362 354.64159815 308.96999186 1.00000000]
[1258.11561062 492.79026766 32.20889362 308.96999186 263.29838557 1.00000000]
[]
[]
[]
[]
[1148.86418236 360.78477815 47.64193249 28.83725023 358.41531387 1.00000000]
[1148.86418236 360.78477815 47.64193249 358.41531387 327.99337752 1.00000000]
[1148.86418236 360.78477815 47.64193249 327.99337752 297.57144117 1.00000000]
[1148.86418236 360.78477815 47.64193249 297.57144117 267.14950481 1.00000000]
[1148.86418236 360.78477815 47.64193249 267.14950481 236.72756846 1.00000000]
[]
[]
[1042.49999923 285.81723469 39.86382195 9.13717912 332.58846263 1.00000000]
[1042.49999923 285.81723469 39.86382195 332.58846263 296.03974613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1477.49999926 190.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[1477.49999926 190.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[1477.49999926 190.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[1477.49999926 190.08954835 43.74267810 146.79118209 113.58236418 1.00000000]
[]
[1477.49999926 286.65570597 36.01426010 240.92732378 200.30910793 1.00000000]
[1477.49999926 286.65570597 36.01426010 200.30910793 159.69089207 1.00000000]
[1477.49999926 286.65570597 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[1477.49999896 365.59465447 28.47466699 232.07849256 180.00000000 1.00000000]
[1477.49999896 365.59465447 28.47466699 180.00000000 127.92150775 1.00000000]
[]
[1477.49999933 448.87422810 39.86382195 243.96025382 207.41153733 1.00000000]
[1477.49999933 448.87422810 39.86382195 207.41153733 170.86282083 1.00000000]
[1477.49999933 448.87422810 39.86382195 170.86282083 134.31410433 1.00000000]
[1477.49999933 448.87422810 39.86382195 134.31410433 97.76538783 1.00000000]
[]
[]
[]
[1526.91179506 598.50629325 49.92949042 231.20809222 202.21128303 1.00000000]
[1526.91179506 598.50629325 49.92949042 202.21128303 173.21447385 1.00000000]
[1526.91179506 598.50629325 49.92949042 173.21447385 144.21766466 1.00000000]
[1526.91179506 598.50629325 49.92949042 144.21766466 115.22085548 1.00000000]
[1526.91179506 598.50629325 49.92949042 115.22085548 86.22404630 1.00000000]
[1526.91179506 598.50629325 49.92949042 86.22404630 57.22723711 1.00000000]
[1526.91179506 598.50629325 49.92949042 57.22723711 28.23042793 1.00000000]
[1526.91179506 598.50629325 49.92949042 28.23042793 359.23361874 1.00000000]
[1526.91179506 598.50629325 49.92949042 359.23361874 330.23680956 1.00000000]
[1526.91179506 598.50629325 49.92949042 330.23680956 301.24000038 1.00000000]
[1526.91179506 598.50629325 49.92949042 301.24000038 272.24319119 1.00000000]
[]
[]
[]
[1477.49999933 448.87422810 39.86382195 45.68589557 9.13717908 1.00000000]
[1477.49999933 448.87422810 39.86382195 9.13717908 332.58846258 1.00000000]
[1477.49999933 448.87422810 39.86382195 332.58846258 296.03974608 1.00000000]
[]
[1477.49999896 365.59465447 28.47466699 52.07849119 360.00000000 1.00000000]
[1477.49999896 365.59465447 28.47466699 360.00000000 307.92150839 1.00000000]
[]
[1477.49999926 286.65570597 36.01426010 60.92732378 20.30910793 1.00000000]
[1477.49999926 286.65570597 36.01426010 20.30910793 339.69089207 1.00000000]
[1477.49999926 286.65570597 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[1477.49999926 190.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[1477.49999926 190.08954835 43.74267810 33.20881791 0.00000000 1.00000000]
[1477.49999926 190.08954835 43.74267810 0.00000000 326.79118209 1.00000000]
[1477.49999926 190.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 102]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[44 96]
[49 94]
[50 93]
[51 92]
[55 87]
[56 86]
[57 85]
[58 84]
[59 83]
[62 81]
[63 80]
[64 79]
[65 78]
[67 76]
[104 156]
[105 155]
[106 154]
[110 150]
[111 149]
[114 146]
[115 145]
[117 143]
[118 142]
[122 139]
[123 138]
[124 137]
[125 136]
] def

init

% Start Annotations
108 107 12 1.00 0.60 0.67 omark 62 99 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
