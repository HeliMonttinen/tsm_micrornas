%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGGCUCUAAUAAACAAGGAAUGAUAACAAUUAUAAGAGUCUGUGAUGAAAAACGGAGCUGGCCAAAAAGCAGGCAGAAACUUUAAAAGCGGCAAGCUUUUAAAGUYAAGAAACUUUACUGUAAUAAUUUUAACAGA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[100.00000000 275.00000000]
[100.00000000 300.00000000]
[89.02532959 322.46234131]
[100.00000000 344.92468262]
[100.00000000 369.92468262]
[100.00000000 394.92468262]
[100.00000000 419.92468262]
[76.87254333 429.41787720]
[57.96700668 445.77575684]
[45.24801254 467.29849243]
[40.03729630 491.74942017]
[42.87633514 516.58770752]
[53.47011185 539.23217773]
[70.71774292 557.32965088]
[92.82688141 568.99951172]
[117.50000000 573.02905273]
[142.17312622 568.99951172]
[164.28225708 557.32965088]
[181.52989197 539.23217773]
[192.12365723 516.58770752]
[194.96270752 491.74942017]
[189.75198364 467.29849243]
[177.03298950 445.77575684]
[158.12745667 429.41787720]
[135.00000000 419.92468262]
[135.00000000 394.92468262]
[135.00000000 369.92468262]
[135.00000000 344.92468262]
[145.97467041 322.46234131]
[135.00000000 300.00000000]
[135.00000000 275.00000000]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[485.00000000 125.00000000]
[485.00000000 150.00000000]
[474.02532959 172.46234131]
[485.00000000 194.92468262]
[485.00000000 219.92468262]
[469.59664917 239.61572266]
[471.62066650 264.53366089]
[490.00000000 281.48062134]
[515.00000000 281.48062134]
[533.37933350 264.53366089]
[535.40332031 239.61572266]
[520.00000000 219.92468262]
[520.00000000 194.92468262]
[530.97467041 172.46234131]
[520.00000000 150.00000000]
[520.00000000 125.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[645.00000000 125.00000000]
[645.00000000 150.00000000]
[645.00000000 175.00000000]
[645.00000000 200.00000000]
[645.00000000 225.00000000]
[645.00000000 250.00000000]
[645.00000000 275.00000000]
[645.00000000 300.00000000]
[645.00000000 325.00000000]
[645.00000000 350.00000000]
[632.17901611 371.46212769]
[639.69177246 395.30661011]
[662.50000000 405.54299927]
[685.30822754 395.30661011]
[692.82098389 371.46212769]
[680.00000000 350.00000000]
[680.00000000 325.00000000]
[680.00000000 300.00000000]
[680.00000000 275.00000000]
[680.00000000 250.00000000]
[680.00000000 225.00000000]
[680.00000000 200.00000000]
[680.00000000 175.00000000]
[680.00000000 150.00000000]
[680.00000000 125.00000000]
[680.00000000 100.00000000]
[705.00000000 100.00000000]
[730.00000000 100.00000000]
[755.00000000 100.00000000]
[780.00000000 100.00000000]
[805.00000000 100.00000000]
[830.00000000 100.00000000]
[855.00000000 100.00000000]
[880.00000000 100.00000000]
[905.00000000 100.00000000]
[930.00000000 100.00000000]
[955.00000000 100.00000000]
[980.00000000 100.00000000]
[1005.00000000 100.00000000]
[1005.00000000 125.00000000]
[1005.00000000 150.00000000]
[1005.00000000 175.00000000]
[984.52520752 189.34510803]
[973.57092285 211.81739807]
[974.88348389 236.78292847]
[988.13385010 257.98263550]
[1010.00000000 270.10168457]
[1035.00000000 270.10168457]
[1056.86621094 257.98263550]
[1070.11645508 236.78292847]
[1071.42907715 211.81739807]
[1060.47485352 189.34510803]
[1040.00000000 175.00000000]
[1040.00000000 150.00000000]
[1040.00000000 125.00000000]
[1040.00000000 100.00000000]
[1065.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[117.49999973 322.46233922 28.47466702 232.07849249 180.00000000 1.00000000]
[117.49999973 322.46233922 28.47466702 180.00000000 127.92150779 1.00000000]
[]
[]
[]
[117.50000014 495.47673725 77.55232834 256.95865603 238.40769425 1.00000000]
[117.50000014 495.47673725 77.55232834 238.40769425 219.85673246 1.00000000]
[117.50000014 495.47673725 77.55232834 219.85673246 201.30577067 1.00000000]
[117.50000014 495.47673725 77.55232834 201.30577067 182.75480889 1.00000000]
[117.50000014 495.47673725 77.55232834 182.75480889 164.20384710 1.00000000]
[117.50000014 495.47673725 77.55232834 164.20384710 145.65288531 1.00000000]
[117.50000014 495.47673725 77.55232834 145.65288531 127.10192353 1.00000000]
[117.50000014 495.47673725 77.55232834 127.10192353 108.55096174 1.00000000]
[117.50000014 495.47673725 77.55232834 108.55096174 89.99999995 1.00000000]
[117.50000014 495.47673725 77.55232834 89.99999995 71.44903817 1.00000000]
[117.50000014 495.47673725 77.55232834 71.44903817 52.89807638 1.00000000]
[117.50000014 495.47673725 77.55232834 52.89807638 34.34711459 1.00000000]
[117.50000014 495.47673725 77.55232834 34.34711459 15.79615281 1.00000000]
[117.50000014 495.47673725 77.55232834 15.79615281 357.24519102 1.00000000]
[117.50000014 495.47673725 77.55232834 357.24519102 338.69422923 1.00000000]
[117.50000014 495.47673725 77.55232834 338.69422923 320.14326744 1.00000000]
[117.50000014 495.47673725 77.55232834 320.14326744 301.59230566 1.00000000]
[117.50000014 495.47673725 77.55232834 301.59230566 283.04134387 1.00000000]
[]
[]
[]
[117.49999973 322.46233922 28.47466702 52.07849127 360.00000000 1.00000000]
[117.49999973 322.46233922 28.47466702 360.00000000 307.92150836 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[502.49999961 172.46233916 28.47466715 232.07849221 180.00000000 1.00000000]
[502.49999961 172.46233916 28.47466715 180.00000000 127.92150791 1.00000000]
[]
[502.49999981 249.48424621 34.35139098 239.37341126 196.69529375 1.00000000]
[502.49999981 249.48424621 34.35139098 196.69529375 154.01717623 1.00000000]
[502.49999981 249.48424621 34.35139098 154.01717623 111.33905871 1.00000000]
[502.49999981 249.48424621 34.35139098 111.33905871 68.66094119 1.00000000]
[502.49999981 249.48424621 34.35139098 68.66094119 25.98282368 1.00000000]
[502.49999981 249.48424621 34.35139098 25.98282368 343.30470616 1.00000000]
[502.49999981 249.48424621 34.35139098 343.30470616 300.62658864 1.00000000]
[]
[502.49999961 172.46233916 28.47466715 52.07849154 360.00000000 1.00000000]
[502.49999961 172.46233916 28.47466715 360.00000000 307.92150824 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[662.50000042 375.01461919 30.52836670 235.02371410 186.68247606 1.00000000]
[662.50000042 375.01461919 30.52836670 186.68247606 138.34123803 1.00000000]
[662.50000042 375.01461919 30.52836670 138.34123803 90.00000000 1.00000000]
[662.50000042 375.01461919 30.52836670 90.00000000 41.65876197 1.00000000]
[662.50000042 375.01461919 30.52836670 41.65876197 353.31752394 1.00000000]
[662.50000042 375.01461919 30.52836670 353.31752394 304.97628590 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1022.49999991 221.76220711 49.92949042 249.48245051 220.48564133 1.00000000]
[1022.49999991 221.76220711 49.92949042 220.48564133 191.48883214 1.00000000]
[1022.49999991 221.76220711 49.92949042 191.48883214 162.49202296 1.00000000]
[1022.49999991 221.76220711 49.92949042 162.49202296 133.49521378 1.00000000]
[1022.49999991 221.76220711 49.92949042 133.49521378 104.49840459 1.00000000]
[1022.49999991 221.76220711 49.92949042 104.49840459 75.50159541 1.00000000]
[1022.49999991 221.76220711 49.92949042 75.50159541 46.50478622 1.00000000]
[1022.49999991 221.76220711 49.92949042 46.50478622 17.50797704 1.00000000]
[1022.49999991 221.76220711 49.92949042 17.50797704 348.51116786 1.00000000]
[1022.49999991 221.76220711 49.92949042 348.51116786 319.51435867 1.00000000]
[1022.49999991 221.76220711 49.92949042 319.51435867 290.51754949 1.00000000]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[4 42]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[11 35]
[12 34]
[13 33]
[14 32]
[59 76]
[60 75]
[61 74]
[63 72]
[64 71]
[81 107]
[82 106]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[120 137]
[121 136]
[122 135]
[123 134]
] def

init

% Start Annotations
83 92 12 1.00 0.60 0.67 omark 51 92 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
