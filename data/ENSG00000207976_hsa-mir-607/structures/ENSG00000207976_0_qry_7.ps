%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:56 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGGCAAAAAAUAGUGUGAUGGUUAAAGAGCUGGCUKUAASUAACUUGCCCAAAGUCACACAGGUUAUAGAUCUGGAUUBGAACCCAGGUAGCCAGACUGCCUGRGUUUGAAUCCAGAUCUAUAACCUGUGUGACUUUGGGCAAGUUACUUAACCUCUCUGUGCUCUGUUAUAAAAUGGGGAUACUUGAUUGGGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[89.02532959 122.46234131]
[99.99999237 144.92468262]
[99.99999237 169.92468262]
[99.99999237 194.92468262]
[75.98494720 201.87286377]
[54.24030685 214.20861816]
[35.95527267 231.25729370]
[22.12982750 252.08653259]
[13.52007294 275.55718994]
[10.59686565 300.38571167]
[13.52007294 325.21423340]
[22.12982750 348.68487549]
[35.95527267 369.51412964]
[54.24030685 386.56280518]
[75.98494720 398.89855957]
[99.99999237 405.84674072]
[99.99999237 430.84674072]
[99.99999237 455.84674072]
[99.99999237 480.84674072]
[99.99999237 505.84674072]
[99.99999237 530.84674072]
[99.99999237 555.84674072]
[99.99999237 580.84674072]
[78.66282654 593.87457275]
[65.21133423 614.94726562]
[62.37677383 639.78607178]
[70.73468781 663.34759521]
[88.58805084 680.84777832]
[82.95549011 705.20501709]
[77.32292938 729.56225586]
[71.69037628 753.91943359]
[53.32509613 770.88165283]
[52.62585068 795.87188721]
[70.01390839 813.83447266]
[74.27565765 838.46856689]
[61.47343445 859.94189453]
[65.73518372 884.57592773]
[85.00728607 900.50036621]
[110.00307465 900.04150391]
[129.27517700 915.96588135]
[148.54728699 931.89025879]
[158.87255859 954.65844727]
[183.17901611 960.50622559]
[202.45112610 976.43060303]
[221.72322083 992.35498047]
[240.99533081 1008.27935791]
[260.26742554 1024.20373535]
[279.53955078 1040.12805176]
[298.81164551 1056.05249023]
[318.08377075 1071.97692871]
[337.35586548 1087.90124512]
[356.62796021 1103.82568359]
[375.90008545 1119.75000000]
[395.17218018 1135.67443848]
[414.44427490 1151.59875488]
[433.71640015 1167.52319336]
[452.98849487 1183.44750977]
[472.26062012 1199.37194824]
[491.53271484 1215.29626465]
[510.80480957 1231.22070312]
[530.07690430 1247.14501953]
[549.34906006 1263.06945801]
[568.62115479 1278.99377441]
[587.89324951 1294.91821289]
[607.16534424 1310.84265137]
[626.43743896 1326.76696777]
[645.70953369 1342.69140625]
[664.98168945 1358.61572266]
[684.25378418 1374.54016113]
[703.52587891 1390.46447754]
[722.79797363 1406.38891602]
[742.07006836 1422.31323242]
[761.34222412 1438.23767090]
[780.61431885 1454.16198730]
[799.88641357 1470.08642578]
[819.15850830 1486.01074219]
[838.43060303 1501.93518066]
[857.70269775 1517.85949707]
[876.97485352 1533.78393555]
[896.24694824 1549.70837402]
[906.57220459 1572.47644043]
[930.87866211 1578.32421875]
[950.15075684 1594.24865723]
[969.42285156 1610.17297363]
[988.69500732 1626.09741211]
[999.02026367 1648.86547852]
[1023.32672119 1654.71325684]
[1042.59875488 1670.63769531]
[1061.87097168 1686.56201172]
[1081.14306641 1702.48645020]
[1100.41516113 1718.41076660]
[1119.68725586 1734.33520508]
[1138.95935059 1750.25952148]
[1147.33752441 1773.81384277]
[1170.50427246 1783.21081543]
[1192.92358398 1772.14855957]
[1199.56091309 1748.04577637]
[1185.96496582 1727.06604004]
[1161.25354004 1723.27856445]
[1141.98132324 1707.35424805]
[1122.70922852 1691.42980957]
[1103.43713379 1675.50549316]
[1084.16503906 1659.58105469]
[1064.89294434 1643.65673828]
[1045.62084961 1627.73229980]
[1035.29553223 1604.96423340]
[1010.98913574 1599.11645508]
[991.71704102 1583.19201660]
[972.44488525 1567.26770020]
[953.17279053 1551.34326172]
[942.84753418 1528.57507324]
[918.54107666 1522.72741699]
[899.26898193 1506.80297852]
[879.99688721 1490.87866211]
[860.72473145 1474.95422363]
[841.45263672 1459.02978516]
[822.18054199 1443.10546875]
[802.90844727 1427.18103027]
[783.63635254 1411.25671387]
[764.36419678 1395.33227539]
[745.09210205 1379.40795898]
[725.82000732 1363.48352051]
[706.54791260 1347.55920410]
[687.27581787 1331.63476562]
[668.00372314 1315.71044922]
[648.73156738 1299.78601074]
[629.45947266 1283.86169434]
[610.18737793 1267.93725586]
[590.91528320 1252.01293945]
[571.64318848 1236.08850098]
[552.37103271 1220.16406250]
[533.09893799 1204.23974609]
[513.82684326 1188.31530762]
[494.55474854 1172.39099121]
[475.28262329 1156.46655273]
[456.01052856 1140.54223633]
[436.73843384 1124.61779785]
[417.46630859 1108.69348145]
[398.19421387 1092.76904297]
[378.92211914 1076.84472656]
[359.64999390 1060.92028809]
[340.37789917 1044.99597168]
[321.10577393 1029.07153320]
[301.83367920 1013.14715576]
[282.56158447 997.22277832]
[263.28945923 981.29840088]
[244.01736450 965.37402344]
[224.74525452 949.44964600]
[205.47314453 933.52526855]
[195.14787292 910.75708008]
[170.84143066 904.90936279]
[151.56932068 888.98498535]
[132.29721069 873.06054688]
[128.03546143 848.42651367]
[108.76335907 832.50213623]
[104.50160980 807.86804199]
[114.84454346 785.10791016]
[105.79048157 761.80505371]
[111.42304230 737.44781494]
[117.05560303 713.09057617]
[122.68816376 688.73339844]
[146.41194153 680.84777832]
[164.26530457 663.34759521]
[172.62321472 639.78607178]
[169.78866577 614.94726562]
[156.33717346 593.87457275]
[135.00000000 580.84674072]
[135.00000000 555.84674072]
[135.00000000 530.84674072]
[135.00000000 505.84674072]
[135.00000000 480.84674072]
[135.00000000 455.84674072]
[135.00000000 430.84674072]
[135.00000000 405.84674072]
[159.01504517 398.89855957]
[180.75968933 386.56280518]
[199.04472351 369.51412964]
[212.87016296 348.68487549]
[221.47991943 325.21423340]
[224.40312195 300.38571167]
[221.47991943 275.55718994]
[212.87016296 252.08653259]
[199.04472351 231.25729370]
[180.75968933 214.20861816]
[159.01504517 201.87286377]
[135.00000000 194.92468262]
[135.00000000 169.92468262]
[135.00000000 144.92468262]
[145.97465515 122.46234131]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
] def
/arcs [
[]
[117.49999494 122.46233914 28.47466719 232.07850000 180.00000000 1.00000000]
[117.49999494 122.46233914 28.47466719 180.00000000 127.92150795 1.00000000]
[]
[]
[117.49999518 300.38570941 106.90312956 260.57829979 247.14858315 1.00000000]
[117.49999518 300.38570941 106.90312956 247.14858315 233.71886651 1.00000000]
[117.49999518 300.38570941 106.90312956 233.71886651 220.28914987 1.00000000]
[117.49999518 300.38570941 106.90312956 220.28914987 206.85943323 1.00000000]
[117.49999518 300.38570941 106.90312956 206.85943323 193.42971659 1.00000000]
[117.49999518 300.38570941 106.90312956 193.42971659 180.00000000 1.00000000]
[117.49999518 300.38570941 106.90312956 180.00000000 166.57028331 1.00000000]
[117.49999518 300.38570941 106.90312956 166.57028331 153.14056668 1.00000000]
[117.49999518 300.38570941 106.90312956 153.14056668 139.71085004 1.00000000]
[117.49999518 300.38570941 106.90312956 139.71085004 126.28113340 1.00000000]
[117.49999518 300.38570941 106.90312956 126.28113340 112.85141676 1.00000000]
[117.49999518 300.38570941 106.90312956 112.85141676 99.42170012 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[117.49999546 633.49548953 55.48099457 251.61362829 225.57230890 1.00000000]
[117.49999546 633.49548953 55.48099457 225.57230890 199.53098950 1.00000000]
[117.49999546 633.49548953 55.48099457 199.53098950 173.48967010 1.00000000]
[117.49999546 633.49548953 55.48099457 173.48967010 147.44835071 1.00000000]
[117.49999546 633.49548953 55.48099457 147.44835071 121.40703131 1.00000000]
[]
[]
[]
[82.64824752 784.20704091 32.20889362 250.11016751 204.43856122 1.00000000]
[82.64824752 784.20704091 32.20889362 204.43856122 158.76695493 1.00000000]
[82.64824752 784.20704091 32.20889362 158.76695493 113.09534864 1.00000000]
[]
[96.88532279 866.50122967 36.01426010 231.11218029 190.49396443 1.00000000]
[96.88532279 866.50122967 36.01426010 190.49396443 149.87574858 1.00000000]
[96.88532279 866.50122967 36.01426010 149.87574858 109.25753273 1.00000000]
[96.88532279 866.50122967 36.01426010 109.25753273 68.63931687 1.00000000]
[]
[]
[177.01021998 932.70776888 28.47466729 181.64513255 129.56664063 1.00000000]
[177.01021998 932.70776888 28.47466729 129.56664063 77.48814870 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[924.70986870 1550.52579762 28.47466729 181.64513251 129.56664058 1.00000000]
[924.70986870 1550.52579762 28.47466729 129.56664058 77.48814866 1.00000000]
[]
[]
[]
[1017.15791320 1626.91485119 28.47466729 181.64513246 129.56664053 1.00000000]
[1017.15791320 1626.91485119 28.47466729 129.56664053 77.48814861 1.00000000]
[]
[]
[]
[]
[]
[]
[1169.38978837 1752.70278873 30.52836670 184.59035461 136.24911657 1.00000000]
[1169.38978837 1752.70278873 30.52836670 136.24911657 87.90787854 1.00000000]
[1169.38978837 1752.70278873 30.52836670 87.90787854 39.56664051 1.00000000]
[1169.38978837 1752.70278873 30.52836670 39.56664051 351.22540248 1.00000000]
[1169.38978837 1752.70278873 30.52836670 351.22540248 302.88416445 1.00000000]
[1169.38978837 1752.70278873 30.52836670 302.88416445 254.54292642 1.00000000]
[]
[]
[]
[]
[]
[]
[1017.15791320 1626.91485119 28.47466729 1.64513241 309.56664049 1.00000000]
[1017.15791320 1626.91485119 28.47466729 309.56664049 257.48814866 1.00000000]
[]
[]
[]
[924.70986870 1550.52579762 28.47466729 1.64513246 309.56664053 1.00000000]
[924.70986870 1550.52579762 28.47466729 309.56664053 257.48814870 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[177.01021998 932.70776888 28.47466729 1.64513251 309.56664058 1.00000000]
[177.01021998 932.70776888 28.47466729 309.56664058 257.48814875 1.00000000]
[]
[]
[96.88532279 866.50122967 36.01426010 10.49396443 329.87574858 1.00000000]
[96.88532279 866.50122967 36.01426010 329.87574858 289.25753273 1.00000000]
[]
[82.64824752 784.20704091 32.20889362 47.27436437 1.60275808 1.00000000]
[82.64824752 784.20704091 32.20889362 1.60275808 315.93115179 1.00000000]
[]
[]
[]
[117.49999546 633.49548953 55.48099457 84.63428799 58.59296859 1.00000000]
[117.49999546 633.49548953 55.48099457 58.59296859 32.55164920 1.00000000]
[117.49999546 633.49548953 55.48099457 32.55164920 6.51032980 1.00000000]
[117.49999546 633.49548953 55.48099457 6.51032980 340.46901041 1.00000000]
[117.49999546 633.49548953 55.48099457 340.46901041 314.42769101 1.00000000]
[117.49999546 633.49548953 55.48099457 314.42769101 288.38637161 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[117.49999518 300.38570941 106.90312956 80.57829979 67.14858315 1.00000000]
[117.49999518 300.38570941 106.90312956 67.14858315 53.71886651 1.00000000]
[117.49999518 300.38570941 106.90312956 53.71886651 40.28914987 1.00000000]
[117.49999518 300.38570941 106.90312956 40.28914987 26.85943323 1.00000000]
[117.49999518 300.38570941 106.90312956 26.85943323 13.42971659 1.00000000]
[117.49999518 300.38570941 106.90312956 13.42971659 360.00000000 1.00000000]
[117.49999518 300.38570941 106.90312956 360.00000000 346.57028331 1.00000000]
[117.49999518 300.38570941 106.90312956 346.57028331 333.14056667 1.00000000]
[117.49999518 300.38570941 106.90312956 333.14056667 319.71085004 1.00000000]
[117.49999518 300.38570941 106.90312956 319.71085004 306.28113340 1.00000000]
[117.49999518 300.38570941 106.90312956 306.28113340 292.85141676 1.00000000]
[117.49999518 300.38570941 106.90312956 292.85141676 279.42170012 1.00000000]
[]
[]
[117.49999494 122.46233914 28.47466719 52.07849163 360.00000000 1.00000000]
[117.49999494 122.46233914 28.47466719 360.00000000 307.92150807 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[3 189]
[4 188]
[5 187]
[17 175]
[18 174]
[19 173]
[20 172]
[21 171]
[22 170]
[23 169]
[24 168]
[29 162]
[30 161]
[31 160]
[32 159]
[35 157]
[36 156]
[40 154]
[41 153]
[42 152]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[83 111]
[84 110]
[85 109]
[86 108]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
] def

init

% Start Annotations
39 72 12 1.00 0.60 0.67 omark 122 155 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
