%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUGCACGUGGAGKAGUGUUGCUUGAUCUAAAAAUAGCAUUACUCAACAAUCUAAAGGACCUGUACUAGGUUUAACAUGUUGAGYAUUACUCAUGUUAAACCUAGUACAGGUCCUUUAGAUUCUUUAAAAUUUCCAAAUUCUGUCUUGUUGUGGCCUGUGUGGGACCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[150.00000000 250.00000000]
[150.00000000 275.00000000]
[128.34936523 287.50000000]
[150.00000000 300.00000000]
[150.00000000 325.00000000]
[126.16726685 332.54986572]
[105.01309204 345.87283325]
[109.44866943 321.26947021]
[85.92374420 329.72982788]
[66.83439636 313.58679199]
[47.74504471 297.44378662]
[28.65569687 281.30078125]
[18.59060669 258.41641235]
[-5.64761639 252.29200745]
[-24.73696518 236.14898682]
[-43.82631302 220.00598145]
[-62.91566086 203.86297607]
[-58.52964020 179.25071716]
[-64.94803619 155.08868408]
[-80.96994781 135.89758301]
[-103.59767914 125.26810455]
[-128.59754944 125.18901825]
[-151.29208374 135.67512512]
[-167.43508911 154.76448059]
[-174.00621033 178.88543701]
[-169.77600098 203.52493286]
[-155.53590393 224.07292175]
[-133.95027161 236.68484497]
[-109.05780029 239.00100708]
[-85.51587677 230.58805847]
[-66.42652893 246.73106384]
[-47.33717728 262.87408447]
[-28.24783134 279.01708984]
[-18.18274117 301.90145874]
[6.05548239 308.02587891]
[25.14483070 324.16888428]
[44.23418045 340.31188965]
[63.32352829 356.45489502]
[82.41287231 372.59790039]
[72.78848267 395.67108154]
[69.30184937 420.42675781]
[72.17894745 445.26065063]
[81.23331451 468.56341553]
[61.75294876 484.23233032]
[42.27258301 499.90127563]
[22.79221725 515.57019043]
[3.31185079 531.23913574]
[-16.16851425 546.90808105]
[-35.64888000 562.57696533]
[-55.12924576 578.24591064]
[-74.60961151 593.91485596]
[-94.08997345 609.58380127]
[-113.57034302 625.25268555]
[-133.05070496 640.92163086]
[-152.53106689 656.59057617]
[-172.01144409 672.25946045]
[-191.49180603 687.92840576]
[-210.97216797 703.59735107]
[-230.45252991 719.26629639]
[-249.93290710 734.93518066]
[-269.41326904 750.60412598]
[-288.89364624 766.27307129]
[-308.37399292 781.94201660]
[-327.85437012 797.61090088]
[-347.33471680 813.27984619]
[-366.81509399 828.94879150]
[-386.29547119 844.61773682]
[-405.77581787 860.28662109]
[-425.25619507 875.95556641]
[-444.73657227 891.62451172]
[-464.21691895 907.29345703]
[-483.69729614 922.96234131]
[-503.17764282 938.63128662]
[-526.50567627 929.64221191]
[-551.44757080 931.34588623]
[-573.33666992 943.42340088]
[-588.07751465 963.61517334]
[-592.91204834 988.14324951]
[-586.93579102 1012.41845703]
[-571.26690674 1031.89880371]
[-548.83697510 1042.93957520]
[-523.84271240 1043.47497559]
[-500.96054077 1033.40490723]
[-484.47174072 1014.61340332]
[-477.46142578 990.61645508]
[-481.24114990 965.90380859]
[-461.76077271 950.23486328]
[-442.28042603 934.56591797]
[-422.80004883 918.89703369]
[-403.31970215 903.22808838]
[-383.83932495 887.55914307]
[-364.35894775 871.89019775]
[-344.87860107 856.22131348]
[-325.39822388 840.55236816]
[-305.91787720 824.88342285]
[-286.43750000 809.21453857]
[-266.95712280 793.54559326]
[-247.47676086 777.87664795]
[-227.99639893 762.20770264]
[-208.51603699 746.53881836]
[-189.03567505 730.86987305]
[-169.55529785 715.20092773]
[-150.07493591 699.53198242]
[-130.59457397 683.86309814]
[-111.11420441 668.19415283]
[-91.63384247 652.52520752]
[-72.15347290 636.85626221]
[-52.67311096 621.18737793]
[-33.19274521 605.51843262]
[-13.71237850 589.84948730]
[5.76798677 574.18054199]
[25.24835205 558.51165771]
[44.72871780 542.84271240]
[64.20908356 527.17376709]
[83.68944550 511.50485229]
[103.16981506 495.83590698]
[123.99012756 509.67480469]
[147.63009644 517.80816650]
[172.55772400 519.70898438]
[197.15759277 515.25402832]
[219.83551025 504.73205566]
[239.12182617 488.82489014]
[253.76669312 468.56341553]
[262.82104492 445.26065063]
[265.69815063 420.42675781]
[262.21151733 395.67108154]
[252.58712769 372.59790039]
[237.44866943 352.70251465]
[251.84339905 332.26257324]
[266.23812866 311.82260132]
[280.63287354 291.38265991]
[295.02761841 270.94271851]
[309.42236328 250.50276184]
[334.25280762 247.59622192]
[353.05786133 231.12287903]
[359.20715332 206.89096069]
[350.53256226 183.44416809]
[330.09262085 169.04943848]
[305.09405518 168.78207397]
[284.35089111 182.73634338]
[275.17681885 205.99221802]
[280.80642700 230.35012817]
[266.41168213 250.79008484]
[252.01695251 271.23004150]
[227.11807251 268.98379517]
[237.62220764 291.66998291]
[223.22747803 312.10992432]
[208.83273315 332.54986572]
[185.00000000 325.00000000]
[185.00000000 300.00000000]
[185.00000000 275.00000000]
[185.00000000 250.00000000]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000089 421.63375766 98.20556563 259.73520502 245.10985554 1.00000000]
[167.50000089 421.63375766 98.20556563 245.10985554 230.48450606 1.00000000]
[]
[]
[]
[]
[]
[0.20393300 280.15893558 28.47466729 2.29820297 310.21971105 1.00000000]
[0.20393300 280.15893558 28.47466729 310.21971105 258.14121912 1.00000000]
[]
[]
[]
[-116.27611723 181.65695306 57.79658687 22.59469443 357.61392775 1.00000000]
[-116.27611723 181.65695306 57.79658687 357.61392775 332.63316107 1.00000000]
[-116.27611723 181.65695306 57.79658687 332.63316107 307.65239440 1.00000000]
[-116.27611723 181.65695306 57.79658687 307.65239440 282.67162772 1.00000000]
[-116.27611723 181.65695306 57.79658687 282.67162772 257.69086104 1.00000000]
[-116.27611723 181.65695306 57.79658687 257.69086104 232.71009436 1.00000000]
[-116.27611723 181.65695306 57.79658687 232.71009436 207.72932768 1.00000000]
[-116.27611723 181.65695306 57.79658687 207.72932768 182.74856101 1.00000000]
[-116.27611723 181.65695306 57.79658687 182.74856101 157.76779433 1.00000000]
[-116.27611723 181.65695306 57.79658687 157.76779433 132.78702765 1.00000000]
[-116.27611723 181.65695306 57.79658687 132.78702765 107.80626097 1.00000000]
[-116.27611723 181.65695306 57.79658687 107.80626097 82.82549429 1.00000000]
[-116.27611723 181.65695306 57.79658687 82.82549429 57.84472762 1.00000000]
[]
[]
[]
[0.20393300 280.15893558 28.47466729 182.29820293 130.21971100 1.00000000]
[0.20393300 280.15893558 28.47466729 130.21971100 78.14121917 1.00000000]
[]
[]
[]
[]
[167.50000089 421.63375766 98.20556563 209.95491609 195.32956661 1.00000000]
[167.50000089 421.63375766 98.20556563 195.32956661 180.70421713 1.00000000]
[167.50000089 421.63375766 98.20556563 180.70421713 166.07886765 1.00000000]
[167.50000089 421.63375766 98.20556563 166.07886765 151.45351817 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-535.13129686 986.79154905 57.79658687 303.56370659 278.58293991 1.00000000]
[-535.13129686 986.79154905 57.79658687 278.58293991 253.60217323 1.00000000]
[-535.13129686 986.79154905 57.79658687 253.60217323 228.62140655 1.00000000]
[-535.13129686 986.79154905 57.79658687 228.62140655 203.64063988 1.00000000]
[-535.13129686 986.79154905 57.79658687 203.64063988 178.65987320 1.00000000]
[-535.13129686 986.79154905 57.79658687 178.65987320 153.67910652 1.00000000]
[-535.13129686 986.79154905 57.79658687 153.67910652 128.69833984 1.00000000]
[-535.13129686 986.79154905 57.79658687 128.69833984 103.71757316 1.00000000]
[-535.13129686 986.79154905 57.79658687 103.71757316 78.73680649 1.00000000]
[-535.13129686 986.79154905 57.79658687 78.73680649 53.75603981 1.00000000]
[-535.13129686 986.79154905 57.79658687 53.75603981 28.77527313 1.00000000]
[-535.13129686 986.79154905 57.79658687 28.77527313 3.79450645 1.00000000]
[-535.13129686 986.79154905 57.79658687 3.79450645 338.81373977 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000089 421.63375766 98.20556563 130.92392820 116.29857872 1.00000000]
[167.50000089 421.63375766 98.20556563 116.29857872 101.67322924 1.00000000]
[167.50000089 421.63375766 98.20556563 101.67322924 87.04787976 1.00000000]
[167.50000089 421.63375766 98.20556563 87.04787976 72.42253028 1.00000000]
[167.50000089 421.63375766 98.20556563 72.42253028 57.79718080 1.00000000]
[167.50000089 421.63375766 98.20556563 57.79718080 43.17183131 1.00000000]
[167.50000089 421.63375766 98.20556563 43.17183131 28.54648183 1.00000000]
[167.50000089 421.63375766 98.20556563 28.54648183 13.92113235 1.00000000]
[167.50000089 421.63375766 98.20556563 13.92113235 359.29578287 1.00000000]
[167.50000089 421.63375766 98.20556563 359.29578287 344.67043339 1.00000000]
[167.50000089 421.63375766 98.20556563 344.67043339 330.04508391 1.00000000]
[167.50000089 421.63375766 98.20556563 330.04508391 315.41973443 1.00000000]
[]
[]
[]
[]
[]
[317.16335917 209.11779129 42.10271758 100.59467456 66.05251120 1.00000000]
[317.16335917 209.11779129 42.10271758 66.05251120 31.51034784 1.00000000]
[317.16335917 209.11779129 42.10271758 31.51034784 356.96818449 1.00000000]
[317.16335917 209.11779129 42.10271758 356.96818449 322.42602113 1.00000000]
[317.16335917 209.11779129 42.10271758 322.42602113 287.88385777 1.00000000]
[317.16335917 209.11779129 42.10271758 287.88385777 253.34169441 1.00000000]
[317.16335917 209.11779129 42.10271758 253.34169441 218.79953105 1.00000000]
[317.16335917 209.11779129 42.10271758 218.79953105 184.25736770 1.00000000]
[317.16335917 209.11779129 42.10271758 184.25736770 149.71520434 1.00000000]
[]
[]
[]
[]
[]
[]
[167.50000089 421.63375766 98.20556563 294.89014446 280.26479498 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 166]
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[12 158]
[13 157]
[15 47]
[17 46]
[18 45]
[19 44]
[20 43]
[22 41]
[23 40]
[24 39]
[25 38]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[136 156]
[137 155]
[138 154]
[139 152]
[140 151]
[141 150]
] def

init

% Start Annotations
48 100 12 1.00 0.60 0.67 omark 37 127 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
