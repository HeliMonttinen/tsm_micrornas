%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUGCACGUGGAGGAGUGUUGCUUGAUCUAAAAAUAGCAUUACCGAACAAUCUAAAGGACCUGUACUAGGUUUAACAUGUUGAGCAUUACUCAUGUUAGACCUAGUACACGUCCUUUAGAUUCUUUAAAAUUCCCAAAUUCUAUCUUGUUGUGGCCUGUGUGGGACCUGAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[150.00000000 250.00000000]
[150.00000000 275.00000000]
[128.34936523 287.50000000]
[150.00000000 300.00000000]
[150.00000000 325.00000000]
[127.26535034 335.39883423]
[109.58768463 353.07650757]
[86.15877533 344.35375977]
[62.72986221 335.63104248]
[39.30095291 326.90829468]
[15.87204170 318.18554688]
[-7.55686855 309.46279907]
[-30.98577881 300.74008179]
[-54.41468811 292.01733398]
[-77.84359741 283.29458618]
[-82.00394440 258.64318848]
[-101.27250671 274.57186890]
[-124.70142365 265.84912109]
[-133.82769775 242.57443237]
[-154.54212952 228.57757568]
[-179.54119873 228.79357910]
[-200.01068115 243.14627075]
[-208.73341370 266.57519531]
[-202.63392639 290.81970215]
[-183.86279297 307.33163452]
[-159.03834534 310.28918457]
[-136.91325378 298.64959717]
[-113.48434448 307.37234497]
[-90.05543518 316.09506226]
[-66.62652588 324.81781006]
[-43.19761276 333.54055786]
[-19.76870155 342.26327515]
[3.66020870 350.98602295]
[27.08911896 359.70877075]
[50.51802826 368.43148804]
[54.67837143 393.08291626]
[73.94693756 377.15423584]
[97.37584686 385.87698364]
[99.18885040 410.81115723]
[77.26818848 422.83132935]
[55.34751892 434.85150146]
[30.37524986 436.02865601]
[15.95636845 456.45156860]
[-5.96429586 468.47174072]
[-27.88496017 480.49191284]
[-49.80562592 492.51208496]
[-71.72628784 504.53225708]
[-93.64694977 516.55242920]
[-115.56761932 528.57257080]
[-137.48828125 540.59277344]
[-159.40895081 552.61291504]
[-181.32960510 564.63311768]
[-203.25027466 576.65325928]
[-225.17094421 588.67346191]
[-250.14320374 589.85058594]
[-264.56210327 610.27355957]
[-286.48275757 622.29370117]
[-308.40341187 634.31390381]
[-330.32409668 646.33404541]
[-352.24475098 658.35418701]
[-374.16540527 670.37438965]
[-396.08609009 682.39453125]
[-418.00674438 694.41473389]
[-439.92739868 706.43487549]
[-461.84808350 718.45507812]
[-483.76873779 730.47521973]
[-505.68939209 742.49542236]
[-527.61004639 754.51556396]
[-549.53070068 766.53576660]
[-571.45141602 778.55590820]
[-593.37207031 790.57604980]
[-615.29272461 802.59625244]
[-637.21337891 814.61639404]
[-658.60955811 801.68572998]
[-683.46496582 799.00061035]
[-707.12908936 807.06347656]
[-725.17437744 824.36572266]
[-734.22448730 847.67010498]
[-732.58624268 872.61639404]
[-720.56604004 894.53704834]
[-700.41296387 909.33074951]
[-675.89764404 914.22955322]
[-651.60687256 908.31689453]
[-632.08551025 892.69903564]
[-620.98602295 870.29809570]
[-620.38513184 845.30535889]
[-598.46447754 833.28515625]
[-576.54382324 821.26501465]
[-554.62316895 809.24481201]
[-532.70251465 797.22467041]
[-510.78182983 785.20452881]
[-488.86117554 773.18432617]
[-466.94049072 761.16418457]
[-445.01983643 749.14398193]
[-423.09918213 737.12384033]
[-401.17849731 725.10363770]
[-379.25784302 713.08349609]
[-357.33718872 701.06329346]
[-335.41650391 689.04315186]
[-313.49584961 677.02294922]
[-291.57519531 665.00280762]
[-269.65451050 652.98260498]
[-247.73385620 640.96246338]
[-222.76158142 639.78527832]
[-208.34269714 619.36236572]
[-186.42204285 607.34222412]
[-164.50137329 595.32202148]
[-142.58070374 583.30187988]
[-120.66004181 571.28167725]
[-98.73937988 559.26153564]
[-76.81871796 547.24133301]
[-54.89805222 535.22119141]
[-32.97738647 523.20104980]
[-11.05672264 511.18084717]
[10.86394119 499.16067505]
[32.78460693 487.14050293]
[57.75687790 485.96334839]
[72.17575836 465.54043579]
[94.09642029 453.52026367]
[116.01708984 441.50009155]
[136.06604004 456.43460083]
[160.06582642 463.43530273]
[185.00000000 461.62231445]
[207.73464966 451.22348022]
[225.41232300 433.54580688]
[235.81115723 410.81115723]
[237.62414551 385.87698364]
[230.62344360 361.87719727]
[249.53656006 345.52804565]
[268.44964600 329.17889404]
[287.36276245 312.82977295]
[306.27587891 296.48062134]
[325.18899536 280.13150024]
[349.98483276 283.31994629]
[372.21728516 271.88677979]
[384.04760742 249.86306763]
[381.30465698 225.01400757]
[364.95550537 206.10090637]
[340.76458740 199.79217529]
[317.26119995 208.31214905]
[302.73217773 228.65687561]
[302.30020142 253.65313721]
[283.38708496 270.00228882]
[264.47396851 286.35140991]
[240.85864258 278.14675903]
[245.56086731 302.70056152]
[226.64775085 319.04968262]
[207.73464966 335.39883423]
[185.00000000 325.00000000]
[185.00000000 300.00000000]
[185.00000000 275.00000000]
[185.00000000 250.00000000]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000147 393.31115236 70.51711520 255.63094639 235.21031546 1.00000000]
[167.50000147 393.31115236 70.51711520 235.21031546 214.78968454 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-166.69429581 268.88840973 42.10271758 355.86036604 321.31820268 1.00000000]
[-166.69429581 268.88840973 42.10271758 321.31820268 286.77603932 1.00000000]
[-166.69429581 268.88840973 42.10271758 286.77603932 252.23387597 1.00000000]
[-166.69429581 268.88840973 42.10271758 252.23387597 217.69171261 1.00000000]
[-166.69429581 268.88840973 42.10271758 217.69171261 183.14954925 1.00000000]
[-166.69429581 268.88840973 42.10271758 183.14954925 148.60738589 1.00000000]
[-166.69429581 268.88840973 42.10271758 148.60738589 114.06522253 1.00000000]
[-166.69429581 268.88840973 42.10271758 114.06522253 79.52305918 1.00000000]
[-166.69429581 268.88840973 42.10271758 79.52305918 44.98089582 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000147 393.31115236 70.51711520 186.05157732 165.63094639 1.00000000]
[]
[]
[44.06606313 460.99600119 28.47466729 293.34038469 241.26189276 1.00000000]
[44.06606313 460.99600119 28.47466729 241.26189276 189.18340084 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-236.45239651 614.81795511 28.47466729 293.34038464 241.26189272 1.00000000]
[-236.45239651 614.81795511 28.47466729 241.26189272 189.18340079 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-677.09797061 856.44541666 57.79658687 313.63687610 288.65610942 1.00000000]
[-677.09797061 856.44541666 57.79658687 288.65610942 263.67534274 1.00000000]
[-677.09797061 856.44541666 57.79658687 263.67534274 238.69457607 1.00000000]
[-677.09797061 856.44541666 57.79658687 238.69457607 213.71380939 1.00000000]
[-677.09797061 856.44541666 57.79658687 213.71380939 188.73304271 1.00000000]
[-677.09797061 856.44541666 57.79658687 188.73304271 163.75227603 1.00000000]
[-677.09797061 856.44541666 57.79658687 163.75227603 138.77150935 1.00000000]
[-677.09797061 856.44541666 57.79658687 138.77150935 113.79074268 1.00000000]
[-677.09797061 856.44541666 57.79658687 113.79074268 88.80997600 1.00000000]
[-677.09797061 856.44541666 57.79658687 88.80997600 63.82920932 1.00000000]
[-677.09797061 856.44541666 57.79658687 63.82920932 38.84844264 1.00000000]
[-677.09797061 856.44541666 57.79658687 38.84844264 13.86767596 1.00000000]
[-677.09797061 856.44541666 57.79658687 13.86767596 348.88690928 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-236.45239651 614.81795511 28.47466729 113.34038460 61.26189267 1.00000000]
[-236.45239651 614.81795511 28.47466729 61.26189267 9.18340084 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[44.06606313 460.99600119 28.47466729 113.34038464 61.26189272 1.00000000]
[44.06606313 460.99600119 28.47466729 61.26189272 9.18340088 1.00000000]
[]
[]
[167.50000147 393.31115236 70.51711520 136.89283918 116.47220825 1.00000000]
[167.50000147 393.31115236 70.51711520 116.47220825 96.05157732 1.00000000]
[167.50000147 393.31115236 70.51711520 96.05157732 75.63094639 1.00000000]
[167.50000147 393.31115236 70.51711520 75.63094639 55.21031546 1.00000000]
[167.50000147 393.31115236 70.51711520 55.21031546 34.78968454 1.00000000]
[167.50000147 393.31115236 70.51711520 34.78968454 14.36905361 1.00000000]
[167.50000147 393.31115236 70.51711520 14.36905361 353.94842268 1.00000000]
[167.50000147 393.31115236 70.51711520 353.94842268 333.52779175 1.00000000]
[]
[]
[]
[]
[]
[342.71451509 241.84970789 42.10271758 114.59847325 80.05630990 1.00000000]
[342.71451509 241.84970789 42.10271758 80.05630990 45.51414654 1.00000000]
[342.71451509 241.84970789 42.10271758 45.51414654 10.97198318 1.00000000]
[342.71451509 241.84970789 42.10271758 10.97198318 336.42981982 1.00000000]
[342.71451509 241.84970789 42.10271758 336.42981982 301.88765646 1.00000000]
[342.71451509 241.84970789 42.10271758 301.88765646 267.34549310 1.00000000]
[342.71451509 241.84970789 42.10271758 267.34549310 232.80332975 1.00000000]
[342.71451509 241.84970789 42.10271758 232.80332975 198.26116639 1.00000000]
[342.71451509 241.84970789 42.10271758 198.26116639 163.71900303 1.00000000]
[]
[]
[]
[]
[]
[]
[167.50000147 393.31115236 70.51711520 304.78968454 284.36905361 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 166]
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
[12 158]
[13 157]
[15 46]
[16 45]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[25 36]
[26 35]
[47 128]
[48 127]
[49 126]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[136 156]
[137 155]
[138 154]
[139 152]
[140 151]
[141 150]
] def

init

% Start Annotations
48 100 12 1.00 0.60 0.67 omark 37 127 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
