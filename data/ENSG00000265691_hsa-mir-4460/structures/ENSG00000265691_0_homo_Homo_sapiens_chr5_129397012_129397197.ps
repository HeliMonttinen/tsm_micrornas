%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGACAACGCAGCAAACCUCUAUCCAGCAAGGUUCUGAAGAUUCACCUGGUUUCUGCCCACAGUGGUUGUGAAUUUACCUCCUUUAUCACUGCAAAGAGGAGAAGGUAAAUUCACAACCACUAUGGGCAAAAAACAGUGCCUCUCUGUGAGAGUUGUCUGUUAAUUCUUAUCAAGGUGAAUCAGA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[350.00000000 125.00000000]
[350.00000000 150.00000000]
[339.02532959 172.46234131]
[350.00000000 194.92468262]
[374.46432495 200.07220459]
[394.18566895 215.43673706]
[413.90698242 230.80128479]
[433.62832642 246.16581726]
[453.34967041 261.53033447]
[452.08242798 286.49819946]
[463.07748413 308.95056152]
[483.57827759 323.25848389]
[508.44519043 325.83486938]
[531.44384766 316.03378296]
[546.80841064 296.31246948]
[550.68676758 271.61514282]
[542.10675049 248.13359070]
[523.21929932 231.75482178]
[498.75964355 226.58509827]
[474.86001587 233.92047119]
[455.13867188 218.55593872]
[435.41732788 203.19140625]
[415.69601440 187.82687378]
[395.97467041 172.46234131]
[385.00000000 150.00000000]
[385.00000000 125.00000000]
[385.00000000 100.00000000]
[460.00000000 100.00000000]
[535.00000000 100.00000000]
[610.00000000 100.00000000]
[610.00000000 125.00000000]
[610.00000000 150.00000000]
[610.00000000 175.00000000]
[610.00000000 200.00000000]
[610.00000000 225.00000000]
[610.00000000 250.00000000]
[610.00000000 275.00000000]
[610.00000000 300.00000000]
[610.00000000 325.00000000]
[610.00000000 350.00000000]
[610.00000000 375.00000000]
[586.72644043 384.12915039]
[567.35968018 399.93829346]
[553.75549316 420.91271973]
[547.21734619 445.04260254]
[522.36627197 447.76736450]
[497.51516724 450.49209595]
[472.66412354 453.21685791]
[447.81304932 455.94158936]
[422.96197510 458.66635132]
[399.43731689 450.20523071]
[378.30490112 463.56268311]
[353.45382690 466.28741455]
[328.60278320 469.01217651]
[303.75170898 471.73690796]
[278.90063477 474.46166992]
[254.04956055 477.18643188]
[229.19848633 479.91116333]
[204.34741211 482.63592529]
[179.49633789 485.36065674]
[154.64526367 488.08541870]
[129.79418945 490.81015015]
[104.94312286 493.53491211]
[80.09205627 496.25964355]
[55.24098206 498.98440552]
[30.38991165 501.70913696]
[5.53883934 504.43389893]
[-19.31223297 507.15863037]
[-44.16330338 509.88339233]
[-69.01437378 512.60815430]
[-92.53903198 504.14700317]
[-113.67143250 517.50445557]
[-138.52250671 520.22918701]
[-163.37358093 522.95397949]
[-185.44795227 511.21847534]
[-209.26780701 518.80889893]
[-220.48262024 541.15234375]
[-242.32843018 553.30798340]
[-265.95559692 545.13751221]
[-290.05029297 551.80438232]
[-306.11712646 570.95788574]
[-308.49121094 595.84490967]
[-296.33554077 617.69073486]
[-273.93594360 628.79290771]
[-249.19013977 625.23699951]
[-230.82301331 608.27679443]
[-225.31048584 583.89215088]
[-203.46467590 571.73645020]
[-178.56602478 573.98522949]
[-159.55892944 557.74548340]
[-134.70785522 555.02069092]
[-109.85678101 552.29595947]
[-86.33213043 560.75708008]
[-65.19972992 547.39965820]
[-40.34865570 544.67486572]
[-15.49758625 541.95013428]
[9.35348511 539.22540283]
[34.20455551 536.50067139]
[59.05562973 533.77587891]
[83.90670013 531.05114746]
[108.75777435 528.32641602]
[133.60884094 525.60162354]
[158.45991516 522.87689209]
[183.31098938 520.15216064]
[208.16206360 517.42742920]
[233.01312256 514.70263672]
[257.86419678 511.97790527]
[282.71527100 509.25317383]
[307.56634521 506.52841187]
[332.41741943 503.80368042]
[357.26849365 501.07891846]
[382.11956787 498.35418701]
[405.64422607 506.81530762]
[426.77661133 493.45785522]
[451.62768555 490.73309326]
[476.47875977 488.00836182]
[501.32983398 485.28359985]
[526.18090820 482.55886841]
[551.03198242 479.83410645]
[562.64331055 501.97406006]
[580.46905518 519.50238037]
[602.80126953 530.73956299]
[627.50000000 534.60882568]
[632.91705322 559.01489258]
[638.33404541 583.42095947]
[643.75109863 607.82702637]
[649.16815186 632.23309326]
[632.85766602 651.17956543]
[628.38665771 675.77648926]
[636.98620605 699.25091553]
[656.28833008 715.13885498]
[655.11206055 740.11114502]
[653.93579102 765.08349609]
[652.75952148 790.05578613]
[651.58331299 815.02813721]
[646.88732910 839.58312988]
[667.26385498 854.06756592]
[688.91162109 841.56256104]
[686.54455566 816.67486572]
[687.72076416 791.70257568]
[688.89703369 766.73022461]
[690.07330322 741.75793457]
[691.24957275 716.78564453]
[711.95965576 702.78234863]
[722.72766113 680.22021484]
[720.58843994 655.31188965]
[706.13110352 634.91619873]
[683.33660889 624.64923096]
[677.91955566 600.24316406]
[672.50256348 575.83709717]
[667.08551025 551.43109131]
[661.66851807 527.02502441]
[682.41101074 513.06982422]
[697.89208984 493.43981934]
[706.62835693 470.01596069]
[707.78265381 445.04260254]
[701.24450684 420.91271973]
[687.64031982 399.93829346]
[668.27355957 384.12915039]
[645.00000000 375.00000000]
[645.00000000 350.00000000]
[645.00000000 325.00000000]
[666.65063477 312.50000000]
[645.00000000 300.00000000]
[645.00000000 275.00000000]
[645.00000000 250.00000000]
[645.00000000 225.00000000]
[645.00000000 200.00000000]
[645.00000000 175.00000000]
[645.00000000 150.00000000]
[645.00000000 125.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[367.49999986 172.46233916 28.47466715 232.07849221 180.00000000 1.00000000]
[367.49999986 172.46233916 28.47466715 180.00000000 127.92150791 1.00000000]
[367.49999986 172.46233916 28.47466715 127.92150791 75.84301581 1.00000000]
[]
[]
[]
[]
[500.99336459 276.46459216 49.92949042 197.40395854 168.40714936 1.00000000]
[500.99336459 276.46459216 49.92949042 168.40714936 139.41034017 1.00000000]
[500.99336459 276.46459216 49.92949042 139.41034017 110.41353099 1.00000000]
[500.99336459 276.46459216 49.92949042 110.41353099 81.41672180 1.00000000]
[500.99336459 276.46459216 49.92949042 81.41672180 52.41991262 1.00000000]
[500.99336459 276.46459216 49.92949042 52.41991262 23.42310343 1.00000000]
[500.99336459 276.46459216 49.92949042 23.42310343 354.42629425 1.00000000]
[500.99336459 276.46459216 49.92949042 354.42629425 325.42948507 1.00000000]
[500.99336459 276.46459216 49.92949042 325.42948507 296.43267588 1.00000000]
[500.99336459 276.46459216 49.92949042 296.43267588 267.43586670 1.00000000]
[500.99336459 276.46459216 49.92949042 267.43586670 238.43905751 1.00000000]
[]
[]
[]
[]
[367.49999986 172.46233916 28.47466715 360.00000000 307.92150824 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[627.50000389 453.84504767 80.76380094 257.48581972 239.67863732 1.00000000]
[627.50000389 453.84504767 80.76380094 239.67863732 221.87145493 1.00000000]
[627.50000389 453.84504767 80.76380094 221.87145493 204.06427254 1.00000000]
[627.50000389 453.84504767 80.76380094 204.06427254 186.25709014 1.00000000]
[]
[]
[]
[]
[]
[402.54076220 478.51026369 28.47466729 315.82140176 263.74290983 1.00000000]
[402.54076220 478.51026369 28.47466729 263.74290983 211.66441791 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-89.43557971 532.45204777 28.47466729 315.82140171 263.74290979 1.00000000]
[-89.43557971 532.45204777 28.47466729 263.74290979 211.66441786 1.00000000]
[]
[]
[-188.34519187 543.29679889 32.20889362 320.83241763 275.16081134 1.00000000]
[-188.34519187 543.29679889 32.20889362 275.16081134 229.48920505 1.00000000]
[-188.34519187 543.29679889 32.20889362 229.48920505 183.81759876 1.00000000]
[]
[-267.28152549 587.21937552 42.10271758 306.34684173 271.80467837 1.00000000]
[-267.28152549 587.21937552 42.10271758 271.80467837 237.26251501 1.00000000]
[-267.28152549 587.21937552 42.10271758 237.26251501 202.72035166 1.00000000]
[-267.28152549 587.21937552 42.10271758 202.72035166 168.17818830 1.00000000]
[-267.28152549 587.21937552 42.10271758 168.17818830 133.63602494 1.00000000]
[-267.28152549 587.21937552 42.10271758 133.63602494 99.09386158 1.00000000]
[-267.28152549 587.21937552 42.10271758 99.09386158 64.55169822 1.00000000]
[-267.28152549 587.21937552 42.10271758 64.55169822 30.00953487 1.00000000]
[-267.28152549 587.21937552 42.10271758 30.00953487 355.46737151 1.00000000]
[]
[-188.34519187 543.29679889 32.20889362 117.99661448 72.32500819 1.00000000]
[-188.34519187 543.29679889 32.20889362 72.32500819 26.65340190 1.00000000]
[]
[]
[-89.43557971 532.45204777 28.47466729 135.82140167 83.74290974 1.00000000]
[-89.43557971 532.45204777 28.47466729 83.74290974 31.66441791 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[402.54076220 478.51026369 28.47466729 135.82140171 83.74290979 1.00000000]
[402.54076220 478.51026369 28.47466729 83.74290979 31.66441796 1.00000000]
[]
[]
[]
[]
[]
[627.50000389 453.84504767 80.76380094 161.22872958 143.42154718 1.00000000]
[627.50000389 453.84504767 80.76380094 143.42154718 125.61436479 1.00000000]
[627.50000389 453.84504767 80.76380094 125.61436479 107.80718239 1.00000000]
[627.50000389 453.84504767 80.76380094 107.80718239 90.00000000 1.00000000]
[]
[]
[]
[]
[675.85382691 671.69987520 47.64193249 235.93517651 205.51324016 1.00000000]
[675.85382691 671.69987520 47.64193249 205.51324016 175.09130381 1.00000000]
[675.85382691 671.69987520 47.64193249 175.09130381 144.66936745 1.00000000]
[675.85382691 671.69987520 47.64193249 144.66936745 114.24743110 1.00000000]
[]
[]
[]
[]
[668.35218488 830.96155924 23.13159456 223.53658495 158.11668642 1.00000000]
[668.35218488 830.96155924 23.13159456 158.11668642 92.69678789 1.00000000]
[668.35218488 830.96155924 23.13159456 92.69678789 27.27688937 1.00000000]
[668.35218488 830.96155924 23.13159456 27.27688937 321.85699084 1.00000000]
[]
[]
[]
[]
[675.85382691 671.69987520 47.64193249 71.14614469 40.72420834 1.00000000]
[675.85382691 671.69987520 47.64193249 40.72420834 10.30227198 1.00000000]
[675.85382691 671.69987520 47.64193249 10.30227198 339.88033563 1.00000000]
[675.85382691 671.69987520 47.64193249 339.88033563 309.45839927 1.00000000]
[675.85382691 671.69987520 47.64193249 309.45839927 279.03646292 1.00000000]
[]
[]
[]
[]
[627.50000389 453.84504767 80.76380094 64.97163943 47.16445704 1.00000000]
[627.50000389 453.84504767 80.76380094 47.16445704 29.35727465 1.00000000]
[627.50000389 453.84504767 80.76380094 29.35727465 11.55009225 1.00000000]
[627.50000389 453.84504767 80.76380094 11.55009225 353.74290986 1.00000000]
[627.50000389 453.84504767 80.76380094 353.74290986 335.93572746 1.00000000]
[627.50000389 453.84504767 80.76380094 335.93572746 318.12854507 1.00000000]
[627.50000389 453.84504767 80.76380094 318.12854507 300.32136268 1.00000000]
[627.50000389 453.84504767 80.76380094 300.32136268 282.51418028 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 38]
[12 37]
[13 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[50 173]
[51 172]
[52 171]
[56 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[83 103]
[84 102]
[85 101]
[88 99]
[89 98]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% Start Annotations
102 138 12 1.00 0.60 0.67 omark 48 84 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
