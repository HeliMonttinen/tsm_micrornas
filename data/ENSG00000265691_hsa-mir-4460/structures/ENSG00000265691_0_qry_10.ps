%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGACAACACAGCAAACCUCUAUCCAGCAAGGUUCUGAAGAUUCACCUGGUUUCUGCCCAUAGUGGUUGUGAAUUUACCUCCUUUAUCACUGUGAAGAGGAGAAGGUAAAUUCACAACCACUAUGGGCAAAAAACAGUGCCUCUCUGUKAGAGUUGUCUGUUAAUUCUUAUCAGGGUGAAUCAGA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[350.00000000 125.00000000]
[350.00000000 150.00000000]
[339.02532959 172.46234131]
[350.00000000 194.92468262]
[374.46432495 200.07220459]
[394.18566895 215.43673706]
[413.90698242 230.80128479]
[433.62832642 246.16581726]
[453.34967041 261.53033447]
[452.08242798 286.49819946]
[463.07748413 308.95056152]
[483.57827759 323.25848389]
[508.44519043 325.83486938]
[531.44384766 316.03378296]
[546.80841064 296.31246948]
[550.68676758 271.61514282]
[542.10675049 248.13359070]
[523.21929932 231.75482178]
[498.75964355 226.58509827]
[474.86001587 233.92047119]
[455.13867188 218.55593872]
[435.41732788 203.19140625]
[415.69601440 187.82687378]
[395.97467041 172.46234131]
[385.00000000 150.00000000]
[385.00000000 125.00000000]
[385.00000000 100.00000000]
[460.00000000 100.00000000]
[535.00000000 100.00000000]
[610.00000000 100.00000000]
[610.00000000 125.00000000]
[610.00000000 150.00000000]
[610.00000000 175.00000000]
[610.00000000 200.00000000]
[610.00000000 225.00000000]
[610.00000000 250.00000000]
[610.00000000 275.00000000]
[610.00000000 300.00000000]
[610.00000000 325.00000000]
[610.00000000 350.00000000]
[610.00000000 375.00000000]
[586.72644043 384.12915039]
[567.35968018 399.93829346]
[553.75549316 420.91271973]
[547.21734619 445.04260254]
[522.36627197 447.76736450]
[497.51516724 450.49209595]
[472.66409302 453.21685791]
[447.81304932 455.94158936]
[422.96197510 458.66635132]
[398.11090088 461.39108276]
[373.25982666 464.11584473]
[348.40875244 466.84057617]
[323.55767822 469.56533813]
[298.70660400 472.29006958]
[273.85552979 475.01483154]
[249.00447083 477.73956299]
[224.15339661 480.46432495]
[199.30232239 483.18905640]
[174.45124817 485.91381836]
[149.60017395 488.63854980]
[124.74910736 491.36331177]
[99.89803314 494.08807373]
[75.04696655 496.81280518]
[50.19589233 499.53756714]
[25.34482002 502.26229858]
[0.49374858 504.98706055]
[-24.35732269 507.71179199]
[-49.20839310 510.43655396]
[-71.28277588 498.70104980]
[-82.92301941 476.57629395]
[-94.56325531 454.45153809]
[-106.20349884 432.32678223]
[-117.84373474 410.20202637]
[-129.48397827 388.07727051]
[-116.14349365 366.93414307]
[-141.12422180 365.95251465]
[-152.76445007 343.82775879]
[-164.40469360 321.70300293]
[-172.79913330 298.15447998]
[-197.70550537 295.99285889]
[-210.03143311 317.74307251]
[-195.37934875 337.99935913]
[-183.73912048 360.12411499]
[-172.09887695 382.24887085]
[-160.45863342 404.37362671]
[-148.81838989 426.49838257]
[-137.17816162 448.62313843]
[-125.53791809 470.74789429]
[-113.89767456 492.87265015]
[-102.25743866 514.99737549]
[-105.08926392 539.83648682]
[-89.29949188 559.21905518]
[-64.40084076 561.46783447]
[-45.39374924 545.22802734]
[-20.54267693 542.50329590]
[4.30839443 539.77856445]
[29.15946579 537.05377197]
[54.01053619 534.32904053]
[78.86161041 531.60430908]
[103.71267700 528.87957764]
[128.56375122 526.15478516]
[153.41482544 523.43005371]
[178.26589966 520.70532227]
[203.11697388 517.98059082]
[227.96803284 515.25579834]
[252.81910706 512.53106689]
[277.67016602 509.80633545]
[302.52124023 507.08157349]
[327.37231445 504.35684204]
[352.22338867 501.63208008]
[377.07446289 498.90734863]
[401.92553711 496.18258667]
[426.77661133 493.45785522]
[451.62768555 490.73309326]
[476.47875977 488.00836182]
[501.32983398 485.28359985]
[526.18090820 482.55886841]
[551.03198242 479.83410645]
[562.64331055 501.97406006]
[580.46905518 519.50238037]
[602.80126953 530.73956299]
[627.50000000 534.60882568]
[632.91705322 559.01489258]
[638.33404541 583.42095947]
[643.75109863 607.82702637]
[649.16815186 632.23309326]
[630.74035645 649.12738037]
[654.58514404 656.63916016]
[660.00219727 681.04522705]
[648.22534180 703.09753418]
[653.64239502 727.50360107]
[673.64294434 742.50280762]
[679.05999756 766.90887451]
[684.47705078 791.31494141]
[689.89404297 815.72100830]
[691.80523682 840.64782715]
[715.26818848 849.27856445]
[732.87658691 831.53186035]
[724.06256104 808.13714600]
[718.64550781 783.73107910]
[713.22845459 759.32501221]
[707.81146240 734.91894531]
[719.58831787 712.86663818]
[714.17126465 688.46057129]
[694.17065430 673.46136475]
[688.75366211 649.05529785]
[683.33660889 624.64923096]
[677.91955566 600.24316406]
[672.50256348 575.83709717]
[667.08551025 551.43109131]
[661.66845703 527.02502441]
[682.41101074 513.06982422]
[697.89208984 493.43981934]
[706.62835693 470.01596069]
[707.78265381 445.04260254]
[701.24450684 420.91271973]
[687.64031982 399.93829346]
[668.27355957 384.12915039]
[645.00000000 375.00000000]
[645.00000000 350.00000000]
[645.00000000 325.00000000]
[645.00000000 300.00000000]
[666.65063477 287.50000000]
[645.00000000 275.00000000]
[645.00000000 250.00000000]
[645.00000000 225.00000000]
[645.00000000 200.00000000]
[645.00000000 175.00000000]
[645.00000000 150.00000000]
[645.00000000 125.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[367.49999986 172.46233916 28.47466715 232.07849221 180.00000000 1.00000000]
[367.49999986 172.46233916 28.47466715 180.00000000 127.92150791 1.00000000]
[367.49999986 172.46233916 28.47466715 127.92150791 75.84301581 1.00000000]
[]
[]
[]
[]
[500.99336459 276.46459216 49.92949042 197.40395854 168.40714936 1.00000000]
[500.99336459 276.46459216 49.92949042 168.40714936 139.41034017 1.00000000]
[500.99336459 276.46459216 49.92949042 139.41034017 110.41353099 1.00000000]
[500.99336459 276.46459216 49.92949042 110.41353099 81.41672180 1.00000000]
[500.99336459 276.46459216 49.92949042 81.41672180 52.41991262 1.00000000]
[500.99336459 276.46459216 49.92949042 52.41991262 23.42310343 1.00000000]
[500.99336459 276.46459216 49.92949042 23.42310343 354.42629425 1.00000000]
[500.99336459 276.46459216 49.92949042 354.42629425 325.42948507 1.00000000]
[500.99336459 276.46459216 49.92949042 325.42948507 296.43267588 1.00000000]
[500.99336459 276.46459216 49.92949042 296.43267588 267.43586670 1.00000000]
[500.99336459 276.46459216 49.92949042 267.43586670 238.43905751 1.00000000]
[]
[]
[]
[]
[367.49999986 172.46233916 28.47466715 360.00000000 307.92150824 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[627.50000047 453.84504767 80.76380094 257.48581972 239.67863732 1.00000000]
[627.50000047 453.84504767 80.76380094 239.67863732 221.87145493 1.00000000]
[627.50000047 453.84504767 80.76380094 221.87145493 204.06427254 1.00000000]
[627.50000047 453.84504767 80.76380094 204.06427254 186.25709014 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-74.18001284 530.77938020 32.20889362 320.83241772 275.16081143 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-186.93521657 316.46409032 23.13159456 13.09011635 307.67021782 1.00000000]
[-186.93521657 316.46409032 23.13159456 307.67021782 242.25031929 1.00000000]
[-186.93521657 316.46409032 23.13159456 242.25031929 176.83042077 1.00000000]
[-186.93521657 316.46409032 23.13159456 176.83042077 111.41052224 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-74.18001284 530.77938020 32.20889362 209.33982716 163.66822087 1.00000000]
[-74.18001284 530.77938020 32.20889362 163.66822087 117.99661458 1.00000000]
[-74.18001284 530.77938020 32.20889362 117.99661458 72.32500829 1.00000000]
[-74.18001284 530.77938020 32.20889362 72.32500829 26.65340200 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[627.50000047 453.84504767 80.76380094 161.22872958 143.42154718 1.00000000]
[627.50000047 453.84504767 80.76380094 143.42154718 125.61436479 1.00000000]
[627.50000047 453.84504767 80.76380094 125.61436479 107.80718239 1.00000000]
[627.50000047 453.84504767 80.76380094 107.80718239 90.00000000 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[683.90681816 707.98208942 36.01426010 228.41314350 187.79492764 1.00000000]
[683.90681816 707.98208942 36.01426010 187.79492764 147.17671179 1.00000000]
[683.90681816 707.98208942 36.01426010 147.17671179 106.55849594 1.00000000]
[]
[]
[]
[710.25599908 826.69651374 23.13159456 208.32561677 142.90571824 1.00000000]
[710.25599908 826.69651374 23.13159456 142.90571824 77.48581972 1.00000000]
[710.25599908 826.69651374 23.13159456 77.48581972 12.06592119 1.00000000]
[710.25599908 826.69651374 23.13159456 12.06592119 306.64602266 1.00000000]
[]
[]
[]
[683.90681816 707.98208942 36.01426010 48.41314350 7.79492764 1.00000000]
[683.90681816 707.98208942 36.01426010 7.79492764 327.17671179 1.00000000]
[683.90681816 707.98208942 36.01426010 327.17671179 286.55849594 1.00000000]
[]
[]
[]
[]
[]
[]
[627.50000047 453.84504767 80.76380094 64.97163943 47.16445704 1.00000000]
[627.50000047 453.84504767 80.76380094 47.16445704 29.35727465 1.00000000]
[627.50000047 453.84504767 80.76380094 29.35727465 11.55009225 1.00000000]
[627.50000047 453.84504767 80.76380094 11.55009225 353.74290986 1.00000000]
[627.50000047 453.84504767 80.76380094 353.74290986 335.93572746 1.00000000]
[627.50000047 453.84504767 80.76380094 335.93572746 318.12854507 1.00000000]
[627.50000047 453.84504767 80.76380094 318.12854507 300.32136268 1.00000000]
[627.50000047 453.84504767 80.76380094 300.32136268 282.51418028 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 38]
[12 37]
[13 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[41 183]
[42 182]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[49 174]
[50 173]
[51 172]
[52 171]
[56 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[88 96]
[89 95]
[90 94]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[140 158]
[141 157]
[144 154]
[145 153]
[146 152]
[147 151]
] def

init

% Start Annotations
102 138 12 1.00 0.60 0.67 omark 48 84 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
