%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCCUAACCUCAAUCCURACACCAAAGGCACAGCCUACUCAUUUAACUGACUGCCCAGUUCUAGAUAUGAAGACAAUCAAGAAAACCAAAUCUUUUCUURAUUGUCUUCAUAUCUAGAACUGGGCAAUCAGUUAAAGUUUGGUUAUGUUUUUAUAAUUAAUUGCAUGUACAUACAUUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[600.00000000 100.00000000]
[625.00000000 100.00000000]
[650.00000000 100.00000000]
[675.00000000 100.00000000]
[700.00000000 100.00000000]
[725.00000000 100.00000000]
[750.00000000 100.00000000]
[775.00000000 100.00000000]
[775.00000000 125.00000000]
[775.00000000 150.00000000]
[775.00000000 175.00000000]
[771.46459961 199.74874878]
[792.50000000 213.25840759]
[813.53540039 199.74874878]
[810.00000000 175.00000000]
[810.00000000 150.00000000]
[810.00000000 125.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
[860.00000000 100.00000000]
[885.00000000 100.00000000]
[910.00000000 100.00000000]
[935.00000000 100.00000000]
[960.00000000 100.00000000]
[960.00000000 125.00000000]
[960.00000000 150.00000000]
[960.00000000 175.00000000]
[960.00000000 200.00000000]
[960.00000000 225.00000000]
[960.00000000 250.00000000]
[960.00000000 275.00000000]
[960.00000000 300.00000000]
[949.02532959 322.46234131]
[960.00000000 344.92468262]
[960.00000000 369.92468262]
[960.00000000 394.92468262]
[960.00000000 419.92468262]
[960.00000000 444.92468262]
[960.00000000 469.92468262]
[960.00000000 494.92468262]
[960.00000000 519.92468262]
[960.00000000 544.92468262]
[960.00000000 569.92468262]
[960.00000000 594.92468262]
[960.00000000 619.92468262]
[960.00000000 644.92468262]
[960.00000000 669.92468262]
[960.00000000 694.92468262]
[960.00000000 719.92468262]
[960.00000000 744.92468262]
[960.00000000 769.92468262]
[960.00000000 794.92468262]
[960.00000000 819.92468262]
[960.00000000 844.92468262]
[960.00000000 869.92468262]
[960.00000000 894.92468262]
[960.00000000 919.92468262]
[960.00000000 944.92468262]
[960.00000000 969.92468262]
[949.02532959 992.38702393]
[960.00000000 1014.84936523]
[960.00000000 1039.84936523]
[960.00000000 1064.84936523]
[960.00000000 1089.84936523]
[960.00000000 1114.84936523]
[960.00000000 1139.84936523]
[960.00000000 1164.84936523]
[942.74304199 1182.93798828]
[940.36175537 1207.82434082]
[953.87530518 1228.85717773]
[977.50000000 1237.03491211]
[1001.12469482 1228.85717773]
[1014.63824463 1207.82434082]
[1012.25695801 1182.93798828]
[995.00000000 1164.84936523]
[995.00000000 1139.84936523]
[995.00000000 1114.84936523]
[995.00000000 1089.84936523]
[995.00000000 1064.84936523]
[995.00000000 1039.84936523]
[995.00000000 1014.84936523]
[1005.97467041 992.38702393]
[995.00000000 969.92468262]
[995.00000000 944.92468262]
[995.00000000 919.92468262]
[995.00000000 894.92468262]
[995.00000000 869.92468262]
[995.00000000 844.92468262]
[995.00000000 819.92468262]
[995.00000000 794.92468262]
[995.00000000 769.92468262]
[995.00000000 744.92468262]
[995.00000000 719.92468262]
[995.00000000 694.92468262]
[995.00000000 669.92468262]
[995.00000000 644.92468262]
[995.00000000 619.92468262]
[995.00000000 594.92468262]
[995.00000000 569.92468262]
[995.00000000 544.92468262]
[995.00000000 519.92468262]
[995.00000000 494.92468262]
[995.00000000 469.92468262]
[995.00000000 444.92468262]
[995.00000000 419.92468262]
[995.00000000 394.92468262]
[995.00000000 369.92468262]
[995.00000000 344.92468262]
[1005.97467041 322.46234131]
[995.00000000 300.00000000]
[995.00000000 275.00000000]
[995.00000000 250.00000000]
[995.00000000 225.00000000]
[995.00000000 200.00000000]
[995.00000000 175.00000000]
[995.00000000 150.00000000]
[995.00000000 125.00000000]
[995.00000000 100.00000000]
[1045.00000000 100.00000000]
[1045.00000000 125.00000000]
[1034.02539062 147.46234131]
[1045.00000000 169.92468262]
[1045.00000000 194.92468262]
[1028.72460938 213.90129089]
[1028.72460938 238.90129089]
[1045.00000000 257.87789917]
[1045.00000000 282.87789917]
[1045.00000000 307.87789917]
[1045.00000000 332.87789917]
[1045.00000000 357.87789917]
[1028.72460938 376.85449219]
[1028.72460938 401.85449219]
[1045.00000000 420.83111572]
[1045.00000000 445.83111572]
[1045.00000000 470.83111572]
[1035.90148926 494.11666870]
[1050.00000000 514.76202393]
[1075.00000000 514.76202393]
[1089.09851074 494.11666870]
[1080.00000000 470.83111572]
[1080.00000000 445.83111572]
[1080.00000000 420.83111572]
[1096.27539062 401.85449219]
[1096.27539062 376.85449219]
[1080.00000000 357.87789917]
[1080.00000000 332.87789917]
[1080.00000000 307.87789917]
[1080.00000000 282.87789917]
[1080.00000000 257.87789917]
[1096.27539062 238.90129089]
[1096.27539062 213.90129089]
[1080.00000000 194.92468262]
[1080.00000000 169.92468262]
[1090.97460938 147.46234131]
[1080.00000000 125.00000000]
[1080.00000000 100.00000000]
[1105.00000000 100.00000000]
[1130.00000000 100.00000000]
[1155.00000000 100.00000000]
[1180.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[792.50000000 190.12681945 23.13159456 220.83979705 155.41989853 1.00000000]
[792.50000000 190.12681945 23.13159456 155.41989853 90.00000000 1.00000000]
[792.50000000 190.12681945 23.13159456 90.00000000 24.58010147 1.00000000]
[792.50000000 190.12681945 23.13159456 24.58010147 319.16020295 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[977.49999918 322.46233922 28.47466702 232.07849249 180.00000000 1.00000000]
[977.49999918 322.46233922 28.47466702 180.00000000 127.92150779 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[977.49999836 992.38701807 28.47466565 232.07849545 180.00000000 1.00000000]
[977.49999836 992.38701807 28.47466565 180.00000000 127.92150639 1.00000000]
[]
[]
[]
[]
[]
[]
[977.50000034 1198.82083275 38.21401848 242.74528137 204.55896100 1.00000000]
[977.50000034 1198.82083275 38.21401848 204.55896100 166.37264064 1.00000000]
[977.50000034 1198.82083275 38.21401848 166.37264064 128.18632027 1.00000000]
[977.50000034 1198.82083275 38.21401848 128.18632027 89.99999991 1.00000000]
[977.50000034 1198.82083275 38.21401848 89.99999991 51.81367954 1.00000000]
[977.50000034 1198.82083275 38.21401848 51.81367954 13.62735917 1.00000000]
[977.50000034 1198.82083275 38.21401848 13.62735917 335.44103881 1.00000000]
[977.50000034 1198.82083275 38.21401848 335.44103881 297.25471844 1.00000000]
[]
[]
[]
[]
[]
[]
[977.49999836 992.38701807 28.47466565 52.07848822 360.00000000 1.00000000]
[977.49999836 992.38701807 28.47466565 360.00000000 307.92150966 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[977.49999918 322.46233922 28.47466702 52.07849127 360.00000000 1.00000000]
[977.49999918 322.46233922 28.47466702 360.00000000 307.92150836 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1062.49999819 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[1062.49999819 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[1062.49999838 226.40128744 36.01426010 240.92732373 200.30910788 1.00000000]
[1062.49999838 226.40128744 36.01426010 200.30910788 159.69089203 1.00000000]
[1062.49999838 226.40128744 36.01426010 159.69089203 119.07267617 1.00000000]
[]
[]
[]
[]
[1062.49999851 389.35450597 36.01426010 240.92732373 200.30910788 1.00000000]
[1062.49999851 389.35450597 36.01426010 200.30910788 159.69089203 1.00000000]
[1062.49999851 389.35450597 36.01426010 159.69089203 119.07267617 1.00000000]
[]
[]
[1062.49999819 491.08935311 26.77024781 229.17803399 173.50682024 1.00000000]
[1062.49999819 491.08935311 26.77024781 173.50682024 117.83560606 1.00000000]
[1062.49999819 491.08935311 26.77024781 117.83560606 62.16439231 1.00000000]
[1062.49999819 491.08935311 26.77024781 62.16439231 6.49317947 1.00000000]
[1062.49999819 491.08935311 26.77024781 6.49317947 310.82196723 1.00000000]
[]
[]
[1062.49999851 389.35450597 36.01426010 60.92732373 20.30910788 1.00000000]
[1062.49999851 389.35450597 36.01426010 20.30910788 339.69089203 1.00000000]
[1062.49999851 389.35450597 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[]
[]
[]
[1062.49999838 226.40128744 36.01426010 60.92732373 20.30910788 1.00000000]
[1062.49999838 226.40128744 36.01426010 20.30910788 339.69089203 1.00000000]
[1062.49999838 226.40128744 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[1062.49999819 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[1062.49999819 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[28 38]
[29 37]
[30 36]
[31 35]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[74 108]
[75 107]
[76 106]
[77 105]
[78 104]
[79 103]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[139 176]
[140 175]
[142 173]
[143 172]
[146 169]
[147 168]
[148 167]
[149 166]
[150 165]
[153 162]
[154 161]
[155 160]
] def

init

% Start Annotations
96 138 12 1.00 0.60 0.67 omark 44 86 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
