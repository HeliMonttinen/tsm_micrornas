%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCCUAACCUCAAUCCUGACACCAACACACAGCCUGCUCCUUUAACUGACUGCCCAGUUCUAGAUAUGAAGACAAUCAAGAACACCAAAUCUUUUCUUGAUUGUCUUCAUAUCCAGAACUGGGCAAUCAGUUAAAGUUUGGUUAUGUUUUUAUAAUUAAUUGCAUGUGCAUACAUUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[600.00000000 100.00000000]
[625.00000000 100.00000000]
[650.00000000 100.00000000]
[675.00000000 100.00000000]
[700.00000000 100.00000000]
[725.00000000 100.00000000]
[750.00000000 100.00000000]
[775.00000000 100.00000000]
[800.00000000 100.00000000]
[825.00000000 100.00000000]
[825.00000000 125.00000000]
[825.00000000 150.00000000]
[825.00000000 175.00000000]
[825.00000000 200.00000000]
[825.00000000 225.00000000]
[802.66967773 236.24081421]
[786.23748779 255.08181763]
[778.13677979 278.73300171]
[779.56713867 303.69204712]
[790.31671143 326.26296997]
[808.79370117 343.10339355]
[832.26202393 351.71960449]
[835.11804199 376.55590820]
[837.97406006 401.39224243]
[840.83001709 426.22857666]
[843.68603516 451.06491089]
[846.54205322 475.90124512]
[849.39807129 500.73754883]
[852.25408936 525.57391357]
[855.11010742 550.41021729]
[857.96612549 575.24652100]
[849.62939453 598.81555176]
[863.09832764 619.87713623]
[865.95434570 644.71343994]
[868.81036377 669.54974365]
[871.66632080 694.38610840]
[874.52233887 719.22241211]
[877.37835693 744.05877686]
[880.23437500 768.89508057]
[883.09039307 793.73138428]
[885.94641113 818.56774902]
[888.80242920 843.40405273]
[891.65838623 868.24041748]
[883.32171631 891.80944824]
[896.79064941 912.87097168]
[899.64660645 937.70727539]
[902.50262451 962.54364014]
[905.35864258 987.37994385]
[908.21466064 1012.21624756]
[911.07067871 1037.05261230]
[913.92669678 1061.88891602]
[916.78271484 1086.72521973]
[919.63873291 1111.56164551]
[922.49468994 1136.39794922]
[925.35070801 1161.23425293]
[928.20672607 1186.07055664]
[931.06274414 1210.90686035]
[933.91876221 1235.74328613]
[936.77478027 1260.57958984]
[939.63079834 1285.41589355]
[942.48675537 1310.25219727]
[945.34277344 1335.08850098]
[948.19879150 1359.92492676]
[951.05480957 1384.76123047]
[931.60986328 1400.47399902]
[921.35394287 1423.27355957]
[922.49688721 1448.24743652]
[934.79229736 1470.01489258]
[955.59118652 1483.88598633]
[980.41217041 1486.87207031]
[1003.90753174 1478.32995605]
[1021.01495361 1460.09985352]
[1028.04858398 1436.10961914]
[1023.49298096 1411.52819824]
[1008.32965088 1391.65173340]
[985.82568359 1380.76281738]
[982.96966553 1355.92651367]
[980.11364746 1331.09008789]
[977.25762939 1306.25378418]
[974.40161133 1281.41748047]
[971.54559326 1256.58117676]
[968.68963623 1231.74487305]
[965.83361816 1206.90844727]
[962.97760010 1182.07214355]
[960.12158203 1157.23583984]
[957.26556396 1132.39953613]
[954.40954590 1107.56311035]
[951.55352783 1082.72680664]
[948.69757080 1057.89050293]
[945.84155273 1033.05419922]
[942.98553467 1008.21783447]
[940.12951660 983.38153076]
[937.27349854 958.54522705]
[934.41748047 933.70886230]
[931.56146240 908.87255859]
[939.89819336 885.30352783]
[926.42926025 864.24200439]
[923.57324219 839.40563965]
[920.71722412 814.56933594]
[917.86126709 789.73297119]
[915.00524902 764.89666748]
[912.14923096 740.06036377]
[909.29321289 715.22399902]
[906.43719482 690.38769531]
[903.58117676 665.55133057]
[900.72515869 640.71502686]
[897.86920166 615.87872314]
[906.20587158 592.30969238]
[892.73693848 571.24810791]
[889.88098145 546.41180420]
[887.02496338 521.57550049]
[884.16894531 496.73913574]
[881.31292725 471.90283203]
[878.45690918 447.06649780]
[875.60089111 422.23016357]
[872.74487305 397.39382935]
[869.88891602 372.55749512]
[867.03289795 347.72119141]
[887.93286133 334.00292969]
[902.10504150 313.40805054]
[926.87298584 316.80673218]
[951.64086914 320.20541382]
[976.40875244 323.60409546]
[1001.17669678 327.00277710]
[1025.94458008 330.40145874]
[1050.71252441 333.80014038]
[1075.48034668 337.19882202]
[1100.24829102 340.59750366]
[1122.08068848 352.77716064]
[1144.45104980 341.61621094]
[1147.84973145 316.84829712]
[1129.31274414 300.07397461]
[1105.00646973 305.92245483]
[1080.23852539 302.52377319]
[1055.47058105 299.12509155]
[1030.70275879 295.72640991]
[1005.93481445 292.32772827]
[981.16693115 288.92904663]
[956.39904785 285.53036499]
[931.63110352 282.13168335]
[906.86322021 278.73300171]
[898.76251221 255.08181763]
[882.33032227 236.24081421]
[860.00000000 225.00000000]
[860.00000000 200.00000000]
[881.65063477 187.50000000]
[860.00000000 175.00000000]
[860.00000000 150.00000000]
[860.00000000 125.00000000]
[860.00000000 100.00000000]
[885.00000000 100.00000000]
[910.00000000 100.00000000]
[935.00000000 100.00000000]
[960.00000000 100.00000000]
[985.00000000 100.00000000]
[1010.00000000 100.00000000]
[1035.00000000 100.00000000]
[1060.00000000 100.00000000]
[1085.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[842.49999894 287.56499524 64.96636537 254.37320907 232.18660453 1.00000000]
[842.49999894 287.56499524 64.96636537 232.18660453 210.00000000 1.00000000]
[842.49999894 287.56499524 64.96636537 210.00000000 187.81339547 1.00000000]
[842.49999894 287.56499524 64.96636537 187.81339547 165.62679093 1.00000000]
[842.49999894 287.56499524 64.96636537 165.62679093 143.44018640 1.00000000]
[842.49999894 287.56499524 64.96636537 143.44018640 121.25358187 1.00000000]
[842.49999894 287.56499524 64.96636537 121.25358187 99.06697733 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[877.91764114 595.56262292 28.47466729 225.51867830 173.44018638 1.00000000]
[877.91764114 595.56262292 28.47466729 173.44018638 121.36169445 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[911.60995032 888.55646944 28.47466729 225.51867825 173.44018633 1.00000000]
[911.60995032 888.55646944 28.47466729 173.44018633 121.36169440 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[974.25929468 1433.36543915 53.85926493 244.47940443 217.63953475 1.00000000]
[974.25929468 1433.36543915 53.85926493 217.63953475 190.79966506 1.00000000]
[974.25929468 1433.36543915 53.85926493 190.79966506 163.95979537 1.00000000]
[974.25929468 1433.36543915 53.85926493 163.95979537 137.11992568 1.00000000]
[974.25929468 1433.36543915 53.85926493 137.11992568 110.28005599 1.00000000]
[974.25929468 1433.36543915 53.85926493 110.28005599 83.44018630 1.00000000]
[974.25929468 1433.36543915 53.85926493 83.44018630 56.60031662 1.00000000]
[974.25929468 1433.36543915 53.85926493 56.60031662 29.76044693 1.00000000]
[974.25929468 1433.36543915 53.85926493 29.76044693 2.92057724 1.00000000]
[974.25929468 1433.36543915 53.85926493 2.92057724 336.08070755 1.00000000]
[974.25929468 1433.36543915 53.85926493 336.08070755 309.24083786 1.00000000]
[974.25929468 1433.36543915 53.85926493 309.24083786 282.40096818 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[911.60995032 888.55646944 28.47466729 45.51867821 353.44018628 1.00000000]
[911.60995032 888.55646944 28.47466729 353.44018628 301.36169445 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[877.91764114 595.56262292 28.47466729 45.51867825 353.44018633 1.00000000]
[877.91764114 595.56262292 28.47466729 353.44018633 301.36169450 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[842.49999894 287.56499524 64.96636537 67.81339547 45.62679093 1.00000000]
[842.49999894 287.56499524 64.96636537 45.62679093 23.44018640 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[1122.69752459 326.01402202 26.77024824 146.99142846 91.32021526 1.00000000]
[1122.69752459 326.01402202 26.77024824 91.32021526 35.64900207 1.00000000]
[1122.69752459 326.01402202 26.77024824 35.64900207 339.97778887 1.00000000]
[1122.69752459 326.01402202 26.77024824 339.97778887 284.30657567 1.00000000]
[1122.69752459 326.01402202 26.77024824 284.30657567 228.63536247 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[842.49999894 287.56499524 64.96636537 352.18660453 330.00000000 1.00000000]
[842.49999894 287.56499524 64.96636537 330.00000000 307.81339547 1.00000000]
[842.49999894 287.56499524 64.96636537 307.81339547 285.62679093 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 170]
[31 169]
[32 168]
[33 167]
[34 165]
[35 164]
[42 138]
[43 137]
[44 136]
[45 135]
[46 134]
[47 133]
[48 132]
[49 131]
[50 130]
[51 129]
[53 127]
[54 126]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[140 161]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% Start Annotations
95 137 12 1.00 0.60 0.67 omark 43 85 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
