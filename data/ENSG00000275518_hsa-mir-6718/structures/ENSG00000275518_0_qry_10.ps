%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUUAAUUGAACAUCCCUCCCUUGCCUGCUGCUGCAAAGAUGACCAAAUGCCUACAGUAAAUCCCUAGUGGCCAAAGGGCUUAUGAUGUAUUGAGAGAGACAUGUCAUAAGCCCUUUGGCCACKAGGGAUUCAGUGUAUGCAUUUCAUGACCUAGCCAUGAAAAACAUGAAAAGAGAUAAAUAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[85.92854309 195.66383362]
[90.87763214 220.16906738]
[81.17533875 243.20959473]
[71.47305298 266.25012207]
[49.10865402 277.42300415]
[39.40636444 300.46353149]
[47.04143906 324.26910400]
[37.33914948 347.30963135]
[14.41475010 357.28317261]
[2.56192827 379.29479980]
[6.85358620 403.92367554]
[25.45293236 420.62887573]
[50.39961624 422.26077271]
[71.01667786 408.12084961]
[78.48020935 384.26095581]
[69.59587860 360.89282227]
[79.29816437 337.85232544]
[101.66256714 326.67941284]
[111.36486053 303.63888550]
[103.72978210 279.83331299]
[113.43206787 256.79278564]
[123.13436127 233.75227356]
[144.12237549 220.16906738]
[149.07145691 195.66383362]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[210.00000000 100.00000000]
[210.00000000 125.00000000]
[210.00000000 150.00000000]
[210.00000000 175.00000000]
[188.66282654 188.02786255]
[175.21133423 209.10052490]
[172.37677002 233.93931580]
[180.73469543 257.50082397]
[198.58804321 275.00103760]
[222.31182861 282.88662720]
[227.94438171 307.24386597]
[233.57695007 331.60107422]
[239.20950317 355.95831299]
[230.15544128 379.26116943]
[240.49838257 402.02130127]
[264.00708008 410.52664185]
[286.51852417 399.65301514]
[311.24572754 403.33612061]
[335.97293091 407.01925659]
[360.70013428 410.70236206]
[385.42733765 414.38549805]
[406.02774048 428.54968262]
[429.86181641 421.00402832]
[454.58901978 424.68713379]
[479.31622314 428.37026978]
[504.04342651 432.05337524]
[524.64379883 446.21755981]
[548.47790527 438.67190552]
[569.07824707 452.83609009]
[592.91235352 445.29043579]
[617.63952637 448.97354126]
[642.36676025 452.65667725]
[667.09393311 456.33978271]
[691.82116699 460.02291870]
[716.54833984 463.70605469]
[741.27557373 467.38916016]
[761.87597656 481.55334473]
[785.71002197 474.00769043]
[810.43725586 477.69079590]
[835.16442871 481.37393188]
[859.89166260 485.05703735]
[884.61883545 488.74017334]
[909.34606934 492.42330933]
[934.07324219 496.10641479]
[958.80047607 499.78955078]
[983.52764893 503.47265625]
[1008.25488281 507.15579224]
[1032.98205566 510.83889771]
[1057.70922852 514.52203369]
[1082.43652344 518.20513916]
[1107.16369629 521.88824463]
[1131.89086914 525.57141113]
[1156.61804199 529.25451660]
[1181.34533691 532.93762207]
[1206.07250977 536.62072754]
[1230.79968262 540.30389404]
[1255.52685547 543.98699951]
[1280.25415039 547.67010498]
[1304.98132324 551.35327148]
[1325.58166504 565.51739502]
[1349.41577148 557.97174072]
[1374.14294434 561.65490723]
[1391.34985352 579.79113770]
[1416.29406738 581.46026611]
[1435.76391602 565.77819824]
[1439.44702148 541.05096436]
[1425.39270020 520.37548828]
[1401.04479980 514.70251465]
[1379.29931641 527.03680420]
[1354.57214355 523.35369873]
[1333.97180176 509.18951416]
[1310.13769531 516.73516846]
[1285.41052246 513.05206299]
[1260.68322754 509.36892700]
[1235.95605469 505.68579102]
[1211.22888184 502.00268555]
[1186.50170898 498.31954956]
[1161.77441406 494.63641357]
[1137.04724121 490.95330811]
[1112.32006836 487.27017212]
[1087.59289551 483.58706665]
[1062.86560059 479.90393066]
[1038.13842773 476.22082520]
[1013.41125488 472.53768921]
[988.68402100 468.85458374]
[963.95684814 465.17144775]
[939.22961426 461.48834229]
[914.50244141 457.80520630]
[889.77520752 454.12210083]
[865.04803467 450.43896484]
[840.32080078 446.75582886]
[815.59362793 443.07272339]
[790.86639404 439.38958740]
[770.26599121 425.22543335]
[746.43194580 432.77108765]
[721.70471191 429.08795166]
[696.97753906 425.40484619]
[672.25030518 421.72171021]
[647.52313232 418.03860474]
[622.79589844 414.35546875]
[598.06872559 410.67233276]
[577.46832275 396.50817871]
[553.63427734 404.05383301]
[533.03387451 389.88964844]
[509.19979858 397.43530273]
[484.47259521 393.75216675]
[459.74539185 390.06906128]
[435.01818848 386.38592529]
[414.41778564 372.22177124]
[390.58370972 379.76742554]
[365.85650635 376.08428955]
[341.12930298 372.40118408]
[316.40209961 368.71804810]
[291.67489624 365.03491211]
[273.30960083 348.07272339]
[267.67706299 323.71548462]
[262.04449463 299.35827637]
[256.41192627 275.00103760]
[274.26528931 257.50082397]
[282.62319946 233.93931580]
[279.78866577 209.10052490]
[266.33715820 188.02786255]
[245.00000000 175.00000000]
[245.00000000 150.00000000]
[245.00000000 125.00000000]
[245.00000000 100.00000000]
[320.00000000 100.00000000]
[320.00000000 125.00000000]
[320.00000000 150.00000000]
[320.00000000 175.00000000]
[307.17904663 196.46212769]
[314.69174194 220.30661011]
[337.50000000 230.54298401]
[360.30825806 220.30661011]
[367.82095337 196.46212769]
[355.00000000 175.00000000]
[355.00000000 150.00000000]
[355.00000000 125.00000000]
[355.00000000 100.00000000]
[380.00000000 100.00000000]
[405.00000000 100.00000000]
[430.00000000 100.00000000]
[455.00000000 100.00000000]
[480.00000000 100.00000000]
[505.00000000 100.00000000]
[530.00000000 100.00000000]
[555.00000000 100.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
[630.00000000 100.00000000]
[655.00000000 100.00000000]
[680.00000000 100.00000000]
[705.00000000 100.00000000]
[730.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[117.50000000 202.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[117.50000000 202.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[]
[]
[75.38561024 302.05121003 36.01426010 263.76312692 223.14491107 1.00000000]
[75.38561024 302.05121003 36.01426010 223.14491107 182.52669522 1.00000000]
[75.38561024 302.05121003 36.01426010 182.52669522 141.90847936 1.00000000]
[]
[40.28347093 385.41004888 38.21401848 265.58108461 227.39476424 1.00000000]
[40.28347093 385.41004888 38.21401848 227.39476424 189.20844388 1.00000000]
[40.28347093 385.41004888 38.21401848 189.20844388 151.02212351 1.00000000]
[40.28347093 385.41004888 38.21401848 151.02212351 112.83580314 1.00000000]
[40.28347093 385.41004888 38.21401848 112.83580314 74.64948278 1.00000000]
[40.28347093 385.41004888 38.21401848 74.64948278 36.46316241 1.00000000]
[40.28347093 385.41004888 38.21401848 36.46316241 358.27684205 1.00000000]
[40.28347093 385.41004888 38.21401848 358.27684205 320.09052168 1.00000000]
[]
[75.38561024 302.05121003 36.01426010 83.76312692 43.14491107 1.00000000]
[75.38561024 302.05121003 36.01426010 43.14491107 2.52669522 1.00000000]
[75.38561024 302.05121003 36.01426010 2.52669522 321.90847936 1.00000000]
[]
[]
[117.50000000 202.04002271 32.20889362 79.92531101 34.25370472 1.00000000]
[117.50000000 202.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[117.50000000 202.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[227.49999296 227.64874887 55.48099457 251.61362834 225.57230894 1.00000000]
[227.49999296 227.64874887 55.48099457 225.57230894 199.53098955 1.00000000]
[227.49999296 227.64874887 55.48099457 199.53098955 173.48967015 1.00000000]
[227.49999296 227.64874887 55.48099457 173.48967015 147.44835076 1.00000000]
[227.49999296 227.64874887 55.48099457 147.44835076 121.40703136 1.00000000]
[227.49999296 227.64874887 55.48099457 121.40703136 95.36571196 1.00000000]
[]
[]
[]
[262.35174102 378.36030023 32.20889362 224.06884816 178.39724187 1.00000000]
[262.35174102 378.36030023 32.20889362 178.39724187 132.72563558 1.00000000]
[262.35174102 378.36030023 32.20889362 132.72563558 87.05402930 1.00000000]
[262.35174102 378.36030023 32.20889362 87.05402930 41.38242301 1.00000000]
[]
[]
[]
[]
[410.22275641 400.38571710 28.47466729 150.55042277 98.47193084 1.00000000]
[410.22275641 400.38571710 28.47466729 98.47193084 46.39343892 1.00000000]
[]
[]
[]
[528.83883536 418.05360533 28.47466729 150.55042285 98.47193100 1.00000000]
[528.83883536 418.05360533 28.47466729 98.47193100 46.39343887 1.00000000]
[573.27330239 424.67212787 28.47466729 150.55042255 98.47193075 1.00000000]
[573.27330239 424.67212787 28.47466729 98.47193075 46.39343882 1.00000000]
[]
[]
[]
[]
[]
[]
[766.07099302 453.38938139 28.47466729 150.55042263 98.47193070 1.00000000]
[766.07099302 453.38938139 28.47466729 98.47193070 46.39343878 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1329.77674248 537.35346192 28.47466729 150.55042258 98.47193065 1.00000000]
[1329.77674248 537.35346192 28.47466729 98.47193065 46.39343873 1.00000000]
[]
[1405.95819864 548.70070450 34.35139098 157.84534194 115.16722442 1.00000000]
[1405.95819864 548.70070450 34.35139098 115.16722442 72.48910691 1.00000000]
[1405.95819864 548.70070450 34.35139098 72.48910691 29.81098939 1.00000000]
[1405.95819864 548.70070450 34.35139098 29.81098939 347.13287187 1.00000000]
[1405.95819864 548.70070450 34.35139098 347.13287187 304.45475436 1.00000000]
[1405.95819864 548.70070450 34.35139098 304.45475436 261.77663684 1.00000000]
[1405.95819864 548.70070450 34.35139098 261.77663684 219.09851932 1.00000000]
[]
[1329.77674248 537.35346192 28.47466729 330.55042253 278.47193061 1.00000000]
[1329.77674248 537.35346192 28.47466729 278.47193061 226.39343878 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[766.07099302 453.38938139 28.47466729 330.55042258 278.47193065 1.00000000]
[766.07099302 453.38938139 28.47466729 278.47193065 226.39343882 1.00000000]
[]
[]
[]
[]
[]
[]
[573.27330239 424.67212787 28.47466729 330.55042263 278.47193070 1.00000000]
[573.27330239 424.67212787 28.47466729 278.47193070 226.39343875 1.00000000]
[528.83883536 418.05360533 28.47466729 330.55042243 278.47193055 1.00000000]
[528.83883536 418.05360533 28.47466729 278.47193055 226.39343879 1.00000000]
[]
[]
[]
[410.22275641 400.38571710 28.47466729 330.55042272 278.47193080 1.00000000]
[410.22275641 400.38571710 28.47466729 278.47193080 226.39343896 1.00000000]
[]
[]
[]
[]
[262.35174102 378.36030023 32.20889362 335.56143873 289.88983244 1.00000000]
[]
[]
[]
[227.49999296 227.64874887 55.48099457 58.59296864 32.55164924 1.00000000]
[227.49999296 227.64874887 55.48099457 32.55164924 6.51032985 1.00000000]
[227.49999296 227.64874887 55.48099457 6.51032985 340.46901045 1.00000000]
[227.49999296 227.64874887 55.48099457 340.46901045 314.42769106 1.00000000]
[227.49999296 227.64874887 55.48099457 314.42769106 288.38637166 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[337.49999796 200.01461919 30.52836670 235.02371410 186.68247606 1.00000000]
[337.49999796 200.01461919 30.52836670 186.68247606 138.34123803 1.00000000]
[337.49999796 200.01461919 30.52836670 138.34123803 90.00000000 1.00000000]
[337.49999796 200.01461919 30.52836670 90.00000000 41.65876197 1.00000000]
[337.49999796 200.01461919 30.52836670 41.65876197 353.31752394 1.00000000]
[337.49999796 200.01461919 30.52836670 353.31752394 304.97628590 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 29]
[6 26]
[7 25]
[8 24]
[11 21]
[12 20]
[33 158]
[34 157]
[35 156]
[36 155]
[42 150]
[43 149]
[44 148]
[45 147]
[49 146]
[50 145]
[51 144]
[52 143]
[53 142]
[55 140]
[56 139]
[57 138]
[58 137]
[60 135]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[93 102]
[94 101]
[159 171]
[160 170]
[161 169]
[162 168]
] def

init

% Start Annotations
107 147 12 1.00 0.60 0.67 omark 48 88 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
