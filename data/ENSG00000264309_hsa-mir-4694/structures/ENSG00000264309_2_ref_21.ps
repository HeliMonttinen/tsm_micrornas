%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCUCCAUAGCAUCCUUCAAAGUUGAUUUUUUUUAAUUUCCAAAUAUAUAGGUGUUAUCUUAUCAUUUGCCUCUAUUUCCUGAAAGGCAAUUUCUAAGAGAAAAAUAUUCCCUAUUAAGUGAGAGUUCCAGCAUAUGAAUUAGA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[300.00000000 125.00000000]
[300.00000000 150.00000000]
[300.00000000 175.00000000]
[300.00000000 200.00000000]
[300.00000000 225.00000000]
[278.34936523 237.50000000]
[300.00000000 250.00000000]
[300.00000000 275.00000000]
[300.00000000 300.00000000]
[277.21896362 310.29678345]
[259.39715576 327.82913208]
[248.72874451 350.43853760]
[246.52720642 375.34143066]
[222.92790222 383.59204102]
[199.32859802 391.84268188]
[175.72929382 400.09332275]
[152.13000488 408.34396362]
[128.53070068 416.59460449]
[104.93139648 424.84524536]
[81.26011658 416.80346680]
[58.40625381 426.93762207]
[48.47443771 449.88012695]
[56.72507477 473.47943115]
[78.78819275 485.23608398]
[102.97800446 478.92312622]
[116.48229218 457.88427734]
[140.08158875 449.63363647]
[163.68089294 441.38299561]
[187.28019714 433.13235474]
[210.87948608 424.88171387]
[234.47879028 416.63107300]
[258.07809448 408.38043213]
[275.31628418 426.48690796]
[297.74798584 437.52407837]
[322.61148071 440.13305664]
[346.84567261 433.99267578]
[367.46691895 419.85888672]
[381.93646240 399.47180176]
[388.47280884 375.34143066]
[386.27124023 350.43853760]
[375.60284424 327.82913208]
[357.78103638 310.29678345]
[335.00000000 300.00000000]
[335.00000000 275.00000000]
[335.00000000 250.00000000]
[335.00000000 225.00000000]
[335.00000000 200.00000000]
[335.00000000 175.00000000]
[335.00000000 150.00000000]
[335.00000000 125.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[460.00000000 125.00000000]
[460.00000000 150.00000000]
[460.00000000 175.00000000]
[449.02532959 197.46234131]
[460.00000000 219.92468262]
[460.00000000 244.92468262]
[460.00000000 269.92468262]
[437.80746460 281.43515015]
[421.79556274 300.63461304]
[414.45751953 324.53341675]
[416.93600464 349.41024780]
[428.84509277 371.39147949]
[448.33032227 387.05432129]
[443.39776611 411.56289673]
[438.46520996 436.07147217]
[433.53265381 460.58004761]
[428.60009766 485.08859253]
[423.66757202 509.59716797]
[401.08087158 520.31359863]
[387.03033447 540.99169922]
[385.38491821 565.93743896]
[396.59768677 588.28192139]
[385.40753174 610.63769531]
[374.21737671 632.99340820]
[354.34921265 648.16760254]
[354.10879517 673.16644287]
[342.91864014 695.52221680]
[331.72848511 717.87799072]
[308.68048096 727.56250000]
[284.88079834 719.90905762]
[261.08111572 712.25561523]
[237.28144836 704.60217285]
[214.80328369 693.65991211]
[195.50251770 709.54956055]
[201.92379761 733.71081543]
[226.56661987 737.92169189]
[250.36630249 745.57513428]
[274.16598511 753.22857666]
[297.96566772 760.88201904]
[311.04861450 782.18548584]
[334.84829712 789.83892822]
[357.89630127 780.15441895]
[369.08645630 757.79864502]
[363.02655029 733.54418945]
[374.21673584 711.18847656]
[385.40689087 688.83270264]
[405.27505493 673.65850830]
[405.51544189 648.65966797]
[416.70559692 626.30389404]
[427.89575195 603.94812012]
[452.50286865 599.53326416]
[471.48654175 583.26611328]
[479.61944580 559.62597656]
[474.66207886 535.12243652]
[457.97955322 516.50274658]
[462.91210938 491.99417114]
[486.60342407 484.01162720]
[467.84466553 467.48562622]
[472.77722168 442.97705078]
[477.70977783 418.46847534]
[482.64233398 393.95989990]
[506.66967773 387.05432129]
[526.15490723 371.39147949]
[538.06396484 349.41024780]
[540.54248047 324.53341675]
[533.20446777 300.63461304]
[517.19256592 281.43515015]
[495.00000000 269.92468262]
[495.00000000 244.92468262]
[495.00000000 219.92468262]
[505.97467041 197.46234131]
[495.00000000 175.00000000]
[495.00000000 150.00000000]
[495.00000000 125.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[317.50000000 369.06704109 71.24960467 255.78179526 235.57331653 1.00000000]
[317.50000000 369.06704109 71.24960467 235.57331653 215.36483779 1.00000000]
[317.50000000 369.06704109 71.24960467 215.36483779 195.15635905 1.00000000]
[317.50000000 369.06704109 71.24960467 195.15635905 174.94788032 1.00000000]
[]
[]
[]
[]
[]
[]
[82.80343993 451.12016690 34.35139098 310.10308689 267.42496937 1.00000000]
[82.80343993 451.12016690 34.35139098 267.42496937 224.74685185 1.00000000]
[82.80343993 451.12016690 34.35139098 224.74685185 182.06873434 1.00000000]
[82.80343993 451.12016690 34.35139098 182.06873434 139.39061682 1.00000000]
[82.80343993 451.12016690 34.35139098 139.39061682 96.71249930 1.00000000]
[82.80343993 451.12016690 34.35139098 96.71249930 54.03438179 1.00000000]
[82.80343993 451.12016690 34.35139098 54.03438179 11.35626427 1.00000000]
[]
[]
[]
[]
[]
[]
[317.50000000 369.06704109 71.24960467 146.51147084 126.30299210 1.00000000]
[317.50000000 369.06704109 71.24960467 126.30299210 106.09451337 1.00000000]
[317.50000000 369.06704109 71.24960467 106.09451337 85.88603463 1.00000000]
[317.50000000 369.06704109 71.24960467 85.88603463 65.67755589 1.00000000]
[317.50000000 369.06704109 71.24960467 65.67755589 45.46907716 1.00000000]
[317.50000000 369.06704109 71.24960467 45.46907716 25.26059842 1.00000000]
[317.50000000 369.06704109 71.24960467 25.26059842 5.05211968 1.00000000]
[317.50000000 369.06704109 71.24960467 5.05211968 344.84364095 1.00000000]
[317.50000000 369.06704109 71.24960467 344.84364095 324.63516221 1.00000000]
[317.50000000 369.06704109 71.24960467 324.63516221 304.42668347 1.00000000]
[317.50000000 369.06704109 71.24960467 304.42668347 284.21820474 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.49999956 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[477.49999956 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[]
[477.49999983 330.81436292 63.35458712 253.96508418 231.20659673 1.00000000]
[477.49999983 330.81436292 63.35458712 231.20659673 208.44810927 1.00000000]
[477.49999983 330.81436292 63.35458712 208.44810927 185.68962182 1.00000000]
[477.49999983 330.81436292 63.35458712 185.68962182 162.93113436 1.00000000]
[477.49999983 330.81436292 63.35458712 162.93113436 140.17264691 1.00000000]
[477.49999983 330.81436292 63.35458712 140.17264691 117.41415945 1.00000000]
[]
[]
[]
[]
[]
[432.08080951 556.49035871 47.64193249 259.82860048 229.40666412 1.00000000]
[432.08080951 556.49035871 47.64193249 229.40666412 198.98472777 1.00000000]
[432.08080951 556.49035871 47.64193249 198.98472777 168.56279141 1.00000000]
[432.08080951 556.49035871 47.64193249 168.56279141 138.14085506 1.00000000]
[]
[]
[379.81212694 660.91305906 28.47466729 258.66870376 206.59021183 1.00000000]
[379.81212694 660.91305906 28.47466729 206.59021183 154.51171991 1.00000000]
[]
[]
[333.28839599 753.85845940 36.01426010 267.51753559 226.89931974 1.00000000]
[]
[]
[]
[217.52349612 716.63102549 23.13159456 328.66644057 263.24654204 1.00000000]
[217.52349612 716.63102549 23.13159456 263.24654204 197.82664352 1.00000000]
[217.52349612 716.63102549 23.13159456 197.82664352 132.40674499 1.00000000]
[217.52349612 716.63102549 23.13159456 132.40674499 66.98684646 1.00000000]
[]
[]
[]
[333.28839599 753.85845940 36.01426010 168.75396730 128.13575144 1.00000000]
[333.28839599 753.85845940 36.01426010 128.13575144 87.51753559 1.00000000]
[333.28839599 753.85845940 36.01426010 87.51753559 46.89931974 1.00000000]
[333.28839599 753.85845940 36.01426010 46.89931974 6.28110388 1.00000000]
[333.28839599 753.85845940 36.01426010 6.28110388 325.66288803 1.00000000]
[]
[]
[379.81212694 660.91305906 28.47466729 78.66870371 26.59021179 1.00000000]
[379.81212694 660.91305906 28.47466729 26.59021179 334.51171995 1.00000000]
[]
[]
[432.08080951 556.49035871 47.64193249 95.03956866 64.61763230 1.00000000]
[432.08080951 556.49035871 47.64193249 64.61763230 34.19569595 1.00000000]
[432.08080951 556.49035871 47.64193249 34.19569595 3.77375959 1.00000000]
[432.08080951 556.49035871 47.64193249 3.77375959 333.35182324 1.00000000]
[432.08080951 556.49035871 47.64193249 333.35182324 302.92988688 1.00000000]
[]
[]
[]
[]
[]
[]
[477.49999983 330.81436292 63.35458712 85.34432791 62.58584045 1.00000000]
[477.49999983 330.81436292 63.35458712 62.58584045 39.82735300 1.00000000]
[477.49999983 330.81436292 63.35458712 39.82735300 17.06886554 1.00000000]
[477.49999983 330.81436292 63.35458712 17.06886554 354.31037809 1.00000000]
[477.49999983 330.81436292 63.35458712 354.31037809 331.55189063 1.00000000]
[477.49999983 330.81436292 63.35458712 331.55189063 308.79340318 1.00000000]
[477.49999983 330.81436292 63.35458712 308.79340318 286.03491573 1.00000000]
[]
[]
[477.49999956 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[477.49999956 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 60]
[10 59]
[11 58]
[12 57]
[13 56]
[14 55]
[16 54]
[17 53]
[18 52]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[65 140]
[66 139]
[67 138]
[68 137]
[70 135]
[71 134]
[72 133]
[78 126]
[79 125]
[80 124]
[81 123]
[82 121]
[83 120]
[87 115]
[88 114]
[89 113]
[91 111]
[92 110]
[93 109]
[94 104]
[95 103]
[96 102]
[97 101]
] def

init

% Start Annotations
92 112 12 1.00 0.60 0.67 omark 27 66 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
