%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCCUCCAUAGCAUCCUUCAAAGCUGAUUUUUUUCUUUUUGUAAAUUUCCAAAUACAUAGGUGUUAUCCUGUCCAUUUGACUCUAUUUUCUGAGAGAGGCAAAUGGAUAGGAUAACACCUAUGUAUUUGAAAAAGAAAAAUACUCCCAGUUAAGUGAGAGUUCCAGCAGAUGAAUUAGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[106.37222290 141.67350769]
[100.48242950 165.96980286]
[109.40727234 189.32247925]
[130.00000000 203.49780273]
[155.00000000 203.49780273]
[175.59272766 189.32247925]
[184.51756287 165.96980286]
[178.62777710 141.67350769]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[260.00000000 100.00000000]
[360.00000000 100.00000000]
[460.00000000 100.00000000]
[460.00000000 125.00000000]
[460.00000000 150.00000000]
[445.92852783 170.66383362]
[422.66693115 179.82334900]
[399.40530396 188.98287964]
[370.74786377 176.76716614]
[341.39041138 187.18893433]
[326.84994507 214.73974609]
[303.01974487 222.29765320]
[279.18954468 229.85554504]
[255.35935974 237.41343689]
[236.09490967 221.47979736]
[211.67840576 216.11003113]
[187.50645447 222.49096680]
[168.92156982 239.21229553]
[144.79757690 232.65235901]
[120.67357635 226.09243774]
[96.54957581 219.53251648]
[72.42557526 212.97259521]
[48.30157089 206.41267395]
[24.17757034 199.85275269]
[0.05356955 193.29283142]
[-24.07043076 186.73291016]
[-48.19443130 180.17298889]
[-72.31843567 173.61306763]
[-79.29099274 149.60508728]
[-96.09564209 131.09552002]
[-119.32029724 121.84267426]
[-144.24931335 123.72525787]
[-165.82098389 136.36103821]
[-179.65530396 157.18437195]
[-182.94328308 181.96722412]
[-175.01731873 205.67753601]
[-157.48672485 223.50106812]
[-133.91101074 231.81884766]
[-128.72448730 256.27493286]
[-123.53795624 280.73101807]
[-118.35143280 305.18710327]
[-113.16490173 329.64318848]
[-107.97837830 354.09927368]
[-102.79185486 378.55535889]
[-97.60532379 403.01141357]
[-92.41880035 427.46749878]
[-87.23226929 451.92358398]
[-82.04574585 476.37966919]
[-76.85922241 500.83575439]
[-71.67269135 525.29180908]
[-66.48616791 549.74792480]
[-61.29964066 574.20397949]
[-56.11311340 598.66009521]
[-50.92658615 623.11614990]
[-45.74006271 647.57226562]
[-40.55353546 672.02832031]
[-35.36700821 696.48443604]
[-30.18048286 720.94049072]
[-24.99395561 745.39654541]
[-19.80742836 769.85266113]
[-14.62090302 794.30871582]
[-9.43437672 818.76483154]
[-4.24784994 843.22088623]
[0.93867648 867.67700195]
[6.12520266 892.13305664]
[11.31172943 916.58917236]
[16.49825478 941.04522705]
[10.42242146 965.29565430]
[25.81837654 984.99249268]
[31.00490379 1009.44854736]
[36.19142914 1033.90466309]
[41.37795639 1058.36071777]
[35.30212402 1082.61120605]
[50.69807816 1102.30798340]
[55.88460541 1126.76403809]
[51.81487656 1151.43066406]
[69.88977814 1168.70190430]
[94.34585571 1163.51538086]
[103.85453796 1140.39428711]
[90.12311554 1119.50292969]
[84.93659210 1095.04687500]
[91.01242828 1070.79638672]
[75.61647034 1051.09960938]
[70.42994690 1026.64355469]
[65.24341583 1002.18743896]
[60.05689240 977.73138428]
[66.13272858 953.48089600]
[50.73677063 933.78411865]
[45.55024338 909.32800293]
[40.36371613 884.87194824]
[35.17719269 860.41583252]
[29.99066544 835.95977783]
[24.80413818 811.50366211]
[19.61761284 787.04760742]
[14.43108559 762.59149170]
[9.24455929 738.13543701]
[4.05803299 713.67938232]
[-1.12849355 689.22326660]
[-6.31502008 664.76721191]
[-11.50154686 640.31109619]
[-16.68807220 615.85504150]
[-21.87459946 591.39892578]
[-27.06112480 566.94287109]
[-32.24765015 542.48675537]
[-37.43417740 518.03070068]
[-42.62070465 493.57461548]
[-47.80723190 469.11853027]
[-52.99375916 444.66244507]
[-58.18028259 420.20635986]
[-63.36680984 395.75030518]
[-68.55333710 371.29421997]
[-73.73986053 346.83813477]
[-78.92639160 322.38204956]
[-84.11291504 297.92596436]
[-89.29944611 273.46987915]
[-94.48596954 249.01379395]
[-99.67249298 224.55772400]
[-81.50232697 207.38667297]
[-57.37832260 213.94659424]
[-33.25432205 220.50651550]
[-9.13032150 227.06643677]
[14.99368000 233.62635803]
[39.11767960 240.18627930]
[63.24168015 246.74620056]
[87.36568451 253.30612183]
[111.48968506 259.86605835]
[135.61367798 266.42596436]
[159.73768616 272.98590088]
[167.29557800 296.81607056]
[184.90762329 314.55914307]
[179.53784180 338.97564697]
[174.16807556 363.39215088]
[168.79830933 387.80865479]
[153.25508118 407.38946533]
[159.14891052 431.68478394]
[153.77912903 456.10128784]
[134.50584412 472.02426147]
[131.13047791 496.79534912]
[145.44078064 517.29449463]
[169.85728455 522.66424561]
[191.44770813 510.06051636]
[198.77661133 486.15890503]
[187.96223450 463.61895752]
[193.33200073 439.20245361]
[208.87522888 419.62164307]
[202.98141479 395.32632446]
[208.35118103 370.90982056]
[213.72094727 346.49331665]
[219.09071350 322.07681274]
[242.52188110 313.36013794]
[259.38049316 294.89971924]
[265.94039917 270.77569580]
[289.77059937 263.21780396]
[313.60079956 255.65992737]
[337.43099976 248.10202026]
[358.78390503 261.10409546]
[383.75848389 259.97705078]
[403.85348511 245.10455322]
[412.22863770 221.54914856]
[435.49023438 212.38963318]
[458.75186157 203.23010254]
[483.13436890 208.75227356]
[504.12237549 195.16906738]
[509.07147217 170.66383362]
[495.00000000 150.00000000]
[495.00000000 125.00000000]
[495.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[142.50000000 163.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[142.50000000 163.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[142.50000000 163.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[142.50000000 163.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[142.50000000 163.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[142.50000000 163.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[142.50000000 163.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[142.50000000 163.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[142.50000000 163.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[477.50000061 177.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[]
[]
[369.42348980 219.59634831 42.84965638 314.40275111 271.77113756 1.00000000]
[369.42348980 219.59634831 42.84965638 271.77113756 229.13952401 1.00000000]
[369.42348980 219.59634831 42.84965638 229.13952401 186.50791046 1.00000000]
[]
[]
[]
[212.78482560 269.27527411 53.17675944 323.18963189 295.99871205 1.00000000]
[212.78482560 269.27527411 53.17675944 295.99871205 268.80779221 1.00000000]
[212.78482560 269.27527411 53.17675944 268.80779221 241.61687237 1.00000000]
[212.78482560 269.27527411 53.17675944 241.61687237 214.42595253 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-127.71431754 176.68500111 55.48099457 356.82596063 330.78464123 1.00000000]
[-127.71431754 176.68500111 55.48099457 330.78464123 304.74332184 1.00000000]
[-127.71431754 176.68500111 55.48099457 304.74332184 278.70200244 1.00000000]
[-127.71431754 176.68500111 55.48099457 278.70200244 252.66068305 1.00000000]
[-127.71431754 176.68500111 55.48099457 252.66068305 226.61936365 1.00000000]
[-127.71431754 176.68500111 55.48099457 226.61936365 200.57804426 1.00000000]
[-127.71431754 176.68500111 55.48099457 200.57804426 174.53672486 1.00000000]
[-127.71431754 176.68500111 55.48099457 174.53672486 148.49540546 1.00000000]
[-127.71431754 176.68500111 55.48099457 148.49540546 122.45408607 1.00000000]
[-127.71431754 176.68500111 55.48099457 122.45408607 96.41276667 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[38.27757360 959.38829429 28.47466729 220.10488691 168.02639499 1.00000000]
[38.27757360 959.38829429 28.47466729 168.02639499 115.94790306 1.00000000]
[]
[]
[]
[63.15727406 1076.70380452 28.47466729 220.10488687 168.02639494 1.00000000]
[63.15727406 1076.70380452 28.47466729 168.02639494 115.94790301 1.00000000]
[]
[77.20665652 1142.95100341 26.77024824 217.20442791 161.53321471 1.00000000]
[77.20665652 1142.95100341 26.77024824 161.53321471 105.86200151 1.00000000]
[77.20665652 1142.95100341 26.77024824 105.86200151 50.19078832 1.00000000]
[77.20665652 1142.95100341 26.77024824 50.19078832 354.51957512 1.00000000]
[77.20665652 1142.95100341 26.77024824 354.51957512 298.84836192 1.00000000]
[]
[63.15727406 1076.70380452 28.47466729 40.10488682 348.02639489 1.00000000]
[63.15727406 1076.70380452 28.47466729 348.02639489 295.94790306 1.00000000]
[]
[]
[]
[38.27757360 959.38829429 28.47466729 40.10488687 348.02639494 1.00000000]
[38.27757360 959.38829429 28.47466729 348.02639494 295.94790311 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-127.71431754 176.68500111 55.48099457 59.64002335 33.59870395 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[212.78482560 269.27527411 53.17675944 175.99871205 148.80779221 1.00000000]
[212.78482560 269.27527411 53.17675944 148.80779221 121.61687237 1.00000000]
[]
[]
[]
[181.06515815 413.50556018 28.47466729 244.48174403 192.40325211 1.00000000]
[181.06515815 413.50556018 28.47466729 192.40325211 140.32476018 1.00000000]
[]
[164.52156401 488.72978280 34.35139098 251.77666339 209.09854588 1.00000000]
[164.52156401 488.72978280 34.35139098 209.09854588 166.42042836 1.00000000]
[164.52156401 488.72978280 34.35139098 166.42042836 123.74231084 1.00000000]
[164.52156401 488.72978280 34.35139098 123.74231084 81.06419333 1.00000000]
[164.52156401 488.72978280 34.35139098 81.06419333 38.38607581 1.00000000]
[164.52156401 488.72978280 34.35139098 38.38607581 355.70795829 1.00000000]
[164.52156401 488.72978280 34.35139098 355.70795829 313.02984077 1.00000000]
[]
[181.06515815 413.50556018 28.47466729 64.48174399 12.40325206 1.00000000]
[181.06515815 413.50556018 28.47466729 12.40325206 320.32476023 1.00000000]
[]
[]
[]
[212.78482560 269.27527411 53.17675944 83.18963189 55.99871205 1.00000000]
[212.78482560 269.27527411 53.17675944 55.99871205 28.80779221 1.00000000]
[212.78482560 269.27527411 53.17675944 28.80779221 1.61687237 1.00000000]
[]
[]
[]
[369.42348980 219.59634831 42.84965638 138.29859380 104.37696229 1.00000000]
[369.42348980 219.59634831 42.84965638 104.37696229 70.45533078 1.00000000]
[369.42348980 219.59634831 42.84965638 70.45533078 36.53369927 1.00000000]
[369.42348980 219.59634831 42.84965638 36.53369927 2.61206776 1.00000000]
[]
[]
[477.50000061 177.04002271 32.20889362 125.59691730 79.92531101 1.00000000]
[477.50000061 177.04002271 32.20889362 79.92531101 34.25370472 1.00000000]
[477.50000061 177.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[477.50000061 177.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[16 180]
[17 179]
[18 178]
[19 174]
[20 173]
[21 172]
[24 168]
[25 167]
[26 166]
[27 165]
[31 141]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[40 132]
[41 131]
[51 130]
[52 129]
[53 128]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[82 99]
[83 98]
[84 97]
[85 96]
[87 94]
[88 93]
[143 162]
[144 161]
[145 160]
[146 159]
[148 157]
[149 156]
] def

init

% Start Annotations
107 146 12 1.00 0.60 0.67 omark 27 75 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
