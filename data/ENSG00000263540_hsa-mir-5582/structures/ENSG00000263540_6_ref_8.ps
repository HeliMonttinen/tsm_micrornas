%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCUAAAAUACCUUUGGUCCAUGAUGAAGAAGAGUAAUAAAUCAACUUCCUAGGCACACUUAAAGUUCUAGUGACAWMUUUAARAGAGAAGUUGAUUURUGAUUGUUAGGUUGCCUAGGAAGUUGACUUAUGGASGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[150.00000000 250.00000000]
[137.17903137 271.46212769]
[144.69174194 295.30661011]
[167.50000000 305.54299927]
[190.30825806 295.30661011]
[197.82096863 271.46212769]
[185.00000000 250.00000000]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[635.00000000 125.00000000]
[635.00000000 150.00000000]
[635.00000000 175.00000000]
[624.02532959 197.46234131]
[635.00000000 219.92468262]
[635.00000000 244.92468262]
[635.00000000 269.92468262]
[635.00000000 294.92468262]
[635.00000000 319.92468262]
[635.00000000 344.92468262]
[635.00000000 369.92468262]
[635.00000000 394.92468262]
[635.00000000 419.92468262]
[635.00000000 444.92468262]
[635.00000000 469.92468262]
[635.00000000 494.92468262]
[635.00000000 519.92468262]
[635.00000000 544.92468262]
[635.00000000 569.92468262]
[613.34936523 582.42468262]
[635.00000000 594.92468262]
[635.00000000 619.92468262]
[635.00000000 644.92468262]
[635.00000000 669.92468262]
[635.00000000 694.92468262]
[635.00000000 719.92468262]
[615.90136719 736.05670166]
[608.75732422 760.01422119]
[615.90136719 783.97174072]
[635.00000000 800.10375977]
[635.00000000 825.10375977]
[612.48742676 835.97509766]
[595.49627686 854.31353760]
[586.37109375 877.58868408]
[586.37109375 902.58868408]
[595.49627686 925.86376953]
[612.48742676 944.20227051]
[635.00000000 955.07354736]
[635.00000000 980.07354736]
[618.72460938 999.05017090]
[618.72460938 1024.05017090]
[635.00000000 1043.02673340]
[635.00000000 1068.02673340]
[635.00000000 1093.02673340]
[619.59667969 1112.71777344]
[621.62066650 1137.63574219]
[640.00000000 1154.58264160]
[665.00000000 1154.58264160]
[683.37933350 1137.63574219]
[685.40332031 1112.71777344]
[670.00000000 1093.02673340]
[670.00000000 1068.02673340]
[670.00000000 1043.02673340]
[686.27539062 1024.05017090]
[686.27539062 999.05017090]
[670.00000000 980.07354736]
[670.00000000 955.07354736]
[692.51257324 944.20227051]
[709.50372314 925.86376953]
[718.62890625 902.58868408]
[718.62890625 877.58868408]
[709.50372314 854.31353760]
[692.51257324 835.97509766]
[670.00000000 825.10375977]
[670.00000000 800.10375977]
[689.09863281 783.97174072]
[696.24267578 760.01422119]
[689.09863281 736.05670166]
[670.00000000 719.92468262]
[670.00000000 694.92468262]
[670.00000000 669.92468262]
[670.00000000 644.92468262]
[670.00000000 619.92468262]
[670.00000000 594.92468262]
[670.00000000 569.92468262]
[670.00000000 544.92468262]
[670.00000000 519.92468262]
[670.00000000 494.92468262]
[670.00000000 469.92468262]
[670.00000000 444.92468262]
[670.00000000 419.92468262]
[670.00000000 394.92468262]
[670.00000000 369.92468262]
[670.00000000 344.92468262]
[670.00000000 319.92468262]
[670.00000000 294.92468262]
[670.00000000 269.92468262]
[670.00000000 244.92468262]
[670.00000000 219.92468262]
[680.97467041 197.46234131]
[670.00000000 175.00000000]
[670.00000000 150.00000000]
[670.00000000 125.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000000 275.01461919 30.52836670 235.02371410 186.68247606 1.00000000]
[167.50000000 275.01461919 30.52836670 186.68247606 138.34123803 1.00000000]
[167.50000000 275.01461919 30.52836670 138.34123803 90.00000000 1.00000000]
[167.50000000 275.01461919 30.52836670 90.00000000 41.65876197 1.00000000]
[167.50000000 275.01461919 30.52836670 41.65876197 353.31752394 1.00000000]
[167.50000000 275.01461919 30.52836670 353.31752394 304.97628590 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[652.49999984 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[652.49999984 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[652.50000046 760.01422653 43.74267810 246.41763577 213.20881786 1.00000000]
[652.50000046 760.01422653 43.74267810 213.20881786 180.00000000 1.00000000]
[652.50000046 760.01422653 43.74267810 180.00000000 146.79118204 1.00000000]
[652.50000046 760.01422653 43.74267810 146.79118204 113.58236413 1.00000000]
[]
[652.50000023 890.08865648 67.29996135 254.92816594 233.52011874 1.00000000]
[652.50000023 890.08865648 67.29996135 233.52011874 212.11207146 1.00000000]
[652.50000023 890.08865648 67.29996135 212.11207146 190.70402411 1.00000000]
[652.50000023 890.08865648 67.29996135 190.70402411 169.29597669 1.00000000]
[652.50000023 890.08865648 67.29996135 169.29597669 147.88792922 1.00000000]
[652.50000023 890.08865648 67.29996135 147.88792922 126.47988171 1.00000000]
[652.50000023 890.08865648 67.29996135 126.47988171 105.07183420 1.00000000]
[]
[652.50000067 1011.55014627 36.01426010 240.92732373 200.30910788 1.00000000]
[652.50000067 1011.55014627 36.01426010 200.30910788 159.69089203 1.00000000]
[652.50000067 1011.55014627 36.01426010 159.69089203 119.07267617 1.00000000]
[]
[]
[652.50000076 1122.58632356 34.35139098 239.37341126 196.69529375 1.00000000]
[652.50000076 1122.58632356 34.35139098 196.69529375 154.01717623 1.00000000]
[652.50000076 1122.58632356 34.35139098 154.01717623 111.33905871 1.00000000]
[652.50000076 1122.58632356 34.35139098 111.33905871 68.66094119 1.00000000]
[652.50000076 1122.58632356 34.35139098 68.66094119 25.98282368 1.00000000]
[652.50000076 1122.58632356 34.35139098 25.98282368 343.30470616 1.00000000]
[652.50000076 1122.58632356 34.35139098 343.30470616 300.62658864 1.00000000]
[]
[]
[652.50000067 1011.55014627 36.01426010 60.92732373 20.30910788 1.00000000]
[652.50000067 1011.55014627 36.01426010 20.30910788 339.69089203 1.00000000]
[652.50000067 1011.55014627 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[652.50000023 890.08865648 67.29996135 74.92816515 53.52011773 1.00000000]
[652.50000023 890.08865648 67.29996135 53.52011773 32.11207038 1.00000000]
[652.50000023 890.08865648 67.29996135 32.11207038 10.70402310 1.00000000]
[652.50000023 890.08865648 67.29996135 10.70402310 349.29597590 1.00000000]
[652.50000023 890.08865648 67.29996135 349.29597590 327.88792875 1.00000000]
[652.50000023 890.08865648 67.29996135 327.88792875 306.47988163 1.00000000]
[652.50000023 890.08865648 67.29996135 306.47988163 285.07183452 1.00000000]
[]
[652.50000046 760.01422653 43.74267810 66.41763577 33.20881786 1.00000000]
[652.50000046 760.01422653 43.74267810 33.20881786 360.00000000 1.00000000]
[652.50000046 760.01422653 43.74267810 360.00000000 326.79118204 1.00000000]
[652.50000046 760.01422653 43.74267810 326.79118204 293.58236413 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[652.49999984 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[652.49999984 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[39 133]
[40 132]
[41 131]
[42 130]
[44 128]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[69 104]
[70 103]
[77 96]
[78 95]
[81 92]
[82 91]
[83 90]
] def

init

% Start Annotations
78 109 12 1.00 0.60 0.67 omark 32 69 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
