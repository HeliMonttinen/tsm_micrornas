%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUUGUGCAUCUGAAAGAAUAUGUAGAUGGGUGGCAUCUUCAACAACCCCAGGAUCACAGACGUUUAAAUUUCACCCCUUCUACUGCUGUAAGGCACAGCAGAAGGAGUGUAAUUUAAACGUCUGUGAUCCUGGCUGGGCGUGGUGACUCUUGCCUGUAAUCCCAACACUUAGGGAGCCCAAG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[189.02532959 122.46234131]
[200.00000000 144.92468262]
[200.00000000 169.92468262]
[200.00000000 194.92468262]
[200.00000000 219.92468262]
[200.00000000 244.92468262]
[189.02532959 267.38702393]
[200.00000000 289.84936523]
[184.59664917 309.54040527]
[186.62066650 334.45831299]
[205.00000000 351.40530396]
[230.00000000 351.40530396]
[248.37933350 334.45831299]
[250.40335083 309.54040527]
[235.00000000 289.84936523]
[245.97467041 267.38702393]
[235.00000000 244.92468262]
[235.00000000 219.92468262]
[235.00000000 194.92468262]
[235.00000000 169.92468262]
[235.00000000 144.92468262]
[245.97467041 122.46234131]
[235.00000000 100.00000000]
[1710.00000000 100.00000000]
[1710.00000000 125.00000000]
[1710.00000000 150.00000000]
[1710.00000000 175.00000000]
[1710.00000000 200.00000000]
[1671.55090332 235.42053223]
[1646.63476562 233.37402344]
[1621.71875000 231.32751465]
[1596.80261230 229.28100586]
[1580.02148438 203.12802124]
[1551.25817871 191.36953735]
[1520.96179199 198.27709961]
[1500.13806152 221.34136963]
[1475.22204590 219.29486084]
[1450.30590820 217.24835205]
[1387.56396484 212.09498596]
[1362.64782715 210.04847717]
[1345.06726074 192.27427673]
[1320.15112305 190.22776794]
[1299.90588379 204.89509583]
[1274.98986816 202.84858704]
[1212.24792480 197.69522095]
[1187.33178711 195.64871216]
[1162.41577148 193.60220337]
[1137.49963379 191.55567932]
[1112.58349609 189.50917053]
[1087.66748047 187.46266174]
[1062.75134277 185.41615295]
[1037.83520508 183.36964417]
[1012.91912842 181.32313538]
[988.00305176 179.27662659]
[963.08697510 177.23011780]
[938.17083740 175.18360901]
[913.25476074 173.13710022]
[888.33868408 171.09059143]
[863.42254639 169.04408264]
[838.50646973 166.99757385]
[813.59039307 164.95106506]
[788.67431641 162.90455627]
[763.75817871 160.85804749]
[738.84210205 158.81153870]
[713.92602539 156.76502991]
[689.00988770 154.71852112]
[664.09381104 152.67201233]
[642.60522461 139.89540100]
[619.31988525 148.99446106]
[594.40380859 146.94795227]
[569.48773193 144.90144348]
[547.99914551 132.12483215]
[524.71380615 141.22389221]
[499.79772949 139.17738342]
[474.88162231 137.13087463]
[449.96554565 135.08436584]
[425.04943848 133.03785706]
[400.13333130 130.99134827]
[380.69076538 115.27556610]
[355.86264038 118.20204163]
[340.60693359 138.00769043]
[344.11459351 162.76039124]
[333.08160400 185.19413757]
[322.04861450 207.62788391]
[311.01562500 230.06164551]
[299.98266602 252.49539185]
[279.00610352 266.09628296]
[275.22460938 290.80865479]
[291.17407227 310.05999756]
[316.15856934 310.94009399]
[333.42315674 292.85876465]
[331.38989258 267.94155884]
[342.42288208 245.50782776]
[353.45587158 223.07406616]
[364.48886108 200.64031982]
[375.52185059 178.20657349]
[397.26821899 165.87388611]
[422.18432617 167.92039490]
[447.10043335 169.96690369]
[472.01651001 172.01341248]
[496.93261719 174.05992126]
[521.84869385 176.10643005]
[543.33728027 188.88304138]
[566.62261963 179.78398132]
[591.53869629 181.83049011]
[616.45477295 183.87699890]
[637.94335938 196.65361023]
[661.22869873 187.55455017]
[686.14477539 189.60105896]
[711.06091309 191.64756775]
[735.97698975 193.69407654]
[760.89306641 195.74058533]
[785.80920410 197.78709412]
[810.72528076 199.83360291]
[835.64135742 201.88011169]
[860.55743408 203.92662048]
[885.47357178 205.97312927]
[910.38964844 208.01963806]
[935.30572510 210.06614685]
[960.22186279 212.11265564]
[985.13793945 214.15916443]
[1010.05401611 216.20567322]
[1034.97009277 218.25218201]
[1059.88623047 220.29869080]
[1084.80236816 222.34519958]
[1109.71838379 224.39170837]
[1134.63452148 226.43821716]
[1159.55065918 228.48472595]
[1184.46667480 230.53123474]
[1209.38281250 232.57774353]
[1226.96337891 250.35194397]
[1251.87951660 252.39845276]
[1272.12475586 237.73112488]
[1297.04077148 239.77763367]
[1314.62145996 257.55181885]
[1339.53747559 259.59832764]
[1359.78271484 244.93099976]
[1384.69885254 246.97750854]
[1402.27941895 264.75170898]
[1427.19555664 266.79821777]
[1447.44079590 252.13088989]
[1472.35693359 254.17739868]
[1497.27294922 256.22390747]
[1509.46130371 278.05151367]
[1530.48522949 291.57897949]
[1555.40136719 293.62548828]
[1578.35083008 283.70983887]
[1593.93750000 264.16354370]
[1618.85363770 266.21005249]
[1643.76965332 268.25656128]
[1668.68579102 270.30307007]
[1682.30456543 297.30511475]
[1707.33825684 314.27255249]
[1737.46423340 316.91995239]
[1765.07348633 304.57864380]
[1783.19287109 280.36566162]
[1787.24609375 250.39645386]
[1810.12744141 240.32460022]
[1833.00878906 230.25276184]
[1855.89025879 220.18090820]
[1878.65539551 230.51277161]
[1903.26550293 226.11509705]
[1921.04357910 208.53840637]
[1925.72143555 183.97993469]
[1915.64953613 161.09854126]
[1894.37927246 147.96179199]
[1869.41003418 149.20146179]
[1849.54553223 164.38047791]
[1841.78967285 188.14697266]
[1818.90820312 198.21881104]
[1796.02685547 208.29066467]
[1773.14550781 218.36250305]
[1745.00000000 200.00000000]
[1745.00000000 175.00000000]
[1745.00000000 150.00000000]
[1745.00000000 125.00000000]
[1745.00000000 100.00000000]
[1770.00000000 100.00000000]
[1795.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[217.49999978 122.46233914 28.47466719 232.07849200 180.00000000 1.00000000]
[217.49999978 122.46233914 28.47466719 180.00000000 127.92150795 1.00000000]
[]
[]
[]
[]
[217.49999956 267.38701758 28.47466685 232.07849295 180.00000000 1.00000000]
[217.49999956 267.38701758 28.47466685 180.00000000 127.92150757 1.00000000]
[217.50000009 319.40892439 34.35139098 239.37341113 196.69529370 1.00000000]
[217.50000009 319.40892439 34.35139098 196.69529370 154.01717618 1.00000000]
[217.50000009 319.40892439 34.35139098 154.01717618 111.33905866 1.00000000]
[217.50000009 319.40892439 34.35139098 111.33905866 68.66094115 1.00000000]
[217.50000009 319.40892439 34.35139098 68.66094115 25.98282363 1.00000000]
[217.50000009 319.40892439 34.35139098 25.98282363 343.30470611 1.00000000]
[217.50000009 319.40892439 34.35139098 343.30470611 300.62658851 1.00000000]
[217.49999956 267.38701758 28.47466685 52.07849059 360.00000000 1.00000000]
[217.49999956 267.38701758 28.47466685 360.00000000 307.92150836 1.00000000]
[]
[]
[]
[]
[217.49999978 122.46233914 28.47466719 52.07849163 360.00000000 1.00000000]
[217.49999978 122.46233914 28.47466719 360.00000000 307.92150807 1.00000000]
[]
[]
[]
[]
[]
[1727.50000184 257.57490591 60.17574088 253.09325287 201.60225468 1.00000000]
[]
[]
[]
[1547.03779024 242.75245661 51.55595110 344.85292765 309.77421760 1.00000000]
[1547.03779024 242.75245661 51.55595110 309.77421760 274.69550755 1.00000000]
[1547.03779024 242.75245661 51.55595110 274.69550755 239.61679749 1.00000000]
[1547.03779024 242.75245661 51.55595110 239.61679749 204.53808744 1.00000000]
[]
[]
[1417.50237964 232.11293248 36.01426008 335.62283131 213.76818378 1.00000000]
[]
[1329.84434899 224.91305000 36.01426010 335.62283133 295.00461547 1.00000000]
[1329.84434899 224.91305000 36.01426010 295.00461547 254.38639962 1.00000000]
[1329.84434899 224.91305000 36.01426010 254.38639962 213.76818377 1.00000000]
[]
[1242.18631834 217.71316753 36.01426008 335.62283131 213.76818378 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[640.27430483 168.27450543 28.47466729 326.77399945 274.69550752 1.00000000]
[640.27430483 168.27450543 28.47466729 274.69550752 222.61701560 1.00000000]
[]
[]
[545.66821206 160.50393681 28.47466729 326.77399940 274.69550748 1.00000000]
[545.66821206 160.50393681 28.47466729 274.69550748 222.61701555 1.00000000]
[]
[]
[]
[]
[]
[371.75151360 146.21911025 32.20889362 331.78501531 286.11340902 1.00000000]
[371.75151360 146.21911025 32.20889362 286.11340902 240.44180273 1.00000000]
[371.75151360 146.21911025 32.20889362 240.44180273 194.77019644 1.00000000]
[371.75151360 146.21911025 32.20889362 194.77019644 149.09859015 1.00000000]
[]
[]
[]
[]
[304.64684162 282.66535286 30.52836670 261.21181211 212.87057408 1.00000000]
[304.64684162 282.66535286 30.52836670 212.87057408 164.52933605 1.00000000]
[304.64684162 282.66535286 30.52836670 164.52933605 116.18809802 1.00000000]
[304.64684162 282.66535286 30.52836670 116.18809802 67.84685999 1.00000000]
[304.64684162 282.66535286 30.52836670 67.84685999 19.50562195 1.00000000]
[304.64684162 282.66535286 30.52836670 19.50562195 331.16438392 1.00000000]
[]
[]
[]
[]
[371.75151360 146.21911025 32.20889362 83.27760588 37.60599959 1.00000000]
[]
[]
[]
[]
[]
[545.66821206 160.50393681 28.47466729 146.77399935 94.69550743 1.00000000]
[545.66821206 160.50393681 28.47466729 94.69550743 42.61701560 1.00000000]
[]
[]
[640.27430483 168.27450543 28.47466729 146.77399940 94.69550748 1.00000000]
[640.27430483 168.27450543 28.47466729 94.69550748 42.61701564 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1242.18631834 217.71316753 36.01426008 155.62283131 115.00461544 1.00000000]
[1242.18631834 217.71316753 36.01426008 115.00461544 74.38639956 1.00000000]
[1242.18631834 217.71316753 36.01426008 74.38639956 33.76818378 1.00000000]
[]
[1329.84434899 224.91305000 36.01426010 155.62283133 115.00461547 1.00000000]
[1329.84434899 224.91305000 36.01426010 115.00461547 74.38639962 1.00000000]
[1329.84434899 224.91305000 36.01426010 74.38639962 33.76818377 1.00000000]
[]
[1417.50237964 232.11293248 36.01426008 155.62283131 115.00461544 1.00000000]
[1417.50237964 232.11293248 36.01426008 115.00461544 74.38639956 1.00000000]
[1417.50237964 232.11293248 36.01426008 74.38639956 33.76818378 1.00000000]
[]
[]
[1547.03779024 242.75245661 51.55595110 164.85292765 136.78995961 1.00000000]
[1547.03779024 242.75245661 51.55595110 136.78995961 108.72699157 1.00000000]
[1547.03779024 242.75245661 51.55595110 108.72699157 80.66402352 1.00000000]
[1547.03779024 242.75245661 51.55595110 80.66402352 52.60105548 1.00000000]
[1547.03779024 242.75245661 51.55595110 52.60105548 24.53808744 1.00000000]
[]
[]
[]
[1727.50000184 257.57490591 60.17574088 167.78876041 138.68209825 1.00000000]
[1727.50000184 257.57490591 60.17574088 138.68209825 109.57543609 1.00000000]
[1727.50000184 257.57490591 60.17574088 109.57543609 80.46877392 1.00000000]
[1727.50000184 257.57490591 60.17574088 80.46877392 51.36211176 1.00000000]
[1727.50000184 257.57490591 60.17574088 51.36211176 22.25544960 1.00000000]
[1727.50000184 257.57490591 60.17574088 22.25544960 353.14878743 1.00000000]
[]
[]
[]
[1883.88821384 188.73651188 42.10271758 131.68177541 97.13961205 1.00000000]
[1883.88821384 188.73651188 42.10271758 97.13961205 62.59744870 1.00000000]
[1883.88821384 188.73651188 42.10271758 62.59744870 28.05528534 1.00000000]
[1883.88821384 188.73651188 42.10271758 28.05528534 353.51312198 1.00000000]
[1883.88821384 188.73651188 42.10271758 353.51312198 318.97095862 1.00000000]
[1883.88821384 188.73651188 42.10271758 318.97095862 284.42879526 1.00000000]
[1883.88821384 188.73651188 42.10271758 284.42879526 249.88663190 1.00000000]
[1883.88821384 188.73651188 42.10271758 249.88663190 215.34446855 1.00000000]
[1883.88821384 188.73651188 42.10271758 215.34446855 180.80230519 1.00000000]
[]
[]
[]
[1727.50000184 257.57490591 60.17574088 319.33529317 286.90674713 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 28]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[13 20]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 156]
[35 155]
[36 154]
[37 153]
[41 148]
[42 147]
[43 146]
[44 143]
[45 142]
[48 139]
[49 138]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[74 111]
[75 110]
[76 109]
[78 107]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[162 177]
[163 176]
[164 175]
[165 174]
] def

init

% Start Annotations
54 88 12 1.00 0.60 0.67 omark 97 158 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
