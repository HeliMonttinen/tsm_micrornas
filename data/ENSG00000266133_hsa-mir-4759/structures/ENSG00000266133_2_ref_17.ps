%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUAGACUAAUGUGACACAGGUAGAAAGUACUUUAGCAAGAAUUGAGCUUGGAUGUGUCUAAUUCUAACAUCUAGUCCUAAGUACUAAGCCAAUUUCUCAUACACCUAGUAGCCUAGGUCAAUGAUUAGGAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[135.92854309 220.66383362]
[140.87762451 245.16906738]
[161.86564636 258.75225830]
[186.24812317 253.23010254]
[209.50975037 262.38961792]
[221.20382690 284.48596191]
[244.46545410 293.64550781]
[268.08551025 285.45449829]
[291.34713745 294.61401367]
[314.60876465 303.77352905]
[337.87039185 312.93304443]
[361.13201904 322.09259033]
[384.39364624 331.25210571]
[389.29934692 355.76605225]
[371.35394287 373.17187500]
[353.40856934 390.57772827]
[335.46316528 407.98355103]
[311.13095093 413.72311401]
[299.24560547 435.71716309]
[307.77761841 459.21618652]
[331.00531006 468.46139526]
[353.35186768 457.25283813]
[359.83132935 433.10708618]
[377.77673340 415.70126343]
[395.72210693 398.29544067]
[413.66751099 380.88961792]
[438.02032471 386.54116821]
[462.26440430 380.43997192]
[481.04125977 363.93450928]
[490.20077515 340.67288208]
[487.71850586 315.79641724]
[507.28170776 300.23104858]
[526.84490967 284.66564941]
[546.40808105 269.10025024]
[571.30737305 271.34204102]
[592.26422119 257.71084595]
[600.30932617 234.04067993]
[591.99945068 210.46217346]
[570.89111328 197.06671143]
[546.01855469 199.58743286]
[528.02691650 216.94548035]
[524.61651611 241.71177673]
[505.05334473 257.27716064]
[485.49014282 272.84255981]
[465.92697144 288.40795898]
[442.24438477 280.39944458]
[417.51947021 284.09790039]
[397.21697998 298.68582153]
[373.95535278 289.52630615]
[350.69372559 280.36679077]
[327.43209839 271.20724487]
[304.17047119 262.04772949]
[280.90884399 252.88821411]
[269.21478271 230.79187012]
[245.95314026 221.63233948]
[222.33308411 229.82334900]
[199.07145691 220.66383362]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[260.00000000 100.00000000]
[335.00000000 100.00000000]
[410.00000000 100.00000000]
[485.00000000 100.00000000]
[560.00000000 100.00000000]
[635.00000000 100.00000000]
[710.00000000 100.00000000]
[785.00000000 100.00000000]
[785.00000000 125.00000000]
[785.00000000 150.00000000]
[785.00000000 175.00000000]
[785.00000000 200.00000000]
[785.00000000 225.00000000]
[761.41131592 233.28092957]
[741.04162598 247.77494812]
[725.48681641 267.34652710]
[715.96539307 290.46240234]
[713.22338867 315.31158447]
[717.47558594 339.94729614]
[728.38891602 362.43951416]
[745.10827637 381.02615356]
[766.32385254 394.25106812]
[790.37359619 401.07815552]
[815.37341309 400.97256470]
[839.36462402 393.94256592]
[860.46777344 380.53894043]
[877.02954102 361.81176758]
[887.75244141 339.22814941]
[891.79638672 314.55740356]
[888.84460449 289.73226929]
[911.29058838 278.72409058]
[933.73651123 267.71594238]
[956.18243408 256.70776367]
[980.38684082 262.96450806]
[1002.83276367 251.95635986]
[1012.70422363 228.98779297]
[1035.15014648 217.97962952]
[1057.59606934 206.97146606]
[1080.04199219 195.96330261]
[1102.48803711 184.95512390]
[1124.93395996 173.94696045]
[1149.84692383 171.86271667]
[1162.17517090 150.11381531]
[1151.16699219 127.66787720]
[1126.42285156 124.10040283]
[1109.52246094 142.52264404]
[1087.07653809 153.53080750]
[1064.63061523 164.53897095]
[1042.18469238 175.54714966]
[1019.73870850 186.55531311]
[997.29278564 197.56347656]
[973.08837891 191.30671692]
[950.64245605 202.31489563]
[940.77099609 225.28344727]
[918.32507324 236.29162598]
[895.87915039 247.29978943]
[873.43316650 258.30795288]
[820.00000000 225.00000000]
[820.00000000 200.00000000]
[820.00000000 175.00000000]
[820.00000000 150.00000000]
[820.00000000 125.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[167.50000000 227.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[167.50000000 227.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[167.50000000 227.04002271 32.20889362 145.74629528 100.07468899 1.00000000]
[167.50000000 227.04002271 32.20889362 100.07468899 54.40308270 1.00000000]
[]
[245.20929927 257.63892174 36.01426010 172.41991435 131.80169849 1.00000000]
[245.20929927 257.63892174 36.01426010 131.80169849 91.18348264 1.00000000]
[245.20929927 257.63892174 36.01426010 91.18348264 50.56526679 1.00000000]
[]
[]
[]
[]
[]
[437.52833448 333.36667628 53.17675944 182.27897033 155.08805049 1.00000000]
[]
[]
[]
[329.69136527 437.96132886 30.52836670 280.89814434 232.55690631 1.00000000]
[329.69136527 437.96132886 30.52836670 232.55690631 184.21566828 1.00000000]
[329.69136527 437.96132886 30.52836670 184.21566828 135.87443025 1.00000000]
[329.69136527 437.96132886 30.52836670 135.87443025 87.53319221 1.00000000]
[329.69136527 437.96132886 30.52836670 87.53319221 39.19195418 1.00000000]
[329.69136527 437.96132886 30.52836670 39.19195418 350.85071615 1.00000000]
[]
[]
[]
[437.52833448 333.36667628 53.17675944 116.66081001 89.46989017 1.00000000]
[437.52833448 333.36667628 53.17675944 89.46989017 62.27897033 1.00000000]
[437.52833448 333.36667628 53.17675944 62.27897033 35.08805049 1.00000000]
[437.52833448 333.36667628 53.17675944 35.08805049 7.89713065 1.00000000]
[437.52833448 333.36667628 53.17675944 7.89713065 340.70621081 1.00000000]
[]
[]
[]
[562.09593143 234.25483151 38.21401848 114.23787203 76.05155166 1.00000000]
[562.09593143 234.25483151 38.21401848 76.05155166 37.86523130 1.00000000]
[562.09593143 234.25483151 38.21401848 37.86523130 359.67891093 1.00000000]
[562.09593143 234.25483151 38.21401848 359.67891093 321.49259057 1.00000000]
[562.09593143 234.25483151 38.21401848 321.49259057 283.30627020 1.00000000]
[562.09593143 234.25483151 38.21401848 283.30627020 245.11994983 1.00000000]
[562.09593143 234.25483151 38.21401848 245.11994983 206.93362947 1.00000000]
[562.09593143 234.25483151 38.21401848 206.93362947 168.74730910 1.00000000]
[]
[]
[]
[437.52833448 333.36667628 53.17675944 302.27897033 275.08805049 1.00000000]
[437.52833448 333.36667628 53.17675944 275.08805049 247.89713065 1.00000000]
[437.52833448 333.36667628 53.17675944 247.89713065 220.70621081 1.00000000]
[]
[]
[]
[]
[]
[245.20929927 257.63892174 36.01426010 352.41991435 311.80169849 1.00000000]
[245.20929927 257.63892174 36.01426010 311.80169849 271.18348264 1.00000000]
[245.20929927 257.63892174 36.01426010 271.18348264 230.56526679 1.00000000]
[]
[167.50000000 227.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[802.50000000 312.58699621 89.31814992 258.70101204 242.61120338 1.00000000]
[802.50000000 312.58699621 89.31814992 242.61120338 226.52139471 1.00000000]
[802.50000000 312.58699621 89.31814992 226.52139471 210.43158605 1.00000000]
[802.50000000 312.58699621 89.31814992 210.43158605 194.34177739 1.00000000]
[802.50000000 312.58699621 89.31814992 194.34177739 178.25196872 1.00000000]
[802.50000000 312.58699621 89.31814992 178.25196872 162.16216006 1.00000000]
[802.50000000 312.58699621 89.31814992 162.16216006 146.07235139 1.00000000]
[802.50000000 312.58699621 89.31814992 146.07235139 129.98254273 1.00000000]
[802.50000000 312.58699621 89.31814992 129.98254273 113.89273407 1.00000000]
[802.50000000 312.58699621 89.31814992 113.89273407 97.80292540 1.00000000]
[802.50000000 312.58699621 89.31814992 97.80292540 81.71311674 1.00000000]
[802.50000000 312.58699621 89.31814992 81.71311674 65.62330807 1.00000000]
[802.50000000 312.58699621 89.31814992 65.62330807 49.53349941 1.00000000]
[802.50000000 312.58699621 89.31814992 49.53349941 33.44369074 1.00000000]
[802.50000000 312.58699621 89.31814992 33.44369074 17.35388208 1.00000000]
[802.50000000 312.58699621 89.31814992 17.35388208 1.26407342 1.00000000]
[802.50000000 312.58699621 89.31814992 1.26407342 345.17426475 1.00000000]
[]
[]
[]
[976.73761301 227.13562300 36.01426010 124.80260057 84.18438472 1.00000000]
[976.73761301 227.13562300 36.01426010 84.18438472 43.56616887 1.00000000]
[976.73761301 227.13562300 36.01426010 43.56616887 2.94795301 1.00000000]
[]
[]
[]
[]
[]
[1135.41681398 149.31456366 26.77024824 113.05330979 57.38209659 1.00000000]
[1135.41681398 149.31456366 26.77024824 57.38209659 1.71088339 1.00000000]
[1135.41681398 149.31456366 26.77024824 1.71088339 306.03967020 1.00000000]
[1135.41681398 149.31456366 26.77024824 306.03967020 250.36845700 1.00000000]
[1135.41681398 149.31456366 26.77024824 250.36845700 194.69724380 1.00000000]
[]
[]
[]
[]
[]
[976.73761301 227.13562300 36.01426010 304.80260057 264.18438472 1.00000000]
[976.73761301 227.13562300 36.01426010 264.18438472 223.56616887 1.00000000]
[976.73761301 227.13562300 36.01426010 223.56616887 182.94795301 1.00000000]
[]
[]
[]
[802.50000000 312.58699621 89.31814992 322.57628884 281.29898796 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 69]
[4 68]
[5 67]
[6 66]
[7 65]
[11 64]
[12 63]
[15 60]
[16 59]
[17 58]
[18 57]
[19 56]
[20 55]
[21 33]
[22 32]
[23 31]
[24 30]
[38 52]
[39 51]
[40 50]
[41 49]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[99 126]
[100 125]
[101 124]
[102 123]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
] def

init

% Start Annotations
50 54 12 1.00 0.60 0.67 omark 57 82 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
