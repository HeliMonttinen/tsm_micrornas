%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUUAGACUAGUGUGACAUAGGUAGAAAGUACUUUAGCAAAAAUUGAGCUCAUUUAGGACUAGAUGUUGGAAUUAGACAGAAAAAAUUAGACAMAAAMAUUGUGUCUAAUUCCAACAUCUAGUCCUAAAUGUACUAAGCCAAUUUCUCAUACACCUAGUAACCUAGGUCAAUAAUUAGGAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[350.00000000 125.00000000]
[350.00000000 150.00000000]
[350.00000000 175.00000000]
[350.00000000 200.00000000]
[350.00000000 225.00000000]
[327.37243652 235.62982178]
[310.02642822 253.63304138]
[300.24505615 276.64010620]
[299.31576538 301.62283325]
[276.30871582 311.40420532]
[253.30163574 321.18554688]
[230.29457092 330.96691895]
[207.28750610 340.74826050]
[182.52003479 337.34649658]
[163.51574707 353.58956909]
[163.01921082 378.58465576]
[181.36340332 395.56967163]
[206.24644470 393.15423584]
[220.98141479 372.95816040]
[243.98847961 363.17678833]
[266.99554443 353.39544678]
[290.00259399 343.61407471]
[313.00967407 333.83273315]
[331.64523315 350.49752808]
[355.00000000 359.41690063]
[380.00000000 359.41690063]
[403.35476685 350.49752808]
[421.99032593 333.83273315]
[433.45391846 311.61593628]
[436.23666382 286.77127075]
[459.90682983 278.72619629]
[483.57699585 270.68112183]
[507.24716187 262.63604736]
[530.91735840 254.59098816]
[554.58752441 246.54591370]
[573.38983154 263.02233887]
[578.25769043 238.50083923]
[601.92785645 230.45576477]
[625.59802246 222.41069031]
[647.89019775 233.72697449]
[655.36633301 257.58294678]
[662.84240723 281.43893433]
[670.31854248 305.29492188]
[677.79461670 329.15090942]
[685.27069092 353.00686646]
[692.74682617 376.86285400]
[700.22290039 400.71884155]
[707.69903564 424.57482910]
[715.17510986 448.43081665]
[722.65124512 472.28677368]
[730.12731934 496.14276123]
[737.60345459 519.99877930]
[745.07952881 543.85473633]
[752.55566406 567.71069336]
[760.03173828 591.56671143]
[767.50787354 615.42266846]
[774.98394775 639.27868652]
[782.46008301 663.13464355]
[789.93615723 686.99060059]
[797.41229248 710.84661865]
[804.88836670 734.70257568]
[812.36450195 758.55859375]
[819.84057617 782.41455078]
[827.31671143 806.27050781]
[834.79278564 830.12652588]
[842.26892090 853.98248291]
[849.74499512 877.83850098]
[857.22113037 901.69445801]
[853.46588135 926.41082764]
[870.65557861 944.56335449]
[878.13171387 968.41931152]
[858.90142822 984.39422607]
[845.75274658 1005.65716553]
[840.05206299 1029.99853516]
[842.39166260 1054.88879395]
[852.52856445 1077.74145508]
[869.40924072 1096.18176270]
[891.27954102 1108.29321289]
[915.86676025 1112.81750488]
[940.61584473 1109.28430176]
[962.95489502 1098.06079102]
[980.56250000 1080.31335449]
[991.60888672 1057.88623047]
[994.94622803 1033.10998535]
[990.22760010 1008.55926514]
[977.94342041 986.78546143]
[959.37017822 970.05120850]
[936.43804932 960.09545898]
[911.53002930 957.95275879]
[904.05395508 934.09680176]
[907.80920410 909.38043213]
[890.61950684 891.22790527]
[883.14337158 867.37194824]
[875.66729736 843.51593018]
[868.19116211 819.65997314]
[860.71508789 795.80401611]
[853.23895264 771.94799805]
[845.76287842 748.09204102]
[838.28674316 724.23602295]
[830.81066895 700.38006592]
[823.33453369 676.52404785]
[815.85845947 652.66809082]
[808.38232422 628.81213379]
[800.90625000 604.95611572]
[793.43011475 581.10015869]
[785.95404053 557.24414062]
[778.47790527 533.38818359]
[771.00183105 509.53219604]
[763.52569580 485.67620850]
[756.04962158 461.82025146]
[748.57348633 437.96426392]
[741.09741211 414.10827637]
[733.62127686 390.25228882]
[726.14520264 366.39630127]
[718.66906738 342.54034424]
[711.19299316 318.68435669]
[703.71685791 294.82836914]
[696.24078369 270.97238159]
[688.76464844 247.11640930]
[681.28857422 223.26042175]
[693.13525391 201.24552917]
[689.54235840 176.50506592]
[671.92285156 158.76940918]
[647.20654297 155.01396179]
[625.11425781 166.71574402]
[614.33489990 189.27246094]
[590.66473389 197.31753540]
[566.99456787 205.36260986]
[543.32440186 213.40768433]
[519.65423584 221.45275879]
[495.98406982 229.49783325]
[472.31390381 237.54289246]
[448.64373779 245.58796692]
[424.97357178 253.63304138]
[407.62756348 235.62982178]
[385.00000000 225.00000000]
[385.00000000 200.00000000]
[385.00000000 175.00000000]
[385.00000000 150.00000000]
[385.00000000 125.00000000]
[385.00000000 100.00000000]
[735.00000000 100.00000000]
[735.00000000 125.00000000]
[735.00000000 150.00000000]
[735.00000000 175.00000000]
[735.00000000 200.00000000]
[735.00000000 225.00000000]
[725.90148926 248.28555298]
[740.00000000 268.93093872]
[765.00000000 268.93093872]
[779.09851074 248.28555298]
[770.00000000 225.00000000]
[770.00000000 200.00000000]
[770.00000000 175.00000000]
[770.00000000 150.00000000]
[770.00000000 125.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
[1020.00000000 100.00000000]
[1045.00000000 100.00000000]
[1070.00000000 100.00000000]
[1095.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[367.49999786 291.65048477 68.90963010 255.28827999 234.38599692 1.00000000]
[367.49999786 291.65048477 68.90963010 234.38599692 213.48371385 1.00000000]
[367.49999786 291.65048477 68.90963010 213.48371385 192.58143077 1.00000000]
[367.49999786 291.65048477 68.90963010 192.58143077 171.67914770 1.00000000]
[]
[]
[]
[]
[191.11394218 366.64029367 30.52836670 301.99114179 253.64990375 1.00000000]
[191.11394218 366.64029367 30.52836670 253.64990375 205.30866572 1.00000000]
[191.11394218 366.64029367 30.52836670 205.30866572 156.96742769 1.00000000]
[191.11394218 366.64029367 30.52836670 156.96742769 108.62618966 1.00000000]
[191.11394218 366.64029367 30.52836670 108.62618966 60.28495163 1.00000000]
[191.11394218 366.64029367 30.52836670 60.28495163 11.94371360 1.00000000]
[]
[]
[]
[]
[367.49999786 291.65048477 68.90963010 142.25570768 121.35342461 1.00000000]
[367.49999786 291.65048477 68.90963010 121.35342461 100.45114154 1.00000000]
[367.49999786 291.65048477 68.90963010 100.45114154 79.54885846 1.00000000]
[367.49999786 291.65048477 68.90963010 79.54885846 58.64657539 1.00000000]
[367.49999786 291.65048477 68.90963010 58.64657539 37.74429232 1.00000000]
[367.49999786 291.65048477 68.90963010 37.74429232 16.84200924 1.00000000]
[367.49999786 291.65048477 68.90963010 16.84200924 355.93972617 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[653.87845223 194.31548495 39.86382195 135.18826003 98.63954353 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[880.63753528 917.89563274 28.47466729 214.67828931 162.59979738 1.00000000]
[880.63753528 917.89563274 28.47466729 162.59979738 110.52130545 1.00000000]
[]
[917.42427353 1035.28080235 77.55232834 239.55845344 221.00749165 1.00000000]
[917.42427353 1035.28080235 77.55232834 221.00749165 202.45652986 1.00000000]
[917.42427353 1035.28080235 77.55232834 202.45652986 183.90556808 1.00000000]
[917.42427353 1035.28080235 77.55232834 183.90556808 165.35460629 1.00000000]
[917.42427353 1035.28080235 77.55232834 165.35460629 146.80364450 1.00000000]
[917.42427353 1035.28080235 77.55232834 146.80364450 128.25268272 1.00000000]
[917.42427353 1035.28080235 77.55232834 128.25268272 109.70172093 1.00000000]
[917.42427353 1035.28080235 77.55232834 109.70172093 91.15075914 1.00000000]
[917.42427353 1035.28080235 77.55232834 91.15075914 72.59979736 1.00000000]
[917.42427353 1035.28080235 77.55232834 72.59979736 54.04883557 1.00000000]
[917.42427353 1035.28080235 77.55232834 54.04883557 35.49787378 1.00000000]
[917.42427353 1035.28080235 77.55232834 35.49787378 16.94691200 1.00000000]
[917.42427353 1035.28080235 77.55232834 16.94691200 358.39595021 1.00000000]
[917.42427353 1035.28080235 77.55232834 358.39595021 339.84498842 1.00000000]
[917.42427353 1035.28080235 77.55232834 339.84498842 321.29402664 1.00000000]
[917.42427353 1035.28080235 77.55232834 321.29402664 302.74306485 1.00000000]
[917.42427353 1035.28080235 77.55232834 302.74306485 284.19210306 1.00000000]
[917.42427353 1035.28080235 77.55232834 284.19210306 265.64114128 1.00000000]
[]
[880.63753528 917.89563274 28.47466729 34.67828926 342.59979733 1.00000000]
[880.63753528 917.89563274 28.47466729 342.59979733 290.52130550 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[653.87845223 194.31548495 39.86382195 46.56005127 10.01133478 1.00000000]
[653.87845223 194.31548495 39.86382195 10.01133478 333.46261828 1.00000000]
[653.87845223 194.31548495 39.86382195 333.46261828 296.91390178 1.00000000]
[653.87845223 194.31548495 39.86382195 296.91390178 260.36518529 1.00000000]
[653.87845223 194.31548495 39.86382195 260.36518529 223.81646879 1.00000000]
[653.87845223 194.31548495 39.86382195 223.81646879 187.26775229 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[367.49999786 291.65048477 68.90963010 326.51628615 305.61400308 1.00000000]
[367.49999786 291.65048477 68.90963010 305.61400308 284.71172001 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[752.49999888 245.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[752.49999888 245.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[752.49999888 245.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[752.49999888 245.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[752.49999888 245.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[41 145]
[42 144]
[43 143]
[44 142]
[45 141]
[46 140]
[48 139]
[49 138]
[50 137]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[74 108]
[75 107]
[76 106]
[77 105]
[78 104]
[79 103]
[81 101]
[82 100]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% Start Annotations
54 79 12 1.00 0.60 0.67 omark 103 130 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
