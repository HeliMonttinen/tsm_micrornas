%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUAGAGAACAAAUUUUGCUUUAGACAUCCGUCAACUUAGAGAAAGUAGAAAACUGUCUAUAAUAAACUGAAAUAUUUGGGACUGAUCUUGAUGUCUGCCAAAACAUGUAAGAGUGUCAAGAUCAGUCCCAAAUAUUUCAGUUUAUUAUAAACAAAGACUAAUAAGUCGUCUCUACUAUUGGAGGAAAAAAAAAAAAAGACUGAAAUGCA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[125.00000000 200.00000000]
[125.00000000 225.00000000]
[125.00000000 250.00000000]
[103.88729095 263.38854980]
[91.09394073 284.86715698]
[89.37634277 309.80807495]
[99.10457611 332.83767700]
[118.18261719 348.99401855]
[142.50000000 354.79620361]
[166.81738281 348.99401855]
[185.89543152 332.83767700]
[195.62365723 309.80807495]
[193.90606689 284.86715698]
[181.11270142 263.38854980]
[160.00000000 250.00000000]
[160.00000000 225.00000000]
[160.00000000 200.00000000]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[235.00000000 125.00000000]
[235.00000000 150.00000000]
[224.02532959 172.46234131]
[235.00000000 194.92468262]
[235.00000000 219.92468262]
[235.00000000 244.92468262]
[235.00000000 269.92468262]
[217.11198425 287.38946533]
[213.14201355 312.07223511]
[224.65147400 334.26531982]
[216.81228638 358.00445557]
[208.97309875 381.74359131]
[201.13391113 405.48275757]
[193.29472351 429.22189331]
[185.45553589 452.96102905]
[160.47282410 453.89065552]
[136.84912109 462.07116699]
[116.64147949 476.79025269]
[101.60948181 496.76620483]
[93.06205750 520.25964355]
[91.74346924 545.22485352]
[97.76853943 569.48797607]
[110.61263275 590.93627930]
[129.15733337 607.70208740]
[151.78787231 618.32562256]
[176.53366089 621.88177490]
[201.23994446 618.06085205]
[213.43518066 639.88458252]
[225.63041687 661.70837402]
[227.00743103 686.67041016]
[247.54512024 700.92535400]
[259.74035645 722.74908447]
[271.93560791 744.57287598]
[284.13082886 766.39660645]
[296.32608032 788.22033691]
[308.52130127 810.04412842]
[320.71655273 831.86785889]
[332.91180420 853.69158936]
[345.10702515 875.51538086]
[357.30227661 897.33911133]
[369.49752808 919.16284180]
[381.69274902 940.98663330]
[393.88800049 962.81036377]
[406.08325195 984.63415527]
[418.27847290 1006.45788574]
[430.47372437 1028.28161621]
[442.66897583 1050.10534668]
[454.86419678 1071.92907715]
[467.05944824 1093.75292969]
[479.25466919 1115.57666016]
[491.44992065 1137.40039062]
[503.64517212 1159.22412109]
[515.84039307 1181.04785156]
[528.03564453 1202.87158203]
[540.23089600 1224.69543457]
[552.42614746 1246.51916504]
[564.62133789 1268.34289551]
[576.81658936 1290.16662598]
[589.01184082 1311.99035645]
[601.20709229 1333.81408691]
[613.40234375 1355.63793945]
[625.59759521 1377.46166992]
[637.79278564 1399.28540039]
[649.98803711 1421.10913086]
[662.18328857 1442.93286133]
[659.97961426 1467.83557129]
[676.25384521 1486.81323242]
[679.02362061 1511.65930176]
[681.79339600 1536.50537109]
[667.72064209 1557.16833496]
[670.49035645 1582.01440430]
[688.76800537 1599.07104492]
[691.53778076 1623.91711426]
[681.17358398 1646.66760254]
[691.28179932 1669.53295898]
[715.08374023 1677.17932129]
[736.61743164 1664.47900391]
[741.44213867 1639.94897461]
[726.32232666 1620.03942871]
[723.55255127 1595.19335938]
[737.62530518 1574.53039551]
[734.85552979 1549.68432617]
[716.57788086 1532.62768555]
[713.80810547 1507.78161621]
[711.03833008 1482.93554688]
[722.73382568 1460.83996582]
[715.10021973 1437.03381348]
[692.73651123 1425.85961914]
[680.54132080 1404.03576660]
[668.34606934 1382.21203613]
[656.15081787 1360.38830566]
[643.95556641 1338.56457520]
[631.76031494 1316.74084473]
[619.56512451 1294.91711426]
[607.36987305 1273.09326172]
[595.17462158 1251.26953125]
[582.97937012 1229.44580078]
[570.78411865 1207.62207031]
[558.58886719 1185.79833984]
[546.39367676 1163.97448730]
[534.19842529 1142.15075684]
[522.00317383 1120.32702637]
[509.80792236 1098.50329590]
[497.61270142 1076.67956543]
[485.41744995 1054.85583496]
[473.22219849 1033.03198242]
[461.02697754 1011.20831299]
[448.83172607 989.38452148]
[436.63650513 967.56079102]
[424.44125366 945.73706055]
[412.24600220 923.91326904]
[400.05078125 902.08953857]
[387.85552979 880.26580811]
[375.66027832 858.44201660]
[363.46505737 836.61828613]
[351.26980591 814.79455566]
[339.07455444 792.97076416]
[326.87933350 771.14703369]
[314.68408203 749.32330322]
[302.48886108 727.49951172]
[290.29360962 705.67578125]
[278.09835815 683.85205078]
[276.72134399 658.88995361]
[256.18368530 644.63500977]
[243.98843384 622.81127930]
[231.79319763 600.98754883]
[247.99549866 581.94848633]
[257.93569946 559.00958252]
[260.74829102 534.16833496]
[285.01141357 528.14324951]
[309.27450562 522.11816406]
[333.53762817 516.09307861]
[358.32958984 519.31152344]
[374.96865845 500.65298462]
[368.94357300 476.38989258]
[345.50894165 467.68252563]
[325.10253906 482.12475586]
[300.83941650 488.14981079]
[276.57632446 494.17489624]
[252.31320190 500.19995117]
[238.20661926 479.56008911]
[218.69033813 463.93591309]
[226.52952576 440.19674683]
[234.36871338 416.45761108]
[242.20790100 392.71847534]
[250.04708862 368.97930908]
[257.88629150 345.24017334]
[280.34851074 334.26531982]
[291.85800171 312.07223511]
[287.88803101 287.38946533]
[270.00000000 269.92468262]
[270.00000000 244.92468262]
[270.00000000 219.92468262]
[270.00000000 194.92468262]
[280.97467041 172.46234131]
[270.00000000 150.00000000]
[270.00000000 125.00000000]
[270.00000000 100.00000000]
[295.00000000 100.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[142.50000000 300.93692589 53.85926493 251.03921813 224.19934844 1.00000000]
[142.50000000 300.93692589 53.85926493 224.19934844 197.35947875 1.00000000]
[142.50000000 300.93692589 53.85926493 197.35947875 170.51960906 1.00000000]
[142.50000000 300.93692589 53.85926493 170.51960906 143.67973938 1.00000000]
[142.50000000 300.93692589 53.85926493 143.67973938 116.83986969 1.00000000]
[142.50000000 300.93692589 53.85926493 116.83986969 90.00000000 1.00000000]
[142.50000000 300.93692589 53.85926493 90.00000000 63.16013031 1.00000000]
[142.50000000 300.93692589 53.85926493 63.16013031 36.32026062 1.00000000]
[142.50000000 300.93692589 53.85926493 36.32026062 9.48039094 1.00000000]
[142.50000000 300.93692589 53.85926493 9.48039094 342.64052125 1.00000000]
[142.50000000 300.93692589 53.85926493 342.64052125 315.80065156 1.00000000]
[142.50000000 300.93692589 53.85926493 315.80065156 288.96078187 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[252.49999944 172.46233916 28.47466715 232.07849221 180.00000000 1.00000000]
[252.49999944 172.46233916 28.47466715 180.00000000 127.92150791 1.00000000]
[]
[]
[]
[252.49999970 305.74191287 39.86382195 243.96025382 207.41153733 1.00000000]
[252.49999970 305.74191287 39.86382195 207.41153733 170.86282083 1.00000000]
[252.49999970 305.74191287 39.86382195 170.86282083 134.31410433 1.00000000]
[]
[]
[]
[]
[]
[176.08005766 537.16183274 84.72114470 276.35352273 259.38440584 1.00000000]
[176.08005766 537.16183274 84.72114470 259.38440584 242.41528895 1.00000000]
[176.08005766 537.16183274 84.72114470 242.41528895 225.44617205 1.00000000]
[176.08005766 537.16183274 84.72114470 225.44617205 208.47705516 1.00000000]
[176.08005766 537.16183274 84.72114470 208.47705516 191.50793827 1.00000000]
[176.08005766 537.16183274 84.72114470 191.50793827 174.53882137 1.00000000]
[176.08005766 537.16183274 84.72114470 174.53882137 157.56970448 1.00000000]
[176.08005766 537.16183274 84.72114470 157.56970448 140.60058759 1.00000000]
[176.08005766 537.16183274 84.72114470 140.60058759 123.63147069 1.00000000]
[176.08005766 537.16183274 84.72114470 123.63147069 106.66235380 1.00000000]
[176.08005766 537.16183274 84.72114470 106.66235380 89.69323691 1.00000000]
[176.08005766 537.16183274 84.72114470 89.69323691 72.72412002 1.00000000]
[]
[]
[251.86439490 672.78019313 28.47466729 202.88177645 150.80328452 1.00000000]
[251.86439490 672.78019313 28.47466729 150.80328452 98.72479260 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[690.65029823 1458.00081812 32.20889362 207.89279236 162.22118607 1.00000000]
[690.65029823 1458.00081812 32.20889362 162.22118607 116.54957978 1.00000000]
[]
[]
[702.67295896 1565.84939272 36.01426010 234.56641142 193.94819557 1.00000000]
[702.67295896 1565.84939272 36.01426010 193.94819557 153.32997972 1.00000000]
[702.67295896 1565.84939272 36.01426010 153.32997972 112.71176386 1.00000000]
[]
[711.70144957 1646.83893940 30.52836670 228.66280174 180.32156371 1.00000000]
[711.70144957 1646.83893940 30.52836670 180.32156371 131.98032567 1.00000000]
[711.70144957 1646.83893940 30.52836670 131.98032567 83.63908764 1.00000000]
[711.70144957 1646.83893940 30.52836670 83.63908764 35.29784961 1.00000000]
[711.70144957 1646.83893940 30.52836670 35.29784961 346.95661158 1.00000000]
[711.70144957 1646.83893940 30.52836670 346.95661158 298.61537355 1.00000000]
[]
[702.67295896 1565.84939272 36.01426010 54.56641142 13.94819557 1.00000000]
[702.67295896 1565.84939272 36.01426010 13.94819557 333.32997972 1.00000000]
[702.67295896 1565.84939272 36.01426010 333.32997972 292.71176386 1.00000000]
[]
[]
[690.65029823 1458.00081812 32.20889362 50.72859550 5.05698922 1.00000000]
[690.65029823 1458.00081812 32.20889362 5.05698922 319.38538293 1.00000000]
[690.65029823 1458.00081812 32.20889362 319.38538293 273.71377664 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[251.86439490 672.78019313 28.47466729 22.88177640 330.80328447 1.00000000]
[251.86439490 672.78019313 28.47466729 330.80328447 278.72479264 1.00000000]
[]
[]
[176.08005766 537.16183274 84.72114470 48.88244908 31.91333218 1.00000000]
[176.08005766 537.16183274 84.72114470 31.91333218 14.94421529 1.00000000]
[176.08005766 537.16183274 84.72114470 14.94421529 357.97509840 1.00000000]
[]
[]
[]
[348.98119417 494.22662496 26.77024824 125.23229592 69.56108272 1.00000000]
[348.98119417 494.22662496 26.77024824 69.56108272 13.88986953 1.00000000]
[348.98119417 494.22662496 26.77024824 13.88986953 318.21865633 1.00000000]
[348.98119417 494.22662496 26.77024824 318.21865633 262.54744313 1.00000000]
[348.98119417 494.22662496 26.77024824 262.54744313 206.87622993 1.00000000]
[]
[]
[]
[176.08005766 537.16183274 84.72114470 334.13342746 317.16431056 1.00000000]
[176.08005766 537.16183274 84.72114470 317.16431056 300.19519367 1.00000000]
[]
[]
[]
[]
[]
[252.49999970 305.74191287 39.86382195 82.23461207 45.68589557 1.00000000]
[252.49999970 305.74191287 39.86382195 45.68589557 9.13717908 1.00000000]
[252.49999970 305.74191287 39.86382195 9.13717908 332.58846258 1.00000000]
[252.49999970 305.74191287 39.86382195 332.58846258 296.03974608 1.00000000]
[]
[]
[]
[252.49999944 172.46233916 28.47466715 52.07849154 360.00000000 1.00000000]
[252.49999944 172.46233916 28.47466715 360.00000000 307.92150824 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 26]
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[29 187]
[30 186]
[31 185]
[33 183]
[34 182]
[35 181]
[36 180]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[56 155]
[57 154]
[58 153]
[60 151]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[96 114]
[97 113]
[98 112]
[101 109]
[102 108]
[158 169]
[159 168]
[160 167]
[161 166]
] def

init

% Start Annotations
103 155 12 1.00 0.60 0.67 omark 56 106 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
