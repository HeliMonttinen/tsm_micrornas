%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUUAUAAUUGCUUUAAUUCUAGUCUUUUAAAUCUUGUUCACUGAAACCACUUAGGUGUAAUGCUAUCUCAAGGUAAUACCAAUACCUUGUGUUUACCUUGGUUCCACUGAACACAAGGUACUGGUACUACCUUGAAACAGCAUUAUAUAUUGGUCAAAAGCACAUCCUUUUUUAACCUUUUUUUCUUUUUCAUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[375.00000000 125.00000000]
[375.00000000 150.00000000]
[375.00000000 175.00000000]
[375.00000000 200.00000000]
[375.00000000 225.00000000]
[353.69729614 239.14593506]
[341.61059570 261.68087769]
[341.61059570 287.25259399]
[353.69729614 309.78753662]
[375.00000000 323.93347168]
[375.00000000 348.93347168]
[375.00000000 373.93347168]
[375.00000000 398.93347168]
[375.00000000 423.93347168]
[350.95495605 430.77716064]
[329.11282349 442.93945312]
[310.63177490 459.77542114]
[296.49172974 480.39239502]
[287.44250488 503.69714355]
[283.96386719 528.45397949]
[286.24035645 553.35009766]
[294.15118408 577.06542969]
[307.27691650 598.34252930]
[324.92156982 616.05316162]
[346.14953613 629.25823975]
[369.83520508 637.25750732]
[394.72268677 639.62689209]
[419.49230957 636.24066162]
[442.83065796 627.27850342]
[463.50024414 613.21551514]
[480.40509033 594.79742432]
[492.64880371 573.00079346]
[516.96447754 578.81005859]
[541.28015137 584.61932373]
[565.59588623 590.42858887]
[581.16857910 609.98596191]
[605.87481689 613.80755615]
[626.62872314 599.86926270]
[632.43798828 575.55358887]
[620.22570801 553.73937988]
[596.46014404 545.98059082]
[573.72882080 556.38665771]
[549.41314697 550.57739258]
[525.09747314 544.76812744]
[500.78179932 538.95886230]
[499.65734863 513.63769531]
[523.36242676 505.69598389]
[547.06744385 497.75427246]
[570.77252197 489.81259155]
[594.47753906 481.87088013]
[618.18261719 473.92916870]
[641.88763428 465.98748779]
[665.59271240 458.04577637]
[689.29779053 450.10409546]
[713.00280762 442.16238403]
[734.36627197 455.14709473]
[759.35223389 454.31057739]
[779.79937744 439.92602539]
[789.02880859 416.69204712]
[812.73382568 408.75033569]
[836.43890381 400.80865479]
[860.14392090 392.86694336]
[883.84899902 384.92523193]
[907.55401611 376.98355103]
[931.25909424 369.04183960]
[954.96411133 361.10012817]
[979.74926758 364.37078857]
[997.56182861 346.82901001]
[1021.26684570 338.88729858]
[1044.97192383 330.94561768]
[1068.67700195 323.00390625]
[1092.38195801 315.06219482]
[1117.16711426 318.33285522]
[1134.97973633 300.79107666]
[1158.68469238 292.84936523]
[1182.38977051 284.90768433]
[1206.09484863 276.96597290]
[1229.79992676 269.02426147]
[1253.50488281 261.08258057]
[1277.20996094 253.14086914]
[1300.91503906 245.19917297]
[1324.62011719 237.25747681]
[1348.32507324 229.31576538]
[1372.03015137 221.37406921]
[1395.73522949 213.43237305]
[1419.44030762 205.49067688]
[1441.13598633 217.91230774]
[1466.05432129 215.89389038]
[1485.46801758 200.14231873]
[1492.57727051 176.17448425]
[1515.20471191 165.54434204]
[1540.14916992 163.87821960]
[1552.84045410 142.33914185]
[1542.21032715 119.71173859]
[1517.52941895 115.72975159]
[1500.32250977 133.86595154]
[1477.69506836 144.49610901]
[1434.62023926 137.47315979]
[1408.32189941 172.30360413]
[1384.61682129 180.24530029]
[1360.91174316 188.18699646]
[1337.20678711 196.12870789]
[1313.50170898 204.07040405]
[1289.79663086 212.01210022]
[1266.09155273 219.95379639]
[1242.38659668 227.89550781]
[1218.68151855 235.83720398]
[1194.97644043 243.77890015]
[1171.27136230 251.72059631]
[1147.56640625 259.66229248]
[1123.86132812 267.60400391]
[1099.07617188 264.33337402]
[1081.26367188 281.87515259]
[1057.55859375 289.81683350]
[1033.85351562 297.75854492]
[1010.14849854 305.70022583]
[986.44342041 313.64193726]
[961.65826416 310.37130737]
[943.84576416 327.91308594]
[920.14068604 335.85476685]
[896.43566895 343.79647827]
[872.73059082 351.73815918]
[849.02557373 359.67987061]
[825.32049561 367.62158203]
[801.61547852 375.56326294]
[777.91040039 383.50497437]
[756.54693604 370.52026367]
[731.56097412 371.35678101]
[711.11383057 385.74133301]
[701.88446045 408.97531128]
[678.17938232 416.91702271]
[654.47430420 424.85870361]
[630.76928711 432.80041504]
[607.06420898 440.74212646]
[583.35919189 448.68380737]
[559.65411377 456.62551880]
[535.94909668 464.56719971]
[512.24401855 472.50891113]
[488.53897095 480.45062256]
[410.00000000 423.93347168]
[410.00000000 398.93347168]
[410.00000000 373.93347168]
[410.00000000 348.93347168]
[410.00000000 323.93347168]
[435.34536743 304.75671387]
[444.97100830 274.46673584]
[435.34536743 244.17675781]
[410.00000000 225.00000000]
[410.00000000 200.00000000]
[410.00000000 175.00000000]
[410.00000000 150.00000000]
[410.00000000 125.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
[860.00000000 100.00000000]
[885.00000000 100.00000000]
[910.00000000 100.00000000]
[935.00000000 100.00000000]
[960.00000000 100.00000000]
[985.00000000 100.00000000]
[1010.00000000 100.00000000]
[1035.00000000 100.00000000]
[1060.00000000 100.00000000]
[1085.00000000 100.00000000]
[1110.00000000 100.00000000]
[1135.00000000 100.00000000]
[1160.00000000 100.00000000]
[1185.00000000 100.00000000]
[1210.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[392.49999941 274.46673990 52.47102397 250.51759241 222.31055544 1.00000000]
[392.49999941 274.46673990 52.47102397 222.31055544 194.10351848 1.00000000]
[392.49999941 274.46673990 52.47102397 194.10351848 165.89648152 1.00000000]
[392.49999941 274.46673990 52.47102397 165.89648152 137.68944456 1.00000000]
[392.49999941 274.46673990 52.47102397 137.68944456 109.48240759 1.00000000]
[]
[]
[]
[]
[392.49999941 531.08171559 108.56792544 260.72405935 247.50120205 1.00000000]
[392.49999941 531.08171559 108.56792544 247.50120205 234.27834475 1.00000000]
[392.49999941 531.08171559 108.56792544 234.27834475 221.05548745 1.00000000]
[392.49999941 531.08171559 108.56792544 221.05548745 207.83263015 1.00000000]
[392.49999941 531.08171559 108.56792544 207.83263015 194.60977285 1.00000000]
[392.49999941 531.08171559 108.56792544 194.60977285 181.38691555 1.00000000]
[392.49999941 531.08171559 108.56792544 181.38691555 168.16405825 1.00000000]
[392.49999941 531.08171559 108.56792544 168.16405825 154.94120095 1.00000000]
[392.49999941 531.08171559 108.56792544 154.94120095 141.71834365 1.00000000]
[392.49999941 531.08171559 108.56792544 141.71834365 128.49548634 1.00000000]
[392.49999941 531.08171559 108.56792544 128.49548634 115.27262904 1.00000000]
[392.49999941 531.08171559 108.56792544 115.27262904 102.04977174 1.00000000]
[392.49999941 531.08171559 108.56792544 102.04977174 88.82691444 1.00000000]
[392.49999941 531.08171559 108.56792544 88.82691444 75.60405714 1.00000000]
[392.49999941 531.08171559 108.56792544 75.60405714 62.38119984 1.00000000]
[392.49999941 531.08171559 108.56792544 62.38119984 49.15834254 1.00000000]
[392.49999941 531.08171559 108.56792544 49.15834254 35.93548524 1.00000000]
[392.49999941 531.08171559 108.56792544 35.93548524 22.71262794 1.00000000]
[]
[]
[]
[598.41278636 580.27641420 34.35139098 162.81009860 120.13198108 1.00000000]
[598.41278636 580.27641420 34.35139098 120.13198108 77.45386357 1.00000000]
[598.41278636 580.27641420 34.35139098 77.45386357 34.77574605 1.00000000]
[598.41278636 580.27641420 34.35139098 34.77574605 352.09762853 1.00000000]
[598.41278636 580.27641420 34.35139098 352.09762853 309.41951102 1.00000000]
[598.41278636 580.27641420 34.35139098 309.41951102 266.74139350 1.00000000]
[598.41278636 580.27641420 34.35139098 266.74139350 224.06327598 1.00000000]
[]
[]
[]
[392.49999941 531.08171559 108.56792544 4.16074664 350.75398587 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[745.45661074 412.83367769 43.74267810 137.89568104 104.68686313 1.00000000]
[745.45661074 412.83367769 43.74267810 104.68686313 71.47804522 1.00000000]
[745.45661074 412.83367769 43.74267810 71.47804522 38.26922731 1.00000000]
[745.45661074 412.83367769 43.74267810 38.26922731 5.06040940 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[970.70378546 337.37104120 28.47466729 123.55653713 71.47804520 1.00000000]
[970.70378546 337.37104120 28.47466729 71.47804520 19.39955327 1.00000000]
[]
[]
[]
[]
[1108.12165509 291.33310628 28.47466729 123.55653708 71.47804515 1.00000000]
[1108.12165509 291.33310628 28.47466729 71.47804515 19.39955323 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1450.33730787 176.68351933 42.24308515 137.00475572 102.58095953 1.00000000]
[1450.33730787 176.68351933 42.24308515 102.58095953 68.15716334 1.00000000]
[1450.33730787 176.68351933 42.24308515 68.15716334 33.73336714 1.00000000]
[1450.33730787 176.68351933 42.24308515 33.73336714 359.30957095 1.00000000]
[]
[1526.09928875 141.09121788 26.77024824 114.01431454 58.34310134 1.00000000]
[1526.09928875 141.09121788 26.77024824 58.34310134 2.67188815 1.00000000]
[1526.09928875 141.09121788 26.77024824 2.67188815 307.00067495 1.00000000]
[1526.09928875 141.09121788 26.77024824 307.00067495 251.32946175 1.00000000]
[1526.09928875 141.09121788 26.77024824 251.32946175 195.65824855 1.00000000]
[]
[1450.33730787 176.68351933 42.24308515 310.36299214 248.15716334 1.00000000]
[1450.33730787 176.68351933 42.24308515 248.15716334 185.95133453 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1108.12165509 291.33310628 28.47466729 303.55653703 251.47804510 1.00000000]
[1108.12165509 291.33310628 28.47466729 251.47804510 199.39955327 1.00000000]
[]
[]
[]
[]
[970.70378546 337.37104120 28.47466729 303.55653708 251.47804515 1.00000000]
[970.70378546 337.37104120 28.47466729 251.47804515 199.39955332 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[745.45661074 412.83367769 43.74267810 317.89568104 284.68686313 1.00000000]
[745.45661074 412.83367769 43.74267810 284.68686313 251.47804522 1.00000000]
[745.45661074 412.83367769 43.74267810 251.47804522 218.26922731 1.00000000]
[745.45661074 412.83367769 43.74267810 218.26922731 185.06040940 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[392.49999941 531.08171559 108.56792544 332.20210458 279.27594065 1.00000000]
[]
[]
[]
[]
[392.49999941 274.46673990 52.47102397 70.51759241 35.25879620 1.00000000]
[392.49999941 274.46673990 52.47102397 35.25879620 360.00000000 1.00000000]
[392.49999941 274.46673990 52.47102397 360.00000000 324.74120380 1.00000000]
[392.49999941 274.46673990 52.47102397 324.74120380 289.48240759 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[22 156]
[23 155]
[24 154]
[25 153]
[26 152]
[44 57]
[45 56]
[46 55]
[47 54]
[58 151]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[78 131]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
[102 109]
[103 108]
] def

init

% Start Annotations
59 98 12 1.00 0.60 0.67 omark 111 150 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
