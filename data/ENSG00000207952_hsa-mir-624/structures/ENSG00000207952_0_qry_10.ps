%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUUUAUAAUUGCUUUAGUUCUGGUCUUUUAAAUCUUGUUCACUGAAACCACUUAGGUGUAAUGCUAUCUCAAGGUAAKACCAGUACCUUGUGUUCACCUUGGUUCCACUGAACACAAGGUACUGGUACUACCUUGAAACAGCAUUACAUAUUGGUCAAAAGCACAUCCUUCUUUAACCUUUUUUUCUUUUUCAUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[375.00000000 125.00000000]
[375.00000000 150.00000000]
[375.00000000 175.00000000]
[375.00000000 200.00000000]
[375.00000000 225.00000000]
[353.02593994 236.92227173]
[337.67590332 256.65490723]
[331.52578735 280.88662720]
[335.60754395 305.55114746]
[349.23629761 326.50961304]
[370.12503052 340.24499512]
[394.76843262 344.45245361]
[402.82244873 368.11959839]
[410.87649536 391.78671265]
[394.40716553 410.59524536]
[418.93051147 415.45382690]
[426.98452759 439.12094116]
[435.03854370 462.78808594]
[416.96078491 480.05639648]
[406.14639282 502.59631348]
[403.98904419 527.50305176]
[410.76678467 551.56677246]
[425.60614014 571.68627930]
[446.59469604 585.26861572]
[471.02755737 590.56341553]
[495.75598145 586.88836670]
[517.59307861 574.71697998]
[533.72454834 555.61791992]
[542.07159424 532.05255127]
[541.55841064 507.05783081]
[532.25109863 483.85491943]
[515.34924316 465.43411255]
[493.03094482 454.16937256]
[468.17251587 451.51245117]
[460.11849976 427.84530640]
[452.06448364 404.17819214]
[444.01046753 380.51107788]
[435.95642090 356.84396362]
[427.90240479 333.17681885]
[444.86404419 314.81100464]
[469.09573364 320.96115112]
[493.32745361 327.11129761]
[504.26535034 349.59155273]
[525.72912598 362.40972900]
[550.70788574 361.37890625]
[571.04254150 346.83578491]
[595.27423096 352.98593140]
[619.50592041 359.13607788]
[643.73767090 365.28622437]
[667.96936035 371.43634033]
[692.20104980 377.58648682]
[716.43280029 383.73663330]
[740.66448975 389.88677979]
[764.89617920 396.03689575]
[789.12792969 402.18704224]
[800.06579590 424.66729736]
[821.52960205 437.48550415]
[846.50836182 436.45468140]
[866.84295654 421.91156006]
[891.07470703 428.06170654]
[915.30639648 434.21182251]
[939.53808594 440.36196899]
[963.76983643 446.51211548]
[988.00152588 452.66226196]
[1012.23321533 458.81237793]
[1036.46496582 464.96252441]
[1050.85449219 485.40609741]
[1075.08630371 491.55624390]
[1097.48352051 480.44937134]
[1121.71520996 486.59951782]
[1145.94689941 492.74966431]
[1170.17858887 498.89978027]
[1194.41040039 505.04992676]
[1218.64208984 511.20007324]
[1242.87377930 517.35021973]
[1267.10546875 523.50036621]
[1291.33715820 529.65051270]
[1315.56884766 535.80059814]
[1339.80065918 541.95074463]
[1364.03234863 548.10089111]
[1388.26403809 554.25103760]
[1412.49572754 560.40118408]
[1436.72741699 566.55133057]
[1460.95922852 572.70147705]
[1485.19091797 578.85162354]
[1509.42260742 585.00177002]
[1523.81213379 605.44531250]
[1548.04394531 611.59545898]
[1570.44116211 600.48858643]
[1580.21142578 577.47680664]
[1602.60864258 566.36993408]
[1627.51220703 564.17602539]
[1639.74462891 542.37304688]
[1628.63769531 519.97583008]
[1603.87805176 516.51727295]
[1587.05908203 535.01373291]
[1564.66174316 546.12060547]
[1540.43005371 539.97045898]
[1518.03283691 551.07733154]
[1493.80102539 544.92718506]
[1469.56933594 538.77709961]
[1445.33764648 532.62695312]
[1421.10595703 526.47680664]
[1396.87426758 520.32666016]
[1372.64257812 514.17651367]
[1348.41076660 508.02636719]
[1324.17907715 501.87622070]
[1299.94738770 495.72610474]
[1275.71569824 489.57595825]
[1251.48400879 483.42581177]
[1227.25231934 477.27566528]
[1203.02050781 471.12554932]
[1178.78881836 464.97540283]
[1154.55712891 458.82525635]
[1130.32543945 452.67510986]
[1106.09375000 446.52496338]
[1091.70410156 426.08139038]
[1067.47241211 419.93127441]
[1045.07519531 431.03814697]
[1020.84344482 424.88800049]
[996.61169434 418.73785400]
[972.38000488 412.58770752]
[948.14831543 406.43759155]
[923.91656494 400.28744507]
[899.68487549 394.13729858]
[875.45318604 387.98715210]
[864.51525879 365.50689697]
[843.05151367 352.68872070]
[818.07275391 353.71954346]
[797.73809814 368.26266479]
[773.50640869 362.11251831]
[749.27465820 355.96237183]
[725.04296875 349.81222534]
[700.81127930 343.66210938]
[676.57952881 337.51196289]
[652.34783936 331.36181641]
[628.11614990 325.21166992]
[603.88439941 319.06152344]
[579.65270996 312.91140747]
[568.71478271 290.43112183]
[547.25103760 277.61294556]
[522.27227783 278.64376831]
[501.93765259 293.18688965]
[477.70593262 287.03674316]
[453.47421265 280.88662720]
[447.32409668 256.65490723]
[431.97406006 236.92227173]
[410.00000000 225.00000000]
[410.00000000 200.00000000]
[410.00000000 175.00000000]
[410.00000000 150.00000000]
[410.00000000 125.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
[860.00000000 100.00000000]
[885.00000000 100.00000000]
[910.00000000 100.00000000]
[935.00000000 100.00000000]
[960.00000000 100.00000000]
[985.00000000 100.00000000]
[1010.00000000 100.00000000]
[1035.00000000 100.00000000]
[1060.00000000 100.00000000]
[1085.00000000 100.00000000]
[1110.00000000 100.00000000]
[1135.00000000 100.00000000]
[1160.00000000 100.00000000]
[1185.00000000 100.00000000]
[1210.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[392.50000000 283.46587851 61.02875511 253.33651268 229.69841486 1.00000000]
[392.50000000 283.46587851 61.02875511 229.69841486 206.06031703 1.00000000]
[392.50000000 283.46587851 61.02875511 206.06031703 182.42221920 1.00000000]
[392.50000000 283.46587851 61.02875511 182.42221920 158.78412137 1.00000000]
[392.50000000 283.46587851 61.02875511 158.78412137 135.14602354 1.00000000]
[392.50000000 283.46587851 61.02875511 135.14602354 111.50792572 1.00000000]
[392.50000000 283.46587851 61.02875511 111.50792572 87.86982789 1.00000000]
[]
[]
[]
[]
[]
[]
[473.32079293 520.96154530 69.63966242 236.65226785 215.97152694 1.00000000]
[473.32079293 520.96154530 69.63966242 215.97152694 195.29078603 1.00000000]
[473.32079293 520.96154530 69.63966242 195.29078603 174.61004512 1.00000000]
[473.32079293 520.96154530 69.63966242 174.61004512 153.92930421 1.00000000]
[473.32079293 520.96154530 69.63966242 153.92930421 133.24856330 1.00000000]
[473.32079293 520.96154530 69.63966242 133.24856330 112.56782239 1.00000000]
[473.32079293 520.96154530 69.63966242 112.56782239 91.88708148 1.00000000]
[473.32079293 520.96154530 69.63966242 91.88708148 71.20634057 1.00000000]
[473.32079293 520.96154530 69.63966242 71.20634057 50.52559966 1.00000000]
[473.32079293 520.96154530 69.63966242 50.52559966 29.84485875 1.00000000]
[473.32079293 520.96154530 69.63966242 29.84485875 9.16411784 1.00000000]
[473.32079293 520.96154530 69.63966242 9.16411784 348.48337693 1.00000000]
[473.32079293 520.96154530 69.63966242 348.48337693 327.80263602 1.00000000]
[473.32079293 520.96154530 69.63966242 327.80263602 307.12189511 1.00000000]
[473.32079293 520.96154530 69.63966242 307.12189511 286.44115420 1.00000000]
[473.32079293 520.96154530 69.63966242 286.44115420 265.76041329 1.00000000]
[]
[]
[]
[]
[]
[392.50000000 283.46587851 61.02875511 54.54285326 30.90475543 1.00000000]
[]
[]
[536.49008273 320.01134235 43.74267810 170.65890393 137.45008602 1.00000000]
[536.49008273 320.01134235 43.74267810 137.45008602 104.24126811 1.00000000]
[536.49008273 320.01134235 43.74267810 104.24126811 71.03245021 1.00000000]
[536.49008273 320.01134235 43.74267810 71.03245021 37.82363230 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[832.29054124 395.08710280 43.74267810 170.65890393 137.45008602 1.00000000]
[832.29054124 395.08710280 43.74267810 137.45008602 104.24126811 1.00000000]
[832.29054124 395.08710280 43.74267810 104.24126811 71.03245021 1.00000000]
[832.29054124 395.08710280 43.74267810 71.03245021 37.82363230 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[1071.27932935 455.74375323 36.01426010 165.16859189 124.55037604 1.00000000]
[1071.27932935 455.74375323 36.01426010 124.55037604 83.93216019 1.00000000]
[1071.27932935 455.74375323 36.01426010 83.93216019 43.31394433 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1544.23697072 575.78296739 36.01426010 165.16859189 124.55037604 1.00000000]
[1544.23697072 575.78296739 36.01426010 124.55037604 83.93216019 1.00000000]
[1544.23697072 575.78296739 36.01426010 83.93216019 43.31394433 1.00000000]
[1544.23697072 575.78296739 36.01426010 43.31394433 2.69572848 1.00000000]
[]
[1612.98299729 541.69161137 26.77024824 112.80108525 57.12987206 1.00000000]
[1612.98299729 541.69161137 26.77024824 57.12987206 1.45865886 1.00000000]
[1612.98299729 541.69161137 26.77024824 1.45865886 305.78744566 1.00000000]
[1612.98299729 541.69161137 26.77024824 305.78744566 250.11623247 1.00000000]
[1612.98299729 541.69161137 26.77024824 250.11623247 194.44501927 1.00000000]
[]
[1544.23697072 575.78296739 36.01426010 304.55037604 263.93216019 1.00000000]
[1544.23697072 575.78296739 36.01426010 263.93216019 223.31394433 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1071.27932935 455.74375323 36.01426010 345.16859189 304.55037604 1.00000000]
[1071.27932935 455.74375323 36.01426010 304.55037604 263.93216019 1.00000000]
[1071.27932935 455.74375323 36.01426010 263.93216019 223.31394433 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[832.29054124 395.08710280 43.74267810 350.65890393 317.45008602 1.00000000]
[832.29054124 395.08710280 43.74267810 317.45008602 284.24126811 1.00000000]
[832.29054124 395.08710280 43.74267810 284.24126811 251.03245021 1.00000000]
[832.29054124 395.08710280 43.74267810 251.03245021 217.82363230 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[536.49008273 320.01134235 43.74267810 350.65890393 317.45008602 1.00000000]
[536.49008273 320.01134235 43.74267810 317.45008602 284.24126811 1.00000000]
[536.49008273 320.01134235 43.74267810 284.24126811 251.03245021 1.00000000]
[536.49008273 320.01134235 43.74267810 251.03245021 217.82363230 1.00000000]
[]
[]
[392.50000000 283.46587851 61.02875511 357.57778080 333.93968297 1.00000000]
[392.50000000 283.46587851 61.02875511 333.93968297 310.30158514 1.00000000]
[392.50000000 283.46587851 61.02875511 310.30158514 286.66348732 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[24 51]
[25 50]
[26 49]
[28 48]
[29 47]
[30 46]
[52 157]
[53 156]
[54 155]
[58 151]
[59 150]
[60 149]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[66 143]
[67 142]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[78 131]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
[102 109]
[103 108]
] def

init

% Start Annotations
59 98 12 1.00 0.60 0.67 omark 111 150 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
