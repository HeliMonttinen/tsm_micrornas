%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCAUUGAGAAUCAUCAAGAAUAAAAAUAACUUCAAAAAUUGGCAAGUUUUCCUAUUGCAAGUAAAAAACUCUCAUUUUUUAAGRAAAAUGAGAGUUUUUUACUUGCAAGAGGAAGUCAUUACCAGGAUUUUAAUGGUUUAAAAAAAAUUUUUUAUUUUCGCUAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[96.46457672 199.74874878]
[117.50000000 213.25840759]
[138.53543091 199.74874878]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[335.00000000 125.00000000]
[335.00000000 150.00000000]
[335.00000000 175.00000000]
[335.00000000 200.00000000]
[335.00000000 225.00000000]
[335.00000000 250.00000000]
[335.00000000 275.00000000]
[335.00000000 300.00000000]
[335.00000000 325.00000000]
[310.45208740 338.23229980]
[293.81838989 360.61563110]
[269.07968140 357.01077271]
[244.34094238 353.40591431]
[219.60220337 349.80102539]
[206.39268494 328.57583618]
[183.71566772 318.05191040]
[158.97839355 321.66674805]
[140.26103210 338.23962402]
[115.52230072 334.63476562]
[90.78356171 331.02990723]
[66.04483032 327.42501831]
[41.30609894 323.82015991]
[-20.98921776 314.74264526]
[-45.72795105 311.13775635]
[-70.46668243 307.53289795]
[-91.11178589 293.43395996]
[-114.92186737 301.05499268]
[-139.66059875 297.45013428]
[-159.69966125 271.26943970]
[-192.32469177 266.51538086]
[-219.00177002 285.88873291]
[-243.74050903 282.28384399]
[-268.47924805 278.67898560]
[-293.21798706 275.07412720]
[-317.95669556 271.46923828]
[-342.69543457 267.86437988]
[-363.34054565 253.76545715]
[-387.15063477 261.38647461]
[-411.88937378 257.78161621]
[-436.62808228 254.17674255]
[-461.36682129 250.57188416]
[-486.10556030 246.96701050]
[-510.84429932 243.36213684]
[-535.58300781 239.75727844]
[-560.32177734 236.15240479]
[-585.06048584 232.54753113]
[-609.79925537 228.94267273]
[-634.53796387 225.33779907]
[-659.27667236 221.73292542]
[-684.01544189 218.12806702]
[-708.75415039 214.52319336]
[-733.49291992 210.91833496]
[-758.23162842 207.31346130]
[-782.97033691 203.70858765]
[-807.70910645 200.10372925]
[-832.44781494 196.49885559]
[-857.18658447 192.89398193]
[-881.92529297 189.28912354]
[-906.66400146 185.68424988]
[-931.40277100 182.07937622]
[-956.14147949 178.47451782]
[-973.40563965 160.39280701]
[-998.35504150 158.80261230]
[-1017.77508545 174.54621887]
[-1021.38000488 199.28495789]
[-1007.26031494 219.91587830]
[-982.89465332 225.51176453]
[-961.18829346 213.10873413]
[-936.44958496 216.71360779]
[-911.71081543 220.31848145]
[-886.97210693 223.92333984]
[-862.23339844 227.52821350]
[-837.49462891 231.13308716]
[-812.75592041 234.73794556]
[-788.01715088 238.34281921]
[-763.27844238 241.94769287]
[-738.53973389 245.55255127]
[-713.80096436 249.15742493]
[-689.06225586 252.76228333]
[-664.32348633 256.36715698]
[-639.58477783 259.97201538]
[-614.84606934 263.57690430]
[-590.10729980 267.18176270]
[-565.36859131 270.78662109]
[-540.62982178 274.39151001]
[-515.89111328 277.99636841]
[-491.15237427 281.60122681]
[-466.41363525 285.20611572]
[-441.67489624 288.81097412]
[-416.93618774 292.41583252]
[-392.19744873 296.02072144]
[-371.55233765 310.11962891]
[-347.74224854 302.49859619]
[-323.00350952 306.10348511]
[-298.26480103 309.70834351]
[-273.52606201 313.31320190]
[-248.78732300 316.91809082]
[-224.04858398 320.52294922]
[-210.83906555 341.74813843]
[-188.16206360 352.27206421]
[-163.42478943 348.65722656]
[-144.70741272 332.08435059]
[-119.96868134 335.68920898]
[-99.32357788 349.78814697]
[-75.51349640 342.16711426]
[-50.77476501 345.77200317]
[-26.03603363 349.37686157]
[-9.60456753 368.21847534]
[15.13416576 371.82336426]
[36.25928116 358.45437622]
[60.99801636 362.05926514]
[85.73674774 365.66412354]
[110.47547913 369.26898193]
[135.21421814 372.87387085]
[148.42373657 394.09902954]
[171.10073853 404.62298584]
[195.83802795 401.00814819]
[214.55538940 384.43527222]
[239.29411316 388.04013062]
[264.03286743 391.64498901]
[288.77157593 395.24987793]
[296.79553223 418.92721558]
[313.24557495 437.75262451]
[335.63339233 448.87850952]
[360.57254028 450.62191772]
[384.29058838 442.71914673]
[403.19985962 426.36557007]
[414.44006348 404.03494263]
[416.31097412 379.10504150]
[408.52957153 355.34689331]
[392.27288818 336.35424805]
[370.00000000 325.00000000]
[370.00000000 300.00000000]
[370.00000000 275.00000000]
[370.00000000 250.00000000]
[370.00000000 225.00000000]
[370.00000000 200.00000000]
[370.00000000 175.00000000]
[370.00000000 150.00000000]
[370.00000000 125.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[117.50000000 190.12681945 23.13159456 220.83979705 155.41989853 1.00000000]
[117.50000000 190.12681945 23.13159456 155.41989853 90.00000000 1.00000000]
[117.50000000 190.12681945 23.13159456 90.00000000 24.58010147 1.00000000]
[117.50000000 190.12681945 23.13159456 24.58010147 319.16020295 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[352.50000379 386.85139742 64.27943188 254.20187085 229.14532529 1.00000000]
[352.50000379 386.85139742 64.27943188 229.14532529 204.08877973 1.00000000]
[]
[]
[]
[177.40820915 361.33744550 43.74267810 344.70828640 311.49946849 1.00000000]
[177.40820915 361.33744550 43.74267810 311.49946849 278.29065058 1.00000000]
[177.40820915 361.33744550 43.74267810 278.29065058 245.08183267 1.00000000]
[177.40820915 361.33744550 43.74267810 245.08183267 211.87301476 1.00000000]
[]
[]
[]
[]
[7.63503257 336.59850972 36.01426008 339.21797434 217.36332682 1.00000000]
[]
[]
[-95.21768429 321.61106112 28.47466729 330.36914248 278.29065056 1.00000000]
[-95.21768429 321.61106112 28.47466729 278.29065056 226.21215863 1.00000000]
[]
[-181.85459600 308.98654041 43.74267810 344.70828635 300.42986247 1.00000000]
[-181.85459600 308.98654041 43.74267810 300.42986247 256.15143859 1.00000000]
[-181.85459600 308.98654041 43.74267810 256.15143859 211.87301471 1.00000000]
[]
[]
[]
[]
[]
[-367.44644090 281.94254678 28.47466729 330.36914244 278.29065051 1.00000000]
[-367.44644090 281.94254678 28.47466729 278.29065051 226.21215858 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-987.91555018 191.52929315 34.35139098 337.66406179 294.98594428 1.00000000]
[-987.91555018 191.52929315 34.35139098 294.98594428 252.30782676 1.00000000]
[-987.91555018 191.52929315 34.35139098 252.30782676 209.62970924 1.00000000]
[-987.91555018 191.52929315 34.35139098 209.62970924 166.95159173 1.00000000]
[-987.91555018 191.52929315 34.35139098 166.95159173 124.27347421 1.00000000]
[-987.91555018 191.52929315 34.35139098 124.27347421 81.59535669 1.00000000]
[-987.91555018 191.52929315 34.35139098 81.59535669 38.91723918 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-367.44644090 281.94254678 28.47466729 150.36914239 98.29065046 1.00000000]
[-367.44644090 281.94254678 28.47466729 98.29065046 46.21215863 1.00000000]
[]
[]
[]
[]
[]
[-181.85459600 308.98654041 43.74267810 164.70828635 131.49946844 1.00000000]
[-181.85459600 308.98654041 43.74267810 131.49946844 98.29065053 1.00000000]
[-181.85459600 308.98654041 43.74267810 98.29065053 65.08183262 1.00000000]
[-181.85459600 308.98654041 43.74267810 65.08183262 31.87301471 1.00000000]
[]
[-95.21768429 321.61106112 28.47466729 150.36914244 98.29065051 1.00000000]
[-95.21768429 321.61106112 28.47466729 98.29065051 46.21215868 1.00000000]
[]
[]
[7.63503257 336.59850972 36.01426008 159.21797434 118.59975847 1.00000000]
[7.63503257 336.59850972 36.01426008 118.59975847 77.98154260 1.00000000]
[7.63503257 336.59850972 36.01426008 77.98154260 37.36332682 1.00000000]
[]
[]
[]
[]
[177.40820915 361.33744550 43.74267810 164.70828640 131.49946849 1.00000000]
[177.40820915 361.33744550 43.74267810 131.49946849 98.29065058 1.00000000]
[177.40820915 361.33744550 43.74267810 98.29065058 65.08183267 1.00000000]
[177.40820915 361.33744550 43.74267810 65.08183267 31.87301476 1.00000000]
[]
[]
[]
[352.50000379 386.85139742 64.27943188 172.49252143 150.06575849 1.00000000]
[352.50000379 386.85139742 64.27943188 150.06575849 127.63899556 1.00000000]
[352.50000379 386.85139742 64.27943188 127.63899556 105.21223263 1.00000000]
[352.50000379 386.85139742 64.27943188 105.21223263 82.78546969 1.00000000]
[352.50000379 386.85139742 64.27943188 82.78546969 60.35870676 1.00000000]
[352.50000379 386.85139742 64.27943188 60.35870676 37.93194382 1.00000000]
[352.50000379 386.85139742 64.27943188 37.93194382 15.50518089 1.00000000]
[352.50000379 386.85139742 64.27943188 15.50518089 353.07841795 1.00000000]
[352.50000379 386.85139742 64.27943188 353.07841795 330.65165502 1.00000000]
[352.50000379 386.85139742 64.27943188 330.65165502 308.22489209 1.00000000]
[352.50000379 386.85139742 64.27943188 308.22489209 285.79812915 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[4 8]
[19 160]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[28 151]
[30 140]
[31 139]
[32 138]
[33 137]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[42 126]
[43 125]
[44 124]
[46 122]
[47 121]
[50 117]
[51 116]
[52 115]
[53 114]
[54 113]
[55 112]
[57 110]
[58 109]
[59 108]
[60 107]
[61 106]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
] def

init

% Start Annotations
97 116 12 1.00 0.60 0.67 omark 51 84 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
