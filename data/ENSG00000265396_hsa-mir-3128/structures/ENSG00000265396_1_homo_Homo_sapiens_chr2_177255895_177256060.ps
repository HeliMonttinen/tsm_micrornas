%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCAUUGAGAAUCAUCAAGAAUAAAAAUAACUUGAAAAAUUGGCAAGUUUUCCUAUUGCAAGUAAAAAACUCUCAUUUUUUAAGGAAAAUGAGAGUUUUUUACUUGCCAGAGGAAGUCACUACCAGGAAUUUUAAUGGUUAAAAAAAUUAUUUUCUUUUUGCGAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[150.00000000 250.00000000]
[150.00000000 275.00000000]
[150.00000000 300.00000000]
[139.02532959 322.46234131]
[150.00000000 344.92468262]
[150.00000000 369.92468262]
[129.64808655 384.44360352]
[119.04279327 407.08270264]
[94.45375061 411.59698486]
[69.86470032 416.11126709]
[45.27565765 420.62557983]
[20.68661118 425.13986206]
[3.70577264 406.79180908]
[-19.72987175 398.08718872]
[-44.57096481 400.90142822]
[-65.46533966 414.62823486]
[-77.91116333 436.31005859]
[-79.22691345 461.27542114]
[-69.12910461 484.14535522]
[-49.79336548 499.99240112]
[-25.38570786 505.40225220]
[-1.16491246 499.20925903]
[17.65049553 482.74777222]
[27.00662041 459.56451416]
[51.59566498 455.05023193]
[76.18471527 450.53594971]
[100.77375793 446.02163696]
[125.36280060 441.50735474]
[143.31805420 458.90301514]
[167.50000000 465.24600220]
[191.68194580 458.90301514]
[209.63719177 441.50735474]
[216.74238586 417.53826904]
[240.38143921 409.40222168]
[264.02047729 401.26620483]
[287.65954590 393.13015747]
[311.77792358 399.71069336]
[333.33850098 387.05599976]
[339.35186768 362.79000854]
[357.98059082 346.11752319]
[376.60931396 329.44506836]
[400.66607666 322.64273071]
[425.26705933 327.09146118]
[449.86804199 331.54019165]
[474.46905518 335.98892212]
[499.07003784 340.43765259]
[523.67102051 344.88638306]
[536.14697266 366.55087280]
[558.45086670 377.84414673]
[583.29730225 375.07733154]
[602.57043457 359.15420532]
[627.17144775 363.60296631]
[651.77239990 368.05169678]
[676.37341309 372.50042725]
[700.97442627 376.94915771]
[725.57537842 381.39788818]
[750.17639160 385.84661865]
[774.77734375 390.29537964]
[799.37835693 394.74411011]
[823.97937012 399.19284058]
[848.58032227 403.64157104]
[873.18133545 408.09030151]
[897.78234863 412.53903198]
[922.38330078 416.98779297]
[946.98431396 421.43652344]
[971.58532715 425.88525391]
[996.18627930 430.33398438]
[1020.78729248 434.78271484]
[1045.38830566 439.23144531]
[1069.98925781 443.68020630]
[1094.59020996 448.12893677]
[1119.19128418 452.57766724]
[1143.79223633 457.02639771]
[1165.08703613 470.12335205]
[1187.91174316 459.92367554]
[1192.36047363 435.32269287]
[1174.55346680 417.77536011]
[1150.02050781 422.58502197]
[1125.41943359 418.13626099]
[1100.81848145 413.68753052]
[1076.21752930 409.23880005]
[1051.61645508 404.79006958]
[1027.01550293 400.34133911]
[1002.41448975 395.89260864]
[977.81353760 391.44384766]
[953.21252441 386.99511719]
[928.61157227 382.54638672]
[904.01055908 378.09765625]
[879.40954590 373.64892578]
[854.80859375 369.20019531]
[830.20758057 364.75146484]
[805.60656738 360.30270386]
[781.00561523 355.85397339]
[756.40460205 351.40524292]
[731.80358887 346.95651245]
[707.20263672 342.50778198]
[682.60162354 338.05905151]
[658.00067139 333.61029053]
[633.39965820 329.16156006]
[608.79864502 324.71282959]
[596.32269287 303.04833984]
[574.01879883 291.75509644]
[549.17242432 294.52188110]
[529.89923096 310.44500732]
[505.29827881 305.99627686]
[480.69726562 301.54754639]
[456.09628296 297.09878540]
[431.49530029 292.65005493]
[406.89428711 288.20132446]
[386.74340820 273.40466309]
[362.68664551 280.20700073]
[353.26785278 303.36486816]
[334.63912964 320.03732300]
[316.01043701 336.70980835]
[291.22857666 340.00515747]
[276.26907349 360.03546143]
[252.63002014 368.17150879]
[228.99096680 376.30755615]
[205.35191345 384.44360352]
[185.00000000 369.92468262]
[185.00000000 344.92468262]
[195.97467041 322.46234131]
[185.00000000 300.00000000]
[185.00000000 275.00000000]
[185.00000000 250.00000000]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
[860.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999952 322.46233922 28.47466702 232.07849249 180.00000000 1.00000000]
[167.49999952 322.46233922 28.47466702 180.00000000 127.92150779 1.00000000]
[]
[167.49999987 415.97892760 49.26706700 249.19387728 219.79846928 1.00000000]
[167.49999987 415.97892760 49.26706700 219.79846928 190.40306129 1.00000000]
[]
[]
[]
[]
[-26.25299985 451.54995870 53.85926493 330.63615675 303.79628706 1.00000000]
[-26.25299985 451.54995870 53.85926493 303.79628706 276.95641737 1.00000000]
[-26.25299985 451.54995870 53.85926493 276.95641737 250.11654768 1.00000000]
[-26.25299985 451.54995870 53.85926493 250.11654768 223.27667799 1.00000000]
[-26.25299985 451.54995870 53.85926493 223.27667799 196.43680831 1.00000000]
[-26.25299985 451.54995870 53.85926493 196.43680831 169.59693862 1.00000000]
[-26.25299985 451.54995870 53.85926493 169.59693862 142.75706893 1.00000000]
[-26.25299985 451.54995870 53.85926493 142.75706893 115.91719924 1.00000000]
[-26.25299985 451.54995870 53.85926493 115.91719924 89.07732955 1.00000000]
[-26.25299985 451.54995870 53.85926493 89.07732955 62.23745986 1.00000000]
[-26.25299985 451.54995870 53.85926493 62.23745986 35.39759018 1.00000000]
[-26.25299985 451.54995870 53.85926493 35.39759018 8.55772049 1.00000000]
[]
[]
[]
[]
[167.49999987 415.97892760 49.26706700 148.79081595 119.39540795 1.00000000]
[167.49999987 415.97892760 49.26706700 119.39540795 89.99999995 1.00000000]
[167.49999987 415.97892760 49.26706700 89.99999995 60.60459196 1.00000000]
[167.49999987 415.97892760 49.26706700 60.60459196 31.20918396 1.00000000]
[167.49999987 415.97892760 49.26706700 31.20918396 1.81377596 1.00000000]
[]
[]
[]
[307.53232416 367.78285315 32.20889362 128.09716115 82.42555486 1.00000000]
[307.53232416 367.78285315 32.20889362 82.42555486 36.75394857 1.00000000]
[307.53232416 367.78285315 32.20889362 36.75394857 351.08234228 1.00000000]
[]
[]
[381.67635355 301.42486261 28.47466729 100.25034205 48.17185012 1.00000000]
[]
[]
[]
[]
[]
[566.23484449 334.79961214 43.74267810 166.66797784 133.45915993 1.00000000]
[566.23484449 334.79961214 43.74267810 133.45915993 100.25034203 1.00000000]
[566.23484449 334.79961214 43.74267810 100.25034203 67.04152412 1.00000000]
[566.23484449 334.79961214 43.74267810 67.04152412 33.83270621 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1166.84125725 443.41064645 26.77024824 149.42837502 93.75716182 1.00000000]
[1166.84125725 443.41064645 26.77024824 93.75716182 38.08594862 1.00000000]
[1166.84125725 443.41064645 26.77024824 38.08594862 342.41473543 1.00000000]
[1166.84125725 443.41064645 26.77024824 342.41473543 286.74352223 1.00000000]
[1166.84125725 443.41064645 26.77024824 286.74352223 231.07230903 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[566.23484449 334.79961214 43.74267810 346.66797784 313.45915993 1.00000000]
[566.23484449 334.79961214 43.74267810 313.45915993 280.25034203 1.00000000]
[566.23484449 334.79961214 43.74267810 280.25034203 247.04152412 1.00000000]
[566.23484449 334.79961214 43.74267810 247.04152412 213.83270621 1.00000000]
[]
[]
[]
[]
[]
[381.67635355 301.42486261 28.47466729 332.32883393 280.25034200 1.00000000]
[381.67635355 301.42486261 28.47466729 280.25034200 228.17185008 1.00000000]
[381.67635355 301.42486261 28.47466729 228.17185008 176.09335824 1.00000000]
[]
[]
[307.53232416 367.78285315 32.20889362 285.26135801 239.58975172 1.00000000]
[307.53232416 367.78285315 32.20889362 239.58975172 193.91814543 1.00000000]
[]
[]
[]
[167.49999987 415.97892760 49.26706700 320.20153062 290.80612262 1.00000000]
[]
[167.49999952 322.46233922 28.47466702 52.07849127 360.00000000 1.00000000]
[167.49999952 322.46233922 28.47466702 360.00000000 307.92150836 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 139]
[4 138]
[5 137]
[6 136]
[7 135]
[8 134]
[9 133]
[10 132]
[11 131]
[13 129]
[14 128]
[16 36]
[17 35]
[18 34]
[19 33]
[20 32]
[41 127]
[42 126]
[43 125]
[44 124]
[47 122]
[48 121]
[49 120]
[50 117]
[51 116]
[52 115]
[53 114]
[54 113]
[55 112]
[59 108]
[60 107]
[61 106]
[62 105]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% Start Annotations
97 116 12 1.00 0.60 0.67 omark 51 84 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
