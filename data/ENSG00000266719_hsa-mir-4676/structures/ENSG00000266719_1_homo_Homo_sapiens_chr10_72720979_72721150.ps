%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUUGCUACAUACUGAUCCAAGUAAGAAUAGUUCUUUAUAUCCAGAGCCUGAAUGAAAGAGCCAGUGGUGAGACAGUGAGUUGAUUACUUCUCACUGUUUCACCACUGGCUCUUUGGUUCAUGCUAACAAUGUAUCUCACCUAGAUUAUAUUAACAGCUUUCUAAUUAGUC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[139.02532959 197.46234131]
[150.00000000 219.92468262]
[150.00000000 244.92468262]
[128.34936523 257.42468262]
[150.00000000 269.92468262]
[150.00000000 294.92468262]
[150.00000000 319.92468262]
[128.34936523 332.42468262]
[150.00000000 344.92468262]
[150.00000000 369.92468262]
[150.00000000 394.92468262]
[150.00000000 419.92468262]
[150.00000000 444.92468262]
[130.90136719 461.05670166]
[123.75732422 485.01422119]
[130.90136719 508.97174072]
[150.00000000 525.10375977]
[150.00000000 550.10375977]
[139.02532959 572.56610107]
[150.00000000 595.02844238]
[150.00000000 620.02844238]
[150.00000000 645.02844238]
[128.66282654 658.05633545]
[115.21133423 679.12896729]
[112.37677765 703.96777344]
[120.73469543 727.52929688]
[138.58805847 745.02947998]
[162.31182861 752.91510010]
[187.08903503 749.58489990]
[207.88879395 735.71514893]
[220.48782349 714.12200928]
[222.32795715 689.18981934]
[244.56617737 677.76782227]
[266.80438232 666.34582520]
[289.04260254 654.92382812]
[311.28082275 643.50183105]
[333.15899658 655.59918213]
[358.15606689 655.98187256]
[380.39425659 644.55987549]
[394.64459229 624.01898193]
[397.55621338 599.18908691]
[419.79440308 587.76708984]
[442.03262329 576.34509277]
[467.02761841 575.84478760]
[481.99441528 555.81994629]
[504.23263550 544.39794922]
[526.47082520 532.97595215]
[548.70904541 521.55395508]
[570.94726562 510.13198853]
[595.94226074 509.63168335]
[610.90905762 489.60681152]
[633.14727783 478.18481445]
[655.38549805 466.76281738]
[677.62371826 455.34082031]
[699.86187744 443.91885376]
[722.10009766 432.49685669]
[744.33831787 421.07485962]
[766.57653809 409.65286255]
[788.81475830 398.23086548]
[811.05297852 386.80889893]
[833.29119873 375.38690186]
[855.52941895 363.96490479]
[877.76763916 352.54290771]
[900.00579834 341.12094116]
[922.24401855 329.69894409]
[944.48223877 318.27694702]
[966.72045898 306.85494995]
[988.95867920 295.43295288]
[1011.19689941 284.01098633]
[1033.43505859 272.58898926]
[1055.67333984 261.16699219]
[1077.91149902 249.74501038]
[1100.14978027 238.32301331]
[1122.38793945 226.90101624]
[1144.62622070 215.47903442]
[1168.94226074 221.28643799]
[1191.18054199 209.86444092]
[1200.62487793 186.71699524]
[1225.49499512 184.17169189]
[1237.41821289 162.19819641]
[1225.99633789 139.95999146]
[1201.19030762 136.85139465]
[1184.63403320 155.58349609]
[1160.31799316 149.77609253]
[1138.07971191 161.19808960]
[1128.63537598 184.34553528]
[1106.39721680 195.76753235]
[1084.15893555 207.18951416]
[1061.92077637 218.61151123]
[1039.68249512 230.03349304]
[1017.44433594 241.45549011]
[995.20611572 252.87747192]
[972.96789551 264.29946899]
[950.72967529 275.72146606]
[928.49145508 287.14346313]
[906.25323486 298.56542969]
[884.01501465 309.98742676]
[861.77679443 321.40942383]
[839.53863525 332.83142090]
[817.30041504 344.25338745]
[795.06219482 355.67538452]
[772.82397461 367.09738159]
[750.58575439 378.51937866]
[728.34753418 389.94137573]
[706.10931396 401.36334229]
[683.87109375 412.78533936]
[661.63287354 424.20733643]
[639.39471436 435.62933350]
[617.15649414 447.05130005]
[594.91827393 458.47329712]
[569.92327881 458.97360229]
[554.95648193 478.99847412]
[532.71826172 490.42047119]
[510.48004150 501.84246826]
[488.24185181 513.26446533]
[466.00363159 524.68646240]
[441.00863647 525.18676758]
[426.04183960 545.21160889]
[403.80361938 556.63360596]
[381.56542969 568.05560303]
[359.68725586 555.95825195]
[334.69018555 555.57556152]
[312.45196533 566.99755859]
[298.20166016 587.53845215]
[295.29000854 612.36834717]
[273.05181885 623.79034424]
[250.81359863 635.21234131]
[228.57537842 646.63433838]
[206.33717346 658.05633545]
[185.00000000 645.02844238]
[185.00000000 620.02844238]
[185.00000000 595.02844238]
[195.97467041 572.56610107]
[185.00000000 550.10375977]
[185.00000000 525.10375977]
[204.09861755 508.97174072]
[211.24267578 485.01422119]
[204.09861755 461.05670166]
[185.00000000 444.92468262]
[185.00000000 419.92468262]
[185.00000000 394.92468262]
[185.00000000 369.92468262]
[185.00000000 344.92468262]
[185.00000000 319.92468262]
[185.00000000 294.92468262]
[185.00000000 269.92468262]
[185.00000000 244.92468262]
[185.00000000 219.92468262]
[195.97467041 197.46234131]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[167.49999825 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[167.49999825 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999866 485.01422653 43.74267810 246.41763577 213.20881786 1.00000000]
[167.49999866 485.01422653 43.74267810 213.20881786 180.00000000 1.00000000]
[167.49999866 485.01422653 43.74267810 180.00000000 146.79118204 1.00000000]
[167.49999866 485.01422653 43.74267810 146.79118204 113.58236413 1.00000000]
[]
[167.49999778 572.56611443 28.47466635 232.07849393 180.00000000 1.00000000]
[167.49999778 572.56611443 28.47466635 180.00000000 127.92150707 1.00000000]
[]
[]
[167.49999893 697.67720193 55.48099457 251.61362824 225.57230885 1.00000000]
[167.49999893 697.67720193 55.48099457 225.57230885 199.53098945 1.00000000]
[167.49999893 697.67720193 55.48099457 199.53098945 173.48967006 1.00000000]
[167.49999893 697.67720193 55.48099457 173.48967006 147.44835066 1.00000000]
[167.49999893 697.67720193 55.48099457 147.44835066 121.40703126 1.00000000]
[167.49999893 697.67720193 55.48099457 121.40703126 95.36571187 1.00000000]
[167.49999893 697.67720193 55.48099457 95.36571187 69.32439247 1.00000000]
[167.49999893 697.67720193 55.48099457 69.32439247 43.28307308 1.00000000]
[167.49999893 697.67720193 55.48099457 43.28307308 17.24175368 1.00000000]
[167.49999893 697.67720193 55.48099457 17.24175368 351.20043429 1.00000000]
[]
[]
[]
[]
[346.42311324 605.77871820 51.55595110 132.97148273 104.90851469 1.00000000]
[346.42311324 605.77871820 51.55595110 104.90851469 76.84554665 1.00000000]
[346.42311324 605.77871820 51.55595110 76.84554665 48.78257860 1.00000000]
[346.42311324 605.77871820 51.55595110 48.78257860 20.71961056 1.00000000]
[346.42311324 605.77871820 51.55595110 20.71961056 352.65664252 1.00000000]
[]
[]
[454.01812782 550.51577057 28.47466729 114.89255453 62.81406260 1.00000000]
[454.01812782 550.51577057 28.47466729 62.81406260 10.73557067 1.00000000]
[]
[]
[]
[]
[582.93276461 484.30263918 28.47466729 114.89255448 62.81406255 1.00000000]
[582.93276461 484.30263918 28.47466729 62.81406255 10.73557063 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1164.63011969 185.53126276 36.01426010 123.74138642 83.12317060 1.00000000]
[1164.63011969 185.53126276 36.01426010 83.12317060 42.50495471 1.00000000]
[1164.63011969 185.53126276 36.01426010 42.50495471 1.88673869 1.00000000]
[1210.64974217 161.89466574 26.77024824 111.99209538 56.32088233 1.00000000]
[1210.64974217 161.89466574 26.77024824 56.32088233 0.64966913 1.00000000]
[1210.64974217 161.89466574 26.77024824 0.64966913 304.97845593 1.00000000]
[1210.64974217 161.89466574 26.77024824 304.97845593 249.30724273 1.00000000]
[1210.64974217 161.89466574 26.77024824 249.30724273 193.63602940 1.00000000]
[1164.63011969 185.53126276 36.01426010 303.74138613 263.12317032 1.00000000]
[1164.63011969 185.53126276 36.01426010 263.12317032 222.50495450 1.00000000]
[1164.63011969 185.53126276 36.01426010 222.50495450 181.88673873 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[582.93276461 484.30263918 28.47466729 294.89255443 242.81406251 1.00000000]
[582.93276461 484.30263918 28.47466729 242.81406251 190.73557067 1.00000000]
[]
[]
[]
[]
[454.01812782 550.51577057 28.47466729 294.89255448 242.81406255 1.00000000]
[454.01812782 550.51577057 28.47466729 242.81406255 190.73557072 1.00000000]
[]
[]
[346.42311324 605.77871820 51.55595110 312.97148273 284.90851469 1.00000000]
[346.42311324 605.77871820 51.55595110 284.90851469 256.84554665 1.00000000]
[346.42311324 605.77871820 51.55595110 256.84554665 228.78257860 1.00000000]
[346.42311324 605.77871820 51.55595110 228.78257860 200.71961056 1.00000000]
[346.42311324 605.77871820 51.55595110 200.71961056 172.65664252 1.00000000]
[]
[]
[]
[]
[167.49999893 697.67720193 55.48099457 314.42769096 288.38637157 1.00000000]
[]
[]
[167.49999778 572.56611443 28.47466635 52.07848974 360.00000000 1.00000000]
[167.49999778 572.56611443 28.47466635 360.00000000 307.92150898 1.00000000]
[]
[167.49999866 485.01422653 43.74267810 66.41763577 33.20881786 1.00000000]
[167.49999866 485.01422653 43.74267810 33.20881786 360.00000000 1.00000000]
[167.49999866 485.01422653 43.74267810 360.00000000 326.79118204 1.00000000]
[167.49999866 485.01422653 43.74267810 326.79118204 293.58236413 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999825 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[167.49999825 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 159]
[4 158]
[5 157]
[6 156]
[8 154]
[9 153]
[11 152]
[12 151]
[13 150]
[15 149]
[16 148]
[17 147]
[18 146]
[19 145]
[23 141]
[24 140]
[26 138]
[27 137]
[28 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[47 126]
[48 125]
[49 124]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[84 89]
] def

init

% Start Annotations
48 81 12 1.00 0.60 0.67 omark 95 125 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
