%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUUAGAAGAGUUGGGUCCCAAAUCACCAUCAUUGUSUUCCUGUUAUUGAACAGAGAUGGAAGGGCCUUCUGGAGGUWAUCACAGCCAUUCCUKUGCAUCUUGAUGGCAUGCCUUUAGUMUGWCA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[450.00000000 125.00000000]
[450.00000000 150.00000000]
[450.00000000 175.00000000]
[450.00000000 200.00000000]
[450.00000000 225.00000000]
[428.66284180 238.02786255]
[415.21133423 259.10052490]
[412.37677002 283.93930054]
[420.73468018 307.50082397]
[438.58804321 325.00103760]
[462.31182861 332.88662720]
[487.08905029 329.55645752]
[507.88879395 315.68670654]
[530.56549072 326.21130371]
[553.24218750 336.73587036]
[575.91888428 347.26046753]
[598.59564209 357.78506470]
[614.35034180 377.19610596]
[639.34539795 376.69760132]
[662.02209473 387.22219849]
[684.69879150 397.74679565]
[707.37548828 408.27139282]
[723.13018799 427.68243408]
[748.12524414 427.18392944]
[763.09350586 407.16015625]
[785.33251953 395.73977661]
[808.67407227 404.69363403]
[832.97766113 398.83401489]
[849.67431641 380.22698975]
[852.87707520 355.43298340]
[841.45666504 333.19393921]
[819.43981934 321.35092163]
[794.58917236 324.07958984]
[775.66662598 340.41784668]
[769.34399414 364.60513306]
[747.10491943 376.02551270]
[722.10992432 376.52398682]
[699.43322754 365.99942017]
[676.75653076 355.47482300]
[654.07977295 344.95022583]
[638.32507324 325.53918457]
[613.33001709 326.03765869]
[590.65332031 315.51309204]
[567.97662354 304.98849487]
[545.29992676 294.46389771]
[522.62322998 283.93930054]
[519.78863525 259.10052490]
[506.33715820 238.02786255]
[485.00000000 225.00000000]
[485.00000000 200.00000000]
[485.00000000 175.00000000]
[485.00000000 150.00000000]
[485.00000000 125.00000000]
[485.00000000 100.00000000]
[710.00000000 100.00000000]
[935.00000000 100.00000000]
[935.00000000 125.00000000]
[935.00000000 150.00000000]
[935.00000000 175.00000000]
[935.00000000 200.00000000]
[935.00000000 225.00000000]
[935.00000000 250.00000000]
[935.00000000 275.00000000]
[913.34936523 287.50000000]
[935.00000000 300.00000000]
[935.00000000 325.00000000]
[918.72460938 343.97662354]
[918.72460938 368.97662354]
[935.00000000 387.95321655]
[959.70812988 391.76214600]
[980.94287109 378.56799316]
[1005.65100098 382.37692261]
[1030.35913086 386.18588257]
[1055.06726074 389.99481201]
[1079.77539062 393.80374146]
[1104.48352051 397.61267090]
[1113.58593750 420.89672852]
[1131.66992188 438.15850830]
[1155.35205078 446.16830444]
[1180.20129395 443.42749023]
[1201.56848145 430.44888306]
[1215.45568848 409.66076660]
[1219.26464844 384.95263672]
[1212.28271484 360.94738770]
[1195.81604004 342.13641357]
[1172.94580078 332.03930664]
[1147.95092773 332.54519653]
[1125.50805664 343.55944824]
[1109.81604004 363.02130127]
[1085.10791016 359.21234131]
[1060.39978027 355.40341187]
[1035.69165039 351.59448242]
[1010.98352051 347.78555298]
[986.27539062 343.97662354]
[970.00000000 325.00000000]
[970.00000000 300.00000000]
[970.00000000 275.00000000]
[970.00000000 250.00000000]
[970.00000000 225.00000000]
[970.00000000 200.00000000]
[970.00000000 175.00000000]
[970.00000000 150.00000000]
[970.00000000 125.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
[1020.00000000 100.00000000]
[1045.00000000 100.00000000]
[1070.00000000 100.00000000]
[1095.00000000 100.00000000]
[1120.00000000 100.00000000]
[1145.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[467.49999878 277.64874887 55.48099457 251.61362834 225.57230894 1.00000000]
[467.49999878 277.64874887 55.48099457 225.57230894 199.53098955 1.00000000]
[467.49999878 277.64874887 55.48099457 199.53098955 173.48967015 1.00000000]
[467.49999878 277.64874887 55.48099457 173.48967015 147.44835076 1.00000000]
[467.49999878 277.64874887 55.48099457 147.44835076 121.40703136 1.00000000]
[467.49999878 277.64874887 55.48099457 121.40703136 95.36571196 1.00000000]
[467.49999878 277.64874887 55.48099457 95.36571196 69.32439257 1.00000000]
[467.49999878 277.64874887 55.48099457 69.32439257 43.28307317 1.00000000]
[]
[]
[]
[]
[626.33770717 351.36764414 28.47466729 166.97519341 114.89670149 1.00000000]
[626.33770717 351.36764414 28.47466729 114.89670149 62.81820956 1.00000000]
[]
[]
[]
[735.11757537 401.85396615 28.47466729 166.97519337 114.89670144 1.00000000]
[735.11757537 401.85396615 28.47466729 114.89670144 62.81820951 1.00000000]
[735.11757537 401.85396615 28.47466729 62.81820951 10.73971759 1.00000000]
[]
[811.40263840 362.67941225 42.10271758 128.25794460 93.71578124 1.00000000]
[811.40263840 362.67941225 42.10271758 93.71578124 59.17361788 1.00000000]
[811.40263840 362.67941225 42.10271758 59.17361788 24.63145453 1.00000000]
[811.40263840 362.67941225 42.10271758 24.63145453 350.08929117 1.00000000]
[811.40263840 362.67941225 42.10271758 350.08929117 315.54712781 1.00000000]
[811.40263840 362.67941225 42.10271758 315.54712781 281.00496445 1.00000000]
[811.40263840 362.67941225 42.10271758 281.00496445 246.46280109 1.00000000]
[811.40263840 362.67941225 42.10271758 246.46280109 211.92063774 1.00000000]
[811.40263840 362.67941225 42.10271758 211.92063774 177.37847438 1.00000000]
[]
[735.11757537 401.85396615 28.47466729 294.89670139 242.81820956 1.00000000]
[]
[]
[]
[626.33770717 351.36764414 28.47466729 346.97519337 294.89670144 1.00000000]
[626.33770717 351.36764414 28.47466729 294.89670144 242.81820961 1.00000000]
[]
[]
[]
[]
[467.49999878 277.64874887 55.48099457 6.51032985 340.46901045 1.00000000]
[467.49999878 277.64874887 55.48099457 340.46901045 314.42769106 1.00000000]
[467.49999878 277.64874887 55.48099457 314.42769106 288.38637166 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[952.49999993 356.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[952.49999993 356.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[952.49999993 356.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[952.49999993 356.47660926 36.01426010 119.07267622 78.45446037 1.00000000]
[952.49999993 356.47660926 36.01426010 78.45446037 37.83624451 1.00000000]
[]
[]
[]
[]
[]
[1161.59027309 388.70937013 57.79658687 171.13855170 146.15778502 1.00000000]
[1161.59027309 388.70937013 57.79658687 146.15778502 121.17701834 1.00000000]
[1161.59027309 388.70937013 57.79658687 121.17701834 96.19625167 1.00000000]
[1161.59027309 388.70937013 57.79658687 96.19625167 71.21548499 1.00000000]
[1161.59027309 388.70937013 57.79658687 71.21548499 46.23471831 1.00000000]
[1161.59027309 388.70937013 57.79658687 46.23471831 21.25395163 1.00000000]
[1161.59027309 388.70937013 57.79658687 21.25395163 356.27318495 1.00000000]
[1161.59027309 388.70937013 57.79658687 356.27318495 331.29241828 1.00000000]
[1161.59027309 388.70937013 57.79658687 331.29241828 306.31165160 1.00000000]
[1161.59027309 388.70937013 57.79658687 306.31165160 281.33088492 1.00000000]
[1161.59027309 388.70937013 57.79658687 281.33088492 256.35011824 1.00000000]
[1161.59027309 388.70937013 57.79658687 256.35011824 231.36935156 1.00000000]
[1161.59027309 388.70937013 57.79658687 231.36935156 206.38858489 1.00000000]
[]
[]
[]
[]
[]
[952.49999993 356.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[20 64]
[28 61]
[29 60]
[30 59]
[31 58]
[32 57]
[34 55]
[35 54]
[36 53]
[37 52]
[40 51]
[41 50]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
[80 111]
[81 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
] def

init

% Start Annotations
78 102 12 1.00 0.60 0.67 omark 52 98 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
