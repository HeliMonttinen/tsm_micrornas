%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCUCUUGCGUUGAUCCCUUUUCAGAAGAAUCAGUCUCUGAGGAGGAAAUUAACUAUGGCUUUUAACUUUGAUGGCAAAGACAUAGAUUGUUUAGCUACCCCUUUGCCAUCAAAGUUAAAAGCCAGAGUUAAUAACAACAUUUCCUAAAAAGCACUUGGAACUUCCAGAAUAAAACUCACCAU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[375.00000000 125.00000000]
[375.00000000 150.00000000]
[375.00000000 175.00000000]
[353.45782471 187.68600464]
[339.40023804 208.35928345]
[335.52218628 233.05665588]
[342.56707764 257.04351807]
[325.47277832 275.28591919]
[308.37847900 293.52828979]
[291.28417969 311.77069092]
[274.18988037 330.01309204]
[257.09558105 348.25546265]
[240.00126648 366.49786377]
[222.90696716 384.74026489]
[205.81266785 402.98263550]
[188.71836853 421.22503662]
[164.37284851 415.54214478]
[171.62406921 439.46743774]
[154.52975464 457.70980835]
[130.49916077 464.60400391]
[119.67695618 487.14022827]
[129.32069397 510.20529175]
[152.96313477 518.33148193]
[174.74931335 506.06927490]
[180.06910706 481.64184570]
[197.16340637 463.39944458]
[214.25772095 445.15707397]
[231.35202026 426.91467285]
[248.44631958 408.67227173]
[265.54061890 390.42990112]
[282.63491821 372.18750000]
[299.72921753 353.94509888]
[316.82351685 335.70272827]
[333.91781616 317.46032715]
[351.01214600 299.21792603]
[368.10644531 280.97552490]
[392.50000000 286.44857788]
[416.89355469 280.97552490]
[436.61074829 265.60568237]
[459.86004639 274.79644775]
[483.10934448 283.98721313]
[506.35864258 293.17797852]
[529.60797119 302.36871338]
[552.85723877 311.55947876]
[576.10656738 320.75024414]
[592.96124268 339.21423340]
[617.88525391 337.26593018]
[641.13452148 346.45669556]
[664.38385010 355.64746094]
[687.63311768 364.83822632]
[710.88244629 374.02899170]
[734.13171387 383.21975708]
[757.38104248 392.41049194]
[780.63031006 401.60125732]
[803.87963867 410.79202271]
[827.12890625 419.98278809]
[850.37823486 429.17355347]
[873.62750244 438.36431885]
[896.87683105 447.55508423]
[920.12609863 456.74584961]
[943.37542725 465.93661499]
[966.62469482 475.12738037]
[989.87402344 484.31811523]
[1013.12329102 493.50888062]
[1036.37255859 502.69964600]
[1059.62194824 511.89041138]
[1082.87121582 521.08117676]
[1106.12048340 530.27191162]
[1129.36975098 539.46270752]
[1152.61914062 548.65344238]
[1160.60021973 572.34527588]
[1180.25366211 587.79656982]
[1205.15979004 589.96032715]
[1227.18334961 578.12976074]
[1250.43273926 587.32049561]
[1273.68200684 596.51129150]
[1280.80358887 620.47546387]
[1299.40539551 637.17797852]
[1323.99523926 641.68737793]
[1347.31335449 632.67236328]
[1362.47485352 612.79449463]
[1365.00341797 587.92272949]
[1354.15258789 565.40026855]
[1333.12609863 551.87683105]
[1308.13171387 551.34521484]
[1286.54907227 563.96228027]
[1263.29980469 554.77148438]
[1240.05053711 545.58074951]
[1232.06933594 521.88891602]
[1212.41589355 506.43762207]
[1187.50976562 504.27389526]
[1165.48620605 516.10443115]
[1142.23681641 506.91369629]
[1118.98754883 497.72293091]
[1095.73828125 488.53216553]
[1072.48901367 479.34140015]
[1049.23962402 470.15063477]
[1025.99035645 460.95986938]
[1002.74108887 451.76910400]
[979.49176025 442.57833862]
[956.24249268 433.38757324]
[932.99316406 424.19683838]
[909.74389648 415.00607300]
[886.49456787 405.81530762]
[863.24530029 396.62454224]
[839.99597168 387.43377686]
[816.74670410 378.24301147]
[793.49737549 369.05224609]
[770.24810791 359.86148071]
[746.99877930 350.67071533]
[723.74951172 341.47994995]
[700.50018311 332.28921509]
[677.25091553 323.09844971]
[654.00158691 313.90768433]
[630.75231934 304.71691895]
[613.89758301 286.25292969]
[588.97363281 288.20123291]
[565.72430420 279.01046753]
[542.47503662 269.81970215]
[519.22570801 260.62893677]
[495.97640991 251.43818665]
[472.72711182 242.24742126]
[449.47781372 233.05665588]
[445.59976196 208.35928345]
[431.54217529 187.68600464]
[410.00000000 175.00000000]
[410.00000000 150.00000000]
[410.00000000 125.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
[835.00000000 125.00000000]
[835.00000000 150.00000000]
[835.00000000 175.00000000]
[835.00000000 200.00000000]
[831.46459961 224.74874878]
[852.50000000 238.25840759]
[873.53540039 224.74874878]
[870.00000000 200.00000000]
[870.00000000 175.00000000]
[870.00000000 150.00000000]
[870.00000000 125.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
[1020.00000000 100.00000000]
[1045.00000000 100.00000000]
[1070.00000000 100.00000000]
[1095.00000000 100.00000000]
[1120.00000000 100.00000000]
[1145.00000000 100.00000000]
[1170.00000000 100.00000000]
[1195.00000000 100.00000000]
[1220.00000000 100.00000000]
[1245.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[392.49999939 229.35032978 57.09823419 252.15221149 226.86088460 1.00000000]
[392.49999939 229.35032978 57.09823419 226.86088460 201.56955770 1.00000000]
[392.49999939 229.35032978 57.09823419 201.56955770 176.27823081 1.00000000]
[392.49999939 229.35032978 57.09823419 176.27823081 150.98690391 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[150.19513733 487.92888822 30.52836670 278.16282950 229.82159147 1.00000000]
[150.19513733 487.92888822 30.52836670 229.82159147 181.48035343 1.00000000]
[150.19513733 487.92888822 30.52836670 181.48035343 133.13911540 1.00000000]
[150.19513733 487.92888822 30.52836670 133.13911540 84.79787737 1.00000000]
[150.19513733 487.92888822 30.52836670 84.79787737 36.45663934 1.00000000]
[150.19513733 487.92888822 30.52836670 36.45663934 348.11540131 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[392.49999939 229.35032978 57.09823419 115.29132690 90.00000000 1.00000000]
[392.49999939 229.35032978 57.09823419 90.00000000 64.70867310 1.00000000]
[392.49999939 229.35032978 57.09823419 64.70867310 39.41734621 1.00000000]
[]
[]
[]
[]
[]
[]
[603.42941843 312.73358316 28.47466729 163.64804960 111.56955768 1.00000000]
[603.42941843 312.73358316 28.47466729 111.56955768 59.49106575 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1196.33478804 547.11709765 43.74267810 177.98719347 144.77837556 1.00000000]
[1196.33478804 547.11709765 43.74267810 144.77837556 111.56955765 1.00000000]
[1196.33478804 547.11709765 43.74267810 111.56955765 78.36073974 1.00000000]
[1196.33478804 547.11709765 43.74267810 78.36073974 45.15192184 1.00000000]
[]
[]
[1319.68721577 595.87998126 46.00953986 179.21382791 147.68497386 1.00000000]
[1319.68721577 595.87998126 46.00953986 147.68497386 116.15611981 1.00000000]
[1319.68721577 595.87998126 46.00953986 116.15611981 84.62726576 1.00000000]
[1319.68721577 595.87998126 46.00953986 84.62726576 53.09841171 1.00000000]
[1319.68721577 595.87998126 46.00953986 53.09841171 21.56955765 1.00000000]
[1319.68721577 595.87998126 46.00953986 21.56955765 350.04070360 1.00000000]
[1319.68721577 595.87998126 46.00953986 350.04070360 318.51184955 1.00000000]
[1319.68721577 595.87998126 46.00953986 318.51184955 286.98299550 1.00000000]
[1319.68721577 595.87998126 46.00953986 286.98299550 255.45414145 1.00000000]
[1319.68721577 595.87998126 46.00953986 255.45414145 223.92528739 1.00000000]
[]
[]
[1196.33478804 547.11709765 43.74267810 357.98719347 324.77837556 1.00000000]
[1196.33478804 547.11709765 43.74267810 324.77837556 291.56955765 1.00000000]
[1196.33478804 547.11709765 43.74267810 291.56955765 258.36073974 1.00000000]
[1196.33478804 547.11709765 43.74267810 258.36073974 225.15192184 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[603.42941843 312.73358316 28.47466729 343.64804956 291.56955763 1.00000000]
[603.42941843 312.73358316 28.47466729 291.56955763 239.49106580 1.00000000]
[]
[]
[]
[]
[]
[]
[392.49999939 229.35032978 57.09823419 3.72176919 338.43044230 1.00000000]
[392.49999939 229.35032978 57.09823419 338.43044230 313.13911540 1.00000000]
[392.49999939 229.35032978 57.09823419 313.13911540 287.84778851 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[852.49999984 215.12681945 23.13159456 220.83979705 155.41989853 1.00000000]
[852.49999984 215.12681945 23.13159456 155.41989853 90.00000000 1.00000000]
[852.49999984 215.12681945 23.13159456 90.00000000 24.58010147 1.00000000]
[852.49999984 215.12681945 23.13159456 24.58010147 319.16020295 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 141]
[13 140]
[14 139]
[15 138]
[19 48]
[20 47]
[21 46]
[22 45]
[23 44]
[24 43]
[25 42]
[26 41]
[27 40]
[28 39]
[30 38]
[31 37]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[59 127]
[60 126]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[86 100]
[87 99]
[88 98]
[158 170]
[159 169]
[160 168]
[161 167]
[162 166]
] def

init

% Start Annotations
51 88 12 1.00 0.60 0.67 omark 98 135 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
