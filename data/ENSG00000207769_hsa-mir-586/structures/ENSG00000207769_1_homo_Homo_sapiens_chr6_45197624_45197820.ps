%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:56 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGUAUUUGCAGAAAAAAAUUGACAAUACUAUUUUUUCAUUUACAUAAAAUAAGAAGAUAAAGAGUGAAAAACCAUUAUGCAUUGUAUUUUUAGGGCCCACAUGUAUUGGGACCUAAAAAUACAAUGCAUAAUGGUUUUACCCCAUGUCUUUUAAUAAGAAUUUGACUUUGUUAGAUAAUUGCUUUUCUUUGAAUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[100.00000000 275.00000000]
[83.72460938 293.97662354]
[83.72460938 318.97662354]
[100.00000000 337.95321655]
[100.00000000 362.95321655]
[100.00000000 387.95321655]
[82.74304962 406.04180908]
[80.36176300 430.92816162]
[93.87529755 451.96109009]
[117.50000000 460.13870239]
[141.12469482 451.96109009]
[154.63824463 430.92816162]
[152.25695801 406.04180908]
[135.00000000 387.95321655]
[135.00000000 362.95321655]
[135.00000000 337.95321655]
[151.27539062 318.97662354]
[151.27539062 293.97662354]
[135.00000000 275.00000000]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[660.00000000 125.00000000]
[660.00000000 150.00000000]
[660.00000000 175.00000000]
[660.00000000 200.00000000]
[660.00000000 225.00000000]
[660.00000000 250.00000000]
[660.00000000 275.00000000]
[643.72460938 293.97662354]
[643.72460938 318.97662354]
[660.00000000 337.95321655]
[649.02532959 360.41555786]
[660.00000000 382.87789917]
[660.00000000 407.87789917]
[660.00000000 432.87789917]
[660.00000000 457.87789917]
[660.00000000 482.87789917]
[649.02532959 505.34024048]
[660.00000000 527.80255127]
[684.46429443 532.95013428]
[704.18566895 548.31463623]
[723.90698242 563.67919922]
[743.62829590 579.04370117]
[763.34967041 594.40826416]
[783.07098389 609.77276611]
[802.79235840 625.13732910]
[822.51367188 640.50183105]
[842.23498535 655.86639404]
[861.95635986 671.23089600]
[881.67767334 686.59545898]
[901.39898682 701.95996094]
[921.12036133 717.32452393]
[940.84167480 732.68902588]
[960.56304932 748.05358887]
[980.28436279 763.41809082]
[1000.00567627 778.78265381]
[1019.72705078 794.14721680]
[1039.44836426 809.51171875]
[1059.16967773 824.87628174]
[1078.89099121 840.24078369]
[1098.61242676 855.60534668]
[1118.33374023 870.96984863]
[1138.05505371 886.33441162]
[1149.02966309 908.79675293]
[1173.49401855 913.94427490]
[1193.21533203 929.30877686]
[1212.93664551 944.67333984]
[1232.65808105 960.03784180]
[1236.32153320 984.76800537]
[1254.48962402 1001.94116211]
[1279.38671875 1004.20739746]
[1300.35693359 990.59680176]
[1308.42529297 966.93457031]
[1300.13854980 943.34790039]
[1279.04345703 929.93170166]
[1254.16833496 932.42797852]
[1234.44702148 917.06347656]
[1214.72570801 901.69891357]
[1195.00439453 886.33441162]
[1184.02966309 863.87207031]
[1159.56542969 858.72454834]
[1139.84411621 843.35998535]
[1120.12268066 827.99548340]
[1100.40136719 812.63092041]
[1080.68005371 797.26635742]
[1060.95874023 781.90185547]
[1041.23742676 766.53729248]
[1021.51605225 751.17279053]
[1001.79467773 735.80822754]
[982.07336426 720.44372559]
[962.35205078 705.07916260]
[942.63067627 689.71466064]
[922.90936279 674.35009766]
[903.18804932 658.98559570]
[883.46667480 643.62103271]
[863.74536133 628.25653076]
[844.02398682 612.89196777]
[824.30267334 597.52746582]
[804.58135986 582.16290283]
[784.85998535 566.79840088]
[765.13867188 551.43383789]
[745.41735840 536.06927490]
[725.69598389 520.70477295]
[705.97467041 505.34024048]
[695.00000000 482.87789917]
[695.00000000 457.87789917]
[695.00000000 432.87789917]
[695.00000000 407.87789917]
[695.00000000 382.87789917]
[705.97467041 360.41555786]
[695.00000000 337.95321655]
[711.27539062 318.97662354]
[711.27539062 293.97662354]
[695.00000000 275.00000000]
[695.00000000 250.00000000]
[695.00000000 225.00000000]
[695.00000000 200.00000000]
[695.00000000 175.00000000]
[695.00000000 150.00000000]
[695.00000000 125.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[895.00000000 125.00000000]
[895.00000000 150.00000000]
[895.00000000 175.00000000]
[895.00000000 200.00000000]
[895.00000000 225.00000000]
[895.00000000 250.00000000]
[891.46459961 274.74874878]
[912.50000000 288.25842285]
[933.53540039 274.74874878]
[930.00000000 250.00000000]
[930.00000000 225.00000000]
[930.00000000 200.00000000]
[930.00000000 175.00000000]
[930.00000000 150.00000000]
[930.00000000 125.00000000]
[930.00000000 100.00000000]
[955.00000000 100.00000000]
[980.00000000 100.00000000]
[1005.00000000 100.00000000]
[1030.00000000 100.00000000]
[1055.00000000 100.00000000]
[1080.00000000 100.00000000]
[1105.00000000 100.00000000]
[1130.00000000 100.00000000]
[1155.00000000 100.00000000]
[1180.00000000 100.00000000]
[1205.00000000 100.00000000]
[1230.00000000 100.00000000]
[1255.00000000 100.00000000]
[1280.00000000 100.00000000]
[1305.00000000 100.00000000]
[1330.00000000 100.00000000]
[1355.00000000 100.00000000]
[1380.00000000 100.00000000]
[1405.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[117.50000000 306.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[117.50000000 306.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[117.50000000 306.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[117.50000000 421.92469492 38.21401848 242.74528147 204.55896110 1.00000000]
[117.50000000 421.92469492 38.21401848 204.55896110 166.37264073 1.00000000]
[117.50000000 421.92469492 38.21401848 166.37264073 128.18632037 1.00000000]
[117.50000000 421.92469492 38.21401848 128.18632037 90.00000000 1.00000000]
[117.50000000 421.92469492 38.21401848 90.00000000 51.81367963 1.00000000]
[117.50000000 421.92469492 38.21401848 51.81367963 13.62735927 1.00000000]
[117.50000000 421.92469492 38.21401848 13.62735927 335.44103890 1.00000000]
[117.50000000 421.92469492 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[117.50000000 306.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[117.50000000 306.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[117.50000000 306.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[677.49999855 306.47660935 36.01426010 240.92732389 200.30910807 1.00000000]
[677.49999855 306.47660935 36.01426010 200.30910807 159.69089218 1.00000000]
[677.49999855 306.47660935 36.01426010 159.69089218 119.07267616 1.00000000]
[677.49999829 360.41555776 28.47466699 232.07849243 180.00000000 1.00000000]
[677.49999829 360.41555776 28.47466699 180.00000000 127.92150776 1.00000000]
[]
[]
[]
[]
[677.49999787 505.34023620 28.47466646 232.07849368 180.00000000 1.00000000]
[677.49999787 505.34023620 28.47466646 180.00000000 127.92150718 1.00000000]
[677.49999787 505.34023620 28.47466646 127.92150718 75.84301425 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1166.52971100 886.33439205 28.47466729 180.00000000 127.92150796 1.00000000]
[1166.52971100 886.33439205 28.47466729 127.92150796 75.84301603 1.00000000]
[]
[]
[]
[1270.21172799 967.11116598 38.21401848 190.66678940 152.48046903 1.00000000]
[1270.21172799 967.11116598 38.21401848 152.48046903 114.29414866 1.00000000]
[1270.21172799 967.11116598 38.21401848 114.29414866 76.10782830 1.00000000]
[1270.21172799 967.11116598 38.21401848 76.10782830 37.92150793 1.00000000]
[1270.21172799 967.11116598 38.21401848 37.92150793 359.73518757 1.00000000]
[1270.21172799 967.11116598 38.21401848 359.73518757 321.54886720 1.00000000]
[1270.21172799 967.11116598 38.21401848 321.54886720 283.36254683 1.00000000]
[1270.21172799 967.11116598 38.21401848 283.36254683 245.17622647 1.00000000]
[]
[]
[]
[1166.52971100 886.33439205 28.47466729 360.00000000 307.92150791 1.00000000]
[1166.52971100 886.33439205 28.47466729 307.92150791 255.84301608 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[677.49999787 505.34023620 28.47466646 360.00000000 307.92150887 1.00000000]
[]
[]
[]
[]
[677.49999829 360.41555776 28.47466699 52.07849120 360.00000000 1.00000000]
[677.49999829 360.41555776 28.47466699 360.00000000 307.92150827 1.00000000]
[677.49999855 306.47660935 36.01426010 60.92732360 20.30910779 1.00000000]
[677.49999855 306.47660935 36.01426010 20.30910779 339.69089197 1.00000000]
[677.49999855 306.47660935 36.01426010 339.69089197 299.07267620 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[912.49999842 265.12681945 23.13159456 220.83979705 155.41989853 1.00000000]
[912.49999842 265.12681945 23.13159456 155.41989853 90.00000000 1.00000000]
[912.49999842 265.12681945 23.13159456 90.00000000 24.58010147 1.00000000]
[912.49999842 265.12681945 23.13159456 24.58010147 319.16020295 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[5 29]
[6 28]
[7 27]
[8 26]
[11 23]
[12 22]
[13 21]
[54 154]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[64 144]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[98 112]
[99 111]
[100 110]
[101 109]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
[168 172]
] def

init

% Start Annotations
110 141 12 1.00 0.60 0.67 omark 69 101 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
