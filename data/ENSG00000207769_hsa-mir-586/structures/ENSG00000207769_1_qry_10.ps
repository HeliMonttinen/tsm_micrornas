%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:56 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUAUUUGCAGGAAAAAAAUUGACUUUGUACUAUUUUUUAGUUUACUUAAAAUAAGAAGAUAAAGAGUAUAAAACCAUUAUGCAUUGCAUUUUUAGGSCCCACACGUAUUGRGACCUAAAAAUACAAUGCAUAAUGGUUUUACCCCAUGUCUUUUAAUAAGCAUUUGAUUUUGUUAGAUAAUUGCUUUUCUUUGAAUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[99.99999237 125.00000000]
[99.99999237 150.00000000]
[99.99999237 175.00000000]
[99.99999237 200.00000000]
[99.99999237 225.00000000]
[77.13001251 236.87145996]
[60.78109360 256.78829956]
[53.59411240 281.53329468]
[29.07343102 286.40527344]
[4.55274868 291.27725220]
[-19.96793365 296.14923096]
[-44.48861694 301.02120972]
[-69.00930023 305.89315796]
[-85.52672577 287.12686157]
[-108.42421722 277.09167480]
[-133.41763306 277.66522217]
[-155.83068848 288.74017334]
[-171.46989441 308.24441528]
[-177.40911865 332.52868652]
[-172.53715515 357.04937744]
[-157.76551819 377.21862793]
[-135.85803223 389.26278687]
[-110.91357422 390.92834473]
[-87.59928894 381.90371704]
[-70.27729034 363.87741089]
[-62.18853760 340.22213745]
[-37.66785431 335.35015869]
[-13.14717197 330.47817993]
[11.37351036 325.60620117]
[35.89419174 320.73422241]
[60.41487503 315.86227417]
[75.91650391 335.47601318]
[97.74099731 347.66992188]
[96.82054138 372.65298462]
[95.90009308 397.63604736]
[94.97964478 422.61907959]
[94.05918884 447.60214233]
[93.13874054 472.58517456]
[92.21828461 497.56823730]
[91.29783630 522.55126953]
[90.37738800 547.53436279]
[78.58313751 569.57739258]
[88.72334290 592.42852783]
[87.80289459 617.41162109]
[86.88243866 642.39465332]
[64.78626251 654.08905029]
[85.96199036 667.37768555]
[85.04154205 692.36077881]
[84.12108612 717.34381104]
[83.20063782 742.32684326]
[78.75640869 766.92864990]
[99.28017426 781.20361328]
[120.79872894 768.47760010]
[118.17690277 743.61547852]
[119.09735870 718.63244629]
[120.01780701 693.64935303]
[120.93826294 668.66632080]
[121.85871124 643.68328857]
[122.77915955 618.70025635]
[123.69961548 593.71716309]
[135.49386597 571.67413330]
[125.35365295 548.82293701]
[126.27410889 523.83990479]
[127.19455719 498.85687256]
[128.11500549 473.87380981]
[129.03546143 448.89077759]
[129.95591736 423.90771484]
[130.87635803 398.92465210]
[131.79681396 373.94161987]
[132.71726990 348.95855713]
[156.00881958 337.93719482]
[173.07995605 318.63577271]
[181.17312622 294.17218018]
[205.85656738 290.20629883]
[230.53999329 286.24044800]
[255.22343445 282.27456665]
[279.90686035 278.30871582]
[304.59030151 274.34283447]
[329.27374268 270.37698364]
[353.95715332 266.41110229]
[378.64059448 262.44525146]
[403.32403564 258.47937012]
[428.00747681 254.51350403]
[452.69091797 250.54763794]
[477.37432861 246.58177185]
[502.05776978 242.61590576]
[526.74121094 238.65003967]
[551.42462158 234.68418884]
[575.34350586 241.95657349]
[595.78045654 227.55757141]
[620.46386719 223.59170532]
[645.14733887 219.62583923]
[669.83074951 215.65997314]
[694.51416016 211.69410706]
[719.19763184 207.72824097]
[743.88104248 203.76237488]
[768.56451416 199.79650879]
[793.24792480 195.83064270]
[817.16680908 203.10304260]
[837.60375977 188.70404053]
[861.52258301 195.97642517]
[881.95953369 181.57742310]
[906.64300537 177.61155701]
[927.24011230 191.78051758]
[952.18902588 190.18382263]
[970.81195068 173.50483704]
[975.13830566 148.88203430]
[963.31652832 126.85374451]
[940.40625000 116.84786987]
[916.21276855 123.14684296]
[901.09075928 143.05474854]
[876.40734863 147.02061462]
[852.48846436 139.74822998]
[832.05151367 154.14723206]
[808.13262939 146.87483215]
[787.69573975 161.27383423]
[763.01226807 165.23970032]
[738.32885742 169.20556641]
[713.64538574 173.17143250]
[688.96197510 177.13729858]
[664.27856445 181.10316467]
[639.59509277 185.06903076]
[614.91168213 189.03489685]
[590.22821045 193.00076294]
[566.30938721 185.72836304]
[545.87243652 200.12738037]
[521.18896484 204.09324646]
[496.50555420 208.05911255]
[471.82211304 212.02496338]
[447.13870239 215.99082947]
[422.45526123 219.95669556]
[397.77182007 223.92256165]
[373.08837891 227.88842773]
[348.40496826 231.85429382]
[323.72152710 235.82015991]
[299.03808594 239.78602600]
[274.35464478 243.75189209]
[249.67121887 247.71775818]
[224.98779297 251.68362427]
[200.30435181 255.64949036]
[175.62092590 259.61535645]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[210.00000000 100.00000000]
[285.00000000 100.00000000]
[360.00000000 100.00000000]
[435.00000000 100.00000000]
[510.00000000 100.00000000]
[585.00000000 100.00000000]
[660.00000000 100.00000000]
[735.00000000 100.00000000]
[810.00000000 100.00000000]
[885.00000000 100.00000000]
[960.00000000 100.00000000]
[1035.00000000 100.00000000]
[1110.00000000 100.00000000]
[1110.00000000 125.00000000]
[1110.00000000 150.00000000]
[1110.00000000 175.00000000]
[1110.00000000 200.00000000]
[1089.97167969 214.96217346]
[1080.27722168 238.00596619]
[1083.58593750 262.78604126]
[1098.98693848 282.47894287]
[1122.23925781 291.66201782]
[1128.79858398 315.78619385]
[1135.35791016 339.91033936]
[1141.91735840 364.03451538]
[1139.24707031 388.89147949]
[1158.26843262 405.11450195]
[1182.39257812 398.55514526]
[1190.58044434 374.93395996]
[1175.69116211 354.85140991]
[1169.13171387 330.72726440]
[1162.57238770 306.60308838]
[1156.01306152 282.47894287]
[1171.41406250 262.78604126]
[1174.72277832 238.00596619]
[1165.02832031 214.96217346]
[1145.00000000 200.00000000]
[1145.00000000 175.00000000]
[1145.00000000 150.00000000]
[1145.00000000 125.00000000]
[1145.00000000 100.00000000]
[1170.00000000 100.00000000]
[1195.00000000 100.00000000]
[1220.00000000 100.00000000]
[1245.00000000 100.00000000]
[1270.00000000 100.00000000]
[1295.00000000 100.00000000]
[1320.00000000 100.00000000]
[1345.00000000 100.00000000]
[1370.00000000 100.00000000]
[1395.00000000 100.00000000]
[1420.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[117.49999611 286.67803517 64.11263543 254.15969153 230.97401376 1.00000000]
[117.49999611 286.67803517 64.11263543 230.97401376 207.78833600 1.00000000]
[117.49999611 286.67803517 64.11263543 207.78833600 184.60265823 1.00000000]
[]
[]
[]
[]
[]
[-119.62635063 333.79226703 57.79658687 331.13733317 306.15656649 1.00000000]
[-119.62635063 333.79226703 57.79658687 306.15656649 281.17579981 1.00000000]
[-119.62635063 333.79226703 57.79658687 281.17579981 256.19503313 1.00000000]
[-119.62635063 333.79226703 57.79658687 256.19503313 231.21426645 1.00000000]
[-119.62635063 333.79226703 57.79658687 231.21426645 206.23349977 1.00000000]
[-119.62635063 333.79226703 57.79658687 206.23349977 181.25273310 1.00000000]
[-119.62635063 333.79226703 57.79658687 181.25273310 156.27196642 1.00000000]
[-119.62635063 333.79226703 57.79658687 156.27196642 131.29119974 1.00000000]
[-119.62635063 333.79226703 57.79658687 131.29119974 106.31043306 1.00000000]
[-119.62635063 333.79226703 57.79658687 106.31043306 81.32966638 1.00000000]
[-119.62635063 333.79226703 57.79658687 81.32966638 56.34889971 1.00000000]
[-119.62635063 333.79226703 57.79658687 56.34889971 31.36813303 1.00000000]
[-119.62635063 333.79226703 57.79658687 31.36813303 6.38736635 1.00000000]
[]
[]
[]
[]
[]
[117.49999611 286.67803517 64.11263543 152.92204128 130.43617299 1.00000000]
[117.49999611 286.67803517 64.11263543 130.43617299 107.95030469 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[107.03849939 570.62575812 28.47466729 234.18848812 182.10999619 1.00000000]
[107.03849939 570.62575812 28.47466729 182.10999619 130.03150426 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[100.13183106 758.08772849 23.13159456 222.94979322 157.52989469 1.00000000]
[100.13183106 758.08772849 23.13159456 157.52989469 92.10999617 1.00000000]
[100.13183106 758.08772849 23.13159456 92.10999617 26.69009764 1.00000000]
[100.13183106 758.08772849 23.13159456 26.69009764 321.27019911 1.00000000]
[]
[]
[]
[]
[]
[]
[107.03849939 570.62575812 28.47466729 54.18848807 2.10999614 1.00000000]
[107.03849939 570.62575812 28.47466729 2.10999614 310.03150431 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[117.49999611 286.67803517 64.11263543 76.26968774 53.08400997 1.00000000]
[117.49999611 286.67803517 64.11263543 53.08400997 29.89833221 1.00000000]
[117.49999611 286.67803517 64.11263543 29.89833221 6.71265444 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[570.82643932 213.84247274 28.47466729 132.95083787 80.87234595 1.00000000]
[570.82643932 213.84247274 28.47466729 80.87234595 28.79385402 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[812.64972360 174.98893733 28.47466729 132.95083795 80.87234610 1.00000000]
[812.64972360 174.98893733 28.47466729 80.87234610 28.79385397 1.00000000]
[857.00553646 167.86232767 28.47466729 132.95083765 80.87234585 1.00000000]
[857.00553646 167.86232767 28.47466729 80.87234585 28.79385393 1.00000000]
[]
[937.40818451 154.94410445 38.21401848 143.61762729 105.43130693 1.00000000]
[937.40818451 154.94410445 38.21401848 105.43130693 67.24498656 1.00000000]
[937.40818451 154.94410445 38.21401848 67.24498656 29.05866619 1.00000000]
[937.40818451 154.94410445 38.21401848 29.05866619 350.87234583 1.00000000]
[937.40818451 154.94410445 38.21401848 350.87234583 312.68602546 1.00000000]
[937.40818451 154.94410445 38.21401848 312.68602546 274.49970510 1.00000000]
[937.40818451 154.94410445 38.21401848 274.49970510 236.31338473 1.00000000]
[937.40818451 154.94410445 38.21401848 236.31338473 198.12706436 1.00000000]
[]
[857.00553646 167.86232767 28.47466729 312.95083773 260.87234580 1.00000000]
[857.00553646 167.86232767 28.47466729 260.87234580 208.79385385 1.00000000]
[812.64972360 174.98893733 28.47466729 312.95083753 260.87234565 1.00000000]
[812.64972360 174.98893733 28.47466729 260.87234565 208.79385390 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[570.82643932 213.84247274 28.47466729 312.95083783 260.87234590 1.00000000]
[570.82643932 213.84247274 28.47466729 260.87234590 208.79385407 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[117.49999611 286.67803517 64.11263543 335.03203750 285.84030847 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1127.50000091 244.31144019 47.64193249 248.44935680 218.02742044 1.00000000]
[1127.50000091 244.31144019 47.64193249 218.02742044 187.60548409 1.00000000]
[1127.50000091 244.31144019 47.64193249 187.60548409 157.18354773 1.00000000]
[1127.50000091 244.31144019 47.64193249 157.18354773 126.76161138 1.00000000]
[1127.50000091 244.31144019 47.64193249 126.76161138 96.33967502 1.00000000]
[]
[]
[]
[1164.11944267 378.99147377 26.77024824 213.96706482 158.29585162 1.00000000]
[1164.11944267 378.99147377 26.77024824 158.29585162 102.62463842 1.00000000]
[1164.11944267 378.99147377 26.77024824 102.62463842 46.95342522 1.00000000]
[1164.11944267 378.99147377 26.77024824 46.95342522 351.28221203 1.00000000]
[1164.11944267 378.99147377 26.77024824 351.28221203 295.61099883 1.00000000]
[]
[]
[]
[1127.50000091 244.31144019 47.64193249 53.23838862 22.81645227 1.00000000]
[1127.50000091 244.31144019 47.64193249 22.81645227 352.39451591 1.00000000]
[1127.50000091 244.31144019 47.64193249 352.39451591 321.97257956 1.00000000]
[1127.50000091 244.31144019 47.64193249 321.97257956 291.55064320 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[9 32]
[10 31]
[11 30]
[12 29]
[13 28]
[14 27]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 63]
[44 61]
[45 60]
[46 59]
[48 58]
[49 57]
[50 56]
[51 55]
[74 142]
[75 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[101 115]
[103 113]
[104 112]
[161 189]
[162 188]
[163 187]
[164 186]
[165 185]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% Start Annotations
113 144 12 1.00 0.60 0.67 omark 72 104 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
