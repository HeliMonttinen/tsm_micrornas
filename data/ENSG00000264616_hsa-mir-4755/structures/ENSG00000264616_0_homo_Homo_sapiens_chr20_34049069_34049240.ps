%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAGAGAUGAGGAAGGUUAUGGCUGAGGAACUGGCAUCUAUGAAAGCCAGAUUCAGCUUUCCCUUCAGAGCCUGGCUUUGGCAUCUAUGAAAGCCAGGCUCUGAAGGGAAAGUUGAAUCUUGCUAGAGUGGAGAAUUGAGGAAGAGAUGAGAUGUUAAGGCAAGCCGAGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[600.00000000 100.00000000]
[625.00000000 100.00000000]
[650.00000000 100.00000000]
[650.00000000 125.00000000]
[650.00000000 150.00000000]
[650.00000000 175.00000000]
[635.92852783 195.66383362]
[640.87762451 220.16906738]
[661.86566162 233.75227356]
[649.21380615 255.31454468]
[649.22229004 280.31454468]
[661.88867188 301.86825562]
[683.72515869 314.04067993]
[708.71887207 313.47994995]
[724.12646484 333.16766357]
[739.53405762 352.85534668]
[754.94171143 372.54306030]
[770.34930420 392.23074341]
[785.75689697 411.91845703]
[801.16455078 431.60614014]
[816.57214355 451.29385376]
[802.07287598 471.65979004]
[792.82391357 494.88598633]
[789.35418701 519.64404297]
[791.86212158 544.51788330]
[800.20440674 568.08496094]
[813.90374756 588.99737549]
[797.74499512 608.07336426]
[781.58624268 627.14935303]
[758.69360352 637.19555664]
[752.54913330 661.42871094]
[736.39038086 680.50476074]
[720.23162842 699.58074951]
[704.07287598 718.65679932]
[687.91412354 737.73278809]
[671.75537109 756.80883789]
[655.59655762 775.88482666]
[639.43780518 794.96081543]
[623.27905273 814.03686523]
[607.12030029 833.11285400]
[590.96154785 852.18890381]
[574.80279541 871.26489258]
[558.64398193 890.34094238]
[542.48522949 909.41693115]
[526.32647705 928.49298096]
[510.16772461 947.56896973]
[494.00894165 966.64495850]
[477.85018921 985.72100830]
[461.69143677 1004.79699707]
[445.53265381 1023.87304688]
[429.37390137 1042.94909668]
[413.21514893 1062.02502441]
[397.05636597 1081.10107422]
[380.89761353 1100.17712402]
[364.73886108 1119.25305176]
[348.58007812 1138.32910156]
[332.42132568 1157.40515137]
[316.26254272 1176.48120117]
[300.10379028 1195.55712891]
[283.94503784 1214.63317871]
[267.78625488 1233.70922852]
[244.89360046 1243.75537109]
[238.74917603 1267.98852539]
[214.26849365 1273.05761719]
[199.70716858 1293.37927246]
[202.77766418 1318.18994141]
[221.85368347 1334.34875488]
[246.83154297 1333.29699707]
[264.48165894 1315.59179688]
[265.45559692 1290.61083984]
[288.34826660 1280.56457520]
[294.49267578 1256.33142090]
[310.65145874 1237.25549316]
[326.81021118 1218.17944336]
[342.96896362 1199.10339355]
[359.12774658 1180.02746582]
[375.28649902 1160.95141602]
[391.44528198 1141.87536621]
[407.60403442 1122.79931641]
[423.76278687 1103.72338867]
[439.92156982 1084.64733887]
[456.08032227 1065.57128906]
[472.23907471 1046.49523926]
[488.39785767 1027.41931152]
[504.55661011 1008.34326172]
[520.71539307 989.26727295]
[536.87414551 970.19122314]
[553.03289795 951.11523438]
[569.19165039 932.03918457]
[585.35040283 912.96319580]
[601.50921631 893.88714600]
[617.66796875 874.81115723]
[633.82672119 855.73516846]
[649.98547363 836.65911865]
[666.14422607 817.58312988]
[682.30297852 798.50708008]
[698.46179199 779.43109131]
[714.62054443 760.35504150]
[730.77929688 741.27905273]
[746.93804932 722.20300293]
[763.09680176 703.12701416]
[779.25555420 684.05102539]
[802.14825439 674.00482178]
[808.29266357 649.77166748]
[824.45141602 630.69561768]
[840.61016846 611.61962891]
[863.49084473 621.69317627]
[888.10900879 626.04595947]
[913.05664062 624.42895508]
[921.69451904 647.88928223]
[930.33233643 671.34960938]
[925.71649170 695.91979980]
[941.00512695 715.70001221]
[965.94549561 717.42541504]
[983.81225586 699.93884277]
[982.62365723 674.96716309]
[963.17681885 659.25659180]
[954.53900146 635.79626465]
[945.90112305 612.33593750]
[965.94079590 597.38903809]
[981.85845947 578.11138916]
[992.74371338 555.60559082]
[997.97393799 531.15881348]
[997.25006104 506.16928101]
[990.61340332 482.06628418]
[978.44354248 460.22833252]
[961.43664551 441.90444946]
[940.56524658 428.14266968]
[917.02319336 419.73010254]
[892.15692139 417.14782715]
[867.38861084 420.54360962]
[844.13494873 429.72317505]
[828.72729492 410.03549194]
[813.31970215 390.34777832]
[797.91210938 370.66009521]
[782.50445557 350.97238159]
[767.09686279 331.28469849]
[751.68927002 311.59698486]
[736.28161621 291.90930176]
[742.83282471 267.78292847]
[736.26531982 243.66098022]
[718.38757324 226.18569946]
[694.12237549 220.16906738]
[699.07147217 195.66383362]
[685.00000000 175.00000000]
[685.00000000 150.00000000]
[685.00000000 125.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[667.49999912 202.04002278 32.20889363 237.08950793 191.41790170 1.00000000]
[667.49999912 202.04002278 32.20889363 191.41790170 145.74629539 1.00000000]
[667.49999912 202.04002278 32.20889363 145.74629539 100.07468892 1.00000000]
[695.19090017 267.79901644 47.64193249 225.61355361 195.19161730 1.00000000]
[695.19090017 267.79901644 47.64193249 195.19161730 164.76968094 1.00000000]
[695.19090017 267.79901644 47.64193249 164.76968094 134.34774459 1.00000000]
[695.19090017 267.79901644 47.64193249 134.34774459 103.92580823 1.00000000]
[695.19090017 267.79901644 47.64193249 103.92580823 73.50387188 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[893.87005339 521.66929927 104.53550333 222.31612414 208.58078902 1.00000000]
[893.87005339 521.66929927 104.53550333 208.58078902 194.84545389 1.00000000]
[893.87005339 521.66929927 104.53550333 194.84545389 181.11011876 1.00000000]
[893.87005339 521.66929927 104.53550333 181.11011876 167.37478364 1.00000000]
[893.87005339 521.66929927 104.53550333 167.37478364 153.63944851 1.00000000]
[893.87005339 521.66929927 104.53550333 153.63944851 139.90411338 1.00000000]
[]
[]
[780.42091600 655.60018922 28.47466729 272.34550075 220.26700882 1.00000000]
[780.42091600 655.60018922 28.47466729 220.26700882 168.18851690 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[266.62093364 1262.16001501 28.47466729 272.34550083 220.26700898 1.00000000]
[266.62093364 1262.16001501 28.47466729 220.26700898 168.18851685 1.00000000]
[232.99654681 1301.85484365 34.35139098 279.64041998 236.96230254 1.00000000]
[232.99654681 1301.85484365 34.35139098 236.96230254 194.28418503 1.00000000]
[232.99654681 1301.85484365 34.35139098 194.28418503 151.60606751 1.00000000]
[232.99654681 1301.85484365 34.35139098 151.60606751 108.92794999 1.00000000]
[232.99654681 1301.85484365 34.35139098 108.92794999 66.24983248 1.00000000]
[232.99654681 1301.85484365 34.35139098 66.24983248 23.57171496 1.00000000]
[232.99654681 1301.85484365 34.35139098 23.57171496 340.89359736 1.00000000]
[266.62093364 1262.16001501 28.47466729 92.34550041 40.26700853 1.00000000]
[266.62093364 1262.16001501 28.47466729 40.26700853 348.18851677 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[780.42091600 655.60018922 28.47466729 92.34550070 40.26700878 1.00000000]
[780.42091600 655.60018922 28.47466729 40.26700878 348.18851694 1.00000000]
[]
[]
[893.87005339 521.66929927 104.53550333 120.62990431 106.89456919 1.00000000]
[893.87005339 521.66929927 104.53550333 106.89456919 93.15923406 1.00000000]
[893.87005339 521.66929927 104.53550333 93.15923406 79.42389893 1.00000000]
[]
[]
[955.39751247 688.77717386 30.52836670 214.81050849 166.46927046 1.00000000]
[955.39751247 688.77717386 30.52836670 166.46927046 118.12803243 1.00000000]
[955.39751247 688.77717386 30.52836670 118.12803243 69.78679440 1.00000000]
[955.39751247 688.77717386 30.52836670 69.78679440 21.44555636 1.00000000]
[955.39751247 688.77717386 30.52836670 21.44555636 333.10431833 1.00000000]
[955.39751247 688.77717386 30.52836670 333.10431833 284.76308030 1.00000000]
[]
[]
[893.87005339 521.66929927 104.53550333 60.14968986 46.41435473 1.00000000]
[893.87005339 521.66929927 104.53550333 46.41435473 32.67901961 1.00000000]
[893.87005339 521.66929927 104.53550333 32.67901961 18.94368448 1.00000000]
[893.87005339 521.66929927 104.53550333 18.94368448 5.20834935 1.00000000]
[893.87005339 521.66929927 104.53550333 5.20834935 351.47301423 1.00000000]
[893.87005339 521.66929927 104.53550333 351.47301423 337.73767910 1.00000000]
[893.87005339 521.66929927 104.53550333 337.73767910 324.00234397 1.00000000]
[893.87005339 521.66929927 104.53550333 324.00234397 310.26700885 1.00000000]
[893.87005339 521.66929927 104.53550333 310.26700885 296.53167372 1.00000000]
[893.87005339 521.66929927 104.53550333 296.53167372 282.79633859 1.00000000]
[893.87005339 521.66929927 104.53550333 282.79633859 269.06100347 1.00000000]
[893.87005339 521.66929927 104.53550333 269.06100347 255.32566834 1.00000000]
[893.87005339 521.66929927 104.53550333 255.32566834 241.59033321 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[695.19090017 267.79901644 47.64193249 30.40258548 360.00000000 1.00000000]
[695.19090017 267.79901644 47.64193249 360.00000000 329.55871277 1.00000000]
[695.19090017 267.79901644 47.64193249 329.55871277 299.13677641 1.00000000]
[695.19090017 267.79901644 47.64193249 299.13677641 268.71484001 1.00000000]
[667.49999912 202.04002278 32.20889363 34.25370452 348.58209830 1.00000000]
[667.49999912 202.04002278 32.20889363 348.58209830 302.91049207 1.00000000]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 168]
[24 167]
[25 166]
[26 165]
[29 163]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[47 126]
[48 125]
[49 124]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[83 90]
[129 139]
[130 138]
[131 137]
] def

init

% Start Annotations
51 81 12 1.00 0.60 0.67 omark 92 122 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
