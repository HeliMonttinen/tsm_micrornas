%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAGAGAUGAGGAAGGUUAUGGCUGAGGAACUGGCAUCUAUGAAAGCCAGAUUCARCUUUCCCUUCAGAGCCUGGCUUUGGCAUCUAUGAAAGCCAGGCUCUGAAGGGAAAGUUGAAUCUUGCUAGAGUGGAGAAUUGAGGAAGAGAUGAGAUGUUAAGGCAAGUCGAGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[225.00000000 125.00000000]
[208.72460938 143.97660828]
[208.72460938 168.97660828]
[225.00000000 187.95321655]
[225.00000000 212.95321655]
[204.97167969 227.91539001]
[195.27717590 250.95918274]
[198.58595276 275.73925781]
[213.98692322 295.43215942]
[207.42758179 319.55630493]
[190.94386292 338.35226440]
[195.64051819 362.90710449]
[189.08116150 387.03128052]
[182.52182007 411.15542603]
[158.83639526 419.15551758]
[141.69921875 437.35760498]
[135.13987732 461.48178101]
[140.70071411 485.85546875]
[157.07415771 504.74752808]
[150.51481628 528.87170410]
[125.51496887 528.78576660]
[101.08889008 534.11181641]
[78.39415741 544.59747314]
[58.50627136 559.74578857]
[42.36773300 578.83892822]
[30.74334526 600.97204590]
[24.18399811 625.09619141]
[23.00053978 650.06817627]
[27.24905205 674.70452881]
[36.72819901 697.83770752]
[50.98876190 718.37152100]
[69.35491943 735.33276367]
[90.95630646 747.91766357]
[84.39695740 772.04187012]
[77.83761597 796.16601562]
[71.27826691 820.29016113]
[64.71891785 844.41430664]
[42.05676270 854.97021484]
[28.87716484 876.21398926]
[29.48510933 901.20660400]
[43.68201447 921.78442383]
[37.12266541 945.90856934]
[30.56331825 970.03277588]
[14.07960320 988.82867432]
[18.77625465 1013.38354492]
[12.21690750 1037.50769043]
[5.65755987 1061.63183594]
[-0.90178764 1085.75598145]
[-7.46113539 1109.88012695]
[-14.02048302 1134.00439453]
[-20.57983017 1158.12854004]
[-37.06354523 1176.92443848]
[-32.36689377 1201.47924805]
[-38.92624283 1225.60351562]
[-45.48558807 1249.72766113]
[-52.04493713 1273.85180664]
[-58.60428619 1297.97595215]
[-65.16363525 1322.10009766]
[-71.72297668 1346.22424316]
[-78.28232574 1370.34838867]
[-84.84167480 1394.47253418]
[-91.40102386 1418.59667969]
[-97.96037292 1442.72082520]
[-104.51971436 1466.84497070]
[-111.07906342 1490.96923828]
[-117.63841248 1515.09338379]
[-124.19776154 1539.21752930]
[-130.75711060 1563.34167480]
[-137.31645203 1587.46582031]
[-143.87580872 1611.58996582]
[-150.43515015 1635.71411133]
[-156.99449158 1659.83825684]
[-163.55384827 1683.96240234]
[-170.11318970 1708.08654785]
[-176.67254639 1732.21081543]
[-193.15625000 1751.00671387]
[-188.45960999 1775.56152344]
[-208.48973083 1790.52136230]
[-213.07444763 1815.09729004]
[-199.78544617 1836.27282715]
[-175.66128540 1842.83215332]
[-153.47940063 1831.30114746]
[-144.98849487 1807.78723145]
[-154.68579102 1784.74462891]
[-138.20207214 1765.94873047]
[-142.89872742 1741.39379883]
[-136.33937073 1717.26965332]
[-129.78002930 1693.14550781]
[-123.22068024 1669.02136230]
[-116.66133118 1644.89721680]
[-110.10198212 1620.77307129]
[-103.54263306 1596.64892578]
[-96.98329163 1572.52478027]
[-90.42394257 1548.40063477]
[-83.86459351 1524.27648926]
[-77.30524445 1500.15222168]
[-70.74589539 1476.02807617]
[-64.18655396 1451.90393066]
[-57.62720108 1427.77978516]
[-51.06785583 1403.65563965]
[-44.50850677 1379.53149414]
[-37.94916153 1355.40734863]
[-31.38981247 1331.28320312]
[-24.83046532 1307.15905762]
[-18.27111626 1283.03491211]
[-11.71176910 1258.91064453]
[-5.15242147 1234.78649902]
[1.40692616 1210.66235352]
[17.89064217 1191.86645508]
[13.19398975 1167.31164551]
[19.75333786 1143.18737793]
[26.31268501 1119.06323242]
[32.87203217 1094.93908691]
[39.43138123 1070.81494141]
[45.99072647 1046.69079590]
[52.55007553 1022.56665039]
[69.03379059 1003.77069092]
[64.33713531 979.21582031]
[70.89648438 955.09167480]
[77.45583344 930.96752930]
[100.11798859 920.41162109]
[113.29758453 899.16784668]
[112.68964386 874.17523193]
[98.49273682 853.59741211]
[105.05208588 829.47326660]
[111.61143494 805.34906006]
[118.17077637 781.22491455]
[124.73012543 757.10076904]
[149.72998047 757.18670654]
[174.15605164 751.86065674]
[196.85078430 741.37500000]
[216.73867798 726.22668457]
[232.87721252 707.13354492]
[244.50160217 685.00042725]
[251.06094360 660.87628174]
[252.24440002 635.90429688]
[247.99589539 611.26794434]
[238.51673889 588.13470459]
[224.25617981 567.60095215]
[205.89002991 550.63970947]
[184.28863525 538.05474854]
[190.84799194 513.93060303]
[214.53340149 505.93054199]
[231.67057800 487.72842407]
[238.22993469 463.60427856]
[232.66909790 439.23059082]
[216.29563904 420.33853149]
[222.85498047 396.21435547]
[229.41433716 372.09020996]
[245.89804077 353.29428101]
[241.20140076 328.73941040]
[247.76074219 304.61523438]
[271.01306152 295.43215942]
[286.41403198 275.73925781]
[289.72280884 250.95918274]
[280.02832031 227.91539001]
[260.00000000 212.95321655]
[260.00000000 187.95321655]
[276.27539062 168.97660828]
[276.27539062 143.97660828]
[260.00000000 125.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[242.49999829 156.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[242.49999829 156.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[242.49999829 156.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[242.49999829 257.26465872 47.64193249 248.44935680 218.02742044 1.00000000]
[242.49999829 257.26465872 47.64193249 218.02742044 187.60548409 1.00000000]
[242.49999829 257.26465872 47.64193249 187.60548409 157.18354773 1.00000000]
[242.49999829 257.26465872 47.64193249 157.18354773 126.76161138 1.00000000]
[]
[218.42095320 345.82326163 28.47466729 247.28946008 195.21096815 1.00000000]
[218.42095320 345.82326163 28.47466729 195.21096815 143.13247623 1.00000000]
[]
[]
[186.68490068 462.54302652 51.55595110 265.36838824 237.30542019 1.00000000]
[186.68490068 462.54302652 51.55595110 237.30542019 209.24245215 1.00000000]
[186.68490068 462.54302652 51.55595110 209.24245215 181.17948411 1.00000000]
[186.68490068 462.54302652 51.55595110 181.17948411 153.11651607 1.00000000]
[186.68490068 462.54302652 51.55595110 153.11651607 125.05354802 1.00000000]
[]
[137.62247251 642.98623310 114.84050368 276.44578688 263.94812246 1.00000000]
[137.62247251 642.98623310 114.84050368 263.94812246 251.45045803 1.00000000]
[137.62247251 642.98623310 114.84050368 251.45045803 238.95279361 1.00000000]
[137.62247251 642.98623310 114.84050368 238.95279361 226.45512919 1.00000000]
[137.62247251 642.98623310 114.84050368 226.45512919 213.95746476 1.00000000]
[137.62247251 642.98623310 114.84050368 213.95746476 201.45980034 1.00000000]
[137.62247251 642.98623310 114.84050368 201.45980034 188.96213592 1.00000000]
[137.62247251 642.98623310 114.84050368 188.96213592 176.46447150 1.00000000]
[137.62247251 642.98623310 114.84050368 176.46447150 163.96680707 1.00000000]
[137.62247251 642.98623310 114.84050368 163.96680707 151.46914265 1.00000000]
[137.62247251 642.98623310 114.84050368 151.46914265 138.97147823 1.00000000]
[137.62247251 642.98623310 114.84050368 138.97147823 126.47381380 1.00000000]
[137.62247251 642.98623310 114.84050368 126.47381380 113.97614938 1.00000000]
[]
[]
[]
[]
[71.08737540 887.69092303 43.74267810 261.62860395 228.41978604 1.00000000]
[71.08737540 887.69092303 43.74267810 228.41978604 195.21096813 1.00000000]
[71.08737540 887.69092303 43.74267810 195.21096813 162.00215022 1.00000000]
[71.08737540 887.69092303 43.74267810 162.00215022 128.79333231 1.00000000]
[]
[]
[41.55669696 996.29969982 28.47466729 247.28946003 195.21096811 1.00000000]
[41.55669696 996.29969982 28.47466729 195.21096811 143.13247618 1.00000000]
[]
[]
[]
[]
[]
[]
[-9.58645225 1184.39544260 28.47466729 247.28945999 195.21096806 1.00000000]
[-9.58645225 1184.39544260 28.47466729 195.21096806 143.13247613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-165.67916347 1758.47770006 28.47466729 247.28946006 195.21096821 1.00000000]
[-165.67916347 1758.47770006 28.47466729 195.21096821 143.13247609 1.00000000]
[-179.32835433 1808.67708650 34.35139098 254.58437921 211.90626178 1.00000000]
[-179.32835433 1808.67708650 34.35139098 211.90626178 169.22814426 1.00000000]
[-179.32835433 1808.67708650 34.35139098 169.22814426 126.55002675 1.00000000]
[-179.32835433 1808.67708650 34.35139098 126.55002675 83.87190923 1.00000000]
[-179.32835433 1808.67708650 34.35139098 83.87190923 41.19379171 1.00000000]
[-179.32835433 1808.67708650 34.35139098 41.19379171 358.51567420 1.00000000]
[-179.32835433 1808.67708650 34.35139098 358.51567420 315.83755659 1.00000000]
[-165.67916347 1758.47770006 28.47466729 67.28945964 15.21096776 1.00000000]
[-165.67916347 1758.47770006 28.47466729 15.21096776 323.13247601 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-9.58645225 1184.39544260 28.47466729 67.28945994 15.21096801 1.00000000]
[-9.58645225 1184.39544260 28.47466729 15.21096801 323.13247618 1.00000000]
[]
[]
[]
[]
[]
[]
[41.55669696 996.29969982 28.47466729 67.28945999 15.21096806 1.00000000]
[41.55669696 996.29969982 28.47466729 15.21096806 323.13247623 1.00000000]
[]
[]
[71.08737540 887.69092303 43.74267810 81.62860395 48.41978604 1.00000000]
[71.08737540 887.69092303 43.74267810 48.41978604 15.21096813 1.00000000]
[71.08737540 887.69092303 43.74267810 15.21096813 342.00215022 1.00000000]
[71.08737540 887.69092303 43.74267810 342.00215022 308.79333231 1.00000000]
[]
[]
[]
[]
[137.62247251 642.98623310 114.84050368 96.44578688 83.94812246 1.00000000]
[137.62247251 642.98623310 114.84050368 83.94812246 71.45045803 1.00000000]
[137.62247251 642.98623310 114.84050368 71.45045803 58.95279361 1.00000000]
[137.62247251 642.98623310 114.84050368 58.95279361 46.45512919 1.00000000]
[137.62247251 642.98623310 114.84050368 46.45512919 33.95746476 1.00000000]
[137.62247251 642.98623310 114.84050368 33.95746476 21.45980034 1.00000000]
[137.62247251 642.98623310 114.84050368 21.45980034 8.96213592 1.00000000]
[137.62247251 642.98623310 114.84050368 8.96213592 356.46447150 1.00000000]
[137.62247251 642.98623310 114.84050368 356.46447150 343.96680707 1.00000000]
[137.62247251 642.98623310 114.84050368 343.96680707 331.46914265 1.00000000]
[137.62247251 642.98623310 114.84050368 331.46914265 318.97147823 1.00000000]
[137.62247251 642.98623310 114.84050368 318.97147823 306.47381380 1.00000000]
[137.62247251 642.98623310 114.84050368 306.47381380 293.97614938 1.00000000]
[]
[186.68490068 462.54302652 51.55595110 85.36838824 57.30542019 1.00000000]
[186.68490068 462.54302652 51.55595110 57.30542019 29.24245215 1.00000000]
[186.68490068 462.54302652 51.55595110 29.24245215 1.17948411 1.00000000]
[186.68490068 462.54302652 51.55595110 1.17948411 333.11651607 1.00000000]
[186.68490068 462.54302652 51.55595110 333.11651607 305.05354802 1.00000000]
[]
[]
[218.42095320 345.82326163 28.47466729 67.28946003 15.21096811 1.00000000]
[218.42095320 345.82326163 28.47466729 15.21096811 323.13247627 1.00000000]
[]
[242.49999829 257.26465872 47.64193249 83.66032498 53.23838862 1.00000000]
[242.49999829 257.26465872 47.64193249 53.23838862 22.81645227 1.00000000]
[242.49999829 257.26465872 47.64193249 22.81645227 352.39451591 1.00000000]
[242.49999829 257.26465872 47.64193249 352.39451591 321.97257956 1.00000000]
[242.49999829 257.26465872 47.64193249 321.97257956 291.55064320 1.00000000]
[]
[242.49999829 156.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[242.49999829 156.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[242.49999829 156.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[6 168]
[7 167]
[10 164]
[11 163]
[15 158]
[16 157]
[18 155]
[19 154]
[20 153]
[25 148]
[26 147]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[47 126]
[48 125]
[49 124]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[83 90]
] def

init

% Start Annotations
51 81 12 1.00 0.60 0.67 omark 92 122 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
