%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGAGACUGUUACUCUCCAAAUCCCCAAUACUGACUUUCUGGUGACUCAUUUCCAUCUGAGAAAUUAGGUAGUGGCAGUGGAARGCUGAUUAAUAUAGCCUUCCACUGCCACUACCUAAUUUCACACACAAAAAGCAGAAGUACUUCCCCAGGAGCAAGCCUGUUCAGAACAAACCUUCUGACG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[157.74304199 193.08860779]
[155.36175537 217.97492981]
[168.87530518 239.00787354]
[192.50000000 247.18550110]
[216.12469482 239.00787354]
[229.63824463 217.97492981]
[227.25695801 193.08860779]
[210.00000000 175.00000000]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[560.00000000 125.00000000]
[560.00000000 150.00000000]
[538.34936523 162.50000000]
[560.00000000 175.00000000]
[560.00000000 200.00000000]
[560.00000000 225.00000000]
[560.00000000 250.00000000]
[549.02532959 272.46234131]
[560.00000000 294.92468262]
[560.00000000 319.92468262]
[560.00000000 344.92468262]
[560.00000000 369.92468262]
[560.00000000 394.92468262]
[541.55932617 411.80490112]
[536.16094971 436.21508789]
[545.76391602 459.29718018]
[535.22192383 481.96582031]
[524.67993164 504.63442993]
[500.75842285 511.89810181]
[485.17263794 531.44506836]
[483.41784668 556.38336182]
[496.11276245 577.92028809]
[518.78137207 588.46228027]
[543.43121338 584.29241943]
[561.37109375 566.88092041]
[566.27581787 542.36676025]
[556.41601562 519.39318848]
[566.95800781 496.72457886]
[577.50000000 474.05596924]
[601.33905029 466.52597046]
[622.98968506 479.02597046]
[644.64031982 491.52597046]
[666.29095459 504.02597046]
[687.94158936 516.52600098]
[709.59222412 529.02600098]
[731.24285889 541.52600098]
[752.89349365 554.02600098]
[774.54412842 566.52600098]
[796.19476318 579.02600098]
[817.84539795 591.52600098]
[839.49603271 604.02600098]
[861.14666748 616.52600098]
[882.79730225 629.02600098]
[904.44793701 641.52600098]
[926.09857178 654.02600098]
[947.74920654 666.52600098]
[969.39984131 679.02600098]
[991.05047607 691.52600098]
[1012.70111084 704.02600098]
[1034.35168457 716.52600098]
[1056.00231934 729.02600098]
[1077.65295410 741.52600098]
[1091.61865234 762.26147461]
[1116.55895996 763.98834229]
[1138.20959473 776.48834229]
[1159.86022949 788.98834229]
[1181.51086426 801.48834229]
[1188.54748535 825.47760010]
[1208.90905762 839.98297119]
[1233.88085938 838.79638672]
[1252.77526855 822.42559814]
[1257.50561523 797.87719727]
[1246.04736328 775.65765381]
[1223.30444336 765.27679443]
[1199.01086426 771.17742920]
[1177.36022949 758.67742920]
[1155.70959473 746.17742920]
[1134.05895996 733.67742920]
[1120.09326172 712.94189453]
[1095.15295410 711.21508789]
[1073.50231934 698.71508789]
[1051.85168457 686.21508789]
[1030.20104980 673.71508789]
[1008.55047607 661.21508789]
[986.89984131 648.71508789]
[965.24920654 636.21508789]
[943.59857178 623.71508789]
[921.94793701 611.21508789]
[900.29730225 598.71508789]
[878.64666748 586.21508789]
[856.99603271 573.71508789]
[835.34539795 561.21508789]
[813.69476318 548.71508789]
[792.04412842 536.21508789]
[770.39349365 523.71508789]
[748.74285889 511.21508789]
[727.09222412 498.71508789]
[705.44158936 486.21508789]
[683.79095459 473.71508789]
[662.14031982 461.21508789]
[640.48968506 448.71508789]
[618.83905029 436.21508789]
[613.44067383 411.80490112]
[595.00000000 394.92468262]
[595.00000000 369.92468262]
[595.00000000 344.92468262]
[616.65063477 332.42468262]
[595.00000000 319.92468262]
[595.00000000 294.92468262]
[605.97467041 272.46234131]
[595.00000000 250.00000000]
[595.00000000 225.00000000]
[595.00000000 200.00000000]
[595.00000000 175.00000000]
[595.00000000 150.00000000]
[595.00000000 125.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[895.00000000 125.00000000]
[895.00000000 150.00000000]
[895.00000000 175.00000000]
[879.59667969 194.69104004]
[881.62066650 219.60896301]
[900.00000000 236.55593872]
[925.00000000 236.55593872]
[943.37933350 219.60896301]
[945.40332031 194.69104004]
[930.00000000 175.00000000]
[930.00000000 150.00000000]
[930.00000000 125.00000000]
[930.00000000 100.00000000]
[955.00000000 100.00000000]
[980.00000000 100.00000000]
[980.00000000 125.00000000]
[980.00000000 150.00000000]
[980.00000000 175.00000000]
[980.00000000 200.00000000]
[980.00000000 225.00000000]
[964.59667969 244.69104004]
[966.62066650 269.60897827]
[985.00000000 286.55593872]
[1010.00000000 286.55593872]
[1028.37939453 269.60897827]
[1030.40332031 244.69104004]
[1015.00000000 225.00000000]
[1015.00000000 200.00000000]
[1015.00000000 175.00000000]
[1015.00000000 150.00000000]
[1015.00000000 125.00000000]
[1015.00000000 100.00000000]
[1040.00000000 100.00000000]
[1065.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[192.50000000 208.97147640 38.21401848 242.74528147 204.55896110 1.00000000]
[192.50000000 208.97147640 38.21401848 204.55896110 166.37264073 1.00000000]
[192.50000000 208.97147640 38.21401848 166.37264073 128.18632037 1.00000000]
[192.50000000 208.97147640 38.21401848 128.18632037 90.00000000 1.00000000]
[192.50000000 208.97147640 38.21401848 90.00000000 51.81367963 1.00000000]
[192.50000000 208.97147640 38.21401848 51.81367963 13.62735927 1.00000000]
[192.50000000 208.97147640 38.21401848 13.62735927 335.44103890 1.00000000]
[192.50000000 208.97147640 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[577.49999874 272.46233920 28.47466707 232.07849240 180.00000000 1.00000000]
[577.49999874 272.46233920 28.47466707 180.00000000 127.92150783 1.00000000]
[]
[]
[]
[]
[577.49999909 432.55524618 41.50071865 245.05933661 209.99999994 1.00000000]
[577.49999909 432.55524618 41.50071865 209.99999994 174.94066328 1.00000000]
[577.49999909 432.55524618 41.50071865 174.94066328 139.88132661 1.00000000]
[]
[]
[524.40042642 546.73622264 42.10271758 270.38039838 235.83823502 1.00000000]
[524.40042642 546.73622264 42.10271758 235.83823502 201.29607166 1.00000000]
[524.40042642 546.73622264 42.10271758 201.29607166 166.75390830 1.00000000]
[524.40042642 546.73622264 42.10271758 166.75390830 132.21174494 1.00000000]
[524.40042642 546.73622264 42.10271758 132.21174494 97.66958159 1.00000000]
[524.40042642 546.73622264 42.10271758 97.66958159 63.12741823 1.00000000]
[524.40042642 546.73622264 42.10271758 63.12741823 28.58525487 1.00000000]
[524.40042642 546.73622264 42.10271758 28.58525487 354.04309151 1.00000000]
[524.40042642 546.73622264 42.10271758 354.04309151 319.50092815 1.00000000]
[]
[]
[577.49999909 432.55524618 41.50071865 89.99999992 54.94066325 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1105.85595580 737.60169889 28.47466729 172.07849181 119.99999988 1.00000000]
[1105.85595580 737.60169889 28.47466729 119.99999988 67.92150796 1.00000000]
[]
[]
[]
[1219.68097908 803.31860635 38.21401848 182.74528133 144.55896096 1.00000000]
[1219.68097908 803.31860635 38.21401848 144.55896096 106.37264059 1.00000000]
[1219.68097908 803.31860635 38.21401848 106.37264059 68.18632023 1.00000000]
[1219.68097908 803.31860635 38.21401848 68.18632023 29.99999986 1.00000000]
[1219.68097908 803.31860635 38.21401848 29.99999986 351.81367949 1.00000000]
[1219.68097908 803.31860635 38.21401848 351.81367949 313.62735913 1.00000000]
[1219.68097908 803.31860635 38.21401848 313.62735913 275.44103876 1.00000000]
[1219.68097908 803.31860635 38.21401848 275.44103876 237.25471840 1.00000000]
[]
[]
[]
[1105.85595580 737.60169889 28.47466729 352.07849176 299.99999984 1.00000000]
[1105.85595580 737.60169889 28.47466729 299.99999984 247.92150801 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[577.49999909 432.55524618 41.50071865 5.05933656 329.99999990 1.00000000]
[577.49999909 432.55524618 41.50071865 329.99999990 294.94066330 1.00000000]
[]
[]
[]
[]
[]
[577.49999874 272.46233920 28.47466707 52.07849136 360.00000000 1.00000000]
[577.49999874 272.46233920 28.47466707 360.00000000 307.92150832 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[912.49999874 204.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[912.49999874 204.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[912.49999874 204.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[912.49999874 204.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[912.49999874 204.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[912.49999874 204.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[912.49999874 204.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[997.49999897 254.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[997.49999897 254.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[997.49999897 254.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[997.49999897 254.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[997.49999897 254.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[997.49999897 254.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[997.49999897 254.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[5 17]
[6 16]
[7 15]
[32 139]
[33 138]
[34 137]
[36 136]
[37 135]
[38 134]
[39 133]
[41 131]
[42 130]
[43 128]
[44 127]
[45 126]
[48 61]
[49 60]
[50 59]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[86 100]
[87 99]
[88 98]
[89 97]
[151 164]
[152 163]
[153 162]
[154 161]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
] def

init

% Start Annotations
62 93 12 1.00 0.60 0.67 omark 71 124 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
