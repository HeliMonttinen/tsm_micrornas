%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGAGACUGUUACAGCCCCAAAUCCCCAAUACUGACUUUCUGGUGACUCACUUUCAUCUGAGAAACAGUDCRGCYCUAUAUGUAAUCAGCCCUCCACUGCCACUACCUAAUUUCACACACAAAAAGCAGAAGUACUUCCCAAGGAGCAAGCCUGUUCAGAACAAACCUUCUGACG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[160.92854309 170.66383362]
[165.87762451 195.16906738]
[156.17533875 218.20959473]
[146.47305298 241.25010681]
[136.77076721 264.29061890]
[127.06847382 287.33114624]
[117.36618805 310.37167358]
[107.66389465 333.41220093]
[97.96160889 356.45269775]
[73.28601837 352.43832397]
[48.30247116 353.34521484]
[23.98287964 359.13809204]
[1.27332067 369.59158325]
[-18.94275475 384.29907227]
[-35.87890244 402.68838501]
[-48.87627411 424.04415894]
[-57.42923737 447.53558350]
[-61.20507431 472.24877930]
[-60.05689240 497.22241211]
[-54.02935791 521.48492432]
[-43.35695648 544.09240723]
[-28.45486641 564.16546631]
[-9.90280533 580.92321777]
[11.57751179 593.71368408]
[35.15045547 602.03930664]
[59.89899445 605.57623291]
[62.27870560 630.46270752]
[64.65841675 655.34918213]
[67.03812408 680.23565674]
[52.64298630 700.67535400]
[55.02269745 725.56182861]
[73.03054047 742.90301514]
[75.41024780 767.78955078]
[77.78995514 792.67602539]
[80.16966248 817.56250000]
[71.38298035 840.96746826]
[84.44596863 862.28320312]
[86.82568359 887.16967773]
[89.20539093 912.05615234]
[91.58509827 936.94262695]
[93.96480560 961.82910156]
[78.50804138 981.47821045]
[78.50645447 1006.47821045]
[93.96072388 1026.12927246]
[118.25656891 1032.02099609]
[140.99557495 1021.63171387]
[152.44566345 999.40795898]
[147.70629883 974.86132812]
[128.80587769 958.49749756]
[126.42617798 933.61102295]
[124.04646301 908.72454834]
[121.66675568 883.83807373]
[119.28704834 858.95159912]
[128.07373047 835.54656982]
[115.01074219 814.23089600]
[112.63102722 789.34442139]
[110.25131989 764.45794678]
[107.87161255 739.57147217]
[122.26674652 719.13177490]
[119.88703918 694.24530029]
[101.87919617 676.90411377]
[99.49948883 652.01757812]
[97.11978149 627.13110352]
[94.74006653 602.24462891]
[118.36983490 594.08166504]
[139.93778992 581.43951416]
[158.60488892 564.81005859]
[173.64495850 544.84020996]
[184.47291565 522.30676270]
[190.66751099 498.08636475]
[191.98777771 473.12124634]
[188.38233948 448.38259888]
[179.99147034 424.83279419]
[167.14158630 403.38796997]
[150.33258057 384.88238525]
[130.21833801 370.03591919]
[139.92062378 346.99539185]
[149.62290955 323.95486450]
[159.32519531 300.91436768]
[169.02749634 277.87384033]
[193.83230591 274.75601196]
[178.72978210 254.83331299]
[188.43206787 231.79280090]
[198.13435364 208.75227356]
[219.12237549 195.16906738]
[224.07145691 170.66383362]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
[860.00000000 100.00000000]
[885.00000000 100.00000000]
[910.00000000 100.00000000]
[935.00000000 100.00000000]
[960.00000000 100.00000000]
[985.00000000 100.00000000]
[1010.00000000 100.00000000]
[1035.00000000 100.00000000]
[1035.00000000 125.00000000]
[1035.00000000 150.00000000]
[1035.00000000 175.00000000]
[1035.00000000 200.00000000]
[1035.00000000 225.00000000]
[1011.14929199 232.49295044]
[989.93713379 245.72335815]
[972.71697998 263.84701538]
[960.58770752 285.70748901]
[954.32318115 309.90988159]
[954.32318115 334.90988159]
[960.58770752 359.11227417]
[972.71697998 380.97274780]
[989.93713379 399.09640503]
[1011.14929199 412.32681274]
[1035.00000000 419.81976318]
[1059.96728516 421.09713745]
[1066.23181152 445.29953003]
[1072.49633789 469.50192261]
[1078.76086426 493.70431519]
[1085.02539062 517.90673828]
[1082.05200195 542.72924805]
[1100.87414551 559.18316650]
[1125.07653809 552.91864014]
[1133.55187988 529.39910889]
[1118.90869141 509.13641357]
[1112.64428711 484.93399048]
[1106.37976074 460.73159790]
[1100.11523438 436.52920532]
[1093.85070801 412.32681274]
[1115.06286621 399.09640503]
[1132.28295898 380.97274780]
[1144.41235352 359.11227417]
[1150.67675781 334.90988159]
[1150.67675781 309.90988159]
[1144.41235352 285.70748901]
[1132.28295898 263.84701538]
[1115.06286621 245.72335815]
[1093.85070801 232.49295044]
[1070.00000000 225.00000000]
[1070.00000000 200.00000000]
[1070.00000000 175.00000000]
[1070.00000000 150.00000000]
[1070.00000000 125.00000000]
[1070.00000000 100.00000000]
[1095.00000000 100.00000000]
[1120.00000000 100.00000000]
[1145.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[192.49999957 177.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[192.49999957 177.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[65.36978758 478.94261507 126.75173798 284.89990185 273.58071583 1.00000000]
[65.36978758 478.94261507 126.75173798 273.58071583 262.26152980 1.00000000]
[65.36978758 478.94261507 126.75173798 262.26152980 250.94234377 1.00000000]
[65.36978758 478.94261507 126.75173798 250.94234377 239.62315774 1.00000000]
[65.36978758 478.94261507 126.75173798 239.62315774 228.30397171 1.00000000]
[65.36978758 478.94261507 126.75173798 228.30397171 216.98478568 1.00000000]
[65.36978758 478.94261507 126.75173798 216.98478568 205.66559965 1.00000000]
[65.36978758 478.94261507 126.75173798 205.66559965 194.34641362 1.00000000]
[65.36978758 478.94261507 126.75173798 194.34641362 183.02722759 1.00000000]
[65.36978758 478.94261507 126.75173798 183.02722759 171.70804157 1.00000000]
[65.36978758 478.94261507 126.75173798 171.70804157 160.38885554 1.00000000]
[65.36978758 478.94261507 126.75173798 160.38885554 149.06966951 1.00000000]
[65.36978758 478.94261507 126.75173798 149.06966951 137.75048348 1.00000000]
[65.36978758 478.94261507 126.75173798 137.75048348 126.43129745 1.00000000]
[65.36978758 478.94261507 126.75173798 126.43129745 115.11211142 1.00000000]
[65.36978758 478.94261507 126.75173798 115.11211142 103.79292539 1.00000000]
[65.36978758 478.94261507 126.75173798 103.79292539 92.47373936 1.00000000]
[]
[]
[]
[87.45486698 709.90356627 36.01426010 235.46516185 194.84694600 1.00000000]
[87.45486698 709.90356627 36.01426010 194.84694600 154.22873015 1.00000000]
[87.45486698 709.90356627 36.01426010 154.22873015 113.61051429 1.00000000]
[]
[]
[]
[99.72835570 838.25703866 28.47466729 226.61632998 174.53783805 1.00000000]
[99.72835570 838.25703866 28.47466729 174.53783805 122.45934612 1.00000000]
[]
[]
[]
[]
[114.61903622 993.98053163 38.21401848 237.28311949 199.09679912 1.00000000]
[114.61903622 993.98053163 38.21401848 199.09679912 160.91047876 1.00000000]
[114.61903622 993.98053163 38.21401848 160.91047876 122.72415839 1.00000000]
[114.61903622 993.98053163 38.21401848 122.72415839 84.53783803 1.00000000]
[114.61903622 993.98053163 38.21401848 84.53783803 46.35151766 1.00000000]
[114.61903622 993.98053163 38.21401848 46.35151766 8.16519729 1.00000000]
[114.61903622 993.98053163 38.21401848 8.16519729 329.97887693 1.00000000]
[114.61903622 993.98053163 38.21401848 329.97887693 291.79255656 1.00000000]
[]
[]
[]
[]
[99.72835570 838.25703866 28.47466729 46.61632993 354.53783800 1.00000000]
[99.72835570 838.25703866 28.47466729 354.53783800 302.45934617 1.00000000]
[]
[]
[]
[87.45486698 709.90356627 36.01426010 55.46516185 14.84694600 1.00000000]
[87.45486698 709.90356627 36.01426010 14.84694600 334.22873015 1.00000000]
[87.45486698 709.90356627 36.01426010 334.22873015 293.61051429 1.00000000]
[]
[]
[]
[65.36978758 478.94261507 126.75173798 76.60193678 65.28275075 1.00000000]
[65.36978758 478.94261507 126.75173798 65.28275075 53.96356472 1.00000000]
[65.36978758 478.94261507 126.75173798 53.96356472 42.64437870 1.00000000]
[65.36978758 478.94261507 126.75173798 42.64437870 31.32519267 1.00000000]
[65.36978758 478.94261507 126.75173798 31.32519267 20.00600664 1.00000000]
[65.36978758 478.94261507 126.75173798 20.00600664 8.68682061 1.00000000]
[65.36978758 478.94261507 126.75173798 8.68682061 357.36763458 1.00000000]
[65.36978758 478.94261507 126.75173798 357.36763458 346.04844855 1.00000000]
[65.36978758 478.94261507 126.75173798 346.04844855 334.72926252 1.00000000]
[65.36978758 478.94261507 126.75173798 334.72926252 323.41007649 1.00000000]
[65.36978758 478.94261507 126.75173798 323.41007649 312.09089046 1.00000000]
[65.36978758 478.94261507 126.75173798 312.09089046 300.77170444 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[192.49999957 177.04002271 32.20889362 79.92531101 34.25370472 1.00000000]
[192.49999957 177.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[192.49999957 177.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1052.49999915 322.40988526 98.96936772 259.81527266 245.30340490 1.00000000]
[1052.49999915 322.40988526 98.96936772 245.30340490 230.79153715 1.00000000]
[1052.49999915 322.40988526 98.96936772 230.79153715 216.27966939 1.00000000]
[1052.49999915 322.40988526 98.96936772 216.27966939 201.76780163 1.00000000]
[1052.49999915 322.40988526 98.96936772 201.76780163 187.25593388 1.00000000]
[1052.49999915 322.40988526 98.96936772 187.25593388 172.74406612 1.00000000]
[1052.49999915 322.40988526 98.96936772 172.74406612 158.23219837 1.00000000]
[1052.49999915 322.40988526 98.96936772 158.23219837 143.72033061 1.00000000]
[1052.49999915 322.40988526 98.96936772 143.72033061 129.20846285 1.00000000]
[1052.49999915 322.40988526 98.96936772 129.20846285 114.69659510 1.00000000]
[1052.49999915 322.40988526 98.96936772 114.69659510 100.18472734 1.00000000]
[1052.49999915 322.40988526 98.96936772 100.18472734 85.67285958 1.00000000]
[]
[]
[]
[]
[1107.04339328 533.13347167 26.77024824 214.66616524 158.99495204 1.00000000]
[1107.04339328 533.13347167 26.77024824 158.99495204 103.32373884 1.00000000]
[1107.04339328 533.13347167 26.77024824 103.32373884 47.65252564 1.00000000]
[1107.04339328 533.13347167 26.77024824 47.65252564 351.98131245 1.00000000]
[1107.04339328 533.13347167 26.77024824 351.98131245 296.31009925 1.00000000]
[]
[]
[]
[]
[1052.49999915 322.40988526 98.96936772 65.30340490 50.79153715 1.00000000]
[1052.49999915 322.40988526 98.96936772 50.79153715 36.27966939 1.00000000]
[1052.49999915 322.40988526 98.96936772 36.27966939 21.76780163 1.00000000]
[1052.49999915 322.40988526 98.96936772 21.76780163 7.25593388 1.00000000]
[1052.49999915 322.40988526 98.96936772 7.25593388 352.74406612 1.00000000]
[1052.49999915 322.40988526 98.96936772 352.74406612 338.23219837 1.00000000]
[1052.49999915 322.40988526 98.96936772 338.23219837 323.72033061 1.00000000]
[1052.49999915 322.40988526 98.96936772 323.72033061 309.20846285 1.00000000]
[1052.49999915 322.40988526 98.96936772 309.20846285 294.69659510 1.00000000]
[1052.49999915 322.40988526 98.96936772 294.69659510 280.18472734 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 95]
[5 94]
[6 93]
[8 90]
[9 89]
[10 88]
[11 86]
[12 85]
[13 84]
[14 83]
[15 82]
[32 70]
[33 69]
[34 68]
[35 67]
[38 64]
[39 63]
[40 62]
[41 61]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[128 173]
[129 172]
[130 171]
[131 170]
[132 169]
[133 168]
[145 158]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% Start Annotations
63 87 12 1.00 0.60 0.67 omark 84 115 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
