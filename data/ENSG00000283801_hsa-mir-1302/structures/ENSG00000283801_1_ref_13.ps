%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:56 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCAGAAUUCUUGGCCCUUGUCUUUUAGGGUUGCCAGAUAAAAAUACAGGAUACCCAGUUAAUUUGAAUUUCAGAUAAAVAACGAAUAUUUGUAUAAAUAUGUCCCAAACUAAGCAUGGGACAUACUUAUGCUAAAAAAAUUAUUSSUUGUUUAUCUGAAAUUCAAAAUUAAGUAUUUUAUAUUUUUAUUUGCUAAAUCUGGCAACCCUACUCUCUUCCUAAUACUCUCUC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[425.00000000 125.00000000]
[425.00000000 150.00000000]
[415.90148926 173.28555298]
[430.00000000 193.93092346]
[455.00000000 193.93092346]
[469.09851074 173.28555298]
[460.00000000 150.00000000]
[460.00000000 125.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[560.00000000 125.00000000]
[560.00000000 150.00000000]
[560.00000000 175.00000000]
[560.00000000 200.00000000]
[560.00000000 225.00000000]
[560.00000000 250.00000000]
[560.00000000 275.00000000]
[560.00000000 300.00000000]
[560.00000000 325.00000000]
[560.00000000 350.00000000]
[560.00000000 375.00000000]
[560.00000000 400.00000000]
[538.66284180 413.02786255]
[516.42462158 401.60586548]
[494.18640137 390.18386841]
[471.94818115 378.76190186]
[449.70999146 367.33990479]
[427.47177124 355.91790771]
[405.23355103 344.49591064]
[382.99533081 333.07391357]
[368.02856445 313.04907227]
[343.03356934 312.54876709]
[320.79534912 301.12677002]
[298.55712891 289.70477295]
[276.31890869 278.28277588]
[254.08070374 266.86080933]
[231.84248352 255.43881226]
[209.60427856 244.01681519]
[200.15992737 220.86936951]
[177.92172241 209.44737244]
[153.60559082 215.25477600]
[138.92878723 235.49313354]
[140.96363831 260.41018677]
[126.28684235 280.64855957]
[111.61004639 300.88693237]
[96.93324280 321.12530518]
[82.25643921 341.36364746]
[67.57964325 361.60202026]
[52.90283966 381.84039307]
[38.22603989 402.07876587]
[23.54923820 422.31713867]
[8.87243652 442.55548096]
[-5.80436468 462.79385376]
[-20.48116493 483.03222656]
[-35.15796661 503.27059937]
[-49.83476639 523.50897217]
[-64.51156616 543.74731445]
[-79.18836975 563.98571777]
[-93.86517334 584.22406006]
[-108.54196930 604.46246338]
[-123.21877289 624.70080566]
[-137.89556885 644.93914795]
[-152.57237244 665.17755127]
[-174.64375305 676.91864014]
[-178.94639587 701.54559326]
[-193.62319946 721.78399658]
[-217.93933105 727.59136963]
[-232.61613464 747.82977295]
[-230.58126831 772.74682617]
[-245.25807190 792.98516846]
[-259.93487549 813.22351074]
[-274.61166382 833.46191406]
[-299.34573364 837.09869385]
[-319.22692871 821.94158936]
[-339.10815430 806.78448486]
[-358.98934937 791.62738037]
[-378.87054443 776.47027588]
[-398.75177002 761.31317139]
[-418.63296509 746.15606689]
[-438.51416016 730.99902344]
[-458.39538574 715.84191895]
[-469.60473633 693.49572754]
[-494.12164307 688.60479736]
[-514.00286865 673.44769287]
[-533.88403320 658.29058838]
[-553.76525879 643.13348389]
[-573.64648438 627.97637939]
[-593.52764893 612.81927490]
[-613.40887451 597.66217041]
[-633.29010010 582.50506592]
[-653.17126465 567.34796143]
[-653.51983643 542.35040283]
[-666.88885498 521.22534180]
[-689.33123779 510.20983887]
[-714.22088623 512.55621338]
[-734.20922852 527.57171631]
[-743.39483643 550.82299805]
[-739.06567383 575.44531250]
[-722.49987793 594.16900635]
[-698.58850098 601.46588135]
[-674.39123535 595.18164062]
[-654.51000977 610.33874512]
[-634.62878418 625.49584961]
[-614.74761963 640.65295410]
[-594.86639404 655.81005859]
[-574.98516846 670.96716309]
[-555.10400391 686.12426758]
[-535.22277832 701.28137207]
[-515.34155273 716.43847656]
[-504.13220215 738.78460693]
[-479.61532593 743.67559814]
[-459.73410034 758.83270264]
[-439.85290527 773.98980713]
[-419.97171021 789.14691162]
[-400.09048462 804.30395508]
[-380.20928955 819.46105957]
[-383.39511108 844.25726318]
[-360.32809448 834.61816406]
[-340.44686890 849.77526855]
[-320.56567383 864.93237305]
[-317.52206421 889.74639893]
[-300.30004883 907.86828613]
[-275.67306519 912.17071533]
[-253.32681274 900.96154785]
[-242.05007935 878.64935303]
[-246.27796936 854.00939941]
[-231.60116577 833.77105713]
[-216.92436218 813.53271484]
[-202.24755859 793.29431152]
[-177.93142700 787.48693848]
[-163.25462341 767.24853516]
[-165.28948975 742.33148193]
[-150.61268616 722.09313965]
[-128.54130554 710.35205078]
[-124.23866272 685.72503662]
[-109.56185913 665.48669434]
[-94.88505554 645.24835205]
[-80.20825958 625.00994873]
[-65.53145599 604.77160645]
[-50.85465622 584.53320312]
[-36.17785645 564.29486084]
[-21.50105286 544.05645752]
[-6.82425261 523.81811523]
[7.85254860 503.57974243]
[22.52935028 483.34136963]
[37.20615005 463.10302734]
[51.88294983 442.86465454]
[66.55975342 422.62628174]
[91.42509460 425.21759033]
[81.23655701 402.38790894]
[95.91335297 382.14953613]
[110.59015656 361.91119385]
[125.26696014 341.67282104]
[139.94375610 321.43444824]
[154.62055969 301.19607544]
[169.29736328 280.95770264]
[193.61349487 275.15029907]
[215.85169983 286.57229614]
[238.08992004 297.99429321]
[260.32812500 309.41629028]
[282.56634521 320.83828735]
[304.80456543 332.26025391]
[327.04275513 343.68225098]
[342.00955200 363.70712280]
[367.00454712 364.20742798]
[389.24276733 375.62942505]
[411.48098755 387.05139160]
[433.71920776 398.47338867]
[455.95739746 409.89538574]
[478.19561768 421.31738281]
[500.43383789 432.73937988]
[522.67205811 444.16134644]
[524.51220703 469.09353638]
[537.11120605 490.68670654]
[557.91094971 504.55645752]
[582.68817139 507.88662720]
[606.41192627 500.00103760]
[624.26531982 482.50082397]
[632.62322998 458.93930054]
[629.78869629 434.10052490]
[616.33715820 413.02786255]
[595.00000000 400.00000000]
[595.00000000 375.00000000]
[595.00000000 350.00000000]
[595.00000000 325.00000000]
[595.00000000 300.00000000]
[595.00000000 275.00000000]
[595.00000000 250.00000000]
[595.00000000 225.00000000]
[595.00000000 200.00000000]
[595.00000000 175.00000000]
[595.00000000 150.00000000]
[595.00000000 125.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
[1020.00000000 100.00000000]
[1045.00000000 100.00000000]
[1070.00000000 100.00000000]
[1095.00000000 100.00000000]
[1120.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[442.50000000 170.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[442.50000000 170.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[442.50000000 170.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[442.50000000 170.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[442.50000000 170.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[577.50000469 452.64874887 55.48099457 251.61362834 225.57230894 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[355.01905454 338.37809148 28.47466729 349.26442918 297.18593726 1.00000000]
[355.01905454 338.37809148 28.47466729 297.18593726 245.10744533 1.00000000]
[]
[]
[]
[]
[]
[]
[173.60954010 245.20254357 36.01426010 358.11326101 317.49504516 1.00000000]
[173.60954010 245.20254357 36.01426010 317.49504516 276.87682931 1.00000000]
[173.60954010 245.20254357 36.01426010 276.87682931 236.25861345 1.00000000]
[173.60954010 245.20254357 36.01426010 236.25861345 195.64039760 1.00000000]
[173.60954010 245.20254357 36.01426010 195.64039760 155.02218175 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-151.59252925 693.63533963 28.47466729 268.02799743 215.94950550 1.00000000]
[-151.59252925 693.63533963 28.47466729 215.94950550 163.87101358 1.00000000]
[]
[-197.93537878 757.53915693 36.01426010 276.87682926 236.25861341 1.00000000]
[-197.93537878 757.53915693 36.01426010 236.25861341 195.64039755 1.00000000]
[-197.93537878 757.53915693 36.01426010 195.64039755 155.02218170 1.00000000]
[]
[]
[]
[-281.47211616 872.73096017 39.86382195 279.90975935 243.36104285 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-486.86847747 716.14017821 28.47466729 359.39978863 307.32129670 1.00000000]
[-486.86847747 716.14017821 28.47466729 307.32129670 255.24280477 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-697.62022878 555.46653595 46.00953986 14.96556694 343.43671288 1.00000000]
[-697.62022878 555.46653595 46.00953986 343.43671288 311.90785883 1.00000000]
[-697.62022878 555.46653595 46.00953986 311.90785883 280.37900478 1.00000000]
[-697.62022878 555.46653595 46.00953986 280.37900478 248.85015073 1.00000000]
[-697.62022878 555.46653595 46.00953986 248.85015073 217.32129668 1.00000000]
[-697.62022878 555.46653595 46.00953986 217.32129668 185.79244262 1.00000000]
[-697.62022878 555.46653595 46.00953986 185.79244262 154.26358857 1.00000000]
[-697.62022878 555.46653595 46.00953986 154.26358857 122.73473452 1.00000000]
[-697.62022878 555.46653595 46.00953986 122.73473452 91.20588047 1.00000000]
[-697.62022878 555.46653595 46.00953986 91.20588047 59.67702642 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-486.86847747 716.14017821 28.47466729 179.39978858 127.32129665 1.00000000]
[-486.86847747 716.14017821 28.47466729 127.32129665 75.24280482 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-281.47211616 872.73096017 39.86382195 191.28155059 154.73283410 1.00000000]
[-281.47211616 872.73096017 39.86382195 154.73283410 118.18411760 1.00000000]
[-281.47211616 872.73096017 39.86382195 118.18411760 81.63540110 1.00000000]
[-281.47211616 872.73096017 39.86382195 81.63540110 45.08668460 1.00000000]
[-281.47211616 872.73096017 39.86382195 45.08668460 8.53796811 1.00000000]
[-281.47211616 872.73096017 39.86382195 8.53796811 331.98925161 1.00000000]
[]
[]
[]
[-197.93537878 757.53915693 36.01426010 96.87682926 56.25861341 1.00000000]
[-197.93537878 757.53915693 36.01426010 56.25861341 15.64039755 1.00000000]
[-197.93537878 757.53915693 36.01426010 15.64039755 335.02218170 1.00000000]
[]
[-151.59252925 693.63533963 28.47466729 88.02799738 35.94950546 1.00000000]
[-151.59252925 693.63533963 28.47466729 35.94950546 343.87101362 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[173.60954010 245.20254357 36.01426010 96.87682931 56.25861345 1.00000000]
[]
[]
[]
[]
[]
[]
[355.01905454 338.37809148 28.47466729 169.26442914 117.18593721 1.00000000]
[355.01905454 338.37809148 28.47466729 117.18593721 65.10744538 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[577.50000469 452.64874887 55.48099457 188.79956562 162.75824622 1.00000000]
[577.50000469 452.64874887 55.48099457 162.75824622 136.71692683 1.00000000]
[577.50000469 452.64874887 55.48099457 136.71692683 110.67560743 1.00000000]
[577.50000469 452.64874887 55.48099457 110.67560743 84.63428804 1.00000000]
[577.50000469 452.64874887 55.48099457 84.63428804 58.59296864 1.00000000]
[577.50000469 452.64874887 55.48099457 58.59296864 32.55164924 1.00000000]
[577.50000469 452.64874887 55.48099457 32.55164924 6.51032985 1.00000000]
[577.50000469 452.64874887 55.48099457 6.51032985 340.46901045 1.00000000]
[577.50000469 452.64874887 55.48099457 340.46901045 314.42769106 1.00000000]
[577.50000469 452.64874887 55.48099457 314.42769106 288.38637166 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 23]
[15 22]
[16 21]
[27 211]
[28 210]
[29 209]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[38 200]
[39 199]
[40 189]
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[46 183]
[47 182]
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 174]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[67 165]
[68 164]
[69 163]
[70 162]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[77 155]
[78 154]
[79 153]
[80 152]
[82 150]
[83 149]
[86 146]
[87 145]
[88 144]
[89 143]
[90 137]
[91 136]
[92 135]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[100 126]
[101 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
] def

init

% Start Annotations
90 135 12 1.00 0.60 0.67 omark 90 140 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
