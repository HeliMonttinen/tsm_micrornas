%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUAUAUAAAGUAAAACAGGAAAAAAAAAAAACAGACUGAAAAAUGUCUGUUUUAAGGACACUGAGGGAUCCAGAACAAAGGAUCCCUCAGUGUCCUUAAAACAUCUUAGAGGCCAUGAGAAAACCAGGAGACUUAAAACAGUGAAGUAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[100.20629120 179.18334961]
[76.23662567 186.77832031]
[53.55803299 197.63693237]
[32.61236954 211.54763794]
[13.80774784 228.23939514]
[-2.48945045 247.38697815]
[-15.96169090 268.61730957]
[-26.34648132 291.51675415]
[-33.44148636 315.63912964]
[-37.10847092 340.51446533]
[-37.27598190 365.65805054]
[-33.94075775 390.58001709]
[-27.16778564 414.79479980]
[-17.08902359 437.83056641]
[-3.90084767 459.23852539]
[12.13978481 478.60153198]
[30.72034073 495.54235840]
[51.47879791 509.73089600]
[74.01070404 520.89074707]
[97.87704468 528.80438232]
[122.61281586 533.31768799]
[147.73606873 534.34277344]
[172.75729370 531.85949707]
[197.18899536 525.91644287]
[220.55514526 516.62927246]
[242.40048218 504.17895508]
[262.29934692 488.80810547]
[279.86407471 470.81619263]
[294.75241089 450.55377197]
[317.08071899 461.79861450]
[339.40902710 473.04348755]
[361.73733521 484.28833008]
[384.06567383 495.53317261]
[406.39398193 506.77801514]
[412.90695190 530.91473389]
[431.95758057 547.10339355]
[456.82894897 549.63623047]
[478.75186157 537.62017822]
[489.99670410 515.29187012]
[486.59875488 490.52386475]
[469.75607300 472.04891968]
[445.40707397 466.38095093]
[422.13674927 475.51837158]
[399.80844116 464.27352905]
[377.48013306 453.02868652]
[355.15182495 441.78384399]
[332.82351685 430.53900146]
[310.49520874 419.29415894]
[317.87805176 395.40914917]
[342.65713501 398.72515869]
[367.43624878 402.04119873]
[392.21536255 405.35723877]
[416.99444580 408.67327881]
[441.77355957 411.98928833]
[466.55267334 415.30532837]
[491.33175659 418.62136841]
[516.11083984 421.93737793]
[540.88995361 425.25341797]
[565.66906738 428.56945801]
[590.44818115 431.88546753]
[615.22729492 435.20150757]
[640.00640869 438.51754761]
[664.78546143 441.83358765]
[689.56457520 445.14959717]
[714.34368896 448.46563721]
[739.12280273 451.78167725]
[763.90191650 455.09768677]
[788.68103027 458.41372681]
[813.46008301 461.72976685]
[827.51550293 482.40454102]
[850.81585693 491.46496582]
[875.14599609 485.71652222]
[891.92749023 467.18597412]
[895.24353027 442.40689087]
[883.92492676 420.11587524]
[861.96240234 408.17236328]
[837.09954834 410.78741455]
[818.10253906 427.03900146]
[793.32342529 423.72299194]
[768.54437256 420.40695190]
[743.76525879 417.09091187]
[718.98614502 413.77490234]
[694.20703125 410.45886230]
[669.42791748 407.14282227]
[644.64880371 403.82681274]
[619.86975098 400.51077271]
[595.09063721 397.19473267]
[570.31152344 393.87869263]
[545.53240967 390.56268311]
[520.75329590 387.24664307]
[495.97421265 383.93060303]
[471.19509888 380.61459351]
[446.41601562 377.29855347]
[421.63690186 373.98251343]
[396.85778809 370.66650391]
[372.07870483 367.35046387]
[347.29959106 364.03442383]
[322.52047729 360.71838379]
[321.33596802 332.68511963]
[315.81253052 305.17587280]
[306.08422852 278.85806274]
[292.38708496 254.37019348]
[311.74359131 238.54849243]
[331.10006714 222.72679138]
[350.45654297 206.90509033]
[369.81304932 191.08338928]
[394.73968506 192.99703979]
[415.51522827 179.09101868]
[423.24789429 155.31695557]
[414.62817383 131.84994507]
[393.34524536 118.73365021]
[368.50799561 121.58173370]
[350.74658203 139.17523193]
[347.66265869 163.98429871]
[328.30618286 179.80599976]
[308.94967651 195.62770081]
[289.59320068 211.44940186]
[270.23669434 227.27110291]
[237.86915588 201.46484375]
[200.46514893 183.72892761]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[142.49999999 354.28339646 180.13546638 264.42497305 256.42085278 1.00000000]
[142.49999999 354.28339646 180.13546638 256.42085278 248.41673251 1.00000000]
[142.49999999 354.28339646 180.13546638 248.41673251 240.41261224 1.00000000]
[142.49999999 354.28339646 180.13546638 240.41261224 232.40849197 1.00000000]
[142.49999999 354.28339646 180.13546638 232.40849197 224.40437170 1.00000000]
[142.49999999 354.28339646 180.13546638 224.40437170 216.40025143 1.00000000]
[142.49999999 354.28339646 180.13546638 216.40025143 208.39613116 1.00000000]
[142.49999999 354.28339646 180.13546638 208.39613116 200.39201089 1.00000000]
[142.49999999 354.28339646 180.13546638 200.39201089 192.38789062 1.00000000]
[142.49999999 354.28339646 180.13546638 192.38789062 184.38377035 1.00000000]
[142.49999999 354.28339646 180.13546638 184.38377035 176.37965008 1.00000000]
[142.49999999 354.28339646 180.13546638 176.37965008 168.37552981 1.00000000]
[142.49999999 354.28339646 180.13546638 168.37552981 160.37140954 1.00000000]
[142.49999999 354.28339646 180.13546638 160.37140954 152.36728927 1.00000000]
[142.49999999 354.28339646 180.13546638 152.36728927 144.36316900 1.00000000]
[142.49999999 354.28339646 180.13546638 144.36316900 136.35904873 1.00000000]
[142.49999999 354.28339646 180.13546638 136.35904873 128.35492846 1.00000000]
[142.49999999 354.28339646 180.13546638 128.35492846 120.35080819 1.00000000]
[142.49999999 354.28339646 180.13546638 120.35080819 112.34668792 1.00000000]
[142.49999999 354.28339646 180.13546638 112.34668792 104.34256765 1.00000000]
[142.49999999 354.28339646 180.13546638 104.34256765 96.33844738 1.00000000]
[142.49999999 354.28339646 180.13546638 96.33844738 88.33432711 1.00000000]
[142.49999999 354.28339646 180.13546638 88.33432711 80.33020684 1.00000000]
[142.49999999 354.28339646 180.13546638 80.33020684 72.32608657 1.00000000]
[142.49999999 354.28339646 180.13546638 72.32608657 64.32196630 1.00000000]
[142.49999999 354.28339646 180.13546638 64.32196630 56.31784603 1.00000000]
[142.49999999 354.28339646 180.13546638 56.31784603 48.31372576 1.00000000]
[142.49999999 354.28339646 180.13546638 48.31372576 40.30960549 1.00000000]
[142.49999999 354.28339646 180.13546638 40.30960549 32.30548522 1.00000000]
[]
[]
[]
[]
[]
[448.46648889 508.37235779 42.10271758 182.17019339 147.62803003 1.00000000]
[448.46648889 508.37235779 42.10271758 147.62803003 113.08586667 1.00000000]
[448.46648889 508.37235779 42.10271758 113.08586667 78.54370332 1.00000000]
[448.46648889 508.37235779 42.10271758 78.54370332 44.00153996 1.00000000]
[448.46648889 508.37235779 42.10271758 44.00153996 9.45937660 1.00000000]
[448.46648889 508.37235779 42.10271758 9.45937660 334.91721324 1.00000000]
[448.46648889 508.37235779 42.10271758 334.91721324 300.37504988 1.00000000]
[448.46648889 508.37235779 42.10271758 300.37504988 265.83288652 1.00000000]
[448.46648889 508.37235779 42.10271758 265.83288652 231.29072317 1.00000000]
[]
[]
[]
[]
[]
[142.49999999 354.28339646 180.13546638 21.15543133 13.19727307 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[853.73642632 449.46367843 42.10271758 163.06198124 128.51981788 1.00000000]
[853.73642632 449.46367843 42.10271758 128.51981788 93.97765452 1.00000000]
[853.73642632 449.46367843 42.10271758 93.97765452 59.43549117 1.00000000]
[853.73642632 449.46367843 42.10271758 59.43549117 24.89332781 1.00000000]
[853.73642632 449.46367843 42.10271758 24.89332781 350.35116445 1.00000000]
[853.73642632 449.46367843 42.10271758 350.35116445 315.80900109 1.00000000]
[853.73642632 449.46367843 42.10271758 315.80900109 281.26683773 1.00000000]
[853.73642632 449.46367843 42.10271758 281.26683773 246.72467437 1.00000000]
[853.73642632 449.46367843 42.10271758 246.72467437 212.18251102 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[142.49999999 354.28339646 180.13546638 2.04721918 353.11365998 1.00000000]
[142.49999999 354.28339646 180.13546638 353.11365998 344.18010079 1.00000000]
[142.49999999 354.28339646 180.13546638 344.18010079 335.24654159 1.00000000]
[142.49999999 354.28339646 180.13546638 335.24654159 326.31298239 1.00000000]
[]
[]
[]
[]
[385.04059927 156.03437863 38.21401848 113.48323691 75.29691654 1.00000000]
[385.04059927 156.03437863 38.21401848 75.29691654 37.11059618 1.00000000]
[385.04059927 156.03437863 38.21401848 37.11059618 358.92427581 1.00000000]
[385.04059927 156.03437863 38.21401848 358.92427581 320.73795544 1.00000000]
[385.04059927 156.03437863 38.21401848 320.73795544 282.55163508 1.00000000]
[385.04059927 156.03437863 38.21401848 282.55163508 244.36531471 1.00000000]
[385.04059927 156.03437863 38.21401848 244.36531471 206.17899435 1.00000000]
[385.04059927 156.03437863 38.21401848 206.17899435 167.99267398 1.00000000]
[]
[]
[]
[]
[142.49999999 354.28339646 180.13546638 315.16292850 301.96696131 1.00000000]
[142.49999999 354.28339646 180.13546638 301.96696131 288.77099413 1.00000000]
[142.49999999 354.28339646 180.13546638 288.77099413 275.57502695 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[5 126]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[54 103]
[55 102]
[56 101]
[57 100]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[74 83]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
] def

init

% Start Annotations
51 74 12 1.00 0.60 0.67 omark 83 106 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
