%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUAUAUAAAGUAAAACAGAAAAAAAAAACAGACUGAAAAAUGUCUGUUUUAAGGACACUGAGGGAUCCAGAACAAAGGAUCCCUCAGUGUCCUUAAAACAUCUUAGAGGCCAUGAGAAAACCAGGAGACUUAAAACAGUGAAGUAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[100.41188049 179.51934814]
[76.78661346 187.69534302]
[54.66468048 199.34092712]
[34.55216217 214.18972778]
[16.90917015 231.90200806]
[2.13932896 252.07257080]
[-9.41947174 274.23999023]
[-17.50279999 297.89712524]
[-21.92573357 322.50274658]
[-22.58708763 347.49401855]
[-19.47173309 372.29913330]
[-12.65094090 396.35067749]
[-2.28075004 419.09841919]
[11.40159988 440.02191162]
[28.08309746 458.64254761]
[47.38211823 474.53430176]
[68.85715485 487.33361816]
[92.01692963 496.74771118]
[116.33160400 502.56118774]
[141.24493408 504.64105225]
[166.18698120 502.93975830]
[190.58712769 497.49618530]
[213.88719177 488.43490601]
[235.55412292 475.96316528]
[255.09225464 460.36633301]
[272.05459595 442.00119019]
[293.18353271 455.36413574]
[314.31246948 468.72708130]
[335.44137573 482.09002686]
[356.57031250 495.45297241]
[377.69924927 508.81591797]
[381.83407593 533.47161865]
[399.22009277 551.43621826]
[423.72723389 556.37573242]
[446.71481323 546.54864502]
[460.07775879 525.41967773]
[459.10455322 500.43865967]
[444.13836670 480.41333008]
[420.45599365 472.40432739]
[396.40737915 479.23541260]
[375.27844238 465.87246704]
[354.14950562 452.50952148]
[333.02059937 439.14657593]
[311.89166260 425.78363037]
[290.76272583 412.42068481]
[300.10845947 389.15307617]
[324.61041260 394.11834717]
[349.11236572 399.08361816]
[373.61434937 404.04885864]
[398.11630249 409.01412964]
[422.61825562 413.97940063]
[447.12023926 418.94464111]
[471.62219238 423.90991211]
[496.12414551 428.87518311]
[520.62609863 433.84045410]
[545.12805176 438.80569458]
[569.63006592 443.77096558]
[594.13201904 448.73623657]
[618.63397217 453.70147705]
[643.13592529 458.66674805]
[667.63787842 463.63201904]
[692.13983154 468.59729004]
[716.64184570 473.56253052]
[741.14379883 478.52780151]
[765.64575195 483.49307251]
[790.14770508 488.45831299]
[802.78936768 510.02655029]
[825.43188477 520.62451172]
[850.09191895 516.51556396]
[868.07476807 499.14840698]
[873.04003906 474.64645386]
[863.23706055 451.64859009]
[842.12213135 438.26345825]
[817.14007568 439.21041870]
[797.09906006 454.15557861]
[772.59710693 449.19030762]
[748.09515381 444.22506714]
[723.59320068 439.25979614]
[699.09124756 434.29452515]
[674.58923340 429.32925415]
[650.08728027 424.36401367]
[625.58532715 419.39874268]
[601.08337402 414.43347168]
[576.58142090 409.46823120]
[552.07946777 404.50296021]
[527.57745361 399.53768921]
[503.07553101 394.57241821]
[478.57354736 389.60717773]
[454.07159424 384.64190674]
[429.56964111 379.67663574]
[405.06765747 374.71139526]
[380.56570435 369.74612427]
[356.06375122 364.78085327]
[331.56179810 359.81558228]
[307.05981445 354.85034180]
[307.37667847 327.71310425]
[303.24856567 300.88983154]
[294.78677368 275.10363770]
[282.21939087 251.04972839]
[301.81924438 235.53050232]
[321.41909790 220.01127625]
[341.01892090 204.49206543]
[360.61877441 188.97283936]
[385.51269531 191.27334595]
[406.50164795 177.69160461]
[414.60256958 154.04048157]
[406.34829712 130.44244385]
[385.27160645 116.99725342]
[360.39312744 119.45930481]
[342.36062622 136.77488708]
[338.89187622 161.53306580]
[319.29202271 177.05229187]
[299.69216919 192.57150269]
[280.09234619 208.09072876]
[260.49249268 223.60993958]
[231.04737854 199.79014587]
[196.95318604 183.29820251]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[142.49999999 339.35840235 165.28742971 263.92235120 255.24798685 1.00000000]
[142.49999999 339.35840235 165.28742971 255.24798685 246.57362250 1.00000000]
[142.49999999 339.35840235 165.28742971 246.57362250 237.89925814 1.00000000]
[142.49999999 339.35840235 165.28742971 237.89925814 229.22489379 1.00000000]
[142.49999999 339.35840235 165.28742971 229.22489379 220.55052944 1.00000000]
[142.49999999 339.35840235 165.28742971 220.55052944 211.87616509 1.00000000]
[142.49999999 339.35840235 165.28742971 211.87616509 203.20180073 1.00000000]
[142.49999999 339.35840235 165.28742971 203.20180073 194.52743638 1.00000000]
[142.49999999 339.35840235 165.28742971 194.52743638 185.85307203 1.00000000]
[142.49999999 339.35840235 165.28742971 185.85307203 177.17870767 1.00000000]
[142.49999999 339.35840235 165.28742971 177.17870767 168.50434332 1.00000000]
[142.49999999 339.35840235 165.28742971 168.50434332 159.82997897 1.00000000]
[142.49999999 339.35840235 165.28742971 159.82997897 151.15561462 1.00000000]
[142.49999999 339.35840235 165.28742971 151.15561462 142.48125026 1.00000000]
[142.49999999 339.35840235 165.28742971 142.48125026 133.80688591 1.00000000]
[142.49999999 339.35840235 165.28742971 133.80688591 125.13252156 1.00000000]
[142.49999999 339.35840235 165.28742971 125.13252156 116.45815721 1.00000000]
[142.49999999 339.35840235 165.28742971 116.45815721 107.78379285 1.00000000]
[142.49999999 339.35840235 165.28742971 107.78379285 99.10942850 1.00000000]
[142.49999999 339.35840235 165.28742971 99.10942850 90.43506415 1.00000000]
[142.49999999 339.35840235 165.28742971 90.43506415 81.76069979 1.00000000]
[142.49999999 339.35840235 165.28742971 81.76069979 73.08633544 1.00000000]
[142.49999999 339.35840235 165.28742971 73.08633544 64.41197109 1.00000000]
[142.49999999 339.35840235 165.28742971 64.41197109 55.73760674 1.00000000]
[142.49999999 339.35840235 165.28742971 55.73760674 47.06324238 1.00000000]
[142.49999999 339.35840235 165.28742971 47.06324238 38.38887803 1.00000000]
[]
[]
[]
[]
[]
[419.41729200 514.49421859 42.10271758 187.75096434 153.20880099 1.00000000]
[419.41729200 514.49421859 42.10271758 153.20880099 118.66663763 1.00000000]
[419.41729200 514.49421859 42.10271758 118.66663763 84.12447427 1.00000000]
[419.41729200 514.49421859 42.10271758 84.12447427 49.58231091 1.00000000]
[419.41729200 514.49421859 42.10271758 49.58231091 15.04014755 1.00000000]
[419.41729200 514.49421859 42.10271758 15.04014755 340.49798420 1.00000000]
[419.41729200 514.49421859 42.10271758 340.49798420 305.95582084 1.00000000]
[419.41729200 514.49421859 42.10271758 305.95582084 271.41365748 1.00000000]
[419.41729200 514.49421859 42.10271758 271.41365748 236.87149412 1.00000000]
[]
[]
[]
[]
[]
[142.49999999 339.35840235 165.28742971 26.23358044 17.53336488 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[831.15398245 478.91243307 42.10271758 166.89545120 132.35328784 1.00000000]
[831.15398245 478.91243307 42.10271758 132.35328784 97.81112448 1.00000000]
[831.15398245 478.91243307 42.10271758 97.81112448 63.26896112 1.00000000]
[831.15398245 478.91243307 42.10271758 63.26896112 28.72679776 1.00000000]
[831.15398245 478.91243307 42.10271758 28.72679776 354.18463440 1.00000000]
[831.15398245 478.91243307 42.10271758 354.18463440 319.64247105 1.00000000]
[831.15398245 478.91243307 42.10271758 319.64247105 285.10030769 1.00000000]
[831.15398245 478.91243307 42.10271758 285.10030769 250.55814433 1.00000000]
[831.15398245 478.91243307 42.10271758 250.55814433 216.01598097 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[142.49999999 339.35840235 165.28742971 5.37806729 355.95988816 1.00000000]
[142.49999999 339.35840235 165.28742971 355.95988816 346.54170902 1.00000000]
[142.49999999 339.35840235 165.28742971 346.54170902 337.12352989 1.00000000]
[142.49999999 339.35840235 165.28742971 337.12352989 327.70535076 1.00000000]
[]
[]
[]
[]
[376.38874090 154.16452171 38.21401848 114.37298343 76.18666306 1.00000000]
[376.38874090 154.16452171 38.21401848 76.18666306 38.00034270 1.00000000]
[376.38874090 154.16452171 38.21401848 38.00034270 359.81402233 1.00000000]
[376.38874090 154.16452171 38.21401848 359.81402233 321.62770196 1.00000000]
[376.38874090 154.16452171 38.21401848 321.62770196 283.44138160 1.00000000]
[376.38874090 154.16452171 38.21401848 283.44138160 245.25506123 1.00000000]
[376.38874090 154.16452171 38.21401848 245.25506123 207.06874087 1.00000000]
[376.38874090 154.16452171 38.21401848 207.06874087 168.88242050 1.00000000]
[]
[]
[]
[]
[142.49999999 339.35840235 165.28742971 315.55005317 302.39258504 1.00000000]
[142.49999999 339.35840235 165.28742971 302.39258504 289.23511692 1.00000000]
[142.49999999 339.35840235 165.28742971 289.23511692 276.07764880 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 126]
[3 125]
[4 124]
[5 123]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
] def

init

% Start Annotations
48 71 12 1.00 0.60 0.67 omark 80 103 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
