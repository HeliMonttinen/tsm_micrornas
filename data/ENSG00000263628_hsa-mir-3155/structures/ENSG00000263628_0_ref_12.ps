%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUUUCAAGGCCACUAAUGGGUGGUAACCCACASUUUUGAAAAGCCUGUUCUGUGCRUCAGCUCCUACUGCAGAGGCUGGGGAGCCUGACCUCCCUUCCCAGACUCCCCUGCAGCUGGGGUUCUGAGUGUGAUUUAGGGCCUGCGGCAAGUUC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[300.00000000 125.00000000]
[300.00000000 150.00000000]
[300.00000000 175.00000000]
[300.00000000 200.00000000]
[278.34936523 212.50000000]
[300.00000000 225.00000000]
[300.00000000 250.00000000]
[300.00000000 275.00000000]
[300.00000000 300.00000000]
[275.80783081 306.30386353]
[263.60748291 284.48297119]
[251.40715027 262.66204834]
[239.20680237 240.84115601]
[227.00646973 219.02026367]
[223.58433533 194.25558472]
[201.20339966 183.11582947]
[179.38250732 195.31616211]
[177.15202332 220.21646118]
[196.45721436 236.10073853]
[208.65754700 257.92163086]
[220.85787964 279.74252319]
[233.05822754 301.56344604]
[245.25856018 323.38433838]
[227.21913147 340.69268799]
[213.22958374 361.41207886]
[203.91749573 384.61303711]
[199.70056152 409.25482178]
[200.76797485 434.23202515]
[207.07183838 458.42419434]
[218.32937622 480.74612427]
[234.03558350 500.19644165]
[253.48591614 515.90264893]
[275.80783081 527.16015625]
[300.00000000 533.46405029]
[324.97720337 534.53143311]
[349.61898804 530.31451416]
[359.91317749 553.09674072]
[370.20739746 575.87896729]
[364.27865601 600.16577148]
[376.38351440 622.03979492]
[400.11062622 629.91534424]
[422.89282227 619.62115479]
[432.66348267 596.60955811]
[424.24752808 573.06866455]
[402.10250854 561.46704102]
[416.68536377 541.16094971]
[391.80828857 538.68487549]
[381.51409912 515.90264893]
[400.96441650 500.19644165]
[416.67062378 480.74612427]
[439.45281982 491.04031372]
[462.23504639 501.33453369]
[485.01727295 511.62872314]
[500.96792603 530.87908936]
[506.84881592 555.17755127]
[512.72973633 579.47601318]
[518.61065674 603.77447510]
[507.25595093 626.04711914]
[513.13684082 650.34558105]
[533.41949463 664.96112061]
[539.30041504 689.25958252]
[545.18133545 713.55798340]
[551.06225586 737.85644531]
[556.94311523 762.15490723]
[562.82403564 786.45336914]
[557.44128418 810.86700439]
[573.39196777 830.11737061]
[579.27282715 854.41583252]
[570.45715332 877.80993652]
[550.00292969 892.18438721]
[529.54870605 906.55883789]
[509.09451294 920.93334961]
[488.64031982 935.30780029]
[468.18609619 949.68225098]
[447.73190308 964.05676270]
[427.27767944 978.43121338]
[403.76837158 969.92749023]
[379.08380127 973.88616943]
[359.41250610 989.31469727]
[349.68621826 1012.34509277]
[352.34338379 1037.20349121]
[366.71786499 1057.65771484]
[389.20584106 1068.57971191]
[414.16943359 1067.23132324]
[435.35015869 1053.95056152]
[447.43780518 1032.06701660]
[447.40194702 1007.06707764]
[467.85614014 992.69262695]
[488.31036377 978.31817627]
[508.76455688 963.94366455]
[529.21875000 949.56921387]
[549.67297363 935.19476318]
[570.12719727 920.82031250]
[590.58142090 906.44580078]
[615.57867432 906.07739258]
[632.78247070 887.93823242]
[631.82818604 862.95642090]
[613.29071045 846.18255615]
[607.40979004 821.88409424]
[612.79254150 797.47045898]
[596.84185791 778.22009277]
[590.96099854 753.92163086]
[585.08007812 729.62316895]
[579.19915771 705.32476807]
[573.31823730 681.02630615]
[567.43737793 656.72784424]
[578.79205322 634.45520020]
[572.91113281 610.15673828]
[552.62847900 595.54119873]
[546.74755859 571.24273682]
[540.86663818 546.94427490]
[534.98577881 522.64581299]
[540.36846924 498.23217773]
[524.41784668 478.98181152]
[499.42913818 479.73361206]
[476.64694214 469.43942261]
[453.86471558 459.14520264]
[431.08248901 448.85101318]
[435.29943848 424.20922852]
[434.23202515 399.23202515]
[427.92816162 375.03985596]
[416.67062378 352.71792603]
[400.96441650 333.26760864]
[381.51409912 317.56140137]
[359.19216919 306.30386353]
[335.00000000 300.00000000]
[335.00000000 275.00000000]
[335.00000000 250.00000000]
[335.00000000 225.00000000]
[335.00000000 200.00000000]
[335.00000000 175.00000000]
[335.00000000 150.00000000]
[335.00000000 125.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[317.49999706 416.73202203 118.03649846 261.47394034 249.31596023 1.00000000]
[]
[]
[]
[]
[201.84554621 209.87837531 26.77024824 19.96793356 324.29672036 1.00000000]
[201.84554621 209.87837531 26.77024824 324.29672036 268.62550716 1.00000000]
[201.84554621 209.87837531 26.77024824 268.62550716 212.95429397 1.00000000]
[201.84554621 209.87837531 26.77024824 212.95429397 157.28308077 1.00000000]
[201.84554621 209.87837531 26.77024824 157.28308077 101.61186757 1.00000000]
[]
[]
[]
[]
[317.49999706 416.73202203 118.03649846 232.26384090 220.10586079 1.00000000]
[317.49999706 416.73202203 118.03649846 220.10586079 207.94788068 1.00000000]
[317.49999706 416.73202203 118.03649846 207.94788068 195.78990056 1.00000000]
[317.49999706 416.73202203 118.03649846 195.78990056 183.63192045 1.00000000]
[317.49999706 416.73202203 118.03649846 183.63192045 171.47394034 1.00000000]
[317.49999706 416.73202203 118.03649846 171.47394034 159.31596023 1.00000000]
[317.49999706 416.73202203 118.03649846 159.31596023 147.15798011 1.00000000]
[317.49999706 416.73202203 118.03649846 147.15798011 135.00000000 1.00000000]
[317.49999706 416.73202203 118.03649846 135.00000000 122.84201989 1.00000000]
[317.49999706 416.73202203 118.03649846 122.84201989 110.68403977 1.00000000]
[317.49999706 416.73202203 118.03649846 110.68403977 98.52605966 1.00000000]
[317.49999706 416.73202203 118.03649846 98.52605966 86.36807955 1.00000000]
[317.49999706 416.73202203 118.03649846 86.36807955 74.21009944 1.00000000]
[]
[]
[398.32663604 595.61031239 34.35139098 215.05745108 172.37933357 1.00000000]
[398.32663604 595.61031239 34.35139098 172.37933357 129.70121605 1.00000000]
[398.32663604 595.61031239 34.35139098 129.70121605 87.02309853 1.00000000]
[398.32663604 595.61031239 34.35139098 87.02309853 44.34498102 1.00000000]
[398.32663604 595.61031239 34.35139098 44.34498102 1.66686350 1.00000000]
[398.32663604 595.61031239 34.35139098 1.66686350 318.98874598 1.00000000]
[398.32663604 595.61031239 34.35139098 318.98874598 276.31062846 1.00000000]
[]
[]
[]
[317.49999706 416.73202203 118.03649846 57.15798011 45.00000000 1.00000000]
[317.49999706 416.73202203 118.03649846 45.00000000 32.84201989 1.00000000]
[]
[]
[]
[512.69287877 504.93045322 28.47466729 166.39445213 114.31596020 1.00000000]
[]
[]
[]
[543.02399037 630.25114613 36.01426010 227.32177588 186.70356003 1.00000000]
[543.02399037 630.25114613 36.01426010 186.70356003 146.08534418 1.00000000]
[543.02399037 630.25114613 36.01426010 146.08534418 105.46712832 1.00000000]
[]
[]
[]
[]
[]
[585.11691328 804.16875041 28.47466729 218.47294401 166.39445208 1.00000000]
[585.11691328 804.16875041 28.47466729 166.39445208 114.31596015 1.00000000]
[]
[602.64256776 876.58044386 32.20889362 223.48395992 177.81235363 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[399.08044586 1019.63641923 49.92949042 304.38431201 275.38750282 1.00000000]
[399.08044586 1019.63641923 49.92949042 275.38750282 246.39069364 1.00000000]
[399.08044586 1019.63641923 49.92949042 246.39069364 217.39388445 1.00000000]
[399.08044586 1019.63641923 49.92949042 217.39388445 188.39707527 1.00000000]
[399.08044586 1019.63641923 49.92949042 188.39707527 159.40026608 1.00000000]
[399.08044586 1019.63641923 49.92949042 159.40026608 130.40345690 1.00000000]
[399.08044586 1019.63641923 49.92949042 130.40345690 101.40664772 1.00000000]
[399.08044586 1019.63641923 49.92949042 101.40664772 72.40983853 1.00000000]
[399.08044586 1019.63641923 49.92949042 72.40983853 43.41302935 1.00000000]
[399.08044586 1019.63641923 49.92949042 43.41302935 14.41622016 1.00000000]
[399.08044586 1019.63641923 49.92949042 14.41622016 345.41941098 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[602.64256776 876.58044386 32.20889362 111.99136935 66.31976306 1.00000000]
[602.64256776 876.58044386 32.20889362 66.31976306 20.64815677 1.00000000]
[602.64256776 876.58044386 32.20889362 20.64815677 334.97655048 1.00000000]
[602.64256776 876.58044386 32.20889362 334.97655048 289.30494420 1.00000000]
[]
[585.11691328 804.16875041 28.47466729 38.47294396 346.39445203 1.00000000]
[585.11691328 804.16875041 28.47466729 346.39445203 294.31596020 1.00000000]
[]
[]
[]
[]
[]
[543.02399037 630.25114613 36.01426010 47.32177588 6.70356003 1.00000000]
[543.02399037 630.25114613 36.01426010 6.70356003 326.08534418 1.00000000]
[543.02399037 630.25114613 36.01426010 326.08534418 285.46712832 1.00000000]
[]
[]
[]
[512.69287877 504.93045322 28.47466729 38.47294401 346.39445208 1.00000000]
[512.69287877 504.93045322 28.47466729 346.39445208 294.31596015 1.00000000]
[512.69287877 504.93045322 28.47466729 294.31596015 242.23746832 1.00000000]
[]
[]
[]
[317.49999706 416.73202203 118.03649846 15.78990056 3.63192045 1.00000000]
[317.49999706 416.73202203 118.03649846 3.63192045 351.47394034 1.00000000]
[317.49999706 416.73202203 118.03649846 351.47394034 339.31596023 1.00000000]
[317.49999706 416.73202203 118.03649846 339.31596023 327.15798011 1.00000000]
[317.49999706 416.73202203 118.03649846 327.15798011 315.00000000 1.00000000]
[317.49999706 416.73202203 118.03649846 315.00000000 302.84201989 1.00000000]
[317.49999706 416.73202203 118.03649846 302.84201989 290.68403977 1.00000000]
[317.49999706 416.73202203 118.03649846 290.68403977 278.52605966 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 143]
[10 142]
[11 141]
[12 140]
[13 139]
[15 138]
[16 137]
[17 136]
[18 135]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[45 57]
[46 56]
[47 54]
[59 127]
[60 126]
[61 125]
[62 124]
[63 121]
[64 120]
[65 119]
[66 118]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
[74 110]
[76 108]
[77 107]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
] def

init

% Start Annotations
99 107 12 1.00 0.60 0.67 omark 47 82 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
