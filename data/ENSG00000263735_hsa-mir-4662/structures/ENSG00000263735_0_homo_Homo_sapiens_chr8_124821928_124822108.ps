%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGGAAGUUUACUGCAACCAUGGCUGCAACAGAAAAAGCCAUUGUGUACCACAGUGUCUAUUUAGCCAAUUGUCCAUCUUUAGCUAUUCUGAAUGCCUAAAGAUAGACAAUUGGCUAAAUAGAAAUUGUGGUACAUCCAUACAAUGGAAUACCAUGAAGCCAUCGACAAAACAUCAAGAU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[200.00000000 125.00000000]
[189.02532959 147.46234131]
[200.00000000 169.92468262]
[200.00000000 194.92468262]
[200.00000000 219.92468262]
[200.00000000 244.92468262]
[189.02532959 267.38702393]
[200.00000000 289.84936523]
[224.46430969 294.99688721]
[244.18565369 310.36141968]
[249.15286255 334.86297607]
[268.87420654 350.22750854]
[293.84652710 349.05130005]
[312.03637695 331.90109253]
[334.99017334 341.80679321]
[356.91128540 329.78744507]
[381.88360596 328.61120605]
[406.85592651 327.43499756]
[431.82824707 326.25875854]
[456.80053711 325.08251953]
[481.77285767 323.90631104]
[504.72668457 333.81198120]
[526.64776611 321.79263306]
[551.62011719 320.61642456]
[561.20477295 343.70611572]
[576.95483398 363.12094116]
[597.57202148 377.26065063]
[621.35699463 384.95974731]
[646.34918213 385.58358765]
[670.48864746 379.08081055]
[691.78564453 365.98739624]
[708.48480225 347.38256836]
[719.20953369 324.79983521]
[723.07598877 300.10064697]
[719.76544189 275.32080078]
[741.94940186 263.79388428]
[764.13342285 252.26698303]
[786.31744385 240.74005127]
[808.50146484 229.21313477]
[830.68548584 217.68621826]
[852.86944580 206.15930176]
[875.99029541 215.66856384]
[883.64520264 239.46777344]
[891.30010986 263.26699829]
[898.95501709 287.06619263]
[906.60992432 310.86541748]
[914.26483154 334.66461182]
[921.91973877 358.46383667]
[929.57470703 382.26303101]
[937.22961426 406.06225586]
[944.88452148 429.86145020]
[941.31481934 454.60528564]
[958.64025879 472.62832642]
[966.29516602 496.42752075]
[973.95007324 520.22674561]
[981.60498047 544.02593994]
[989.25988770 567.82513428]
[996.91479492 591.62438965]
[1004.56970215 615.42358398]
[1012.22460938 639.22277832]
[1019.87951660 663.02197266]
[1027.53442383 686.82122803]
[1035.18933105 710.62042236]
[1042.84423828 734.41961670]
[1050.49914551 758.21881104]
[1058.15405273 782.01806641]
[1065.80895996 805.81726074]
[1073.46386719 829.61645508]
[1081.11877441 853.41564941]
[1088.77368164 877.21490479]
[1085.20410156 901.95874023]
[1102.52941895 919.98175049]
[1110.18432617 943.78094482]
[1117.83923340 967.58020020]
[1125.49426270 991.37939453]
[1133.14916992 1015.17858887]
[1140.80407715 1038.97778320]
[1148.45898438 1062.77697754]
[1156.11389160 1086.57617188]
[1152.54418945 1111.32006836]
[1169.86962891 1129.34313965]
[1177.52453613 1153.14233398]
[1185.17944336 1176.94152832]
[1192.83435059 1200.74072266]
[1197.04675293 1225.38330078]
[1221.20837402 1231.80310059]
[1237.09680176 1212.50134277]
[1226.15319824 1190.02380371]
[1218.49829102 1166.22460938]
[1210.84338379 1142.42541504]
[1203.18847656 1118.62622070]
[1206.75817871 1093.88244629]
[1189.43273926 1075.85937500]
[1181.77783203 1052.06018066]
[1174.12292480 1028.26098633]
[1166.46801758 1004.46173096]
[1158.81311035 980.66253662]
[1151.15820312 956.86328125]
[1143.50329590 933.06408691]
[1135.84838867 909.26489258]
[1139.41796875 884.52105713]
[1122.09265137 866.49804688]
[1114.43774414 842.69879150]
[1106.78283691 818.89959717]
[1099.12792969 795.10040283]
[1091.47302246 771.30120850]
[1083.81811523 747.50195312]
[1076.16320801 723.70275879]
[1068.50830078 699.90356445]
[1060.85339355 676.10430908]
[1053.19836426 652.30511475]
[1045.54345703 628.50592041]
[1037.88854980 604.70672607]
[1030.23364258 580.90747070]
[1022.57879639 557.10827637]
[1014.92388916 533.30908203]
[1007.26898193 509.50985718]
[999.61407471 485.71066284]
[991.95916748 461.91143799]
[995.52880859 437.16760254]
[978.20336914 419.14459229]
[970.54846191 395.34536743]
[962.89355469 371.54617310]
[955.23864746 347.74694824]
[947.58374023 323.94775391]
[939.92883301 300.14852905]
[932.27392578 276.34933472]
[924.61901855 252.55010986]
[916.96411133 228.75090027]
[909.30920410 204.95169067]
[922.55090332 183.74658203]
[922.01611328 158.75230408]
[907.87951660 138.13298035]
[884.75866699 128.62373352]
[860.20574951 133.33062744]
[842.24078369 150.71623230]
[836.73175049 175.10169983]
[814.54779053 186.62861633]
[792.36376953 198.15553284]
[770.17974854 209.68244934]
[747.99572754 221.20936584]
[725.81176758 232.73628235]
[703.62774658 244.26319885]
[685.25384521 227.31034851]
[662.82037354 216.27668762]
[638.17657471 212.07165527]
[613.35363770 215.04187012]
[590.39764404 224.94252014]
[571.20080566 240.95750427]
[557.34533691 261.76681519]
[549.97338867 285.65518188]
[525.00109863 286.83139038]
[502.04727173 276.92572021]
[480.12615967 288.94506836]
[455.15383911 290.12127686]
[430.18151855 291.29751587]
[405.20919800 292.47375488]
[380.23687744 293.64996338]
[355.26458740 294.82620239]
[332.31076050 284.92050171]
[310.38964844 296.93984985]
[290.66830444 281.57531738]
[265.69598389 282.75155640]
[245.97465515 267.38702393]
[235.00000000 244.92468262]
[235.00000000 219.92468262]
[235.00000000 194.92468262]
[235.00000000 169.92468262]
[245.97465515 147.46234131]
[235.00000000 125.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[217.49999467 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[217.49999467 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[217.49999445 267.38701748 28.47466685 232.07849282 180.00000000 1.00000000]
[217.49999445 267.38701748 28.47466685 180.00000000 127.92150757 1.00000000]
[217.49999445 267.38701748 28.47466685 127.92150757 75.84301511 1.00000000]
[]
[279.77125550 315.90142412 36.01426006 188.84883185 148.23061597 1.00000000]
[279.77125550 315.90142412 36.01426006 148.23061597 107.61240005 1.00000000]
[279.77125550 315.90142412 36.01426006 107.61240005 66.99418414 1.00000000]
[279.77125550 315.90142412 36.01426006 66.99418414 26.37596818 1.00000000]
[333.65047079 313.36364747 28.47466729 139.38178390 87.30329210 1.00000000]
[333.65047079 313.36364747 28.47466729 87.30329210 35.22480018 1.00000000]
[]
[]
[]
[]
[]
[503.38697097 305.36885163 28.47466729 139.38178398 87.30329205 1.00000000]
[503.38697097 305.36885163 28.47466729 87.30329205 35.22480013 1.00000000]
[]
[636.00358790 299.12244738 87.07790930 165.70963617 149.20303741 1.00000000]
[636.00358790 299.12244738 87.07790930 149.20303741 132.69643864 1.00000000]
[636.00358790 299.12244738 87.07790930 132.69643864 116.18983987 1.00000000]
[636.00358790 299.12244738 87.07790930 116.18983987 99.68324111 1.00000000]
[636.00358790 299.12244738 87.07790930 99.68324111 83.17664234 1.00000000]
[636.00358790 299.12244738 87.07790930 83.17664234 66.67004357 1.00000000]
[636.00358790 299.12244738 87.07790930 66.67004357 50.16344481 1.00000000]
[636.00358790 299.12244738 87.07790930 50.16344481 33.65684604 1.00000000]
[636.00358790 299.12244738 87.07790930 33.65684604 17.15024727 1.00000000]
[636.00358790 299.12244738 87.07790930 17.15024727 0.64364851 1.00000000]
[636.00358790 299.12244738 87.07790930 0.64364851 344.13704974 1.00000000]
[]
[]
[]
[]
[]
[]
[880.37449400 172.14614549 43.74267810 128.96102970 95.75221179 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[968.42182627 445.88645172 28.47466729 214.24833951 162.16984758 1.00000000]
[968.42182627 445.88645172 28.47466729 162.16984758 110.09135566 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1112.31103792 893.23988909 28.47466729 214.24833946 162.16984754 1.00000000]
[1112.31103792 893.23988909 28.47466729 162.16984754 110.09135561 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[1179.65116733 1102.60122994 28.47466729 214.24833942 162.16984749 1.00000000]
[1179.65116733 1102.60122994 28.47466729 162.16984749 110.09135556 1.00000000]
[]
[]
[]
[1214.12555461 1209.78254941 23.13159456 203.00964452 137.58974599 1.00000000]
[1214.12555461 1209.78254941 23.13159456 137.58974599 72.16984747 1.00000000]
[1214.12555461 1209.78254941 23.13159456 72.16984747 6.74994894 1.00000000]
[1214.12555461 1209.78254941 23.13159456 6.74994894 301.33005041 1.00000000]
[]
[]
[]
[1179.65116733 1102.60122994 28.47466729 34.24833937 342.16984744 1.00000000]
[1179.65116733 1102.60122994 28.47466729 342.16984744 290.09135561 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[1112.31103792 893.23988909 28.47466729 34.24833942 342.16984749 1.00000000]
[1112.31103792 893.23988909 28.47466729 342.16984749 290.09135566 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[968.42182627 445.88645172 28.47466729 34.24833946 342.16984754 1.00000000]
[968.42182627 445.88645172 28.47466729 342.16984754 290.09135571 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[880.37449400 172.14614549 43.74267810 48.58748343 15.37866552 1.00000000]
[880.37449400 172.14614549 43.74267810 15.37866552 342.16984761 1.00000000]
[880.37449400 172.14614549 43.74267810 342.16984761 308.96102970 1.00000000]
[880.37449400 172.14614549 43.74267810 308.96102970 275.75221179 1.00000000]
[880.37449400 172.14614549 43.74267810 275.75221179 242.54339388 1.00000000]
[880.37449400 172.14614549 43.74267810 242.54339388 209.33457597 1.00000000]
[880.37449400 172.14614549 43.74267810 209.33457597 176.12575806 1.00000000]
[]
[]
[]
[]
[]
[]
[636.00358790 299.12244738 87.07790930 320.94973802 304.44313926 1.00000000]
[636.00358790 299.12244738 87.07790930 304.44313926 287.93654049 1.00000000]
[636.00358790 299.12244738 87.07790930 287.93654049 271.42994172 1.00000000]
[636.00358790 299.12244738 87.07790930 271.42994172 254.92334296 1.00000000]
[636.00358790 299.12244738 87.07790930 254.92334296 238.41674419 1.00000000]
[636.00358790 299.12244738 87.07790930 238.41674419 221.91014542 1.00000000]
[636.00358790 299.12244738 87.07790930 221.91014542 205.40354666 1.00000000]
[636.00358790 299.12244738 87.07790930 205.40354666 188.89694789 1.00000000]
[]
[503.38697097 305.36885163 28.47466729 319.38178393 267.30329201 1.00000000]
[503.38697097 305.36885163 28.47466729 267.30329201 215.22480018 1.00000000]
[]
[]
[]
[]
[]
[333.65047079 313.36364747 28.47466729 319.38178398 267.30329205 1.00000000]
[333.65047079 313.36364747 28.47466729 267.30329205 215.22480010 1.00000000]
[279.77125550 315.90142412 36.01426006 328.23061577 287.61240005 1.00000000]
[279.77125550 315.90142412 36.01426006 287.61240005 246.99418426 1.00000000]
[]
[217.49999445 267.38701748 28.47466685 360.00000000 307.92150848 1.00000000]
[]
[]
[]
[217.49999467 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[217.49999467 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 176]
[6 175]
[8 173]
[9 172]
[10 171]
[11 170]
[14 169]
[15 168]
[19 166]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[28 157]
[29 156]
[40 148]
[41 147]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[58 124]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[74 108]
[75 107]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[86 96]
[87 95]
[88 94]
[89 93]
] def

init

% Start Annotations
46 72 12 1.00 0.60 0.67 omark 111 136 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
