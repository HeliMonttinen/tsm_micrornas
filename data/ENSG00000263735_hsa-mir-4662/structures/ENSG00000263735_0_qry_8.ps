%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGGAAGUUUACUGCAACCAUGGCUGCAACAGAAAAAGCCAUUGUGUACCACAGURUCUAUUUAGCAWUUGUCCAUCUUUAGAUAKUCUGAAUGCCUAAAGAUAGACAAAUGGCUAAAUAGAAAUUGUGGUACAUCCAUACAAUGGAAUACCAUGGAGCCAUUGACAAAACAUCAAGAU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[200.00000000 125.00000000]
[189.02532959 147.46234131]
[200.00000000 169.92468262]
[200.00000000 194.92468262]
[200.00000000 219.92468262]
[200.00000000 244.92468262]
[189.02532959 267.38702393]
[200.00000000 289.84936523]
[224.46430969 294.99688721]
[244.18565369 310.36141968]
[263.90698242 325.72595215]
[283.62832642 341.09048462]
[290.03308105 365.25613403]
[311.27069092 378.44567871]
[335.77130127 373.47369385]
[350.18740845 353.04882812]
[374.02368164 345.51007080]
[397.85992432 337.97131348]
[421.69619751 330.43255615]
[445.53244019 322.89379883]
[469.36871338 315.35504150]
[494.09484863 319.04531860]
[512.20214844 301.80801392]
[536.03839111 294.26925659]
[550.37475586 314.75021362]
[569.38580322 330.98532104]
[591.85858154 341.93865967]
[616.35900879 346.91131592]
[641.32385254 345.58596802]
[665.16015625 338.04721069]
[686.34686279 324.77609253]
[703.53210449 306.61938477]
[715.61938477 284.73565674]
[721.83740234 260.52127075]
[721.78936768 235.52130127]
[745.62561035 227.98254395]
[769.46191406 220.44378662]
[793.29815674 212.90502930]
[817.13439941 205.36628723]
[840.97064209 197.82752991]
[864.80688477 190.28877258]
[885.94720459 203.63374329]
[889.39379883 228.39501953]
[892.84039307 253.15629578]
[896.28704834 277.91757202]
[899.73364258 302.67886353]
[903.18023682 327.44012451]
[906.62683105 352.20141602]
[910.07348633 376.96267700]
[913.52008057 401.72396851]
[916.96667480 426.48522949]
[909.19354248 450.24609375]
[923.16021729 470.98092651]
[926.60681152 495.74221802]
[930.05340576 520.50347900]
[933.50000000 545.26477051]
[936.94665527 570.02606201]
[940.39324951 594.78735352]
[943.83984375 619.54858398]
[947.28643799 644.30987549]
[950.73303223 669.07116699]
[954.17968750 693.83245850]
[938.87023926 713.59655762]
[938.34106445 738.59100342]
[952.80023193 758.98535156]
[948.30871582 783.57861328]
[943.81713867 808.17181396]
[939.32556152 832.76501465]
[934.83404541 857.35821533]
[920.00231934 877.48333740]
[926.76275635 901.55187988]
[922.27124023 926.14514160]
[917.77966309 950.73834229]
[913.28814697 975.33154297]
[908.79656982 999.92474365]
[904.30505371 1024.51794434]
[899.81347656 1049.11120605]
[895.32189941 1073.70434570]
[871.51831055 1081.34545898]
[852.69610596 1097.79931641]
[841.94158936 1120.36779785]
[841.01806641 1145.35083008]
[850.07696533 1168.65173340]
[867.63299561 1186.45031738]
[890.80749512 1195.82800293]
[915.80072021 1195.24731445]
[938.51470947 1184.80346680]
[955.22521973 1166.20886230]
[963.19219971 1142.51232910]
[961.10943604 1117.59924316]
[949.31842041 1095.55444336]
[929.75244141 1079.99255371]
[934.24395752 1055.39929199]
[938.73553467 1030.80615234]
[943.22705078 1006.21289062]
[947.71862793 981.61968994]
[952.21014404 957.02648926]
[956.70172119 932.43328857]
[961.19329834 907.84008789]
[976.02502441 887.71496582]
[969.26452637 863.64636230]
[973.75610352 839.05316162]
[978.24761963 814.45996094]
[982.73919678 789.86676025]
[987.23071289 765.27355957]
[1007.96545410 751.30676270]
[1016.30535889 727.73883057]
[1008.97045898 703.83911133]
[988.84545898 689.00720215]
[985.39886475 664.24591064]
[981.95227051 639.48461914]
[978.50561523 614.72332764]
[975.05902100 589.96209717]
[971.61242676 565.20080566]
[968.16583252 540.43951416]
[964.71917725 515.67822266]
[961.27258301 490.91696167]
[957.82598877 466.15570068]
[965.59912109 442.39483643]
[951.63244629 421.66000366]
[948.18585205 396.89871216]
[944.73925781 372.13742065]
[941.29266357 347.37615967]
[937.84600830 322.61486816]
[934.39941406 297.85360718]
[930.95281982 273.09231567]
[927.50622559 248.33103943]
[924.05957031 223.56976318]
[920.61297607 198.80848694]
[937.30523682 180.19747925]
[941.07818604 155.48382568]
[930.69946289 132.73997498]
[909.55914307 119.39501190]
[884.56256104 119.80790710]
[863.87457275 133.84379578]
[854.25268555 156.91801453]
[830.41638184 164.45675659]
[806.58013916 171.99551392]
[782.74389648 179.53427124]
[758.90765381 187.07302856]
[735.07135010 194.61178589]
[711.23510742 202.15054321]
[690.25805664 175.02153015]
[661.28222656 156.67980957]
[627.78649902 149.32756042]
[593.79254150 153.84751892]
[563.38177490 169.69700623]
[540.20550537 194.97306824]
[527.04632568 226.64094543]
[525.48413086 260.89849854]
[501.64788818 268.43725586]
[476.92175293 264.74697876]
[458.81445312 281.98428345]
[434.97817993 289.52304077]
[411.14193726 297.06179810]
[387.30566406 304.60055542]
[363.46942139 312.13931274]
[339.63314819 319.67807007]
[305.13867188 313.48062134]
[285.41732788 298.11608887]
[288.86273193 273.35464478]
[265.69601440 282.75155640]
[245.97467041 267.38702393]
[235.00000000 244.92468262]
[235.00000000 219.92468262]
[235.00000000 194.92468262]
[235.00000000 169.92468262]
[245.97467041 147.46234131]
[235.00000000 125.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[217.49999729 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[217.49999729 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[217.49999707 267.38701748 28.47466685 232.07849282 180.00000000 1.00000000]
[217.49999707 267.38701748 28.47466685 180.00000000 127.92150757 1.00000000]
[217.49999707 267.38701748 28.47466685 127.92150757 75.84301511 1.00000000]
[]
[]
[]
[317.26023842 345.10840691 33.87106850 186.81268832 143.49903674 1.00000000]
[317.26023842 345.10840691 33.87106850 143.49903674 100.18538515 1.00000000]
[317.26023842 345.10840691 33.87106850 100.18538515 56.87173356 1.00000000]
[317.26023842 345.10840691 33.87106850 56.87173356 13.55808198 1.00000000]
[]
[]
[]
[]
[]
[485.50829499 291.89615073 28.47466729 124.52775423 72.44926230 1.00000000]
[485.50829499 291.89615073 28.47466729 72.44926230 20.37077037 1.00000000]
[]
[623.63675926 248.20989724 98.96936772 152.26453494 137.75266718 1.00000000]
[623.63675926 248.20989724 98.96936772 137.75266718 123.24079942 1.00000000]
[623.63675926 248.20989724 98.96936772 123.24079942 108.72893167 1.00000000]
[623.63675926 248.20989724 98.96936772 108.72893167 94.21706391 1.00000000]
[623.63675926 248.20989724 98.96936772 94.21706391 79.70519615 1.00000000]
[623.63675926 248.20989724 98.96936772 79.70519615 65.19332840 1.00000000]
[623.63675926 248.20989724 98.96936772 65.19332840 50.68146064 1.00000000]
[623.63675926 248.20989724 98.96936772 50.68146064 36.16959288 1.00000000]
[623.63675926 248.20989724 98.96936772 36.16959288 21.65772513 1.00000000]
[623.63675926 248.20989724 98.96936772 21.65772513 7.14585737 1.00000000]
[623.63675926 248.20989724 98.96936772 7.14585737 352.63398962 1.00000000]
[]
[]
[]
[]
[]
[]
[897.75317754 161.51437508 43.74267810 138.86689809 105.65808018 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[937.39633072 446.32046416 28.47466729 224.15420791 172.07571598 1.00000000]
[937.39633072 446.32046416 28.47466729 172.07571598 119.99722405 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[976.45048439 726.89503536 39.86382195 236.03596983 199.48725333 1.00000000]
[976.45048439 726.89503536 39.86382195 199.48725333 162.93853683 1.00000000]
[976.45048439 726.89503536 39.86382195 162.93853683 126.38982033 1.00000000]
[]
[]
[]
[]
[948.01365603 882.59914663 28.47466729 242.42856611 190.35007418 1.00000000]
[948.01365603 882.59914663 28.47466729 190.35007418 138.27158225 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[901.89978952 1135.09279831 61.73983513 263.88400549 240.52201530 1.00000000]
[901.89978952 1135.09279831 61.73983513 240.52201530 217.16002511 1.00000000]
[901.89978952 1135.09279831 61.73983513 217.16002511 193.79803492 1.00000000]
[901.89978952 1135.09279831 61.73983513 193.79803492 170.43604473 1.00000000]
[901.89978952 1135.09279831 61.73983513 170.43604473 147.07405454 1.00000000]
[901.89978952 1135.09279831 61.73983513 147.07405454 123.71206435 1.00000000]
[901.89978952 1135.09279831 61.73983513 123.71206435 100.35007416 1.00000000]
[901.89978952 1135.09279831 61.73983513 100.35007416 76.98808397 1.00000000]
[901.89978952 1135.09279831 61.73983513 76.98808397 53.62609378 1.00000000]
[901.89978952 1135.09279831 61.73983513 53.62609378 30.26410358 1.00000000]
[901.89978952 1135.09279831 61.73983513 30.26410358 6.90211339 1.00000000]
[901.89978952 1135.09279831 61.73983513 6.90211339 343.54012320 1.00000000]
[901.89978952 1135.09279831 61.73983513 343.54012320 320.17813301 1.00000000]
[901.89978952 1135.09279831 61.73983513 320.17813301 296.81614282 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[948.01365603 882.59914663 28.47466729 62.42856606 10.35007413 1.00000000]
[948.01365603 882.59914663 28.47466729 10.35007413 318.27158230 1.00000000]
[]
[]
[]
[]
[976.45048439 726.89503536 39.86382195 74.31032807 37.76161158 1.00000000]
[976.45048439 726.89503536 39.86382195 37.76161158 1.21289508 1.00000000]
[976.45048439 726.89503536 39.86382195 1.21289508 324.66417858 1.00000000]
[976.45048439 726.89503536 39.86382195 324.66417858 288.11546209 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[937.39633072 446.32046416 28.47466729 44.15420786 352.07571593 1.00000000]
[937.39633072 446.32046416 28.47466729 352.07571593 299.99722410 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[897.75317754 161.51437508 43.74267810 58.49335182 25.28453391 1.00000000]
[897.75317754 161.51437508 43.74267810 25.28453391 352.07571600 1.00000000]
[897.75317754 161.51437508 43.74267810 352.07571600 318.86689809 1.00000000]
[897.75317754 161.51437508 43.74267810 318.86689809 285.65808018 1.00000000]
[897.75317754 161.51437508 43.74267810 285.65808018 252.44926228 1.00000000]
[897.75317754 161.51437508 43.74267810 252.44926228 219.24044437 1.00000000]
[897.75317754 161.51437508 43.74267810 219.24044437 186.03162646 1.00000000]
[]
[]
[]
[]
[]
[]
[623.63675926 248.20989724 98.96936772 332.26453494 312.31071677 1.00000000]
[623.63675926 248.20989724 98.96936772 312.31071677 292.35689861 1.00000000]
[623.63675926 248.20989724 98.96936772 292.35689861 272.40308044 1.00000000]
[623.63675926 248.20989724 98.96936772 272.40308044 252.44926228 1.00000000]
[623.63675926 248.20989724 98.96936772 252.44926228 232.49544411 1.00000000]
[623.63675926 248.20989724 98.96936772 232.49544411 212.54162595 1.00000000]
[623.63675926 248.20989724 98.96936772 212.54162595 192.58780778 1.00000000]
[623.63675926 248.20989724 98.96936772 192.58780778 172.63398962 1.00000000]
[]
[485.50829499 291.89615073 28.47466729 304.52775418 252.44926225 1.00000000]
[485.50829499 291.89615073 28.47466729 252.44926225 200.37077042 1.00000000]
[]
[]
[]
[]
[]
[317.26023842 345.10840691 33.87106850 311.34044267 249.03032763 1.00000000]
[]
[]
[]
[]
[217.49999707 267.38701748 28.47466685 360.00000000 307.92150848 1.00000000]
[]
[]
[]
[217.49999729 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[217.49999729 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 175]
[6 174]
[8 172]
[9 171]
[10 170]
[11 169]
[14 168]
[15 167]
[16 165]
[17 164]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[28 156]
[29 155]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 134]
[48 133]
[49 132]
[50 131]
[51 130]
[52 129]
[53 128]
[54 127]
[55 126]
[56 125]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
] def

init

% Start Annotations
46 71 12 1.00 0.60 0.67 omark 110 135 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
