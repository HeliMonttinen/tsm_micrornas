%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACAAUGGCUGUCAGCCUCAAUAGUUAAGUGGUGCACUCAGGAUUCCAAUCUGUACUUAUUUGACUCUAAAACCUUCUAAAUAAAGUGGGUACUAUUUAKAAGAUUUUAGAGUCAGAUAAGUGAGGAGAGCAGAGAACAACUAGAGCUUUUAAUAGAGUAGAAAAAAACUAGUCAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[80.90137482 191.13203430]
[73.75732422 215.08955383]
[80.90137482 239.04705811]
[67.20907593 259.96405029]
[53.51677322 280.88107300]
[39.82447433 301.79806519]
[26.13217545 322.71505737]
[12.43987465 343.63208008]
[-1.25242484 364.54907227]
[-25.96986198 368.29718018]
[-44.20462036 385.39962769]
[-49.52745819 409.82638550]
[-40.06163788 432.96505737]
[-19.14463806 446.65737915]
[5.84859276 446.07562256]
[26.10589790 431.42498779]
[34.48492432 407.87097168]
[28.03137589 383.71829224]
[41.72367477 362.80130005]
[55.41597748 341.88427734]
[69.10827637 320.96728516]
[82.80057526 300.05029297]
[96.49287415 279.13327026]
[110.18517303 258.21627808]
[135.00000000 255.17909241]
[154.09863281 239.04705811]
[161.24267578 215.08955383]
[154.09863281 191.13203430]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[185.00000000 100.00000000]
[235.00000000 100.00000000]
[235.00000000 125.00000000]
[235.00000000 150.00000000]
[235.00000000 175.00000000]
[235.00000000 200.00000000]
[217.11198425 217.46478271]
[213.14201355 242.14756775]
[224.65147400 264.34063721]
[216.81228638 288.07977295]
[208.97309875 311.81890869]
[189.13182068 327.02822876]
[186.14726257 351.84945679]
[201.81750488 371.32876587]
[226.70185852 373.73065186]
[245.91816711 389.72232056]
[265.13449097 405.71398926]
[284.35079956 421.70562744]
[303.56710815 437.69729614]
[302.25637817 462.66290283]
[281.47116089 476.55444336]
[260.68594360 490.44598389]
[239.90074158 504.33749390]
[219.11550903 518.22906494]
[198.33029175 532.12054443]
[177.54507446 546.01208496]
[156.75985718 559.90362549]
[135.97463989 573.79516602]
[115.18941498 587.68670654]
[94.40419769 601.57824707]
[73.61898041 615.46978760]
[52.83375931 629.36126709]
[32.04854202 643.25280762]
[11.26332188 657.14434814]
[-9.52189732 671.03588867]
[-30.30711746 684.92742920]
[-51.09233475 698.81896973]
[-75.86592102 702.17596436]
[-88.44310760 723.78186035]
[-109.22832489 737.67340088]
[-130.01354980 751.56494141]
[-154.78712463 754.92193604]
[-167.36431885 776.52783203]
[-188.14953613 790.41937256]
[-208.93475342 804.31091309]
[-229.71997070 818.20239258]
[-250.50518799 832.09393311]
[-271.29040527 845.98547363]
[-294.59411621 836.93359375]
[-319.36465454 840.31304932]
[-339.39184570 855.27673340]
[-349.65478516 878.07305908]
[-347.58047485 902.98681641]
[-333.68893433 923.77209473]
[-311.46289062 935.21771240]
[-286.47454834 934.45428467]
[-264.98864746 921.67321777]
[-252.39186096 900.07873535]
[-251.84226990 875.08477783]
[-231.05705261 861.19323730]
[-210.27183533 847.30175781]
[-189.48661804 833.41021729]
[-168.70138550 819.51867676]
[-147.91616821 805.62713623]
[-123.14258575 802.27014160]
[-110.56539917 780.66424561]
[-89.78018188 766.77270508]
[-68.99496460 752.88116455]
[-44.22137833 749.52416992]
[-31.64419174 727.91827393]
[-10.85897160 714.02673340]
[9.92624760 700.13519287]
[30.71146584 686.24365234]
[51.49668503 672.35211182]
[72.28190613 658.46057129]
[93.06712341 644.56909180]
[113.85234070 630.67755127]
[134.63755798 616.78601074]
[155.42277527 602.89447021]
[176.20800781 589.00292969]
[196.99322510 575.11138916]
[217.77844238 561.21984863]
[238.56365967 547.32836914]
[259.34887695 533.43682861]
[280.13409424 519.54528809]
[300.91931152 505.65374756]
[321.70452881 491.76220703]
[345.27316284 500.10003662]
[369.81884766 495.35559082]
[388.58267212 478.83529663]
[396.39779663 455.08822632]
[391.11227417 430.65335083]
[374.18151855 412.25906372]
[350.26760864 404.97042847]
[325.95544434 410.79446411]
[306.73913574 394.80279541]
[287.52279663 378.81112671]
[268.30648804 362.81945801]
[249.09017944 346.82781982]
[242.20790100 322.79379272]
[250.04708862 299.05462646]
[257.88629150 275.31549072]
[280.34851074 264.34063721]
[291.85800171 242.14756775]
[287.88803101 217.46478271]
[270.00000000 200.00000000]
[270.00000000 175.00000000]
[291.65063477 162.50000000]
[270.00000000 150.00000000]
[270.00000000 125.00000000]
[270.00000000 100.00000000]
[295.00000000 100.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[520.00000000 125.00000000]
[509.02532959 147.46234131]
[520.00000000 169.92468262]
[520.00000000 194.92468262]
[520.00000000 219.92468262]
[502.74304199 238.01329041]
[500.36175537 262.89962769]
[513.87530518 283.93255615]
[537.50000000 292.11016846]
[561.12469482 283.93255615]
[574.63824463 262.89962769]
[572.25695801 238.01329041]
[555.00000000 219.92468262]
[555.00000000 194.92468262]
[555.00000000 169.92468262]
[565.97467041 147.46234131]
[555.00000000 125.00000000]
[555.00000000 100.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[117.50000000 215.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[117.50000000 215.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[117.50000000 215.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[]
[]
[]
[]
[]
[]
[-7.58354397 406.17304851 42.10271758 278.64855302 244.10638966 1.00000000]
[-7.58354397 406.17304851 42.10271758 244.10638966 209.56422630 1.00000000]
[-7.58354397 406.17304851 42.10271758 209.56422630 175.02206295 1.00000000]
[-7.58354397 406.17304851 42.10271758 175.02206295 140.47989959 1.00000000]
[-7.58354397 406.17304851 42.10271758 140.47989959 105.93773623 1.00000000]
[-7.58354397 406.17304851 42.10271758 105.93773623 71.39557287 1.00000000]
[-7.58354397 406.17304851 42.10271758 71.39557287 36.85340951 1.00000000]
[-7.58354397 406.17304851 42.10271758 36.85340951 2.31124616 1.00000000]
[-7.58354397 406.17304851 42.10271758 2.31124616 327.76908280 1.00000000]
[]
[]
[]
[]
[]
[]
[117.50000000 215.08954835 43.74267810 99.62645373 66.41763582 1.00000000]
[117.50000000 215.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[117.50000000 215.08954835 43.74267810 33.20881791 360.00000000 1.00000000]
[117.50000000 215.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[117.50000000 215.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[252.50000034 235.81723469 39.86382195 243.96025387 207.41153737 1.00000000]
[252.50000034 235.81723469 39.86382195 207.41153737 170.86282088 1.00000000]
[252.50000034 235.81723469 39.86382195 170.86282088 134.31410438 1.00000000]
[]
[]
[217.11162942 342.98263840 32.20889362 255.36386611 209.69225982 1.00000000]
[217.11162942 342.98263840 32.20889362 209.69225982 164.02065353 1.00000000]
[217.11162942 342.98263840 32.20889362 164.02065353 118.34904724 1.00000000]
[217.11162942 342.98263840 32.20889362 118.34904724 72.67744095 1.00000000]
[]
[]
[]
[]
[348.82138449 452.59041302 47.64193249 198.21630561 167.79436926 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-60.04364936 725.85005893 28.47466729 288.32221796 236.24372603 1.00000000]
[-60.04364936 725.85005893 28.47466729 236.24372603 184.16523411 1.00000000]
[]
[]
[-138.96485942 778.59602684 28.47466729 288.32221791 236.24372598 1.00000000]
[-138.96485942 778.59602684 28.47466729 236.24372598 184.16523406 1.00000000]
[]
[]
[]
[]
[]
[-300.44485065 886.51908636 49.92949042 305.72617647 276.72936729 1.00000000]
[-300.44485065 886.51908636 49.92949042 276.72936729 247.73255811 1.00000000]
[-300.44485065 886.51908636 49.92949042 247.73255811 218.73574892 1.00000000]
[-300.44485065 886.51908636 49.92949042 218.73574892 189.73893974 1.00000000]
[-300.44485065 886.51908636 49.92949042 189.73893974 160.74213055 1.00000000]
[-300.44485065 886.51908636 49.92949042 160.74213055 131.74532137 1.00000000]
[-300.44485065 886.51908636 49.92949042 131.74532137 102.74851218 1.00000000]
[-300.44485065 886.51908636 49.92949042 102.74851218 73.75170300 1.00000000]
[-300.44485065 886.51908636 49.92949042 73.75170300 44.75489382 1.00000000]
[-300.44485065 886.51908636 49.92949042 44.75489382 15.75808463 1.00000000]
[-300.44485065 886.51908636 49.92949042 15.75808463 346.76127545 1.00000000]
[]
[]
[]
[]
[]
[-138.96485942 778.59602684 28.47466729 108.32221786 56.24372594 1.00000000]
[-138.96485942 778.59602684 28.47466729 56.24372594 4.16523411 1.00000000]
[]
[]
[-60.04364936 725.85005893 28.47466729 108.32221791 56.24372598 1.00000000]
[-60.04364936 725.85005893 28.47466729 56.24372598 4.16523415 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[348.82138449 452.59041302 47.64193249 124.69308285 94.27114650 1.00000000]
[348.82138449 452.59041302 47.64193249 94.27114650 63.84921014 1.00000000]
[348.82138449 452.59041302 47.64193249 63.84921014 33.42727379 1.00000000]
[348.82138449 452.59041302 47.64193249 33.42727379 3.00533743 1.00000000]
[348.82138449 452.59041302 47.64193249 3.00533743 332.58340108 1.00000000]
[348.82138449 452.59041302 47.64193249 332.58340108 302.16146473 1.00000000]
[348.82138449 452.59041302 47.64193249 302.16146473 271.73952837 1.00000000]
[348.82138449 452.59041302 47.64193249 271.73952837 241.31759202 1.00000000]
[]
[]
[]
[]
[217.11162942 342.98263840 32.20889362 6.85645668 321.18485039 1.00000000]
[]
[]
[252.50000034 235.81723469 39.86382195 82.23461212 45.68589562 1.00000000]
[252.50000034 235.81723469 39.86382195 45.68589562 9.13717912 1.00000000]
[252.50000034 235.81723469 39.86382195 9.13717912 332.58846263 1.00000000]
[252.50000034 235.81723469 39.86382195 332.58846263 296.03974613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[537.49999788 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[537.49999788 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[537.49999809 253.89615457 38.21401848 242.74528142 204.55896105 1.00000000]
[537.49999809 253.89615457 38.21401848 204.55896105 166.37264069 1.00000000]
[537.49999809 253.89615457 38.21401848 166.37264069 128.18632032 1.00000000]
[537.49999809 253.89615457 38.21401848 128.18632032 89.99999995 1.00000000]
[537.49999809 253.89615457 38.21401848 89.99999995 51.81367959 1.00000000]
[537.49999809 253.89615457 38.21401848 51.81367959 13.62735922 1.00000000]
[537.49999809 253.89615457 38.21401848 13.62735922 335.44103885 1.00000000]
[537.49999809 253.89615457 38.21401848 335.44103885 297.25471849 1.00000000]
[]
[]
[537.49999788 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[537.49999788 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
] def
/pairs [
[1 36]
[2 35]
[3 34]
[4 33]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[38 147]
[39 146]
[40 145]
[41 143]
[42 142]
[45 138]
[46 137]
[47 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[73 106]
[75 104]
[76 103]
[77 102]
[79 100]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[157 175]
[158 174]
[160 172]
[161 171]
[162 170]
] def

init

% Start Annotations
96 123 12 1.00 0.60 0.67 omark 56 83 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
