%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:49 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUUUUUCCUACCACCACACCAUUUACACAGGAAUCUUAUUCCCAUCAGUAAUAUUUCUUAUUACUGGUAGUGAGUCUCUAAGAAGUGAGGAGGGAAAMAACAUYCAGCCCCACCUCCCAGAUGUGGGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[200.00000000 125.00000000]
[200.00000000 150.00000000]
[200.00000000 175.00000000]
[200.00000000 200.00000000]
[200.00000000 225.00000000]
[200.00000000 250.00000000]
[200.00000000 275.00000000]
[200.00000000 300.00000000]
[200.00000000 325.00000000]
[177.86882019 336.62802124]
[162.04331970 355.98141479]
[155.04151917 379.98086548]
[157.97744751 404.80789185]
[170.38397217 426.51220703]
[190.28710938 441.64050293]
[214.52006531 447.78570557]
[239.22717285 443.97003174]
[260.47726440 430.80062866]
[274.88928223 410.37286377]
[280.17010498 385.93698120]
[304.25814819 379.24618530]
[328.34619141 372.55541992]
[352.43420410 365.86462402]
[376.52224731 359.17382812]
[394.13760376 376.91360474]
[417.49090576 385.83679199]
[442.44744873 384.36355591]
[464.58871460 372.75473022]
[479.99456787 353.06564331]
[485.93740845 328.78225708]
[510.02545166 322.09149170]
[534.11346436 315.40069580]
[556.75366211 326.00366211]
[580.84167480 319.31286621]
[594.77026367 298.55242920]
[618.85827637 291.86166382]
[642.94628906 285.17086792]
[667.03436279 278.48010254]
[691.12237549 271.78930664]
[715.21044922 265.09851074]
[735.86535645 279.18301392]
[760.86090088 279.65469360]
[782.03253174 266.35943604]
[792.46472168 243.64007568]
[816.55273438 236.94929504]
[840.64074707 230.25851440]
[864.72882080 223.56771851]
[888.81683350 216.87693787]
[912.90484619 210.18615723]
[936.99291992 203.49537659]
[961.08093262 196.80459595]
[985.16894531 190.11380005]
[1009.25701904 183.42301941]
[1033.36755371 190.03236389]
[1054.33154297 176.41217041]
[1058.09033203 151.69635010]
[1042.12316895 132.45968628]
[1017.13781738 131.60255432]
[999.88989258 149.69976807]
[975.80187988 156.39054871]
[951.71386719 163.08134460]
[927.62579346 169.77212524]
[903.53778076 176.46290588]
[879.44970703 183.15368652]
[855.36169434 189.84448242]
[831.27368164 196.53526306]
[807.18560791 203.22604370]
[783.09759521 209.91682434]
[705.84332275 231.37527466]
[681.75531006 238.06605530]
[657.66723633 244.75683594]
[633.57922363 251.44763184]
[609.49121094 258.13839722]
[585.40313721 264.82919312]
[562.76300049 254.22624207]
[538.67492676 260.91702271]
[524.74639893 281.67745972]
[500.65835571 288.36822510]
[476.57031250 295.05902100]
[447.75296021 271.61544800]
[410.64511108 269.86929321]
[379.75363159 290.50320435]
[367.15515137 325.45059204]
[343.06710815 332.14138794]
[318.97909546 338.83215332]
[294.89105225 345.52294922]
[270.80300903 352.21371460]
[235.00000000 325.00000000]
[235.00000000 300.00000000]
[235.00000000 275.00000000]
[235.00000000 250.00000000]
[235.00000000 225.00000000]
[235.00000000 200.00000000]
[235.00000000 175.00000000]
[235.00000000 150.00000000]
[235.00000000 125.00000000]
[235.00000000 100.00000000]
[310.00000000 100.00000000]
[385.00000000 100.00000000]
[460.00000000 100.00000000]
[535.00000000 100.00000000]
[610.00000000 100.00000000]
[685.00000000 100.00000000]
[760.00000000 100.00000000]
[835.00000000 100.00000000]
[910.00000000 100.00000000]
[985.00000000 100.00000000]
[1060.00000000 100.00000000]
[1135.00000000 100.00000000]
[1135.00000000 125.00000000]
[1135.00000000 150.00000000]
[1135.00000000 175.00000000]
[1135.00000000 200.00000000]
[1124.02539062 222.46234131]
[1135.00000000 244.92468262]
[1135.00000000 269.92468262]
[1131.46459961 294.67343140]
[1152.50000000 308.18310547]
[1173.53540039 294.67343140]
[1170.00000000 269.92468262]
[1170.00000000 244.92468262]
[1180.97460938 222.46234131]
[1170.00000000 200.00000000]
[1170.00000000 175.00000000]
[1170.00000000 150.00000000]
[1170.00000000 125.00000000]
[1170.00000000 100.00000000]
[1195.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[217.50000000 385.18191939 62.67466331 253.78636116 230.77762566 1.00000000]
[217.50000000 385.18191939 62.67466331 230.77762566 207.76889017 1.00000000]
[217.50000000 385.18191939 62.67466331 207.76889017 184.76015468 1.00000000]
[217.50000000 385.18191939 62.67466331 184.76015468 161.75141918 1.00000000]
[217.50000000 385.18191939 62.67466331 161.75141918 138.74268369 1.00000000]
[217.50000000 385.18191939 62.67466331 138.74268369 115.73394820 1.00000000]
[217.50000000 385.18191939 62.67466331 115.73394820 92.72521270 1.00000000]
[217.50000000 385.18191939 62.67466331 92.72521270 69.71647721 1.00000000]
[217.50000000 385.18191939 62.67466331 69.71647721 46.70774172 1.00000000]
[217.50000000 385.18191939 62.67466331 46.70774172 23.69900622 1.00000000]
[217.50000000 385.18191939 62.67466331 23.69900622 0.69027073 1.00000000]
[]
[]
[]
[]
[426.54628209 327.11642727 59.41448475 147.34661788 123.05662255 1.00000000]
[426.54628209 327.11642727 59.41448475 123.05662255 98.76662722 1.00000000]
[426.54628209 327.11642727 59.41448475 98.76662722 74.47663189 1.00000000]
[426.54628209 327.11642727 59.41448475 74.47663189 50.18663655 1.00000000]
[426.54628209 327.11642727 59.41448475 50.18663655 25.89664122 1.00000000]
[426.54628209 327.11642727 59.41448475 25.89664122 1.60664589 1.00000000]
[]
[]
[559.75831518 290.11494520 36.01426010 135.40395567 94.78573981 1.00000000]
[559.75831518 290.11494520 36.01426010 94.78573981 54.16752396 1.00000000]
[559.75831518 290.11494520 36.01426010 54.16752396 13.54930811 1.00000000]
[]
[]
[]
[]
[]
[749.15401058 237.50767495 43.74267810 140.89426771 107.68544980 1.00000000]
[749.15401058 237.50767495 43.74267810 107.68544980 74.47663189 1.00000000]
[749.15401058 237.50767495 43.74267810 74.47663189 41.26781398 1.00000000]
[749.15401058 237.50767495 43.74267810 41.26781398 8.05899607 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1028.67557837 159.86669885 30.52836670 129.50034598 81.15910795 1.00000000]
[1028.67557837 159.86669885 30.52836670 81.15910795 32.81786992 1.00000000]
[1028.67557837 159.86669885 30.52836670 32.81786992 344.47663189 1.00000000]
[1028.67557837 159.86669885 30.52836670 344.47663189 296.13539386 1.00000000]
[1028.67557837 159.86669885 30.52836670 296.13539386 247.79415582 1.00000000]
[1028.67557837 159.86669885 30.52836670 247.79415582 199.45291779 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[749.15401058 237.50767495 43.74267810 320.89426771 188.05899607 1.00000000]
[]
[]
[]
[]
[]
[559.75831518 290.11494520 36.01426010 315.40395567 274.78573981 1.00000000]
[559.75831518 290.11494520 36.01426010 274.78573981 234.16752396 1.00000000]
[559.75831518 290.11494520 36.01426010 234.16752396 193.54930811 1.00000000]
[]
[]
[426.54628209 327.11642727 59.41448475 327.34661788 290.91162489 1.00000000]
[426.54628209 327.11642727 59.41448475 290.91162489 254.47663189 1.00000000]
[426.54628209 327.11642727 59.41448475 254.47663189 218.04163889 1.00000000]
[426.54628209 327.11642727 59.41448475 218.04163889 181.60664589 1.00000000]
[]
[]
[]
[]
[217.50000000 385.18191939 62.67466331 328.26299304 286.21363884 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1152.49999982 222.46233918 28.47466711 232.07849231 180.00000000 1.00000000]
[1152.49999982 222.46233918 28.47466711 180.00000000 127.92150787 1.00000000]
[]
[1152.49999982 285.05149800 23.13159419 220.83979808 155.41989906 1.00000000]
[1152.49999982 285.05149800 23.13159419 155.41989906 89.99999937 1.00000000]
[1152.49999982 285.05149800 23.13159419 89.99999937 24.58010036 1.00000000]
[1152.49999982 285.05149800 23.13159419 24.58010036 319.16020259 1.00000000]
[]
[1152.49999982 222.46233918 28.47466711 52.07849145 360.00000000 1.00000000]
[1152.49999982 222.46233918 28.47466711 360.00000000 307.92150828 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[5 102]
[6 101]
[7 100]
[8 99]
[9 98]
[10 97]
[11 96]
[12 95]
[13 94]
[14 93]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[35 84]
[36 83]
[37 82]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[49 73]
[50 72]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[120 126]
[121 125]
] def

init

% Start Annotations
107 106 12 1.00 0.60 0.67 omark 58 98 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
