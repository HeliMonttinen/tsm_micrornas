%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:49 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUUUUUCCUACCACCACACCAUAUAUACAGGAAGCUUAUGCCCAUUAGUAGUAUUUCUUAUUAUUGGUAGUGAGUCUCAAAGAAAAGAGGAGGAAAACAACCACCUCCUCUUUUCUUAGAGACUCACUACCAGUAAUAAGUAAUUCAGUAAUAAGUAAACCAGCAAUUCAUCCUCACCUCCCAAAUGCAGGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[325.00000000 125.00000000]
[325.00000000 150.00000000]
[325.00000000 175.00000000]
[325.00000000 200.00000000]
[301.54122925 208.64212036]
[281.58642578 223.70217896]
[266.84268188 243.89183044]
[258.57128906 267.48388672]
[257.47988892 292.46005249]
[263.66180420 316.68365479]
[276.58822632 338.08242798]
[295.15328979 354.82574463]
[317.76879883 365.48123169]
[342.50000000 369.13729858]
[367.23120117 365.48123169]
[389.84671021 354.82574463]
[408.41177368 338.08242798]
[421.33819580 316.68365479]
[427.52011108 292.46005249]
[426.42871094 267.48388672]
[418.15731812 243.89183044]
[403.41357422 223.70217896]
[383.45877075 208.64212036]
[360.00000000 200.00000000]
[360.00000000 175.00000000]
[360.00000000 150.00000000]
[360.00000000 125.00000000]
[360.00000000 100.00000000]
[535.00000000 100.00000000]
[535.00000000 125.00000000]
[535.00000000 150.00000000]
[515.90136719 166.13203430]
[508.75732422 190.08955383]
[515.90136719 214.04705811]
[502.20907593 234.96406555]
[488.51678467 255.88105774]
[464.50613403 262.84451294]
[450.81384277 283.76150513]
[454.03781128 308.55276489]
[440.34548950 329.46975708]
[426.65319824 350.38677979]
[412.96090698 371.30377197]
[391.47616577 384.08682251]
[388.35601807 408.89135742]
[363.39520264 407.49197388]
[374.66372681 429.80834961]
[353.17898560 442.59140015]
[350.05883789 467.39593506]
[336.36651611 488.31292725]
[322.67422485 509.22991943]
[301.18951416 522.01300049]
[298.06933594 546.81750488]
[284.37704468 567.73449707]
[270.68475342 588.65148926]
[256.99243164 609.56854248]
[243.30014038 630.48553467]
[229.60784912 651.40252686]
[215.91554260 672.31951904]
[202.22323608 693.23651123]
[188.53094482 714.15350342]
[174.83863831 735.07049561]
[161.14634705 755.98754883]
[147.45404053 776.90454102]
[133.76174927 797.82153320]
[120.06944275 818.73852539]
[106.37714386 839.65551758]
[92.68484497 860.57250977]
[78.99254608 881.48950195]
[65.30024719 902.40655518]
[51.60794449 923.32354736]
[37.91564560 944.24053955]
[24.22334480 965.15753174]
[10.53104496 986.07452393]
[-10.95368290 998.85760498]
[-14.07384109 1023.66210938]
[-27.76614189 1044.57910156]
[-41.45844269 1065.49609375]
[-55.15074158 1086.41308594]
[-68.84304047 1107.33007812]
[-82.53533936 1128.24707031]
[-96.22763824 1149.16406250]
[-109.91993713 1170.08117676]
[-123.61224365 1190.99816895]
[-137.30453491 1211.91516113]
[-150.99684143 1232.83215332]
[-164.68913269 1253.74914551]
[-178.38143921 1274.66613770]
[-192.07374573 1295.58312988]
[-217.06130981 1296.37145996]
[-238.53442383 1309.17407227]
[-251.10963440 1330.78112793]
[-251.63426208 1355.77563477]
[-239.97676086 1377.89123535]
[-219.05976868 1391.58349609]
[-194.12728882 1393.41967773]
[-171.43006897 1382.93945312]
[-156.65844727 1362.77014160]
[-153.51577759 1337.96850586]
[-162.78993225 1314.75231934]
[-149.09764099 1293.83532715]
[-135.40533447 1272.91833496]
[-121.71303558 1252.00134277]
[-108.02073669 1231.08435059]
[-94.32843781 1210.16735840]
[-80.63613892 1189.25036621]
[-66.94384003 1168.33337402]
[-53.25153732 1147.41638184]
[-39.55923843 1126.49938965]
[-25.86693954 1105.58227539]
[-12.17463970 1084.66528320]
[1.51766014 1063.74829102]
[15.20995998 1042.83129883]
[36.69468689 1030.04833984]
[39.81484604 1005.24377441]
[53.50714493 984.32672119]
[67.19944763 963.40972900]
[80.89174652 942.49273682]
[94.58404541 921.57574463]
[108.27634430 900.65875244]
[121.96864319 879.74176025]
[135.66094971 858.82476807]
[149.35324097 837.90771484]
[163.04554749 816.99072266]
[176.73783875 796.07373047]
[190.43014526 775.15673828]
[204.12245178 754.23974609]
[217.81474304 733.32275391]
[231.50704956 712.40576172]
[245.19934082 691.48876953]
[258.89163208 670.57171631]
[272.58395386 649.65472412]
[286.27624512 628.73773193]
[299.96853638 607.82073975]
[313.66085815 586.90374756]
[327.35314941 565.98675537]
[348.83786011 553.20367432]
[351.95803833 528.39916992]
[365.65032959 507.48214722]
[379.34262085 486.56515503]
[400.82736206 473.78210449]
[403.94750977 448.97756958]
[417.63983154 428.06057739]
[439.12454224 415.27752686]
[442.24468994 390.47299194]
[455.93701172 369.55599976]
[469.62930298 348.63897705]
[483.32159424 327.72198486]
[507.33224487 320.75854492]
[521.02453613 299.84152222]
[517.80059814 275.05029297]
[531.49285889 254.13328552]
[545.18518066 233.21627808]
[570.00000000 230.17909241]
[589.09863281 214.04705811]
[596.24267578 190.08955383]
[589.09863281 166.13203430]
[570.00000000 150.00000000]
[570.00000000 125.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[870.00000000 125.00000000]
[870.00000000 150.00000000]
[870.00000000 175.00000000]
[870.00000000 200.00000000]
[854.59667969 219.69104004]
[856.62066650 244.60896301]
[875.00000000 261.55593872]
[900.00000000 261.55593872]
[918.37933350 244.60896301]
[920.40332031 219.69104004]
[905.00000000 200.00000000]
[926.65063477 187.50000000]
[905.00000000 175.00000000]
[905.00000000 150.00000000]
[905.00000000 125.00000000]
[905.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[342.50000000 283.66332661 85.47398563 258.18568220 241.36711398 1.00000000]
[342.50000000 283.66332661 85.47398563 241.36711398 224.54854576 1.00000000]
[342.50000000 283.66332661 85.47398563 224.54854576 207.72997754 1.00000000]
[342.50000000 283.66332661 85.47398563 207.72997754 190.91140932 1.00000000]
[342.50000000 283.66332661 85.47398563 190.91140932 174.09284110 1.00000000]
[342.50000000 283.66332661 85.47398563 174.09284110 157.27427288 1.00000000]
[342.50000000 283.66332661 85.47398563 157.27427288 140.45570466 1.00000000]
[342.50000000 283.66332661 85.47398563 140.45570466 123.63713644 1.00000000]
[342.50000000 283.66332661 85.47398563 123.63713644 106.81856822 1.00000000]
[342.50000000 283.66332661 85.47398563 106.81856822 90.00000000 1.00000000]
[342.50000000 283.66332661 85.47398563 90.00000000 73.18143178 1.00000000]
[342.50000000 283.66332661 85.47398563 73.18143178 56.36286356 1.00000000]
[342.50000000 283.66332661 85.47398563 56.36286356 39.54429534 1.00000000]
[342.50000000 283.66332661 85.47398563 39.54429534 22.72572712 1.00000000]
[342.50000000 283.66332661 85.47398563 22.72572712 5.90715890 1.00000000]
[342.50000000 283.66332661 85.47398563 5.90715890 349.08859068 1.00000000]
[342.50000000 283.66332661 85.47398563 349.08859068 332.27002246 1.00000000]
[342.50000000 283.66332661 85.47398563 332.27002246 315.45145424 1.00000000]
[342.50000000 283.66332661 85.47398563 315.45145424 298.63288602 1.00000000]
[342.50000000 283.66332661 85.47398563 298.63288602 281.81431780 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[552.50000068 190.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[552.50000068 190.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[552.50000068 190.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[]
[]
[485.91918913 291.80152509 36.01426010 274.13614169 233.51792584 1.00000000]
[485.91918913 291.80152509 36.01426010 233.51792584 192.89970998 1.00000000]
[485.91918913 291.80152509 36.01426010 192.89970998 152.28149413 1.00000000]
[]
[]
[]
[415.30035910 399.68216861 28.47466729 265.28730981 213.20881789 1.00000000]
[415.30035910 399.68216861 28.47466729 213.20881789 161.13032596 1.00000000]
[]
[]
[377.00317257 458.18675067 28.47466729 265.28730976 213.20881784 1.00000000]
[377.00317257 458.18675067 28.47466729 213.20881784 161.13032591 1.00000000]
[]
[]
[325.01368621 537.60833360 28.47466729 265.28730972 213.20881779 1.00000000]
[325.01368621 537.60833360 28.47466729 213.20881779 161.13032586 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[12.87050264 1014.45293276 28.47466729 265.28730967 213.20881774 1.00000000]
[12.87050264 1014.45293276 28.47466729 213.20881774 161.13032582 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-203.04312498 1344.29273968 49.92949042 282.69126823 253.69445905 1.00000000]
[-203.04312498 1344.29273968 49.92949042 253.69445905 224.69764986 1.00000000]
[-203.04312498 1344.29273968 49.92949042 224.69764986 195.70084068 1.00000000]
[-203.04312498 1344.29273968 49.92949042 195.70084068 166.70403150 1.00000000]
[-203.04312498 1344.29273968 49.92949042 166.70403150 137.70722231 1.00000000]
[-203.04312498 1344.29273968 49.92949042 137.70722231 108.71041313 1.00000000]
[-203.04312498 1344.29273968 49.92949042 108.71041313 79.71360394 1.00000000]
[-203.04312498 1344.29273968 49.92949042 79.71360394 50.71679476 1.00000000]
[-203.04312498 1344.29273968 49.92949042 50.71679476 21.71998558 1.00000000]
[-203.04312498 1344.29273968 49.92949042 21.71998558 352.72317639 1.00000000]
[-203.04312498 1344.29273968 49.92949042 352.72317639 323.72636721 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[12.87050264 1014.45293276 28.47466729 85.28730962 33.20881770 1.00000000]
[12.87050264 1014.45293276 28.47466729 33.20881770 341.13032586 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[325.01368621 537.60833360 28.47466729 85.28730967 33.20881774 1.00000000]
[325.01368621 537.60833360 28.47466729 33.20881774 341.13032591 1.00000000]
[]
[]
[377.00317257 458.18675067 28.47466729 85.28730972 33.20881779 1.00000000]
[377.00317257 458.18675067 28.47466729 33.20881779 341.13032596 1.00000000]
[]
[415.30035910 399.68216861 28.47466729 85.28730976 33.20881784 1.00000000]
[415.30035910 399.68216861 28.47466729 33.20881784 341.13032601 1.00000000]
[]
[]
[]
[485.91918913 291.80152509 36.01426010 94.13614169 53.51792584 1.00000000]
[485.91918913 291.80152509 36.01426010 53.51792584 12.89970998 1.00000000]
[485.91918913 291.80152509 36.01426010 12.89970998 332.28149413 1.00000000]
[]
[]
[552.50000068 190.08954835 43.74267810 99.62645373 66.41763582 1.00000000]
[552.50000068 190.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[552.50000068 190.08954835 43.74267810 33.20881791 360.00000000 1.00000000]
[552.50000068 190.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[552.50000068 190.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[887.49999753 229.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[887.49999753 229.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[887.49999753 229.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[887.49999753 229.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[887.49999753 229.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[887.49999753 229.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[887.49999753 229.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[10 38]
[11 37]
[12 36]
[13 35]
[14 34]
[39 169]
[40 168]
[41 167]
[44 162]
[45 161]
[46 160]
[49 157]
[50 156]
[51 155]
[52 154]
[54 152]
[56 151]
[58 149]
[59 148]
[60 147]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[181 197]
[182 196]
[183 195]
[184 194]
[185 192]
] def

init

% Start Annotations
109 149 12 1.00 0.60 0.67 omark 58 98 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
