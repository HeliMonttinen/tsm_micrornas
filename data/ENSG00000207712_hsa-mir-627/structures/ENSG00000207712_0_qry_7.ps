%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:49 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUUUUUCCUACCACCACACCAURUAUACAGGAAUCUUAUUCCCAUUAGUAKUAUUUCUUAUUACUGGUAGUGAGUCUCUAAGAAAAGAGGAGGAAAACAACYRCCUCCUCUUUUCUUAGAGACUCACUACCAGUAAUAAGUAAUUCAGUAAUAAGUAAAMCAGYAAUUCAGCCUCACCUCCCAGAUGUAGGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[375.00000000 125.00000000]
[375.00000000 150.00000000]
[375.00000000 175.00000000]
[375.00000000 200.00000000]
[350.19592285 203.12367249]
[325.85223389 208.81442261]
[302.23385620 217.01031494]
[279.59783936 227.62214661]
[258.19055176 240.53443909]
[238.24491882 255.60667419]
[219.97804260 272.67480469]
[203.58871460 291.55310059]
[189.25529480 312.03610229]
[177.13378906 333.90087891]
[167.35607910 356.90951538]
[160.02859497 380.81155396]
[155.23109436 405.34692383]
[153.01577759 430.24856567]
[153.40673828 455.24551392]
[156.39974976 480.06570435]
[161.96221924 504.43902588]
[170.03361511 528.10021973]
[180.52609253 550.79180908]
[159.32333374 564.03729248]
[138.12059021 577.28283691]
[116.91783142 590.52832031]
[95.71508026 603.77380371]
[72.85227203 613.88775635]
[72.53958130 638.88580322]
[95.14225006 649.56848145]
[114.25878143 633.45764160]
[135.46153259 620.21215820]
[156.66429138 606.96667480]
[177.86703491 593.72119141]
[199.06979370 580.47564697]
[214.86071777 599.85729980]
[232.58486938 617.48834229]
[217.30654907 637.27655029]
[202.02824402 657.06475830]
[186.74992371 676.85296631]
[161.89920044 674.12506104]
[138.37376404 682.58398438]
[120.95034027 700.51232910]
[113.16665649 724.26971436]
[116.60314178 749.03240967]
[130.56204224 769.77246094]
[120.13488007 792.49407959]
[109.70771790 815.21575928]
[90.36447144 831.05364990]
[90.97024536 856.04632568]
[80.54308319 878.76800537]
[70.11592102 901.48968506]
[59.68875504 924.21130371]
[49.26159286 946.93298340]
[38.83443069 969.65466309]
[28.40726662 992.37634277]
[17.98010445 1015.09802246]
[7.55294085 1037.81970215]
[-2.87422204 1060.54138184]
[-13.30138493 1083.26306152]
[-23.72854805 1105.98474121]
[-34.15571213 1128.70629883]
[-44.58287430 1151.42797852]
[-55.01003647 1174.14965820]
[-65.43720245 1196.87133789]
[-75.86436462 1219.59301758]
[-86.29152679 1242.31469727]
[-96.71868896 1265.03637695]
[-107.14585114 1287.75805664]
[-117.57301331 1310.47973633]
[-128.00018311 1333.20141602]
[-138.42733765 1355.92309570]
[-148.85450745 1378.64477539]
[-159.28166199 1401.36645508]
[-169.70883179 1424.08801270]
[-180.13598633 1446.80969238]
[-190.56315613 1469.53137207]
[-200.99031067 1492.25305176]
[-211.41748047 1514.97473145]
[-221.84463501 1537.69641113]
[-232.27180481 1560.41809082]
[-242.69895935 1583.13977051]
[-253.12612915 1605.86145020]
[-263.55328369 1628.58312988]
[-273.98046875 1651.30480957]
[-284.40762329 1674.02648926]
[-308.99963379 1678.52441406]
[-328.32852173 1694.37988281]
[-337.54833984 1717.61767578]
[-334.34765625 1742.41198730]
[-319.52890015 1762.54663086]
[-296.80725098 1772.97375488]
[-271.87911987 1771.07934570]
[-250.99420166 1757.33813477]
[-239.38847351 1735.19519043]
[-239.97155762 1710.20202637]
[-252.59727478 1688.62451172]
[-242.17012024 1665.90283203]
[-231.74295044 1643.18115234]
[-221.31579590 1620.45947266]
[-210.88862610 1597.73779297]
[-200.46147156 1575.01611328]
[-190.03430176 1552.29443359]
[-179.60714722 1529.57275391]
[-169.17997742 1506.85107422]
[-158.75280762 1484.12939453]
[-148.32565308 1461.40771484]
[-137.89848328 1438.68603516]
[-127.47132874 1415.96447754]
[-117.04416656 1393.24279785]
[-106.61700439 1370.52111816]
[-96.18983459 1347.79943848]
[-85.76267242 1325.07775879]
[-75.33551025 1302.35607910]
[-64.90834808 1279.63439941]
[-54.48118591 1256.91271973]
[-44.05402374 1234.19104004]
[-33.62686157 1211.46936035]
[-23.19969749 1188.74768066]
[-12.77253532 1166.02600098]
[-2.34537268 1143.30444336]
[8.08178997 1120.58276367]
[18.50895309 1097.86108398]
[28.93611526 1075.13940430]
[39.36327744 1052.41772461]
[49.79043961 1029.69604492]
[60.21760559 1006.97436523]
[70.64476776 984.25268555]
[81.07192993 961.53100586]
[91.49909210 938.80938721]
[101.92625427 916.08770752]
[112.35341644 893.36602783]
[122.78057861 870.64434814]
[142.12382507 854.80645752]
[141.51805115 829.81378174]
[151.94522095 807.09210205]
[162.37239075 784.37048340]
[187.19877625 781.42932129]
[208.21351624 767.88751221]
[221.14967346 746.49462891]
[223.38063049 721.59436035]
[214.45341492 698.24261475]
[229.73171997 678.45440674]
[245.01004028 658.66619873]
[260.28836060 638.87799072]
[281.83047485 651.56408691]
[304.57699585 661.93695068]
[328.28036499 669.88360596]
[352.68264771 675.31762695]
[377.51824951 678.17987061]
[402.51690674 678.43920898]
[427.40655518 676.09277344]
[451.91632080 671.16613770]
[475.77944946 663.71289062]
[498.73626709 653.81414795]
[520.53692627 641.57763672]
[540.94415283 627.13653564]
[559.73583984 610.64807129]
[576.70751953 592.29156494]
[591.67456055 572.26684570]
[604.47393799 550.79180908]
[614.96636963 528.10021973]
[623.03778076 504.43902588]
[628.60028076 480.06570435]
[631.59326172 455.24551392]
[631.98425293 430.24856567]
[629.76892090 405.34692383]
[624.97137451 380.81155396]
[617.64392090 356.90951538]
[607.86621094 333.90087891]
[595.74468994 312.03610229]
[581.41125488 291.55310059]
[565.02197266 272.67480469]
[546.75506592 255.60667419]
[526.80944824 240.53443909]
[505.40216064 227.62214661]
[482.76614380 217.01031494]
[459.14779663 208.81442261]
[434.80407715 203.12367249]
[410.00000000 200.00000000]
[410.00000000 175.00000000]
[410.00000000 150.00000000]
[410.00000000 125.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[392.50000279 439.00441700 239.64423912 265.81225302 259.83236877 1.00000000]
[392.50000279 439.00441700 239.64423912 259.83236877 253.85248452 1.00000000]
[392.50000279 439.00441700 239.64423912 253.85248452 247.87260026 1.00000000]
[392.50000279 439.00441700 239.64423912 247.87260026 241.89271601 1.00000000]
[392.50000279 439.00441700 239.64423912 241.89271601 235.91283176 1.00000000]
[392.50000279 439.00441700 239.64423912 235.91283176 229.93294751 1.00000000]
[392.50000279 439.00441700 239.64423912 229.93294751 223.95306326 1.00000000]
[392.50000279 439.00441700 239.64423912 223.95306326 217.97317900 1.00000000]
[392.50000279 439.00441700 239.64423912 217.97317900 211.99329475 1.00000000]
[392.50000279 439.00441700 239.64423912 211.99329475 206.01341050 1.00000000]
[392.50000279 439.00441700 239.64423912 206.01341050 200.03352625 1.00000000]
[392.50000279 439.00441700 239.64423912 200.03352625 194.05364199 1.00000000]
[392.50000279 439.00441700 239.64423912 194.05364199 188.07375774 1.00000000]
[392.50000279 439.00441700 239.64423912 188.07375774 182.09387349 1.00000000]
[392.50000279 439.00441700 239.64423912 182.09387349 176.11398924 1.00000000]
[392.50000279 439.00441700 239.64423912 176.11398924 170.13410498 1.00000000]
[392.50000279 439.00441700 239.64423912 170.13410498 164.15422073 1.00000000]
[392.50000279 439.00441700 239.64423912 164.15422073 158.17433648 1.00000000]
[392.50000279 439.00441700 239.64423912 158.17433648 152.19445223 1.00000000]
[]
[]
[]
[]
[92.15772227 626.63023389 23.13159456 278.84650230 213.42660378 1.00000000]
[92.15772227 626.63023389 23.13159456 213.42660378 148.00670525 1.00000000]
[92.15772227 626.63023389 23.13159456 148.00670525 82.58680672 1.00000000]
[92.15772227 626.63023389 23.13159456 82.58680672 17.16690819 1.00000000]
[]
[]
[]
[]
[392.50000279 439.00441700 239.64423912 143.81895827 137.83907402 1.00000000]
[392.50000279 439.00441700 239.64423912 137.83907402 131.85918977 1.00000000]
[]
[]
[]
[168.42629852 729.22074854 55.48099457 289.28507113 263.24375173 1.00000000]
[168.42629852 729.22074854 55.48099457 263.24375173 237.20243233 1.00000000]
[168.42629852 729.22074854 55.48099457 237.20243233 211.16111294 1.00000000]
[168.42629852 729.22074854 55.48099457 211.16111294 185.11979354 1.00000000]
[168.42629852 729.22074854 55.48099457 185.11979354 159.07847415 1.00000000]
[168.42629852 729.22074854 55.48099457 159.07847415 133.03715475 1.00000000]
[]
[]
[116.24415100 842.93006132 28.47466729 256.72927499 204.65078307 1.00000000]
[116.24415100 842.93006132 28.47466729 204.65078307 152.57229114 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-288.00633535 1723.82606269 49.92949042 274.13323356 245.13642437 1.00000000]
[-288.00633535 1723.82606269 49.92949042 245.13642437 216.13961519 1.00000000]
[-288.00633535 1723.82606269 49.92949042 216.13961519 187.14280600 1.00000000]
[-288.00633535 1723.82606269 49.92949042 187.14280600 158.14599682 1.00000000]
[-288.00633535 1723.82606269 49.92949042 158.14599682 129.14918763 1.00000000]
[-288.00633535 1723.82606269 49.92949042 129.14918763 100.15237845 1.00000000]
[-288.00633535 1723.82606269 49.92949042 100.15237845 71.15556927 1.00000000]
[-288.00633535 1723.82606269 49.92949042 71.15556927 42.15876008 1.00000000]
[-288.00633535 1723.82606269 49.92949042 42.15876008 13.16195090 1.00000000]
[-288.00633535 1723.82606269 49.92949042 13.16195090 344.16514171 1.00000000]
[-288.00633535 1723.82606269 49.92949042 344.16514171 315.16833253 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[116.24415100 842.93006132 28.47466729 76.72927495 24.65078302 1.00000000]
[116.24415100 842.93006132 28.47466729 24.65078302 332.57229119 1.00000000]
[]
[]
[168.42629852 729.22074854 55.48099457 96.26441143 70.22309203 1.00000000]
[168.42629852 729.22074854 55.48099457 70.22309203 44.18177264 1.00000000]
[168.42629852 729.22074854 55.48099457 44.18177264 18.14045324 1.00000000]
[168.42629852 729.22074854 55.48099457 18.14045324 352.09913384 1.00000000]
[168.42629852 729.22074854 55.48099457 352.09913384 326.05781445 1.00000000]
[]
[]
[]
[392.50000279 439.00441700 239.64423912 123.48369581 117.50381156 1.00000000]
[392.50000279 439.00441700 239.64423912 117.50381156 111.52392730 1.00000000]
[392.50000279 439.00441700 239.64423912 111.52392730 105.54404305 1.00000000]
[392.50000279 439.00441700 239.64423912 105.54404305 99.56415880 1.00000000]
[392.50000279 439.00441700 239.64423912 99.56415880 93.58427455 1.00000000]
[392.50000279 439.00441700 239.64423912 93.58427455 87.60439030 1.00000000]
[392.50000279 439.00441700 239.64423912 87.60439030 81.62450604 1.00000000]
[392.50000279 439.00441700 239.64423912 81.62450604 75.64462179 1.00000000]
[392.50000279 439.00441700 239.64423912 75.64462179 69.66473754 1.00000000]
[392.50000279 439.00441700 239.64423912 69.66473754 63.68485329 1.00000000]
[392.50000279 439.00441700 239.64423912 63.68485329 57.70496903 1.00000000]
[392.50000279 439.00441700 239.64423912 57.70496903 51.72508478 1.00000000]
[392.50000279 439.00441700 239.64423912 51.72508478 45.74520053 1.00000000]
[392.50000279 439.00441700 239.64423912 45.74520053 39.76531628 1.00000000]
[392.50000279 439.00441700 239.64423912 39.76531628 33.78543202 1.00000000]
[392.50000279 439.00441700 239.64423912 33.78543202 27.80554777 1.00000000]
[392.50000279 439.00441700 239.64423912 27.80554777 21.82566352 1.00000000]
[392.50000279 439.00441700 239.64423912 21.82566352 15.84577927 1.00000000]
[392.50000279 439.00441700 239.64423912 15.84577927 9.86589502 1.00000000]
[392.50000279 439.00441700 239.64423912 9.86589502 3.88601076 1.00000000]
[392.50000279 439.00441700 239.64423912 3.88601076 357.90612651 1.00000000]
[392.50000279 439.00441700 239.64423912 357.90612651 351.92624226 1.00000000]
[392.50000279 439.00441700 239.64423912 351.92624226 345.94635801 1.00000000]
[392.50000279 439.00441700 239.64423912 345.94635801 339.96647375 1.00000000]
[392.50000279 439.00441700 239.64423912 339.96647375 333.98658950 1.00000000]
[392.50000279 439.00441700 239.64423912 333.98658950 328.00670525 1.00000000]
[392.50000279 439.00441700 239.64423912 328.00670525 322.02682100 1.00000000]
[392.50000279 439.00441700 239.64423912 322.02682100 316.04693674 1.00000000]
[392.50000279 439.00441700 239.64423912 316.04693674 310.06705249 1.00000000]
[392.50000279 439.00441700 239.64423912 310.06705249 304.08716824 1.00000000]
[392.50000279 439.00441700 239.64423912 304.08716824 298.10728399 1.00000000]
[392.50000279 439.00441700 239.64423912 298.10728399 292.12739974 1.00000000]
[392.50000279 439.00441700 239.64423912 292.12739974 286.14751548 1.00000000]
[392.50000279 439.00441700 239.64423912 286.14751548 280.16763123 1.00000000]
[392.50000279 439.00441700 239.64423912 280.16763123 274.18774698 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[49 157]
[50 156]
[51 155]
[52 154]
[58 149]
[59 148]
[60 147]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
] def

init

% Start Annotations
109 149 12 1.00 0.60 0.67 omark 58 98 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
