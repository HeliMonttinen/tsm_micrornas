%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUCACGUUCAUGUCUUAGGCAGCCCUGCUCUGGUCUAGCCCAAGCUCUCAYGUGUCCCCUGGUCAYGCUAUUUGRGGUUUACUAUGGAACCUCAAAUAGCAUGACCAGGGAACACAUGAGAGCUUUUCAUUGAUUGCAUUCCCACAAGCAUAUUUCCAUCACAAGUGGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[575.00000000 125.00000000]
[575.00000000 150.00000000]
[575.00000000 175.00000000]
[575.00000000 200.00000000]
[564.02532959 222.46234131]
[575.00000000 244.92468262]
[575.00000000 269.92468262]
[559.59667969 289.61572266]
[561.62066650 314.53366089]
[580.00000000 331.48062134]
[605.00000000 331.48062134]
[623.37933350 314.53366089]
[625.40332031 289.61572266]
[610.00000000 269.92468262]
[610.00000000 244.92468262]
[620.97467041 222.46234131]
[610.00000000 200.00000000]
[610.00000000 175.00000000]
[631.65063477 162.50000000]
[610.00000000 150.00000000]
[610.00000000 125.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[660.00000000 125.00000000]
[660.00000000 150.00000000]
[660.00000000 175.00000000]
[660.00000000 200.00000000]
[660.00000000 225.00000000]
[660.00000000 250.00000000]
[660.00000000 275.00000000]
[660.00000000 300.00000000]
[649.02532959 322.46234131]
[660.00000000 344.92468262]
[660.00000000 369.92468262]
[660.00000000 394.92468262]
[660.00000000 419.92468262]
[649.02532959 442.38702393]
[660.00000000 464.84936523]
[660.00000000 489.84936523]
[660.00000000 514.84936523]
[660.00000000 539.84936523]
[660.00000000 564.84936523]
[660.00000000 589.84936523]
[660.00000000 614.84936523]
[660.00000000 639.84936523]
[660.00000000 664.84936523]
[649.02532959 687.31170654]
[660.00000000 709.77404785]
[660.00000000 734.77404785]
[660.00000000 759.77404785]
[660.00000000 784.77404785]
[660.00000000 809.77404785]
[660.00000000 834.77404785]
[660.00000000 859.77404785]
[660.00000000 884.77404785]
[649.02532959 907.23638916]
[660.00000000 929.69873047]
[660.00000000 954.69873047]
[660.00000000 979.69873047]
[660.00000000 1004.69873047]
[660.00000000 1029.69873047]
[644.59667969 1049.38977051]
[646.62066650 1074.30773926]
[665.00000000 1091.25463867]
[690.00000000 1091.25463867]
[708.37933350 1074.30773926]
[710.40332031 1049.38977051]
[695.00000000 1029.69873047]
[695.00000000 1004.69873047]
[695.00000000 979.69873047]
[695.00000000 954.69873047]
[695.00000000 929.69873047]
[705.97467041 907.23638916]
[695.00000000 884.77404785]
[695.00000000 859.77404785]
[695.00000000 834.77404785]
[695.00000000 809.77404785]
[695.00000000 784.77404785]
[695.00000000 759.77404785]
[695.00000000 734.77404785]
[695.00000000 709.77404785]
[705.97467041 687.31170654]
[695.00000000 664.84936523]
[695.00000000 639.84936523]
[695.00000000 614.84936523]
[695.00000000 589.84936523]
[695.00000000 564.84936523]
[695.00000000 539.84936523]
[695.00000000 514.84936523]
[695.00000000 489.84936523]
[695.00000000 464.84936523]
[705.97467041 442.38702393]
[695.00000000 419.92468262]
[695.00000000 394.92468262]
[695.00000000 369.92468262]
[695.00000000 344.92468262]
[705.97467041 322.46234131]
[695.00000000 300.00000000]
[695.00000000 275.00000000]
[695.00000000 250.00000000]
[695.00000000 225.00000000]
[695.00000000 200.00000000]
[695.00000000 175.00000000]
[695.00000000 150.00000000]
[695.00000000 125.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
[1020.00000000 100.00000000]
[1045.00000000 100.00000000]
[1070.00000000 100.00000000]
[1095.00000000 100.00000000]
[1095.00000000 125.00000000]
[1095.00000000 150.00000000]
[1095.00000000 175.00000000]
[1095.00000000 200.00000000]
[1071.54125977 208.64212036]
[1051.58642578 223.70217896]
[1036.84265137 243.89183044]
[1028.57128906 267.48388672]
[1027.47985840 292.46005249]
[1033.66186523 316.68365479]
[1046.58825684 338.08242798]
[1065.15332031 354.82574463]
[1087.76879883 365.48123169]
[1112.50000000 369.13729858]
[1137.23120117 365.48123169]
[1159.84667969 354.82574463]
[1178.41174316 338.08242798]
[1191.33813477 316.68365479]
[1197.52014160 292.46005249]
[1196.42871094 267.48388672]
[1188.15734863 243.89183044]
[1173.41357422 223.70217896]
[1153.45874023 208.64212036]
[1130.00000000 200.00000000]
[1130.00000000 175.00000000]
[1130.00000000 150.00000000]
[1130.00000000 125.00000000]
[1130.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[592.49999982 222.46233918 28.47466711 232.07849231 180.00000000 1.00000000]
[592.49999982 222.46233918 28.47466711 180.00000000 127.92150787 1.00000000]
[]
[592.50000006 299.48424621 34.35139098 239.37341126 196.69529375 1.00000000]
[592.50000006 299.48424621 34.35139098 196.69529375 154.01717623 1.00000000]
[592.50000006 299.48424621 34.35139098 154.01717623 111.33905871 1.00000000]
[592.50000006 299.48424621 34.35139098 111.33905871 68.66094119 1.00000000]
[592.50000006 299.48424621 34.35139098 68.66094119 25.98282368 1.00000000]
[592.50000006 299.48424621 34.35139098 25.98282368 343.30470616 1.00000000]
[592.50000006 299.48424621 34.35139098 343.30470616 300.62658864 1.00000000]
[]
[592.49999982 222.46233918 28.47466711 52.07849145 360.00000000 1.00000000]
[592.49999982 222.46233918 28.47466711 360.00000000 307.92150828 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[677.49999902 322.46233922 28.47466702 232.07849249 180.00000000 1.00000000]
[677.49999902 322.46233922 28.47466702 180.00000000 127.92150779 1.00000000]
[]
[]
[]
[677.49999865 442.38701762 28.47466656 232.07849346 180.00000000 1.00000000]
[677.49999865 442.38701762 28.47466656 180.00000000 127.92150728 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[677.49999979 687.31169544 28.47466729 232.07849181 180.00000000 1.00000000]
[677.49999979 687.31169544 28.47466729 180.00000000 127.92150796 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[677.50000033 907.23637362 28.47466729 232.07849176 180.00000000 1.00000000]
[677.50000033 907.23637362 28.47466729 180.00000000 127.92150791 1.00000000]
[]
[]
[]
[]
[677.50000083 1059.25828074 34.35139098 239.37341112 196.69529360 1.00000000]
[677.50000083 1059.25828074 34.35139098 196.69529360 154.01717609 1.00000000]
[677.50000083 1059.25828074 34.35139098 154.01717609 111.33905857 1.00000000]
[677.50000083 1059.25828074 34.35139098 111.33905857 68.66094105 1.00000000]
[677.50000083 1059.25828074 34.35139098 68.66094105 25.98282354 1.00000000]
[677.50000083 1059.25828074 34.35139098 25.98282354 343.30470602 1.00000000]
[677.50000083 1059.25828074 34.35139098 343.30470602 300.62658850 1.00000000]
[]
[]
[]
[]
[677.50000033 907.23637362 28.47466729 52.07849171 360.00000000 1.00000000]
[677.50000033 907.23637362 28.47466729 360.00000000 307.92150796 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[677.49999979 687.31169544 28.47466729 52.07849176 360.00000000 1.00000000]
[677.49999979 687.31169544 28.47466729 360.00000000 307.92150800 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[677.49999865 442.38701762 28.47466656 52.07849021 360.00000000 1.00000000]
[677.49999865 442.38701762 28.47466656 360.00000000 307.92150877 1.00000000]
[]
[]
[]
[677.49999902 322.46233922 28.47466702 52.07849127 360.00000000 1.00000000]
[677.49999902 322.46233922 28.47466702 360.00000000 307.92150836 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1112.49999808 283.66332661 85.47398563 258.18568220 241.36711398 1.00000000]
[1112.49999808 283.66332661 85.47398563 241.36711398 224.54854576 1.00000000]
[1112.49999808 283.66332661 85.47398563 224.54854576 207.72997754 1.00000000]
[1112.49999808 283.66332661 85.47398563 207.72997754 190.91140932 1.00000000]
[1112.49999808 283.66332661 85.47398563 190.91140932 174.09284110 1.00000000]
[1112.49999808 283.66332661 85.47398563 174.09284110 157.27427288 1.00000000]
[1112.49999808 283.66332661 85.47398563 157.27427288 140.45570466 1.00000000]
[1112.49999808 283.66332661 85.47398563 140.45570466 123.63713644 1.00000000]
[1112.49999808 283.66332661 85.47398563 123.63713644 106.81856822 1.00000000]
[1112.49999808 283.66332661 85.47398563 106.81856822 90.00000000 1.00000000]
[1112.49999808 283.66332661 85.47398563 90.00000000 73.18143178 1.00000000]
[1112.49999808 283.66332661 85.47398563 73.18143178 56.36286356 1.00000000]
[1112.49999808 283.66332661 85.47398563 56.36286356 39.54429534 1.00000000]
[1112.49999808 283.66332661 85.47398563 39.54429534 22.72572712 1.00000000]
[1112.49999808 283.66332661 85.47398563 22.72572712 5.90715890 1.00000000]
[1112.49999808 283.66332661 85.47398563 5.90715890 349.08859068 1.00000000]
[1112.49999808 283.66332661 85.47398563 349.08859068 332.27002246 1.00000000]
[1112.49999808 283.66332661 85.47398563 332.27002246 315.45145424 1.00000000]
[1112.49999808 283.66332661 85.47398563 315.45145424 298.63288602 1.00000000]
[1112.49999808 283.66332661 85.47398563 298.63288602 281.81431780 1.00000000]
[]
[]
[]
[]
] def
/pairs [
[20 42]
[21 41]
[22 40]
[23 38]
[24 37]
[26 35]
[27 34]
[44 127]
[45 126]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[54 117]
[55 116]
[56 115]
[57 114]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[65 106]
[66 105]
[67 104]
[69 102]
[70 101]
[71 100]
[72 99]
[73 98]
[74 97]
[75 96]
[76 95]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[143 171]
[144 170]
[145 169]
[146 168]
[147 167]
] def

init

% Start Annotations
47 81 12 1.00 0.60 0.67 omark 90 124 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
