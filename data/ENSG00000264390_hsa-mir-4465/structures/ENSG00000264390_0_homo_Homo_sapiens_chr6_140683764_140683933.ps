%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUCAAGUUCGUUUCUUAGACAGCCCUGCUCUGGUCUAGCCCAAGCUCUCAUGUGUCCCCUGGCACGCUAUUUGAGGUUUACUAUGGAACCUCAAGUAGUCUGACCAGGGGACACAUGAGAGCUUUUCAUUGAUUGCAUUCCCACAAGCAUAUUUCCGUCACAAGUGGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[100.00000000 275.00000000]
[82.74304962 293.08859253]
[80.36176300 317.97494507]
[93.87529755 339.00787354]
[117.50000000 347.18548584]
[141.12469482 339.00787354]
[154.63824463 317.97494507]
[152.25695801 293.08859253]
[135.00000000 275.00000000]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[156.65063477 212.50000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[235.00000000 125.00000000]
[235.00000000 150.00000000]
[220.92854309 170.66383362]
[225.87762451 195.16906738]
[246.86564636 208.75227356]
[271.24813843 203.23010254]
[294.50976562 212.38963318]
[317.77136230 221.54914856]
[341.03298950 230.70867920]
[342.90017700 255.63885498]
[353.73825073 278.16741943]
[372.05163574 295.18563843]
[395.31326294 304.34515381]
[420.31323242 304.38204956]
[443.60177612 295.29122925]
[461.96530151 278.32711792]
[485.22692871 287.48663330]
[508.48855591 296.64614868]
[531.75018311 305.80569458]
[555.01177979 314.96520996]
[578.27343750 324.12472534]
[601.53503418 333.28424072]
[624.79669189 342.44378662]
[648.05828857 351.60330200]
[671.31994629 360.76281738]
[694.58154297 369.92233276]
[717.84313965 379.08184814]
[741.10479736 388.24139404]
[764.36639404 397.40090942]
[787.62805176 406.56042480]
[810.88964844 415.71994019]
[834.15130615 424.87948608]
[857.41290283 434.03900146]
[880.67456055 443.19851685]
[903.93615723 452.35803223]
[927.19781494 461.51757812]
[950.45941162 470.67709351]
[973.72100830 479.83660889]
[990.60052490 498.27792358]
[1015.52185059 496.29614258]
[1038.78344727 505.45568848]
[1062.04516602 514.61517334]
[1085.30676270 523.77471924]
[1108.56835938 532.93426514]
[1131.82995605 542.09375000]
[1155.09167480 551.25329590]
[1178.35327148 560.41284180]
[1201.61486816 569.57232666]
[1224.87646484 578.73187256]
[1248.13806152 587.89135742]
[1271.39978027 597.05090332]
[1294.66137695 606.21044922]
[1317.92297363 615.36993408]
[1330.60131836 636.91662598]
[1354.52807617 644.16284180]
[1377.03051758 633.27056885]
[1386.19006348 610.00891113]
[1377.15527344 586.69854736]
[1354.71166992 575.68579102]
[1330.74633789 582.80364990]
[1307.48474121 573.64416504]
[1284.22302246 564.48461914]
[1260.96142578 555.32513428]
[1237.69982910 546.16558838]
[1214.43823242 537.00604248]
[1191.17651367 527.84655762]
[1167.91491699 518.68701172]
[1144.65332031 509.52749634]
[1121.39172363 500.36798096]
[1098.13012695 491.20843506]
[1074.86840820 482.04891968]
[1051.60681152 472.88940430]
[1028.34521484 463.72988892]
[1011.46569824 445.28857422]
[986.54437256 447.27032471]
[963.28271484 438.11080933]
[959.58428955 413.38589478]
[940.02111816 428.95129395]
[916.75952148 419.79177856]
[893.49786377 410.63223267]
[870.23626709 401.47271729]
[846.97460938 392.31320190]
[823.71301270 383.15368652]
[800.45135498 373.99417114]
[777.18975830 364.83462524]
[753.92810059 355.67510986]
[730.66650391 346.51559448]
[707.40490723 337.35607910]
[684.14324951 328.19653320]
[660.88165283 319.03701782]
[637.61999512 309.87750244]
[614.35839844 300.71798706]
[591.09674072 291.55844116]
[567.83514404 282.39892578]
[544.57348633 273.23941040]
[521.31188965 264.07989502]
[498.05026245 254.92036438]
[474.78863525 245.76083374]
[472.92144775 220.83067322]
[462.08337402 198.30209351]
[443.77001953 181.28387451]
[420.50839233 172.12434387]
[395.50842285 172.08746338]
[372.21984863 181.17829895]
[353.85632324 198.14239502]
[330.59469604 188.98287964]
[307.33306885 179.82334900]
[284.07147217 170.66383362]
[270.00000000 150.00000000]
[270.00000000 125.00000000]
[270.00000000 100.00000000]
[470.00000000 100.00000000]
[670.00000000 100.00000000]
[870.00000000 100.00000000]
[870.00000000 125.00000000]
[870.00000000 150.00000000]
[870.00000000 175.00000000]
[870.00000000 200.00000000]
[846.54125977 208.64212036]
[826.58642578 223.70217896]
[811.84265137 243.89183044]
[803.57128906 267.48388672]
[802.47985840 292.46005249]
[808.66180420 316.68365479]
[821.58819580 338.08242798]
[840.15325928 354.82574463]
[862.76879883 365.48123169]
[887.50000000 369.13729858]
[912.23120117 365.48123169]
[934.84674072 354.82574463]
[953.41180420 338.08242798]
[966.33819580 316.68365479]
[972.52014160 292.46005249]
[971.42871094 267.48388672]
[963.15734863 243.89183044]
[948.41357422 223.70217896]
[928.45874023 208.64212036]
[905.00000000 200.00000000]
[905.00000000 175.00000000]
[905.00000000 150.00000000]
[905.00000000 125.00000000]
[905.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[117.50000000 308.97147640 38.21401848 242.74528147 204.55896110 1.00000000]
[117.50000000 308.97147640 38.21401848 204.55896110 166.37264073 1.00000000]
[117.50000000 308.97147640 38.21401848 166.37264073 128.18632037 1.00000000]
[117.50000000 308.97147640 38.21401848 128.18632037 90.00000000 1.00000000]
[117.50000000 308.97147640 38.21401848 90.00000000 51.81367963 1.00000000]
[117.50000000 308.97147640 38.21401848 51.81367963 13.62735927 1.00000000]
[117.50000000 308.97147640 38.21401848 13.62735927 335.44103890 1.00000000]
[117.50000000 308.97147640 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[252.49999880 177.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[252.49999880 177.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[252.49999880 177.04002271 32.20889362 145.74629528 100.07468899 1.00000000]
[252.49999880 177.04002271 32.20889362 100.07468899 54.40308270 1.00000000]
[]
[]
[]
[407.91081850 238.23475777 67.29996112 186.42075616 165.01270885 1.00000000]
[407.91081850 238.23475777 67.29996112 165.01270885 143.60466153 1.00000000]
[407.91081850 238.23475777 67.29996112 143.60466153 122.19661422 1.00000000]
[407.91081850 238.23475777 67.29996112 122.19661422 100.78856691 1.00000000]
[407.91081850 238.23475777 67.29996112 100.78856691 79.38051960 1.00000000]
[407.91081850 238.23475777 67.29996112 79.38051960 57.97247229 1.00000000]
[407.91081850 238.23475777 67.29996112 57.97247229 36.56442497 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1001.03311801 471.78324588 28.47466729 163.57108247 111.49259054 1.00000000]
[1001.03311801 471.78324588 28.47466729 111.49259054 59.41409862 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1351.83879026 609.91687236 34.35139098 170.86600183 128.18788431 1.00000000]
[1351.83879026 609.91687236 34.35139098 128.18788431 85.50976679 1.00000000]
[1351.83879026 609.91687236 34.35139098 85.50976679 42.83164928 1.00000000]
[1351.83879026 609.91687236 34.35139098 42.83164928 0.15353176 1.00000000]
[1351.83879026 609.91687236 34.35139098 0.15353176 317.47541424 1.00000000]
[1351.83879026 609.91687236 34.35139098 317.47541424 274.79729673 1.00000000]
[1351.83879026 609.91687236 34.35139098 274.79729673 232.11917921 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1001.03311801 471.78324588 28.47466729 343.57108242 291.49259049 1.00000000]
[1001.03311801 471.78324588 28.47466729 291.49259049 239.41409866 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[407.91081850 238.23475777 67.29996112 6.42075616 345.01270885 1.00000000]
[407.91081850 238.23475777 67.29996112 345.01270885 323.60466153 1.00000000]
[407.91081850 238.23475777 67.29996112 323.60466153 302.19661422 1.00000000]
[407.91081850 238.23475777 67.29996112 302.19661422 280.78856691 1.00000000]
[407.91081850 238.23475777 67.29996112 280.78856691 259.38051960 1.00000000]
[407.91081850 238.23475777 67.29996112 259.38051960 237.97247229 1.00000000]
[407.91081850 238.23475777 67.29996112 237.97247229 216.56442497 1.00000000]
[]
[]
[]
[252.49999880 177.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[887.49999969 283.66332661 85.47398563 258.18568220 241.36711398 1.00000000]
[887.49999969 283.66332661 85.47398563 241.36711398 224.54854576 1.00000000]
[887.49999969 283.66332661 85.47398563 224.54854576 207.72997754 1.00000000]
[887.49999969 283.66332661 85.47398563 207.72997754 190.91140932 1.00000000]
[887.49999969 283.66332661 85.47398563 190.91140932 174.09284110 1.00000000]
[887.49999969 283.66332661 85.47398563 174.09284110 157.27427288 1.00000000]
[887.49999969 283.66332661 85.47398563 157.27427288 140.45570466 1.00000000]
[887.49999969 283.66332661 85.47398563 140.45570466 123.63713644 1.00000000]
[887.49999969 283.66332661 85.47398563 123.63713644 106.81856822 1.00000000]
[887.49999969 283.66332661 85.47398563 106.81856822 90.00000000 1.00000000]
[887.49999969 283.66332661 85.47398563 90.00000000 73.18143178 1.00000000]
[887.49999969 283.66332661 85.47398563 73.18143178 56.36286356 1.00000000]
[887.49999969 283.66332661 85.47398563 56.36286356 39.54429534 1.00000000]
[887.49999969 283.66332661 85.47398563 39.54429534 22.72572712 1.00000000]
[887.49999969 283.66332661 85.47398563 22.72572712 5.90715890 1.00000000]
[887.49999969 283.66332661 85.47398563 5.90715890 349.08859068 1.00000000]
[887.49999969 283.66332661 85.47398563 349.08859068 332.27002246 1.00000000]
[887.49999969 283.66332661 85.47398563 332.27002246 315.45145424 1.00000000]
[887.49999969 283.66332661 85.47398563 315.45145424 298.63288602 1.00000000]
[887.49999969 283.66332661 85.47398563 298.63288602 281.81431780 1.00000000]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 18]
[7 17]
[8 16]
[28 139]
[29 138]
[30 137]
[34 136]
[35 135]
[36 134]
[37 133]
[44 126]
[45 125]
[46 124]
[47 123]
[48 122]
[49 121]
[50 120]
[51 119]
[52 118]
[53 117]
[54 116]
[55 115]
[56 114]
[57 113]
[58 112]
[59 111]
[60 110]
[61 109]
[62 108]
[63 107]
[64 106]
[65 104]
[66 103]
[68 101]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[142 170]
[143 169]
[144 168]
[145 167]
[146 166]
] def

init

% Start Annotations
47 80 12 1.00 0.60 0.67 omark 89 123 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
