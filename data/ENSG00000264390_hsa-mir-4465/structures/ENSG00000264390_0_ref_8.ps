%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUCACGUUCAUGUCUUAGGCAGCCCUGCUCUGGUCUAGCCCAAGCUCUUUACUAUGGAACCUCAAAUAGCAUGACCAGGGAACACAUGAGAGUUUUUCAUUGAUUGCAUUCCCACAAGCAUAUUUCCAUCACAAGUGGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[225.00000000 125.00000000]
[214.02532959 147.46234131]
[225.00000000 169.92468262]
[225.00000000 194.92468262]
[225.00000000 219.92468262]
[225.00000000 244.92468262]
[225.00000000 269.92468262]
[225.00000000 294.92468262]
[225.00000000 319.92468262]
[204.64808655 334.44360352]
[194.04280090 357.08270264]
[195.91493225 382.01248169]
[176.70741272 398.01470947]
[157.49989319 414.01693726]
[138.29238892 430.01919556]
[114.57821655 437.93359375]
[107.74066925 461.98040771]
[123.74290466 481.18789673]
[148.62907410 478.80493164]
[160.69551086 456.90969849]
[179.90301514 440.90747070]
[199.11053467 424.90524292]
[218.31805420 408.90301514]
[242.50000000 415.24600220]
[251.38017273 438.61569214]
[260.26034546 461.98538208]
[269.14050293 485.35507202]
[278.02069092 508.72476196]
[286.90084839 532.09448242]
[295.78103638 555.46417236]
[304.66119385 578.83386230]
[296.18777466 602.35406494]
[305.06796265 625.72375488]
[327.02261353 637.68176270]
[335.90280151 661.05145264]
[319.24606323 679.69421387]
[295.02777100 673.49151611]
[270.80944824 667.28887939]
[246.59114075 661.08618164]
[222.37281799 654.88348389]
[209.13139343 633.67816162]
[185.61399841 625.19683838]
[161.88591003 633.06945801]
[148.10250854 653.92651367]
[150.16297913 678.84149170]
[167.18544006 697.15087891]
[191.88446045 701.01855469]
[213.68905640 688.78912354]
[237.90736389 694.99182129]
[244.64483643 719.06683350]
[262.12567139 701.19451904]
[286.34399414 707.39715576]
[310.56231689 713.59985352]
[316.20675659 737.95434570]
[330.83319092 758.22912598]
[352.16412354 771.26721191]
[376.87808228 775.03833008]
[401.12670898 768.95532227]
[421.13427734 753.96539307]
[433.78530884 732.40264893]
[437.10986328 707.62469482]
[430.59030151 683.48980713]
[415.24179077 663.75598145]
[393.45428467 651.49609375]
[368.62036133 648.61920166]
[359.74017334 625.24951172]
[368.21359253 601.72924805]
[359.33343506 578.35955811]
[337.37878418 566.40161133]
[328.49859619 543.03192139]
[319.61843872 519.66223145]
[310.73825073 496.29254150]
[301.85809326 472.92282104]
[292.97790527 449.55313110]
[284.09774780 426.18344116]
[275.21755981 402.81375122]
[289.08508301 382.01248169]
[290.95721436 357.08270264]
[280.35192871 334.44360352]
[260.00000000 319.92468262]
[260.00000000 294.92468262]
[260.00000000 269.92468262]
[260.00000000 244.92468262]
[260.00000000 219.92468262]
[260.00000000 194.92468262]
[260.00000000 169.92468262]
[270.97467041 147.46234131]
[260.00000000 125.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[710.00000000 125.00000000]
[710.00000000 150.00000000]
[710.00000000 175.00000000]
[710.00000000 200.00000000]
[686.54125977 208.64212036]
[666.58642578 223.70217896]
[651.84265137 243.89183044]
[643.57128906 267.48388672]
[642.47985840 292.46005249]
[648.66180420 316.68365479]
[661.58819580 338.08242798]
[680.15325928 354.82574463]
[702.76879883 365.48123169]
[727.50000000 369.13729858]
[752.23120117 365.48123169]
[774.84674072 354.82574463]
[793.41180420 338.08242798]
[806.33819580 316.68365479]
[812.52014160 292.46005249]
[811.42871094 267.48388672]
[803.15734863 243.89183044]
[788.41357422 223.70217896]
[768.45874023 208.64212036]
[745.00000000 200.00000000]
[745.00000000 175.00000000]
[745.00000000 150.00000000]
[745.00000000 125.00000000]
[745.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[242.49999988 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[242.49999988 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[]
[]
[]
[242.50000018 365.97892760 49.26706700 249.19387728 219.79846928 1.00000000]
[242.50000018 365.97892760 49.26706700 219.79846928 190.40306129 1.00000000]
[242.50000018 365.97892760 49.26706700 190.40306129 161.00765329 1.00000000]
[]
[]
[]
[133.92952829 456.43152085 26.77024824 279.37956361 223.70835042 1.00000000]
[133.92952829 456.43152085 26.77024824 223.70835042 168.03713722 1.00000000]
[133.92952829 456.43152085 26.77024824 168.03713722 112.36592402 1.00000000]
[133.92952829 456.43152085 26.77024824 112.36592402 56.69471082 1.00000000]
[133.92952829 456.43152085 26.77024824 56.69471082 1.02349763 1.00000000]
[]
[]
[]
[242.50000018 365.97892760 49.26706700 119.39540795 89.99999995 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[332.20069288 602.04167418 36.01426010 220.12120106 179.50298521 1.00000000]
[332.20069288 602.04167418 36.01426010 179.50298521 138.88476935 1.00000000]
[332.20069288 602.04167418 36.01426010 138.88476935 98.26655350 1.00000000]
[]
[373.89000533 711.75424500 63.35458712 233.15896151 210.40047405 1.00000000]
[]
[]
[]
[]
[185.12166965 663.40770877 38.21401848 347.11083975 308.92451938 1.00000000]
[185.12166965 663.40770877 38.21401848 308.92451938 270.73819901 1.00000000]
[185.12166965 663.40770877 38.21401848 270.73819901 232.55187865 1.00000000]
[185.12166965 663.40770877 38.21401848 232.55187865 194.36555828 1.00000000]
[185.12166965 663.40770877 38.21401848 194.36555828 156.17923792 1.00000000]
[185.12166965 663.40770877 38.21401848 156.17923792 117.99291755 1.00000000]
[185.12166965 663.40770877 38.21401848 117.99291755 79.80659718 1.00000000]
[185.12166965 663.40770877 38.21401848 79.80659718 41.62027682 1.00000000]
[]
[]
[]
[]
[]
[373.89000533 711.75424500 63.35458712 178.33064251 155.57215505 1.00000000]
[373.89000533 711.75424500 63.35458712 155.57215505 132.81366760 1.00000000]
[373.89000533 711.75424500 63.35458712 132.81366760 110.05518015 1.00000000]
[373.89000533 711.75424500 63.35458712 110.05518015 87.29669269 1.00000000]
[373.89000533 711.75424500 63.35458712 87.29669269 64.53820524 1.00000000]
[373.89000533 711.75424500 63.35458712 64.53820524 41.77971778 1.00000000]
[373.89000533 711.75424500 63.35458712 41.77971778 19.02123033 1.00000000]
[373.89000533 711.75424500 63.35458712 19.02123033 356.26274287 1.00000000]
[373.89000533 711.75424500 63.35458712 356.26274287 333.50425542 1.00000000]
[373.89000533 711.75424500 63.35458712 333.50425542 310.74576796 1.00000000]
[373.89000533 711.75424500 63.35458712 310.74576796 287.98728051 1.00000000]
[373.89000533 711.75424500 63.35458712 287.98728051 265.22879305 1.00000000]
[]
[332.20069288 602.04167418 36.01426010 40.12120106 359.50298521 1.00000000]
[332.20069288 602.04167418 36.01426010 359.50298521 318.88476935 1.00000000]
[332.20069288 602.04167418 36.01426010 318.88476935 278.26655350 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[242.50000018 365.97892760 49.26706700 48.38775461 18.99234661 1.00000000]
[242.50000018 365.97892760 49.26706700 18.99234661 349.59693862 1.00000000]
[242.50000018 365.97892760 49.26706700 349.59693862 320.20153062 1.00000000]
[242.50000018 365.97892760 49.26706700 320.20153062 290.80612262 1.00000000]
[]
[]
[]
[]
[]
[]
[242.49999988 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[242.49999988 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[727.50000022 283.66332661 85.47398563 258.18568220 241.36711398 1.00000000]
[727.50000022 283.66332661 85.47398563 241.36711398 224.54854576 1.00000000]
[727.50000022 283.66332661 85.47398563 224.54854576 207.72997754 1.00000000]
[727.50000022 283.66332661 85.47398563 207.72997754 190.91140932 1.00000000]
[727.50000022 283.66332661 85.47398563 190.91140932 174.09284110 1.00000000]
[727.50000022 283.66332661 85.47398563 174.09284110 157.27427288 1.00000000]
[727.50000022 283.66332661 85.47398563 157.27427288 140.45570466 1.00000000]
[727.50000022 283.66332661 85.47398563 140.45570466 123.63713644 1.00000000]
[727.50000022 283.66332661 85.47398563 123.63713644 106.81856822 1.00000000]
[727.50000022 283.66332661 85.47398563 106.81856822 90.00000000 1.00000000]
[727.50000022 283.66332661 85.47398563 90.00000000 73.18143178 1.00000000]
[727.50000022 283.66332661 85.47398563 73.18143178 56.36286356 1.00000000]
[727.50000022 283.66332661 85.47398563 56.36286356 39.54429534 1.00000000]
[727.50000022 283.66332661 85.47398563 39.54429534 22.72572712 1.00000000]
[727.50000022 283.66332661 85.47398563 22.72572712 5.90715890 1.00000000]
[727.50000022 283.66332661 85.47398563 5.90715890 349.08859068 1.00000000]
[727.50000022 283.66332661 85.47398563 349.08859068 332.27002246 1.00000000]
[727.50000022 283.66332661 85.47398563 332.27002246 315.45145424 1.00000000]
[727.50000022 283.66332661 85.47398563 315.45145424 298.63288602 1.00000000]
[727.50000022 283.66332661 85.47398563 298.63288602 281.81431780 1.00000000]
[]
[]
[]
[]
] def
/pairs [
[6 95]
[7 94]
[9 92]
[10 91]
[11 90]
[12 89]
[13 88]
[14 87]
[15 86]
[18 29]
[19 28]
[20 27]
[21 26]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[37 75]
[40 72]
[41 71]
[42 59]
[43 58]
[44 57]
[45 55]
[46 54]
[113 141]
[114 140]
[115 139]
[116 138]
[117 137]
] def

init

% Start Annotations
47 51 12 1.00 0.60 0.67 omark 60 94 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
