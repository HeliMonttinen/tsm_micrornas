%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUCUCUCCCUGAGCCUGCCUGCCCGCCCACUCUCUUGAGUGYGAMAUKUAUUAAUAUGGAAGRGAGAAGAGCUUUAAUGAUUGGAGUCAUUUUCAGAGCAKURAACCUCUUCUCCCUUCGAUAUUAAUACAUUUCUCGGCUACUAGGCCAACUCACAGCACAGCUGGCCCCAAAGCAG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[375.00000000 125.00000000]
[375.00000000 150.00000000]
[375.00000000 175.00000000]
[355.90136719 191.13203430]
[348.75732422 215.08955383]
[355.90136719 239.04705811]
[375.00000000 255.17909241]
[375.00000000 280.17910767]
[375.00000000 305.17910767]
[375.00000000 330.17910767]
[375.00000000 355.17910767]
[355.90136719 371.31112671]
[348.75732422 395.26864624]
[355.90136719 419.22616577]
[375.00000000 435.35818481]
[375.00000000 460.35818481]
[375.00000000 485.35818481]
[356.55932617 502.23840332]
[331.65670776 500.03372192]
[306.75411987 497.82904053]
[281.85153198 495.62435913]
[256.94894409 493.41967773]
[234.55647278 482.30310059]
[212.74822998 494.52603149]
[210.54354858 519.42864990]
[229.86517334 535.29290771]
[253.86236572 528.28332520]
[278.76498413 530.48797607]
[303.66757202 532.69268799]
[328.57015991 534.89733887]
[353.47274780 537.10205078]
[368.66098022 556.95947266]
[392.50000000 564.48950195]
[403.04199219 587.15808105]
[402.56265259 612.15350342]
[421.98580933 627.89331055]
[432.52777100 650.56195068]
[432.04846191 675.55737305]
[451.47158813 691.29718018]
[462.01358032 713.96582031]
[472.55557251 736.63439941]
[483.09756470 759.30303955]
[493.63952637 781.97167969]
[504.18151855 804.64031982]
[514.72351074 827.30889893]
[525.26550293 849.97753906]
[535.80749512 872.64617920]
[535.32818604 897.64160156]
[554.75128174 913.38140869]
[565.29327393 936.05004883]
[575.83526611 958.71862793]
[586.37725830 981.38726807]
[585.89794922 1006.38269043]
[605.32104492 1022.12249756]
[615.86303711 1044.79113770]
[626.40502930 1067.45971680]
[636.94702148 1090.12841797]
[647.48901367 1112.79699707]
[658.03100586 1135.46557617]
[668.57299805 1158.13427734]
[655.62780762 1179.52172852]
[630.65533447 1180.69445801]
[605.68286133 1181.86718750]
[580.71038818 1183.04003906]
[555.73791504 1184.21276855]
[534.43670654 1171.12622070]
[524.19604492 1148.31982422]
[513.95538330 1125.51354980]
[503.71472168 1102.70715332]
[493.47406006 1079.90087891]
[483.23339844 1057.09448242]
[481.99514771 1032.12524414]
[460.67684937 1019.06652832]
[437.87051392 1029.30712891]
[433.46597290 1053.91613770]
[451.30450439 1071.43139648]
[461.54519653 1094.23779297]
[471.78585815 1117.04406738]
[482.02651978 1139.85046387]
[492.26718140 1162.65673828]
[502.50784302 1185.46313477]
[498.13555908 1210.07775879]
[512.68841553 1230.40551758]
[537.39880371 1234.19958496]
[557.37976074 1219.17419434]
[582.35229492 1218.00146484]
[607.32476807 1216.82873535]
[632.29724121 1215.65588379]
[657.26971436 1214.48315430]
[672.16229248 1234.56323242]
[694.75048828 1245.27648926]
[719.72302246 1244.10363770]
[741.20776367 1231.32067871]
[754.15295410 1209.93322754]
[755.51464844 1184.97033691]
[744.97265625 1162.30175781]
[725.00579834 1147.25756836]
[700.30908203 1143.37548828]
[689.76708984 1120.70678711]
[679.22509766 1098.03820801]
[668.68310547 1075.36962891]
[658.14111328 1052.70092773]
[647.59912109 1030.03234863]
[637.05712891 1007.36370850]
[637.53643799 982.36828613]
[618.11334229 966.62847900]
[607.57135010 943.95983887]
[597.02935791 921.29125977]
[586.48736572 898.62261963]
[586.96667480 873.62719727]
[567.54357910 857.88739014]
[557.00158691 835.21875000]
[546.45959473 812.55017090]
[535.91760254 789.88153076]
[525.37561035 767.21289062]
[514.83361816 744.54425049]
[504.29165649 721.87567139]
[493.74966431 699.20703125]
[483.20767212 676.53839111]
[483.68698120 651.54296875]
[464.26385498 635.80316162]
[453.72186279 613.13452148]
[454.20120239 588.13916016]
[434.77804565 572.39935303]
[424.23608398 549.73071289]
[433.83901978 526.64862061]
[428.44067383 502.23840332]
[410.00000000 485.35818481]
[410.00000000 460.35818481]
[410.00000000 435.35818481]
[429.09863281 419.22616577]
[436.24267578 395.26864624]
[429.09863281 371.31112671]
[410.00000000 355.17910767]
[410.00000000 330.17910767]
[410.00000000 305.17910767]
[410.00000000 280.17910767]
[410.00000000 255.17909241]
[429.09863281 239.04705811]
[436.24267578 215.08955383]
[429.09863281 191.13203430]
[410.00000000 175.00000000]
[410.00000000 150.00000000]
[410.00000000 125.00000000]
[410.00000000 100.00000000]
[460.00000000 100.00000000]
[460.00000000 125.00000000]
[460.00000000 150.00000000]
[460.00000000 175.00000000]
[456.46456909 199.74874878]
[477.50000000 213.25840759]
[498.53543091 199.74874878]
[495.00000000 175.00000000]
[495.00000000 150.00000000]
[495.00000000 125.00000000]
[495.00000000 100.00000000]
[545.00000000 100.00000000]
[545.00000000 125.00000000]
[529.59667969 144.69104004]
[531.62066650 169.60896301]
[550.00000000 186.55593872]
[575.00000000 186.55593872]
[593.37933350 169.60896301]
[595.40332031 144.69104004]
[580.00000000 125.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
[630.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[392.49999701 215.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[392.49999701 215.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[392.49999701 215.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[392.49999701 215.08954835 43.74267810 146.79118209 113.58236418 1.00000000]
[]
[]
[]
[]
[392.49999701 395.26864506 43.74267810 246.41763582 213.20881791 1.00000000]
[392.49999701 395.26864506 43.74267810 213.20881791 180.00000000 1.00000000]
[392.49999701 395.26864506 43.74267810 180.00000000 146.79118209 1.00000000]
[392.49999701 395.26864506 43.74267810 146.79118209 113.58236418 1.00000000]
[]
[]
[392.49999701 522.98876142 41.50071865 245.05933666 209.99999999 1.00000000]
[]
[]
[]
[]
[235.22634139 509.06496215 26.77024824 324.23736964 268.56615644 1.00000000]
[235.22634139 509.06496215 26.77024824 268.56615644 212.89494324 1.00000000]
[235.22634139 509.06496215 26.77024824 212.89494324 157.22373005 1.00000000]
[235.22634139 509.06496215 26.77024824 157.22373005 101.55251685 1.00000000]
[235.22634139 509.06496215 26.77024824 101.55251685 45.88130365 1.00000000]
[]
[]
[]
[]
[392.49999701 522.98876142 41.50071865 160.11867330 125.05933663 1.00000000]
[392.49999701 522.98876142 41.50071865 125.05933663 89.99999997 1.00000000]
[]
[428.38192688 600.14632714 28.47466729 207.13782852 155.05933660 1.00000000]
[428.38192688 600.14632714 28.47466729 155.05933660 102.98084467 1.00000000]
[]
[457.86772644 663.55017751 28.47466729 207.13782848 155.05933655 1.00000000]
[457.86772644 663.55017751 28.47466729 155.05933655 102.98084462 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[561.14742925 885.63439795 28.47466729 207.13782843 155.05933650 1.00000000]
[561.14742925 885.63439795 28.47466729 155.05933650 102.98084458 1.00000000]
[]
[]
[]
[611.71720129 994.37549685 28.47466729 207.13782838 155.05933646 1.00000000]
[611.71720129 994.37549685 28.47466729 155.05933646 102.98084453 1.00000000]
[]
[]
[]
[]
[]
[]
[704.89037479 1194.72746292 51.55595110 225.21675654 197.15378850 1.00000000]
[]
[]
[]
[]
[529.54859265 1202.96199390 32.20889362 324.40071647 278.72911018 1.00000000]
[]
[]
[]
[]
[]
[458.97063824 1045.78234235 26.77024824 24.99665103 329.32543784 1.00000000]
[458.97063824 1045.78234235 26.77024824 329.32543784 273.65422464 1.00000000]
[458.97063824 1045.78234235 26.77024824 273.65422464 217.98301144 1.00000000]
[458.97063824 1045.78234235 26.77024824 217.98301144 162.31179824 1.00000000]
[458.97063824 1045.78234235 26.77024824 162.31179824 106.64058505 1.00000000]
[]
[]
[]
[]
[]
[529.54859265 1202.96199390 32.20889362 212.90812590 167.23651961 1.00000000]
[529.54859265 1202.96199390 32.20889362 167.23651961 121.56491332 1.00000000]
[529.54859265 1202.96199390 32.20889362 121.56491332 75.89330703 1.00000000]
[529.54859265 1202.96199390 32.20889362 75.89330703 30.22170074 1.00000000]
[]
[]
[]
[]
[704.89037479 1194.72746292 51.55595110 157.46862871 129.40566067 1.00000000]
[704.89037479 1194.72746292 51.55595110 129.40566067 101.34269263 1.00000000]
[704.89037479 1194.72746292 51.55595110 101.34269263 73.27972458 1.00000000]
[704.89037479 1194.72746292 51.55595110 73.27972458 45.21675654 1.00000000]
[704.89037479 1194.72746292 51.55595110 45.21675654 17.15378850 1.00000000]
[704.89037479 1194.72746292 51.55595110 17.15378850 349.09082045 1.00000000]
[704.89037479 1194.72746292 51.55595110 349.09082045 321.02785241 1.00000000]
[704.89037479 1194.72746292 51.55595110 321.02785241 292.96488437 1.00000000]
[704.89037479 1194.72746292 51.55595110 292.96488437 264.90191632 1.00000000]
[]
[]
[]
[]
[]
[]
[611.71720129 994.37549685 28.47466729 27.13782834 335.05933641 1.00000000]
[611.71720129 994.37549685 28.47466729 335.05933641 282.98084458 1.00000000]
[]
[]
[]
[561.14742925 885.63439795 28.47466729 27.13782838 335.05933646 1.00000000]
[561.14742925 885.63439795 28.47466729 335.05933646 282.98084462 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[457.86772644 663.55017751 28.47466729 27.13782843 335.05933650 1.00000000]
[457.86772644 663.55017751 28.47466729 335.05933650 282.98084467 1.00000000]
[]
[428.38192688 600.14632714 28.47466729 27.13782848 335.05933655 1.00000000]
[428.38192688 600.14632714 28.47466729 335.05933655 282.98084472 1.00000000]
[]
[392.49999701 522.98876142 41.50071865 40.11867328 5.05933661 1.00000000]
[392.49999701 522.98876142 41.50071865 5.05933661 329.99999994 1.00000000]
[392.49999701 522.98876142 41.50071865 329.99999994 294.94066334 1.00000000]
[]
[]
[392.49999701 395.26864506 43.74267810 66.41763582 33.20881791 1.00000000]
[392.49999701 395.26864506 43.74267810 33.20881791 360.00000000 1.00000000]
[392.49999701 395.26864506 43.74267810 360.00000000 326.79118209 1.00000000]
[392.49999701 395.26864506 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[392.49999701 215.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[392.49999701 215.08954835 43.74267810 33.20881791 360.00000000 1.00000000]
[392.49999701 215.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[392.49999701 215.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[477.49999568 190.12681945 23.13159456 220.83979705 155.41989853 1.00000000]
[477.49999568 190.12681945 23.13159456 155.41989853 90.00000000 1.00000000]
[477.49999568 190.12681945 23.13159456 90.00000000 24.58010147 1.00000000]
[477.49999568 190.12681945 23.13159456 24.58010147 319.16020295 1.00000000]
[]
[]
[]
[]
[]
[562.49999540 154.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[562.49999540 154.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[562.49999540 154.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[562.49999540 154.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[562.49999540 154.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[562.49999540 154.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[562.49999540 154.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
] def
/pairs [
[12 157]
[13 156]
[14 155]
[15 154]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[27 142]
[28 141]
[29 140]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[45 137]
[46 136]
[48 134]
[49 133]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[61 121]
[62 120]
[63 119]
[64 118]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
[72 110]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[158 168]
[159 167]
[160 166]
[161 165]
[169 178]
[170 177]
] def

init

% Start Annotations
45 81 12 1.00 0.60 0.67 omark 101 137 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
