%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCAGCAUGAAGCACUCCAAAUAGAGGACCAGGUCUUGAAAUGUUUGAGAAUCCGGUCCGUACAAACUCUGCAGUGUUGAAUGAUUGGUGAGUUUGUUUGCUCAUUGAUUGAAUCAUGUGCCUAAUAUAGGCUGAACACUGUGCUGGGUAUAGAACAGAAAUCUUGGCCC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[175.00000000 200.00000000]
[175.00000000 225.00000000]
[175.00000000 250.00000000]
[158.72460938 268.97662354]
[158.72460938 293.97662354]
[175.00000000 312.95321655]
[175.00000000 337.95321655]
[175.00000000 362.95321655]
[175.00000000 387.95321655]
[175.00000000 412.95321655]
[175.00000000 437.95321655]
[164.02532959 460.41555786]
[175.00000000 482.87789917]
[175.00000000 507.87789917]
[151.62995911 516.75714111]
[131.95735168 532.18402100]
[117.76195526 552.76293945]
[110.32798767 576.63208008]
[110.32798767 601.63208008]
[117.76195526 625.50122070]
[131.95735168 646.08007812]
[117.76195526 666.65899658]
[103.56655884 687.23785400]
[89.37115479 707.81677246]
[75.17575073 728.39562988]
[50.25621414 726.39147949]
[60.98035049 748.97454834]
[46.78495026 769.55340576]
[24.99661636 781.81182861]
[0.03866123 783.26110840]
[-24.91929436 784.71044922]
[-49.87724686 786.15972900]
[-74.83520508 787.60906982]
[-99.79315948 789.05834961]
[-124.75111389 790.50769043]
[-149.66319275 788.41296387]
[-161.93066406 810.19616699]
[-147.22425842 830.41302490]
[-122.72207642 825.44879150]
[-97.76412201 823.99951172]
[-72.80616760 822.55017090]
[-47.84821701 821.10089111]
[-22.89026070 819.65155029]
[2.06769419 818.20227051]
[27.02564812 816.75292969]
[50.08643723 826.40698242]
[71.87477112 814.14855957]
[75.59539032 789.42700195]
[89.79079437 768.84808350]
[103.98619080 748.26922607]
[118.18159485 727.69030762]
[132.37699890 707.11145020]
[146.57240295 686.53253174]
[160.76780701 665.95367432]
[185.04675293 671.91455078]
[210.00000000 670.38623047]
[233.37004089 661.50695801]
[253.04264832 646.08007812]
[267.23803711 625.50122070]
[274.67202759 601.63208008]
[274.67202759 576.63208008]
[267.23803711 552.76293945]
[253.04264832 532.18402100]
[233.37004089 516.75714111]
[210.00000000 507.87789917]
[210.00000000 482.87789917]
[220.97467041 460.41555786]
[210.00000000 437.95321655]
[210.00000000 412.95321655]
[210.00000000 387.95321655]
[210.00000000 362.95321655]
[210.00000000 337.95321655]
[210.00000000 312.95321655]
[226.27539062 293.97662354]
[226.27539062 268.97662354]
[210.00000000 250.00000000]
[210.00000000 225.00000000]
[210.00000000 200.00000000]
[231.65063477 187.50000000]
[210.00000000 175.00000000]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[260.00000000 100.00000000]
[260.00000000 125.00000000]
[260.00000000 150.00000000]
[260.00000000 175.00000000]
[260.00000000 200.00000000]
[244.59664917 219.69104004]
[246.62066650 244.60896301]
[265.00000000 261.55593872]
[290.00000000 261.55593872]
[308.37933350 244.60896301]
[310.40335083 219.69104004]
[295.00000000 200.00000000]
[295.00000000 175.00000000]
[295.00000000 150.00000000]
[295.00000000 125.00000000]
[295.00000000 100.00000000]
[345.00000000 100.00000000]
[395.00000000 100.00000000]
[445.00000000 100.00000000]
[445.00000000 125.00000000]
[445.00000000 150.00000000]
[445.00000000 175.00000000]
[422.21896362 185.29678345]
[404.39715576 202.82913208]
[393.72875977 225.43853760]
[391.52719116 250.34141541]
[398.06353760 274.47180176]
[412.53308105 294.85888672]
[433.15432739 308.99267578]
[428.76834106 333.60491943]
[424.38235474 358.21719360]
[419.99636841 382.82943726]
[415.61038208 407.44168091]
[411.22439575 432.05395508]
[406.83837891 456.66619873]
[402.45239258 481.27847290]
[387.70715332 501.46701050]
[394.57083130 525.50634766]
[390.18484497 550.11859131]
[385.79885864 574.73089600]
[381.41287231 599.34313965]
[377.02688599 623.95538330]
[355.76281738 637.10223389]
[345.70184326 659.98840332]
[350.39129639 684.54467773]
[368.17770386 702.11291504]
[392.78997803 706.49890137]
[415.55023193 696.15618896]
[428.43362427 674.73150635]
[426.89770508 649.77874756]
[411.48403931 630.09576416]
[415.87002563 605.48352051]
[420.25601196 580.87127686]
[424.64199829 556.25903320]
[429.02798462 531.64672852]
[443.77322388 511.45819092]
[436.90954590 487.41885376]
[441.29556274 462.80657959]
[445.68154907 438.19433594]
[450.06753540 413.58209229]
[454.45352173 388.96981812]
[458.83950806 364.35757446]
[463.22549438 339.74530029]
[467.61148071 315.13305664]
[491.84567261 308.99267578]
[512.46691895 294.85888672]
[526.93646240 274.47180176]
[533.47277832 250.34141541]
[531.27124023 225.43853760]
[520.60284424 202.82913208]
[502.78103638 185.29678345]
[480.00000000 175.00000000]
[480.00000000 150.00000000]
[480.00000000 125.00000000]
[480.00000000 100.00000000]
[505.00000000 100.00000000]
[530.00000000 100.00000000]
[555.00000000 100.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
[630.00000000 100.00000000]
[655.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[192.49999964 281.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[192.49999964 281.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[192.49999964 281.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[]
[]
[]
[192.49999926 460.41555780 28.47466691 232.07849274 180.00000000 1.00000000]
[192.49999926 460.41555780 28.47466691 180.00000000 127.92150768 1.00000000]
[]
[192.49999975 589.13206452 83.11732544 257.84566319 240.54662691 1.00000000]
[192.49999975 589.13206452 83.11732544 240.54662691 223.24759064 1.00000000]
[192.49999975 589.13206452 83.11732544 223.24759064 205.94855436 1.00000000]
[192.49999975 589.13206452 83.11732544 205.94855436 188.64951809 1.00000000]
[192.49999975 589.13206452 83.11732544 188.64951809 171.35048182 1.00000000]
[192.49999975 589.13206452 83.11732544 171.35048182 154.05144554 1.00000000]
[192.49999975 589.13206452 83.11732544 154.05144554 136.75240927 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[48.43569410 797.98019526 28.47466729 266.67656440 214.59807248 1.00000000]
[]
[]
[]
[]
[]
[]
[-138.83797470 808.85518386 23.13159456 307.51636144 242.09646291 1.00000000]
[-138.83797470 808.85518386 23.13159456 242.09646291 176.67656438 1.00000000]
[-138.83797470 808.85518386 23.13159456 176.67656438 111.25666585 1.00000000]
[-138.83797470 808.85518386 23.13159456 111.25666585 45.83676733 1.00000000]
[]
[]
[]
[]
[]
[]
[48.43569410 797.98019526 28.47466729 138.75505628 86.67656436 1.00000000]
[48.43569410 797.98019526 28.47466729 86.67656436 34.59807243 1.00000000]
[48.43569410 797.98019526 28.47466729 34.59807243 342.51958060 1.00000000]
[]
[]
[]
[]
[]
[]
[192.49999975 589.13206452 83.11732544 112.44373574 95.14469946 1.00000000]
[192.49999975 589.13206452 83.11732544 95.14469946 77.84566319 1.00000000]
[192.49999975 589.13206452 83.11732544 77.84566319 60.54662691 1.00000000]
[192.49999975 589.13206452 83.11732544 60.54662691 43.24759064 1.00000000]
[192.49999975 589.13206452 83.11732544 43.24759064 25.94855436 1.00000000]
[192.49999975 589.13206452 83.11732544 25.94855436 8.64951809 1.00000000]
[192.49999975 589.13206452 83.11732544 8.64951809 351.35048182 1.00000000]
[192.49999975 589.13206452 83.11732544 351.35048182 334.05144554 1.00000000]
[192.49999975 589.13206452 83.11732544 334.05144554 316.75240927 1.00000000]
[192.49999975 589.13206452 83.11732544 316.75240927 299.45337299 1.00000000]
[192.49999975 589.13206452 83.11732544 299.45337299 282.15433672 1.00000000]
[]
[192.49999926 460.41555780 28.47466691 52.07849102 360.00000000 1.00000000]
[192.49999926 460.41555780 28.47466691 360.00000000 307.92150847 1.00000000]
[]
[]
[]
[]
[]
[192.49999964 281.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[192.49999964 281.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[192.49999964 281.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[277.49999868 229.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[277.49999868 229.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[277.49999868 229.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[277.49999868 229.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[277.49999868 229.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[277.49999868 229.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[277.49999868 229.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[462.49999866 244.06704109 71.24960467 255.78179526 235.57331653 1.00000000]
[462.49999866 244.06704109 71.24960467 235.57331653 215.36483779 1.00000000]
[462.49999866 244.06704109 71.24960467 215.36483779 195.15635905 1.00000000]
[462.49999866 244.06704109 71.24960467 195.15635905 174.94788032 1.00000000]
[462.49999866 244.06704109 71.24960467 174.94788032 154.73940158 1.00000000]
[462.49999866 244.06704109 71.24960467 154.73940158 134.53092284 1.00000000]
[462.49999866 244.06704109 71.24960467 134.53092284 114.32244411 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[415.74019883 506.46260435 28.47466729 242.18273127 190.10423934 1.00000000]
[415.74019883 506.46260435 28.47466729 190.10423934 138.02574742 1.00000000]
[]
[]
[]
[]
[387.53727128 664.72511022 42.10271758 255.54397443 221.00181107 1.00000000]
[387.53727128 664.72511022 42.10271758 221.00181107 186.45964772 1.00000000]
[387.53727128 664.72511022 42.10271758 186.45964772 151.91748436 1.00000000]
[387.53727128 664.72511022 42.10271758 151.91748436 117.37532100 1.00000000]
[387.53727128 664.72511022 42.10271758 117.37532100 82.83315764 1.00000000]
[387.53727128 664.72511022 42.10271758 82.83315764 48.29099428 1.00000000]
[387.53727128 664.72511022 42.10271758 48.29099428 13.74883093 1.00000000]
[387.53727128 664.72511022 42.10271758 13.74883093 339.20666757 1.00000000]
[387.53727128 664.72511022 42.10271758 339.20666757 304.66450421 1.00000000]
[]
[]
[]
[]
[415.74019883 506.46260435 28.47466729 62.18273122 10.10423930 1.00000000]
[415.74019883 506.46260435 28.47466729 10.10423930 318.02574747 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[462.49999866 244.06704109 71.24960467 85.88603463 65.67755589 1.00000000]
[462.49999866 244.06704109 71.24960467 65.67755589 45.46907716 1.00000000]
[462.49999866 244.06704109 71.24960467 45.46907716 25.26059842 1.00000000]
[462.49999866 244.06704109 71.24960467 25.26059842 5.05211968 1.00000000]
[462.49999866 244.06704109 71.24960467 5.05211968 344.84364095 1.00000000]
[462.49999866 244.06704109 71.24960467 344.84364095 324.63516221 1.00000000]
[462.49999866 244.06704109 71.24960467 324.63516221 304.42668347 1.00000000]
[462.49999866 244.06704109 71.24960467 304.42668347 284.21820474 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 90]
[5 89]
[6 88]
[7 87]
[8 85]
[9 84]
[10 83]
[13 80]
[14 79]
[15 78]
[16 77]
[17 76]
[18 75]
[20 73]
[21 72]
[28 61]
[29 60]
[30 59]
[31 58]
[32 57]
[34 56]
[35 55]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[42 46]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[109 165]
[110 164]
[111 163]
[112 162]
[119 154]
[120 153]
[121 152]
[122 151]
[123 150]
[124 149]
[125 148]
[126 147]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
] def

init

% Start Annotations
117 130 12 1.00 0.60 0.67 omark 43 78 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
