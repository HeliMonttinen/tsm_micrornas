%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCAGAAUGAAGCACUCCAAAUAGAGGACCAGGUCUUAAAAUGUUUGAGAAUCCGGUCCGUACAAACUCUGCAGUGUUGAAUGAUUGGUGAGUUUGUUUGCUCAUUGAUUGAAUCACUGCAGAGUUUGUACGGACCGGAUUCUCRAAUAUAGGCCGAACACUGUGCUGGGUAUAGAACAGAAAUCUUGGCCC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[400.00000000 125.00000000]
[400.00000000 150.00000000]
[400.00000000 175.00000000]
[400.00000000 200.00000000]
[377.37243652 210.62982178]
[358.13027954 194.66926575]
[338.88812256 178.70869446]
[335.98278809 153.87809753]
[318.34838867 136.15725708]
[293.53228760 133.13055420]
[272.15554810 146.09338379]
[263.36721802 169.49777222]
[270.92861938 193.32684326]
[291.60354614 207.38198853]
[316.54333496 205.64772034]
[335.78549194 221.60827637]
[355.02764893 237.56883240]
[348.76333618 261.77127075]
[351.54608154 286.61593628]
[363.00967407 308.83273315]
[381.64523315 325.49752808]
[374.48559570 349.45037842]
[367.32595825 373.40322876]
[360.16629028 397.35610962]
[353.00665283 421.30895996]
[331.97833252 434.82968140]
[324.81869507 458.78253174]
[334.97775269 481.62533569]
[357.56015015 492.35079956]
[381.68408203 485.79061890]
[404.26647949 496.51608276]
[426.84887695 507.24154663]
[449.43127441 517.96697998]
[472.01367188 528.69244385]
[487.59545898 548.24255371]
[512.59393311 547.96594238]
[535.17633057 558.69140625]
[557.75872803 569.41687012]
[580.34112549 580.14233398]
[602.92352295 590.86779785]
[625.50592041 601.59326172]
[648.08831787 612.31866455]
[670.67071533 623.04412842]
[693.25311279 633.76959229]
[715.83551025 644.49505615]
[738.41790771 655.22052002]
[761.00030518 665.94598389]
[783.58270264 676.67144775]
[806.16510010 687.39691162]
[828.74743652 698.12231445]
[851.32983398 708.84777832]
[873.91223145 719.57324219]
[896.49462891 730.29870605]
[919.07702637 741.02416992]
[941.65942383 751.74963379]
[964.24182129 762.47509766]
[986.82421875 773.20056152]
[1009.40661621 783.92602539]
[1031.98901367 794.65142822]
[1054.57141113 805.37689209]
[1077.15380859 816.10235596]
[1099.73620605 826.82781982]
[1122.31860352 837.55328369]
[1144.90100098 848.27874756]
[1167.48339844 859.00421143]
[1169.17065430 883.94720459]
[1180.96887207 905.98809814]
[1200.78930664 921.22448730]
[1225.12280273 926.95886230]
[1249.66101074 922.17590332]
[1270.05944824 907.72247314]
[1282.70666504 886.15747070]
[1307.70190430 886.64410400]
[1332.69714355 887.13067627]
[1357.69250488 887.61730957]
[1382.68774414 888.10388184]
[1407.68298340 888.59051514]
[1432.67822266 889.07708740]
[1457.67346191 889.56372070]
[1482.66882324 890.05029297]
[1507.66406250 890.53686523]
[1532.65930176 891.02349854]
[1552.04675293 906.80718994]
[1576.99938965 905.26855469]
[1594.30090332 887.22259521]
[1594.78747559 862.22729492]
[1578.20153809 843.52160645]
[1553.32763672 841.01293945]
[1533.34057617 856.03015137]
[1508.34533691 855.54351807]
[1483.34997559 855.05694580]
[1458.35473633 854.57031250]
[1433.35949707 854.08374023]
[1408.36425781 853.59710693]
[1383.36901855 853.11053467]
[1358.37365723 852.62390137]
[1333.37841797 852.13732910]
[1308.38317871 851.65069580]
[1283.38793945 851.16412354]
[1271.58959961 829.12322998]
[1251.76916504 813.88677979]
[1227.43566895 808.15240479]
[1202.89746094 812.93536377]
[1182.49902344 827.38885498]
[1159.91662598 816.66339111]
[1137.33422852 805.93792725]
[1114.75183105 795.21246338]
[1092.16943359 784.48699951]
[1069.58703613 773.76153564]
[1047.00463867 763.03607178]
[1024.42224121 752.31066895]
[1001.83984375 741.58520508]
[979.25750732 730.85974121]
[956.67510986 720.13427734]
[934.09271240 709.40881348]
[911.51031494 698.68334961]
[888.92791748 687.95788574]
[866.34552002 677.23242188]
[843.76312256 666.50701904]
[821.18072510 655.78155518]
[798.59832764 645.05609131]
[776.01593018 634.33062744]
[753.43353271 623.60516357]
[730.85113525 612.87969971]
[708.26873779 602.15423584]
[685.68634033 591.42877197]
[663.10394287 580.70330811]
[640.52154541 569.97790527]
[617.93914795 559.25244141]
[595.35675049 548.52697754]
[572.77435303 537.80151367]
[550.19195557 527.07604980]
[527.60955811 516.35058594]
[512.02777100 496.80047607]
[487.02929688 497.07708740]
[464.44689941 486.35162354]
[441.86450195 475.62619019]
[419.28210449 464.90072632]
[396.69970703 454.17526245]
[386.54064941 431.33245850]
[393.70031738 407.37960815]
[400.85995483 383.42675781]
[408.01959229 359.47387695]
[415.17926025 335.52102661]
[439.90328979 331.81665039]
[461.67858887 319.53515625]
[477.63916016 300.29299927]
[485.68423462 276.62283325]
[484.75494385 251.64010620]
[474.97357178 228.63304138]
[457.62756348 210.62982178]
[435.00000000 200.00000000]
[435.00000000 175.00000000]
[435.00000000 150.00000000]
[435.00000000 125.00000000]
[435.00000000 100.00000000]
[510.00000000 100.00000000]
[510.00000000 125.00000000]
[510.00000000 150.00000000]
[510.00000000 175.00000000]
[493.72460938 193.97660828]
[493.72460938 218.97660828]
[510.00000000 237.95321655]
[510.00000000 262.95321655]
[510.00000000 287.95321655]
[492.74304199 306.04180908]
[490.36175537 330.92816162]
[503.87530518 351.96109009]
[527.50000000 360.13870239]
[551.12469482 351.96109009]
[564.63824463 330.92816162]
[562.25695801 306.04180908]
[545.00000000 287.95321655]
[545.00000000 262.95321655]
[545.00000000 237.95321655]
[561.27539062 218.97660828]
[561.27539062 193.97660828]
[545.00000000 175.00000000]
[545.00000000 150.00000000]
[545.00000000 125.00000000]
[545.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[417.49999953 266.65048477 68.90963010 255.28827999 234.38599692 1.00000000]
[]
[]
[301.56834647 170.49006149 38.21401848 12.41955838 334.23323801 1.00000000]
[301.56834647 170.49006149 38.21401848 334.23323801 296.04691764 1.00000000]
[301.56834647 170.49006149 38.21401848 296.04691764 257.86059728 1.00000000]
[301.56834647 170.49006149 38.21401848 257.86059728 219.67427691 1.00000000]
[301.56834647 170.49006149 38.21401848 219.67427691 181.48795655 1.00000000]
[301.56834647 170.49006149 38.21401848 181.48795655 143.30163618 1.00000000]
[301.56834647 170.49006149 38.21401848 143.30163618 105.11531581 1.00000000]
[301.56834647 170.49006149 38.21401848 105.11531581 66.92899545 1.00000000]
[]
[]
[417.49999953 266.65048477 68.90963010 204.96255690 184.06027383 1.00000000]
[417.49999953 266.65048477 68.90963010 184.06027383 163.15799076 1.00000000]
[417.49999953 266.65048477 68.90963010 163.15799076 142.25570768 1.00000000]
[417.49999953 266.65048477 68.90963010 142.25570768 121.35342461 1.00000000]
[]
[]
[]
[]
[360.75920567 456.47890125 36.01426010 257.56902838 216.95081253 1.00000000]
[360.75920567 456.47890125 36.01426010 216.95081253 176.33259668 1.00000000]
[360.75920567 456.47890125 36.01426010 176.33259668 135.71438082 1.00000000]
[360.75920567 456.47890125 36.01426010 135.71438082 95.09616497 1.00000000]
[360.75920567 456.47890125 36.01426010 95.09616497 54.47794912 1.00000000]
[]
[]
[]
[]
[499.81161338 522.52152179 28.47466729 167.48376480 115.40527287 1.00000000]
[499.81161338 522.52152179 28.47466729 115.40527287 63.32678095 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1226.27925937 867.55565504 59.41448475 188.27525885 163.98526351 1.00000000]
[1226.27925937 867.55565504 59.41448475 163.98526351 139.69526818 1.00000000]
[1226.27925937 867.55565504 59.41448475 139.69526818 115.40527285 1.00000000]
[1226.27925937 867.55565504 59.41448475 115.40527285 91.11527752 1.00000000]
[1226.27925937 867.55565504 59.41448475 91.11527752 66.82528218 1.00000000]
[1226.27925937 867.55565504 59.41448475 66.82528218 42.53528685 1.00000000]
[1226.27925937 867.55565504 59.41448475 42.53528685 18.24529152 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1562.55390073 874.10215680 34.35139098 150.48868883 107.81057131 1.00000000]
[1562.55390073 874.10215680 34.35139098 107.81057131 65.13245379 1.00000000]
[1562.55390073 874.10215680 34.35139098 65.13245379 22.45433628 1.00000000]
[1562.55390073 874.10215680 34.35139098 22.45433628 339.77621876 1.00000000]
[1562.55390073 874.10215680 34.35139098 339.77621876 297.09810124 1.00000000]
[1562.55390073 874.10215680 34.35139098 297.09810124 254.41998372 1.00000000]
[1562.55390073 874.10215680 34.35139098 254.41998372 211.74186621 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1226.27925937 867.55565504 59.41448475 343.98526351 319.69526818 1.00000000]
[1226.27925937 867.55565504 59.41448475 319.69526818 295.40527285 1.00000000]
[1226.27925937 867.55565504 59.41448475 295.40527285 271.11527752 1.00000000]
[1226.27925937 867.55565504 59.41448475 271.11527752 246.82528218 1.00000000]
[1226.27925937 867.55565504 59.41448475 246.82528218 222.53528685 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[499.81161338 522.52152179 28.47466729 347.48376475 295.40527283 1.00000000]
[499.81161338 522.52152179 28.47466729 295.40527283 243.32678099 1.00000000]
[]
[]
[]
[]
[360.75920567 456.47890125 36.01426010 356.33259668 315.71438082 1.00000000]
[]
[]
[]
[]
[417.49999953 266.65048477 68.90963010 91.92998460 71.02770152 1.00000000]
[417.49999953 266.65048477 68.90963010 71.02770152 50.12541845 1.00000000]
[417.49999953 266.65048477 68.90963010 50.12541845 29.22313538 1.00000000]
[417.49999953 266.65048477 68.90963010 29.22313538 8.32085230 1.00000000]
[417.49999953 266.65048477 68.90963010 8.32085230 347.41856923 1.00000000]
[417.49999953 266.65048477 68.90963010 347.41856923 326.51628615 1.00000000]
[417.49999953 266.65048477 68.90963010 326.51628615 305.61400308 1.00000000]
[417.49999953 266.65048477 68.90963010 305.61400308 284.71172001 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[527.49999948 206.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[527.49999948 206.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[527.49999948 206.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[527.49999948 321.92469492 38.21401848 242.74528147 204.55896110 1.00000000]
[527.49999948 321.92469492 38.21401848 204.55896110 166.37264073 1.00000000]
[527.49999948 321.92469492 38.21401848 166.37264073 128.18632037 1.00000000]
[527.49999948 321.92469492 38.21401848 128.18632037 90.00000000 1.00000000]
[527.49999948 321.92469492 38.21401848 90.00000000 51.81367963 1.00000000]
[527.49999948 321.92469492 38.21401848 51.81367963 13.62735927 1.00000000]
[527.49999948 321.92469492 38.21401848 13.62735927 335.44103890 1.00000000]
[527.49999948 321.92469492 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[527.49999948 206.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[527.49999948 206.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[527.49999948 206.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
] def
/pairs [
[13 169]
[14 168]
[15 167]
[16 166]
[17 165]
[18 30]
[19 29]
[20 28]
[34 157]
[35 156]
[36 155]
[37 154]
[38 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[49 146]
[50 145]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[85 112]
[86 111]
[87 110]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[170 194]
[171 193]
[172 192]
[173 191]
[176 188]
[177 187]
[178 186]
] def

init

% Start Annotations
117 152 12 1.00 0.60 0.67 omark 43 78 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
