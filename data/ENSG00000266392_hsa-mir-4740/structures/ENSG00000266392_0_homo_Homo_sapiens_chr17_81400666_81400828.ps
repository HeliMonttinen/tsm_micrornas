%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGGCGGAUUUGCUCCAAGAGGAGAGCGUGGGGCGCCGUGCUGGGCCUCGCAGGGACGGAUCCUCUCGGGCGGUCCCCUCUGACUCCCUGCCCGAGAGGAUCAGUCCUUGGCAGAGCGGGCCCAGGCCUCCAGGGCAGCCCUCUUCCCGGUGGCUUUGAUAU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[125.00000000 200.00000000]
[102.03131104 209.87113953]
[83.62416840 226.78790283]
[71.85339355 248.84349060]
[68.04575348 273.55181885]
[72.63045502 298.12783813]
[85.09070587 319.80139160]
[104.02201843 336.12942505]
[127.29048157 345.27154541]
[128.07862854 370.25912476]
[128.86679077 395.24670410]
[129.65493774 420.23428345]
[121.29503632 443.79507446]
[136.03741455 463.98571777]
[161.02499390 463.19757080]
[174.46563721 442.11801147]
[164.63754272 419.13085938]
[163.84939575 394.14328003]
[163.06123352 369.15573120]
[162.27308655 344.16815186]
[184.91915894 333.57778931]
[203.59071350 350.20227051]
[222.26225281 366.82675171]
[240.93380737 383.45123291]
[259.60534668 400.07571411]
[278.27688599 416.70019531]
[296.94842529 433.32467651]
[308.28918457 455.60443115]
[333.08367920 458.80352783]
[349.70816040 440.13198853]
[343.66412354 415.87359619]
[320.22271729 407.18453979]
[301.55117798 390.56005859]
[282.87960815 373.93557739]
[264.20806885 357.31109619]
[245.53652954 340.68661499]
[226.86497498 324.06213379]
[208.19343567 307.43765259]
[216.09477234 283.71911621]
[241.00592041 281.61328125]
[265.91708374 279.50744629]
[290.82821655 277.40161133]
[315.73937988 275.29580688]
[330.01864624 295.81655884]
[340.65051270 273.18997192]
[365.56167603 271.08413696]
[390.47283936 268.97830200]
[408.15628052 286.65020752]
[406.06671143 311.56274414]
[403.97714233 336.47525024]
[401.88757324 361.38778687]
[399.79800415 386.30029297]
[397.70843506 411.21282959]
[384.89471436 432.67926025]
[393.95352173 455.98028564]
[391.86395264 480.89282227]
[389.77438354 505.80532837]
[387.68481445 530.71783447]
[385.59524536 555.63037109]
[383.50567627 580.54290771]
[381.41610718 605.45544434]
[379.32653809 630.36791992]
[377.23696899 655.28045654]
[375.14739990 680.19299316]
[373.05786133 705.10552979]
[370.96829224 730.01800537]
[368.87872314 754.93054199]
[351.07415771 772.48040771]
[326.13412476 774.21087646]
[301.19409180 775.94128418]
[276.25402832 777.67175293]
[255.54405212 763.66827393]
[230.82597351 767.41217041]
[215.19181824 786.92047119]
[216.92225647 811.86053467]
[235.10075378 829.02276611]
[260.09902954 829.31713867]
[278.67663574 812.58776855]
[303.61669922 810.85736084]
[328.55673218 809.12689209]
[353.49676514 807.39648438]
[373.55441284 822.31933594]
[398.49444580 820.58886719]
[416.29901123 803.03900146]
[418.38858032 778.12646484]
[403.75625610 757.85595703]
[405.84582520 732.94342041]
[407.93536377 708.03088379]
[410.02493286 683.11840820]
[412.11450195 658.20587158]
[414.20407104 633.29333496]
[416.29364014 608.38079834]
[418.38320923 583.46832275]
[420.47277832 558.55578613]
[422.56234741 533.64324951]
[424.65191650 508.73074341]
[426.74148560 483.81820679]
[428.83105469 458.90570068]
[441.64477539 437.43923950]
[432.58596802 414.13821411]
[434.67553711 389.22567749]
[436.76510620 364.31317139]
[438.85467529 339.40063477]
[440.94424438 314.48812866]
[443.03378296 289.57559204]
[463.41394043 275.09634399]
[472.53543091 251.81976318]
[467.41882324 227.34896851]
[449.73538208 209.67706299]
[425.26123047 204.57641602]
[401.99063110 213.71308899]
[387.52465820 234.10269165]
[362.61352539 236.20852661]
[337.70236206 238.31434631]
[312.79122925 240.42018127]
[287.88006592 242.52600098]
[262.96890259 244.63183594]
[238.05775452 246.73765564]
[213.14660645 248.84349060]
[201.37582397 226.78790283]
[182.96868896 209.87113953]
[160.00000000 200.00000000]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[510.00000000 100.00000000]
[510.00000000 125.00000000]
[510.00000000 150.00000000]
[510.00000000 175.00000000]
[510.00000000 200.00000000]
[510.00000000 225.00000000]
[499.02532959 247.46234131]
[510.00000000 269.92468262]
[510.00000000 294.92468262]
[510.00000000 319.92468262]
[491.37222290 336.59817505]
[485.48242188 360.89450073]
[494.40725708 384.24716187]
[515.00000000 398.42248535]
[540.00000000 398.42248535]
[560.59271240 384.24716187]
[569.51757812 360.89450073]
[563.62780762 336.59817505]
[545.00000000 319.92468262]
[545.00000000 294.92468262]
[545.00000000 269.92468262]
[555.97467041 247.46234131]
[545.00000000 225.00000000]
[545.00000000 200.00000000]
[545.00000000 175.00000000]
[545.00000000 150.00000000]
[545.00000000 125.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[142.49999894 272.37791252 74.46349590 256.40752349 237.07981673 1.00000000]
[142.49999894 272.37791252 74.46349590 237.07981673 217.75210996 1.00000000]
[142.49999894 272.37791252 74.46349590 217.75210996 198.42440320 1.00000000]
[142.49999894 272.37791252 74.46349590 198.42440320 179.09669643 1.00000000]
[142.49999894 272.37791252 74.46349590 179.09669643 159.76898967 1.00000000]
[142.49999894 272.37791252 74.46349590 159.76898967 140.44128290 1.00000000]
[142.49999894 272.37791252 74.46349590 140.44128290 121.11357614 1.00000000]
[142.49999894 272.37791252 74.46349590 121.11357614 101.78586937 1.00000000]
[]
[]
[]
[147.78489927 439.93073601 26.77024824 227.37142586 171.70021266 1.00000000]
[147.78489927 439.93073601 26.77024824 171.70021266 116.02899946 1.00000000]
[147.78489927 439.93073601 26.77024824 116.02899946 60.35778627 1.00000000]
[147.78489927 439.93073601 26.77024824 60.35778627 4.68657307 1.00000000]
[147.78489927 439.93073601 26.77024824 4.68657307 309.01535987 1.00000000]
[]
[]
[]
[142.49999894 272.37791252 74.46349590 74.60091636 55.27320959 1.00000000]
[]
[]
[]
[]
[]
[]
[323.71567994 433.72591625 26.77024824 180.85876608 125.18755288 1.00000000]
[323.71567994 433.72591625 26.77024824 125.18755288 69.51633969 1.00000000]
[323.71567994 433.72591625 26.77024824 69.51633969 13.84512649 1.00000000]
[323.71567994 433.72591625 26.77024824 13.84512649 318.17391329 1.00000000]
[323.71567994 433.72591625 26.77024824 318.17391329 262.50270009 1.00000000]
[]
[]
[]
[]
[]
[]
[142.49999894 272.37791252 74.46349590 28.08825658 8.76054981 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[428.94582262 248.16363659 43.74267810 151.58570913 118.37689122 1.00000000]
[]
[]
[]
[]
[]
[413.26973759 435.05925142 28.47466729 236.87301894 184.79452701 1.00000000]
[413.26973759 435.05925142 28.47466729 184.79452701 132.71603509 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[383.68658027 787.75971351 36.01426010 245.72185077 205.10363492 1.00000000]
[]
[]
[]
[247.97667265 797.17579063 34.35139098 325.40437001 282.72625249 1.00000000]
[247.97667265 797.17579063 34.35139098 282.72625249 240.04813497 1.00000000]
[247.97667265 797.17579063 34.35139098 240.04813497 197.37001745 1.00000000]
[247.97667265 797.17579063 34.35139098 197.37001745 154.69189994 1.00000000]
[247.97667265 797.17579063 34.35139098 154.69189994 112.01378242 1.00000000]
[247.97667265 797.17579063 34.35139098 112.01378242 69.33566490 1.00000000]
[247.97667265 797.17579063 34.35139098 69.33566490 26.65754739 1.00000000]
[]
[]
[]
[383.68658027 787.75971351 36.01426010 146.95828248 106.34006662 1.00000000]
[383.68658027 787.75971351 36.01426010 106.34006662 65.72185077 1.00000000]
[383.68658027 787.75971351 36.01426010 65.72185077 25.10363492 1.00000000]
[383.68658027 787.75971351 36.01426010 25.10363492 344.48541906 1.00000000]
[383.68658027 787.75971351 36.01426010 344.48541906 303.86720321 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[413.26973759 435.05925142 28.47466729 56.87301889 4.79452697 1.00000000]
[413.26973759 435.05925142 28.47466729 4.79452697 312.71603513 1.00000000]
[]
[]
[]
[]
[]
[428.94582262 248.16363659 43.74267810 71.21216285 38.00334495 1.00000000]
[428.94582262 248.16363659 43.74267810 38.00334495 4.79452704 1.00000000]
[428.94582262 248.16363659 43.74267810 4.79452704 331.58570913 1.00000000]
[428.94582262 248.16363659 43.74267810 331.58570913 298.37689122 1.00000000]
[428.94582262 248.16363659 43.74267810 298.37689122 265.16807331 1.00000000]
[428.94582262 248.16363659 43.74267810 265.16807331 231.95925540 1.00000000]
[428.94582262 248.16363659 43.74267810 231.95925540 198.75043749 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[142.49999894 272.37791252 74.46349590 341.57559680 322.24789004 1.00000000]
[142.49999894 272.37791252 74.46349590 322.24789004 302.92018327 1.00000000]
[142.49999894 272.37791252 74.46349590 302.92018327 283.59247651 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[527.49999949 247.46233919 28.47466709 232.07849235 180.00000000 1.00000000]
[527.49999949 247.46233919 28.47466709 180.00000000 127.92150785 1.00000000]
[]
[]
[527.49999978 358.21813489 42.10271758 245.43973506 210.89757171 1.00000000]
[527.49999978 358.21813489 42.10271758 210.89757171 176.35540835 1.00000000]
[527.49999978 358.21813489 42.10271758 176.35540835 141.81324499 1.00000000]
[527.49999978 358.21813489 42.10271758 141.81324499 107.27108163 1.00000000]
[527.49999978 358.21813489 42.10271758 107.27108163 72.72891827 1.00000000]
[527.49999978 358.21813489 42.10271758 72.72891827 38.18675492 1.00000000]
[527.49999978 358.21813489 42.10271758 38.18675492 3.64459156 1.00000000]
[527.49999978 358.21813489 42.10271758 3.64459156 329.10242820 1.00000000]
[527.49999978 358.21813489 42.10271758 329.10242820 294.56026484 1.00000000]
[]
[]
[527.49999949 247.46233919 28.47466709 52.07849141 360.00000000 1.00000000]
[527.49999949 247.46233919 28.47466709 360.00000000 307.92150830 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 131]
[3 130]
[4 129]
[5 128]
[6 127]
[14 25]
[15 24]
[16 23]
[17 22]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[44 124]
[45 123]
[46 122]
[47 121]
[48 120]
[50 119]
[51 118]
[52 117]
[53 110]
[54 109]
[55 108]
[56 107]
[57 106]
[58 105]
[60 103]
[61 102]
[62 101]
[63 100]
[64 99]
[65 98]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[73 86]
[74 85]
[75 84]
[76 83]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[139 152]
[140 151]
[141 150]
] def

init

% Start Annotations
55 72 12 1.00 0.60 0.67 omark 91 108 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
