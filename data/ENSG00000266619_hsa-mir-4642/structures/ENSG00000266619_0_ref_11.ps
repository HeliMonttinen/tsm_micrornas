%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGUUUGUUAGCAGUGGUGUGGCCUGAUGUGUUGGACUUUAAGUAGGACACAACUGCAUAGCAUCAUCACUUGGUGGCUCUGUGGCCUAGGGCAAGUCACUUAACCUCUCUGGGUCUUAGAUUUCCUUAUCUGUAAAUUUGGGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[300.00000000 125.00000000]
[300.00000000 150.00000000]
[300.00000000 175.00000000]
[289.02532959 197.46234131]
[300.00000000 219.92468262]
[300.00000000 244.92468262]
[300.00000000 269.92468262]
[300.00000000 294.92468262]
[300.00000000 319.92468262]
[300.00000000 344.92468262]
[300.00000000 369.92468262]
[300.00000000 394.92468262]
[283.72460938 413.90127563]
[283.72460938 438.90127563]
[300.00000000 457.87789917]
[300.00000000 482.87789917]
[283.72460938 501.85449219]
[283.72460938 526.85449219]
[300.00000000 545.83111572]
[324.70812988 549.64007568]
[340.98352051 568.61663818]
[357.25891113 587.59326172]
[373.53430176 606.56988525]
[389.80969238 625.54650879]
[406.08508301 644.52307129]
[422.36047363 663.49969482]
[438.63586426 682.47631836]
[454.91125488 701.45294189]
[461.20410156 725.64794922]
[484.15792847 735.55364990]
[500.43331909 754.53027344]
[516.70867920 773.50683594]
[520.94891357 798.14465332]
[542.17468262 811.35327148]
[566.15167236 804.27478027]
[576.80053711 781.65618896]
[566.98004150 758.66583252]
[543.27593994 750.72131348]
[527.00054932 731.74468994]
[510.72515869 712.76812744]
[504.43231201 688.57305908]
[481.47851562 678.66735840]
[489.77502441 655.08416748]
[465.20312500 659.69079590]
[448.92773438 640.71417236]
[432.65234375 621.73754883]
[416.37695312 602.76092529]
[424.67349243 579.17773438]
[400.10156250 583.78436279]
[383.82617188 564.80773926]
[367.55078125 545.83111572]
[351.27539062 526.85449219]
[351.27539062 501.85449219]
[335.00000000 482.87789917]
[335.00000000 457.87789917]
[351.27539062 438.90127563]
[351.27539062 413.90127563]
[335.00000000 394.92468262]
[335.00000000 369.92468262]
[335.00000000 344.92468262]
[335.00000000 319.92468262]
[335.00000000 294.92468262]
[335.00000000 269.92468262]
[356.65063477 257.42468262]
[335.00000000 244.92468262]
[335.00000000 219.92468262]
[345.97467041 197.46234131]
[335.00000000 175.00000000]
[335.00000000 150.00000000]
[335.00000000 125.00000000]
[335.00000000 100.00000000]
[460.00000000 100.00000000]
[460.00000000 125.00000000]
[460.00000000 150.00000000]
[460.00000000 175.00000000]
[449.02532959 197.46234131]
[460.00000000 219.92468262]
[460.00000000 244.92468262]
[460.00000000 269.92468262]
[460.00000000 294.92468262]
[460.00000000 319.92468262]
[460.00000000 344.92468262]
[460.00000000 369.92468262]
[460.00000000 394.92468262]
[460.00000000 419.92468262]
[438.34936523 432.42468262]
[460.00000000 444.92468262]
[449.02532959 467.38702393]
[460.00000000 489.84936523]
[460.00000000 514.84936523]
[444.59664917 534.54040527]
[446.62066650 559.45831299]
[465.00000000 576.40527344]
[490.00000000 576.40527344]
[508.37933350 559.45831299]
[510.40335083 534.54040527]
[495.00000000 514.84936523]
[495.00000000 489.84936523]
[505.97467041 467.38702393]
[495.00000000 444.92468262]
[495.00000000 419.92468262]
[495.00000000 394.92468262]
[495.00000000 369.92468262]
[495.00000000 344.92468262]
[495.00000000 319.92468262]
[495.00000000 294.92468262]
[495.00000000 269.92468262]
[495.00000000 244.92468262]
[495.00000000 219.92468262]
[505.97467041 197.46234131]
[495.00000000 175.00000000]
[495.00000000 150.00000000]
[495.00000000 125.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[570.00000000 125.00000000]
[570.00000000 150.00000000]
[553.72460938 168.97660828]
[553.72460938 193.97660828]
[570.00000000 212.95321655]
[570.00000000 237.95321655]
[554.59667969 257.64425659]
[556.62066650 282.56219482]
[575.00000000 299.50915527]
[600.00000000 299.50915527]
[618.37933350 282.56219482]
[620.40332031 257.64425659]
[605.00000000 237.95321655]
[605.00000000 212.95321655]
[621.27539062 193.97660828]
[621.27539062 168.97660828]
[605.00000000 150.00000000]
[605.00000000 125.00000000]
[605.00000000 100.00000000]
[630.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[317.49999924 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[317.49999924 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[317.49999959 426.40128744 36.01426010 240.92732373 200.30910788 1.00000000]
[317.49999959 426.40128744 36.01426010 200.30910788 159.69089203 1.00000000]
[317.49999959 426.40128744 36.01426010 159.69089203 119.07267617 1.00000000]
[]
[317.49999967 514.35450597 36.01426010 240.92732373 200.30910788 1.00000000]
[317.49999967 514.35450597 36.01426010 200.30910788 159.69089203 1.00000000]
[317.49999967 514.35450597 36.01426010 159.69089203 119.07267617 1.00000000]
[317.49999967 514.35450597 36.01426010 119.07267617 78.45446032 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[482.81821079 707.11051381 28.47466729 191.46027600 139.38178408 1.00000000]
[482.81821079 707.11051381 28.47466729 139.38178408 87.30329215 1.00000000]
[]
[]
[546.27722914 781.10179968 30.52836670 194.40549815 146.06426012 1.00000000]
[546.27722914 781.10179968 30.52836670 146.06426012 97.72302208 1.00000000]
[546.27722914 781.10179968 30.52836670 97.72302208 49.38178405 1.00000000]
[546.27722914 781.10179968 30.52836670 49.38178405 1.04054602 1.00000000]
[546.27722914 781.10179968 30.52836670 1.04054602 312.69930799 1.00000000]
[546.27722914 781.10179968 30.52836670 312.69930799 264.35806996 1.00000000]
[]
[]
[482.81821079 707.11051381 28.47466729 11.46027595 319.38178403 1.00000000]
[482.81821079 707.11051381 28.47466729 319.38178403 267.30329220 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[317.49999967 514.35450597 36.01426010 20.30910788 339.69089203 1.00000000]
[317.49999967 514.35450597 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[317.49999959 426.40128744 36.01426010 60.92732373 20.30910788 1.00000000]
[317.49999959 426.40128744 36.01426010 20.30910788 339.69089203 1.00000000]
[317.49999959 426.40128744 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[317.49999924 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[317.49999924 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[477.49999877 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[477.49999877 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.49999839 467.38701764 28.47466652 232.07849355 180.00000000 1.00000000]
[477.49999839 467.38701764 28.47466652 180.00000000 127.92150724 1.00000000]
[]
[477.49999929 544.40892439 34.35139098 239.37341121 196.69529370 1.00000000]
[477.49999929 544.40892439 34.35139098 196.69529370 154.01717618 1.00000000]
[477.49999929 544.40892439 34.35139098 154.01717618 111.33905866 1.00000000]
[477.49999929 544.40892439 34.35139098 111.33905866 68.66094115 1.00000000]
[477.49999929 544.40892439 34.35139098 68.66094115 25.98282363 1.00000000]
[477.49999929 544.40892439 34.35139098 25.98282363 343.30470611 1.00000000]
[477.49999929 544.40892439 34.35139098 343.30470611 300.62658860 1.00000000]
[]
[477.49999839 467.38701764 28.47466652 52.07849012 360.00000000 1.00000000]
[477.49999839 467.38701764 28.47466652 360.00000000 307.92150881 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.49999877 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[477.49999877 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[587.49999861 181.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[587.49999861 181.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[587.49999861 181.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[587.49999861 267.51278656 34.35139098 239.37341131 196.69529379 1.00000000]
[587.49999861 267.51278656 34.35139098 196.69529379 154.01717628 1.00000000]
[587.49999861 267.51278656 34.35139098 154.01717628 111.33905876 1.00000000]
[587.49999861 267.51278656 34.35139098 111.33905876 68.66094124 1.00000000]
[587.49999861 267.51278656 34.35139098 68.66094124 25.98282372 1.00000000]
[587.49999861 267.51278656 34.35139098 25.98282372 343.30470621 1.00000000]
[587.49999861 267.51278656 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[587.49999861 181.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[587.49999861 181.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[587.49999861 181.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
] def
/pairs [
[9 80]
[10 79]
[11 78]
[12 77]
[14 75]
[15 74]
[16 72]
[17 71]
[18 70]
[19 69]
[20 68]
[21 67]
[24 64]
[25 63]
[29 61]
[30 60]
[31 59]
[32 58]
[33 56]
[34 55]
[35 54]
[36 53]
[37 51]
[39 49]
[40 48]
[41 47]
[81 123]
[82 122]
[83 121]
[84 120]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
[93 111]
[94 110]
[96 109]
[98 107]
[99 106]
[126 145]
[127 144]
[128 143]
[131 140]
[132 139]
] def

init

% Start Annotations
98 100 12 1.00 0.60 0.67 omark 63 88 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
