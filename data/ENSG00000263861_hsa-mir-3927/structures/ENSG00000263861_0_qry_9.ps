%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUUCACGCUGAGGCUGAGCAUGGCCAUAGGACUUGGUUUUGCCAGUGUGCCAAUGCCUAUCAAAUAUCUACCUGUCAUGUUUGUCAUAUGACAGGUAGAUAUUUGAUAGGCAUUGGCACAUUGGGGUUGGCCCUCUUGGAAACCUGAAACCACCAUGCUCUAAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[107.74304962 193.08860779]
[105.36176300 217.97492981]
[118.87529755 239.00787354]
[142.50000000 247.18550110]
[166.12469482 239.00787354]
[179.63824463 217.97492981]
[177.25695801 193.08860779]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[235.00000000 125.00000000]
[235.00000000 150.00000000]
[235.00000000 175.00000000]
[235.00000000 200.00000000]
[235.00000000 225.00000000]
[235.00000000 250.00000000]
[235.00000000 275.00000000]
[212.14672852 286.27746582]
[195.20239258 305.31277466]
[186.64814758 329.31854248]
[187.73660278 354.77966309]
[198.30834961 377.96783447]
[216.81539917 395.48760986]
[240.54774475 404.77355957]
[266.03024292 404.46597290]
[289.53152466 394.60983276]
[307.61029053 376.64843750]
[317.61923218 353.21185303]
[342.58169556 351.84268188]
[367.54418945 350.47351074]
[392.50665283 349.10437012]
[417.46914673 347.73519897]
[442.43161011 346.36602783]
[467.39410400 344.99688721]
[486.60556030 360.99435425]
[511.60165405 361.43634033]
[529.60430908 378.78292847]
[547.60699463 396.12951660]
[565.60961914 413.47610474]
[583.61230469 430.82272339]
[601.61492920 448.16931152]
[619.61761475 465.51589966]
[637.62023926 482.86251831]
[655.62292480 500.20910645]
[673.62554932 517.55572510]
[691.62817383 534.90228271]
[709.63085938 552.24890137]
[727.63348389 569.59552002]
[745.63616943 586.94207764]
[763.63879395 604.28869629]
[781.64147949 621.63525391]
[799.64410400 638.98187256]
[817.64678955 656.32849121]
[835.64941406 673.67504883]
[853.65209961 691.02166748]
[871.65472412 708.36828613]
[889.65740967 725.71484375]
[907.66003418 743.06146240]
[925.66271973 760.40808105]
[943.66534424 777.75463867]
[961.66802979 795.10125732]
[979.67065430 812.44787598]
[997.67333984 829.79443359]
[1015.67596436 847.14105225]
[1033.67858887 864.48767090]
[1051.68127441 881.83422852]
[1069.68395996 899.18084717]
[1087.68664551 916.52740479]
[1105.68920898 933.87402344]
[1123.69189453 951.22064209]
[1141.69458008 968.56719971]
[1159.69726562 985.91381836]
[1177.69982910 1003.26043701]
[1195.70251465 1020.60699463]
[1202.26147461 1044.73132324]
[1224.64489746 1055.86608887]
[1247.84204102 1046.54443359]
[1256.29650879 1023.01739502]
[1244.33874512 1001.06262207]
[1219.98779297 995.40332031]
[1201.98510742 978.05670166]
[1183.98242188 960.71008301]
[1165.97985840 943.36352539]
[1147.97717285 926.01690674]
[1129.97448730 908.67028809]
[1111.97180176 891.32373047]
[1093.96923828 873.97711182]
[1075.96655273 856.63055420]
[1057.96386719 839.28393555]
[1039.96118164 821.93731689]
[1021.95855713 804.59075928]
[1003.95593262 787.24414062]
[985.95324707 769.89752197]
[967.95062256 752.55096436]
[949.94793701 735.20434570]
[931.94531250 717.85772705]
[913.94262695 700.51116943]
[895.94000244 683.16455078]
[877.93731689 665.81793213]
[859.93469238 648.47137451]
[841.93200684 631.12475586]
[823.92938232 613.77813721]
[805.92669678 596.43157959]
[787.92407227 579.08496094]
[769.92138672 561.73840332]
[751.91876221 544.39178467]
[733.91607666 527.04516602]
[715.91345215 509.69857788]
[697.91076660 492.35198975]
[679.90814209 475.00540161]
[661.90545654 457.65878296]
[643.90283203 440.31219482]
[625.90014648 422.96560669]
[607.89752197 405.61898804]
[589.89483643 388.27239990]
[571.89221191 370.92581177]
[553.88952637 353.57922363]
[535.88690186 336.23260498]
[534.51776123 311.27014160]
[550.51519775 292.05865479]
[566.51269531 272.84719849]
[582.51019287 253.63574219]
[607.47229004 252.25944519]
[627.01165771 236.66412354]
[633.88812256 212.62844849]
[625.55377197 189.05857849]
[637.13085938 166.90069580]
[655.97814941 150.47570801]
[653.04290771 125.64862061]
[630.88500977 114.07157135]
[608.82873535 125.84111786]
[606.10980225 150.69282532]
[594.53277588 172.85070801]
[558.66345215 191.10697937]
[555.61413574 231.23925781]
[539.61663818 250.45071411]
[523.61920166 269.66217041]
[507.62167358 288.87365723]
[482.82388306 292.04675293]
[465.47726440 310.04940796]
[440.51480103 311.41854858]
[415.55230713 312.78771973]
[390.58984375 314.15689087]
[365.62734985 315.52606201]
[340.66488647 316.89520264]
[315.70239258 318.26437378]
[270.00000000 275.00000000]
[270.00000000 250.00000000]
[270.00000000 225.00000000]
[270.00000000 200.00000000]
[270.00000000 175.00000000]
[270.00000000 150.00000000]
[270.00000000 125.00000000]
[270.00000000 100.00000000]
[295.00000000 100.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[142.50000000 208.97147640 38.21401848 242.74528147 204.55896110 1.00000000]
[142.50000000 208.97147640 38.21401848 204.55896110 166.37264073 1.00000000]
[142.50000000 208.97147640 38.21401848 166.37264073 128.18632037 1.00000000]
[142.50000000 208.97147640 38.21401848 128.18632037 90.00000000 1.00000000]
[142.50000000 208.97147640 38.21401848 90.00000000 51.81367963 1.00000000]
[142.50000000 208.97147640 38.21401848 51.81367963 13.62735927 1.00000000]
[142.50000000 208.97147640 38.21401848 13.62735927 335.44103890 1.00000000]
[142.50000000 208.97147640 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[252.49999997 339.25724849 66.59762746 254.76538605 232.70445605 1.00000000]
[252.49999997 339.25724849 66.59762746 232.70445605 210.64352605 1.00000000]
[252.49999997 339.25724849 66.59762746 210.64352605 188.58259605 1.00000000]
[252.49999997 339.25724849 66.59762746 188.58259605 166.52166606 1.00000000]
[252.49999997 339.25724849 66.59762746 166.52166606 144.46073606 1.00000000]
[252.49999997 339.25724849 66.59762746 144.46073606 122.39980606 1.00000000]
[252.49999997 339.25724849 66.59762746 122.39980606 100.33887606 1.00000000]
[252.49999997 339.25724849 66.59762746 100.33887606 78.27794606 1.00000000]
[252.49999997 339.25724849 66.59762746 78.27794606 56.21701607 1.00000000]
[252.49999997 339.25724849 66.59762746 56.21701607 34.15608607 1.00000000]
[252.49999997 339.25724849 66.59762746 34.15608607 12.09515607 1.00000000]
[]
[]
[]
[]
[]
[]
[499.73162757 325.69689538 37.65905821 149.17001622 110.39864730 1.00000000]
[499.73162757 325.69689538 37.65905821 110.39864730 71.62727838 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1225.85832941 1025.36190053 30.52836670 188.96046657 140.61922854 1.00000000]
[1225.85832941 1025.36190053 30.52836670 140.61922854 92.27799051 1.00000000]
[1225.85832941 1025.36190053 30.52836670 92.27799051 43.93675248 1.00000000]
[1225.85832941 1025.36190053 30.52836670 43.93675248 355.59551445 1.00000000]
[1225.85832941 1025.36190053 30.52836670 355.59551445 307.25427642 1.00000000]
[1225.85832941 1025.36190053 30.52836670 307.25427642 258.91303838 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[499.73162757 325.69689538 37.65905821 16.24622657 337.47485766 1.00000000]
[]
[]
[]
[592.83754111 213.88554744 41.06984090 104.56380493 69.12452582 1.00000000]
[592.83754111 213.88554744 41.06984090 69.12452582 33.68524670 1.00000000]
[592.83754111 213.88554744 41.06984090 33.68524670 358.24596759 1.00000000]
[592.83754111 213.88554744 41.06984090 358.24596759 322.80668847 1.00000000]
[]
[631.00155049 140.84156703 26.77024824 76.76419464 21.09298145 1.00000000]
[631.00155049 140.84156703 26.77024824 21.09298145 325.42176825 1.00000000]
[631.00155049 140.84156703 26.77024824 325.42176825 269.75055505 1.00000000]
[631.00155049 140.84156703 26.77024824 269.75055505 214.07934185 1.00000000]
[631.00155049 140.84156703 26.77024824 214.07934185 158.40812866 1.00000000]
[]
[592.83754111 213.88554744 41.06984090 272.36563483 213.68524670 1.00000000]
[592.83754111 213.88554744 41.06984090 213.68524670 155.00485858 1.00000000]
[]
[]
[]
[499.73162757 325.69689538 37.65905821 282.09380585 243.32243693 1.00000000]
[499.73162757 325.69689538 37.65905821 243.32243693 204.55106802 1.00000000]
[]
[]
[]
[]
[]
[]
[252.49999997 339.25724849 66.59762746 341.62592817 285.23461395 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[26 156]
[37 155]
[38 154]
[39 153]
[40 152]
[41 151]
[42 150]
[43 149]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[73 99]
[74 98]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[128 147]
[129 146]
[130 145]
[131 144]
[135 142]
[136 141]
] def

init

% Start Annotations
45 80 12 1.00 0.60 0.67 omark 92 127 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
