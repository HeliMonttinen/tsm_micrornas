%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUUCAUGCUGAGGCUGAGCAUGGCCAUAGGACUUCGUUUUGCCAGUGUGCCAAUGCCUAUCAAAUAUCUACCUGCCAUGUUUGUCAUAGGACAGGCAGAUAUGUGAUAGGCAUUGGCAUAUUGGGGUUGGCCCUCUUGGAAACCUGAAACCACCAUGCCCUAAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[107.74304962 193.08860779]
[105.36176300 217.97492981]
[118.87529755 239.00787354]
[142.50000000 247.18550110]
[166.12469482 239.00787354]
[179.63824463 217.97492981]
[177.25695801 193.08860779]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[285.00000000 125.00000000]
[285.00000000 150.00000000]
[285.00000000 175.00000000]
[285.00000000 200.00000000]
[285.00000000 225.00000000]
[263.75564575 238.17866516]
[250.57696533 259.42303467]
[248.20748901 284.31048584]
[257.14047241 307.66003418]
[242.00761414 327.55969238]
[226.87474060 347.45935059]
[211.74188232 367.35900879]
[196.60902405 387.25866699]
[181.47615051 407.15832520]
[163.68122864 424.71795654]
[172.24754333 448.20452881]
[197.16905212 450.18405151]
[209.33567810 428.34436035]
[224.46855164 408.44470215]
[239.60140991 388.54501343]
[254.73426819 368.64535522]
[269.86712646 348.74569702]
[285.00000000 328.84603882]
[309.88745117 331.21551514]
[320.99328613 353.61331177]
[332.09909058 376.01110840]
[343.20492554 398.40887451]
[354.31072998 420.80667114]
[365.41653442 443.20446777]
[376.52236938 465.60223389]
[387.62817383 488.00003052]
[398.73400879 510.39782715]
[409.83981323 532.79559326]
[420.94564819 555.19335938]
[432.05145264 577.59118652]
[443.15728760 599.98895264]
[454.26309204 622.38671875]
[465.36892700 644.78454590]
[476.47473145 667.18231201]
[487.58056641 689.58007812]
[498.68637085 711.97790527]
[509.79220581 734.37567139]
[520.89801025 756.77343750]
[532.00384521 779.17126465]
[532.15002441 804.17083740]
[551.96081543 819.41973877]
[563.06665039 841.81756592]
[574.17248535 864.21533203]
[585.27832031 886.61309814]
[596.38409424 909.01092529]
[607.48992920 931.40869141]
[607.63610840 956.40826416]
[627.44696045 971.65722656]
[638.55279541 994.05499268]
[649.65856934 1016.45281982]
[660.76440430 1038.85058594]
[671.87023926 1061.24841309]
[682.97601318 1083.64611816]
[694.08184814 1106.04394531]
[705.18768311 1128.44177246]
[716.29351807 1150.83947754]
[714.34124756 1175.76318359]
[731.66442871 1193.78833008]
[756.64593506 1192.82702637]
[772.53277588 1173.52392578]
[768.67102051 1148.82409668]
[747.65039062 1135.29138184]
[736.54455566 1112.89355469]
[725.43878174 1090.49584961]
[739.28289795 1069.67895508]
[714.33294678 1068.09802246]
[703.22711182 1045.70019531]
[717.07128906 1024.88342285]
[692.12127686 1023.30242920]
[681.01550293 1000.90466309]
[669.90966797 978.50689697]
[658.80383301 956.10906982]
[658.65765381 931.10949707]
[638.84686279 915.86053467]
[627.74102783 893.46276855]
[616.63519287 871.06500244]
[605.52935791 848.66717529]
[594.42358398 826.26940918]
[583.31774902 803.87164307]
[583.17156982 778.87207031]
[563.36071777 763.62310791]
[552.25488281 741.22528076]
[541.14910889 718.82751465]
[530.04327393 696.42974854]
[518.93743896 674.03192139]
[507.83163452 651.63415527]
[496.72583008 629.23638916]
[485.61999512 606.83862305]
[474.51419067 584.44079590]
[463.40835571 562.04302979]
[452.30255127 539.64526367]
[441.19671631 517.24743652]
[430.09091187 494.84967041]
[418.98507690 472.45187378]
[407.87927246 450.05410767]
[396.77343750 427.65631104]
[385.66763306 405.25851440]
[374.56179810 382.86074829]
[363.45599365 360.46295166]
[352.35015869 338.06515503]
[341.24435425 315.66738892]
[354.42303467 294.42303467]
[379.42303467 294.42303467]
[404.42303467 294.42303467]
[429.42303467 294.42303467]
[450.08685303 308.49447632]
[459.24636841 331.75610352]
[451.05535889 355.37615967]
[460.21487427 378.63778687]
[452.02386475 402.25784302]
[435.79827881 421.27706909]
[442.35433960 445.40209961]
[465.97439575 453.59310913]
[486.05899048 438.70657349]
[485.09194946 413.72528076]
[493.28298950 390.10522461]
[514.87750244 377.50854492]
[523.06854248 353.88848877]
[513.90899658 330.62686157]
[491.81265259 318.93276978]
[482.65313721 295.67114258]
[488.17529297 271.28866577]
[474.59210205 250.30065918]
[450.08685303 245.35156250]
[429.42303467 259.42303467]
[404.42303467 259.42303467]
[379.42303467 259.42303467]
[354.42303467 259.42303467]
[341.24435425 238.17866516]
[320.00000000 225.00000000]
[320.00000000 200.00000000]
[320.00000000 175.00000000]
[320.00000000 150.00000000]
[320.00000000 125.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[142.50000000 208.97147640 38.21401848 242.74528147 204.55896110 1.00000000]
[142.50000000 208.97147640 38.21401848 204.55896110 166.37264073 1.00000000]
[142.50000000 208.97147640 38.21401848 166.37264073 128.18632037 1.00000000]
[142.50000000 208.97147640 38.21401848 128.18632037 90.00000000 1.00000000]
[142.50000000 208.97147640 38.21401848 90.00000000 51.81367963 1.00000000]
[142.50000000 208.97147640 38.21401848 51.81367963 13.62735927 1.00000000]
[142.50000000 208.97147640 38.21401848 13.62735927 335.44103890 1.00000000]
[142.50000000 208.97147640 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[302.49999759 276.92302478 54.79279608 251.37426051 224.99999999 1.00000000]
[302.49999759 276.92302478 54.79279608 224.99999999 198.62573948 1.00000000]
[302.49999759 276.92302478 54.79279608 198.62573948 172.25147896 1.00000000]
[302.49999759 276.92302478 54.79279608 172.25147896 145.87721845 1.00000000]
[]
[]
[]
[]
[]
[186.24943548 429.79208470 23.13159456 258.09127601 192.67137748 1.00000000]
[186.24943548 429.79208470 23.13159456 192.67137748 127.25147896 1.00000000]
[186.24943548 429.79208470 23.13159456 127.25147896 61.83158043 1.00000000]
[186.24943548 429.79208470 23.13159456 61.83158043 356.41168190 1.00000000]
[]
[]
[]
[]
[]
[302.49999759 276.92302478 54.79279608 108.62573946 82.25147895 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[557.66078525 791.52143002 28.47466729 205.70423136 153.62573943 1.00000000]
[557.66078525 791.52143002 28.47466729 153.62573943 101.54724751 1.00000000]
[]
[]
[]
[]
[]
[633.14689183 943.75888916 28.47466729 205.70423131 153.62573938 1.00000000]
[633.14689183 943.75888916 28.47466729 153.62573938 101.54724746 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[743.08426103 1165.47632134 30.52836670 208.64945346 160.30821542 1.00000000]
[743.08426103 1165.47632134 30.52836670 160.30821542 111.96697739 1.00000000]
[743.08426103 1165.47632134 30.52836670 111.96697739 63.62573936 1.00000000]
[743.08426103 1165.47632134 30.52836670 63.62573936 15.28450133 1.00000000]
[743.08426103 1165.47632134 30.52836670 15.28450133 326.94326330 1.00000000]
[743.08426103 1165.47632134 30.52836670 326.94326330 278.60202527 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[633.14689183 943.75888916 28.47466729 25.70423126 333.62573934 1.00000000]
[633.14689183 943.75888916 28.47466729 333.62573934 281.54724751 1.00000000]
[]
[]
[]
[]
[]
[557.66078525 791.52143002 28.47466729 25.70423131 333.62573938 1.00000000]
[557.66078525 791.52143002 28.47466729 333.62573938 281.54724755 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[302.49999759 276.92302478 54.79279608 44.99999996 18.62573945 1.00000000]
[]
[]
[]
[456.46304543 276.92302502 32.20889334 147.08950868 101.41790226 1.00000000]
[]
[487.06194417 354.63232391 36.01426010 219.43473317 178.81651732 1.00000000]
[487.06194417 354.63232391 36.01426010 178.81651732 138.19830146 1.00000000]
[]
[461.92050136 427.13159686 26.77024824 248.30365824 192.63244504 1.00000000]
[461.92050136 427.13159686 26.77024824 192.63244504 136.96123184 1.00000000]
[461.92050136 427.13159686 26.77024824 136.96123184 81.29001864 1.00000000]
[461.92050136 427.13159686 26.77024824 81.29001864 25.61880545 1.00000000]
[461.92050136 427.13159686 26.77024824 25.61880545 329.94759225 1.00000000]
[]
[487.06194417 354.63232391 36.01426010 80.05294902 39.43473317 1.00000000]
[487.06194417 354.63232391 36.01426010 39.43473317 358.81651732 1.00000000]
[487.06194417 354.63232391 36.01426010 358.81651732 318.19830146 1.00000000]
[487.06194417 354.63232391 36.01426010 318.19830146 277.58008561 1.00000000]
[]
[456.46304543 276.92302502 32.20889334 35.59691710 349.92531023 1.00000000]
[456.46304543 276.92302502 32.20889334 349.92531023 304.25370381 1.00000000]
[456.46304543 276.92302502 32.20889334 304.25370381 258.58209790 1.00000000]
[456.46304543 276.92302502 32.20889334 258.58209790 212.91049229 1.00000000]
[]
[]
[]
[302.49999759 276.92302478 54.79279608 341.37426046 314.99999995 1.00000000]
[302.49999759 276.92302478 54.79279608 314.99999995 288.62573949 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[26 156]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[45 127]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[51 121]
[52 120]
[53 119]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[74 98]
[75 97]
[76 96]
[77 95]
[78 93]
[79 92]
[80 90]
[81 89]
[82 88]
[128 154]
[129 153]
[130 152]
[131 151]
[132 147]
[133 146]
[135 142]
[136 141]
] def

init

% Start Annotations
45 80 12 1.00 0.60 0.67 omark 92 127 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
