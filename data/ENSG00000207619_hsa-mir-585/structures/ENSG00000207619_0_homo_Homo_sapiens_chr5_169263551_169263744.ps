%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:49 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGUCUGAAAGGAUGAUUGCUGUUGUAAGGCACCCAGUUUGUGGUACAUUGUUACAGCAGCCCUAGCAUACAGAUACGCCCAACGUUCAGGCUUUCUCUGGGCGUAUCUGUGUGCUAGGGCUGCCAUAGCACAGACACCCCACACUCCCCCUGCAGCCUCCCCCAGCUGCUCCAUCUCGUGCUGGCUUCUCC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[89.02532959 272.46234131]
[100.00000000 294.92468262]
[79.97168732 309.88684082]
[70.27717590 332.93063354]
[73.58596039 357.71072388]
[88.98692322 377.40362549]
[82.42757416 401.52777100]
[75.86822510 425.65194702]
[69.30888367 449.77609253]
[62.74953461 473.90023804]
[40.90589523 486.05981445]
[30.59889030 508.83627319]
[35.88225555 533.27160645]
[54.67804337 549.75549316]
[56.01406479 574.71978760]
[46.25548172 597.73651123]
[58.41487122 619.58026123]
[59.75089264 644.54449463]
[61.08691025 669.50878906]
[62.42293167 694.47308350]
[44.21370697 711.60272217]
[38.36016846 735.90777588]
[46.77432251 759.44927979]
[34.21940994 781.06811523]
[21.66449547 802.68695068]
[9.10958195 824.30578613]
[-15.12990093 830.42517090]
[-30.95854950 849.77600098]
[-32.15098190 874.74755859]
[-18.23821640 895.51855469]
[-23.38096809 919.98388672]
[-28.52371979 944.44921875]
[-51.70282745 953.81561279]
[-67.75045776 972.98516846]
[-72.89321136 997.45050049]
[-96.07231903 1006.81689453]
[-119.25142670 1016.18328857]
[-142.43052673 1025.54968262]
[-165.60963440 1034.91601562]
[-183.69148254 1017.65197754]
[-206.62388611 1007.69683838]
[-231.58348083 1006.27618408]
[-255.49736023 1013.56500244]
[-275.42132568 1028.66589355]
[-288.90243530 1049.71960449]
[-313.63995361 1046.10644531]
[-338.37747192 1042.49340820]
[-363.11502075 1038.88024902]
[-387.85253906 1035.26721191]
[-404.27774048 1016.42010498]
[-429.01525879 1012.80694580]
[-450.14483643 1026.16894531]
[-474.88235474 1022.55578613]
[-499.61990356 1018.94268799]
[-524.35742188 1015.32958984]
[-549.09497070 1011.71649170]
[-573.83251953 1008.10339355]
[-598.57000732 1004.49029541]
[-623.30755615 1000.87719727]
[-648.04510498 997.26409912]
[-672.78265381 993.65100098]
[-697.52014160 990.03790283]
[-722.25769043 986.42480469]
[-746.99523926 982.81170654]
[-771.73272705 979.19854736]
[-796.47027588 975.58544922]
[-821.20782471 971.97235107]
[-845.94537354 968.35925293]
[-870.68286133 964.74615479]
[-895.42041016 961.13305664]
[-920.15795898 957.51995850]
[-944.89544678 953.90686035]
[-969.63299561 950.29376221]
[-994.37054443 946.68066406]
[-1019.10809326 943.06756592]
[-1043.84558105 939.45440674]
[-1068.58312988 935.84130859]
[-1075.14855957 911.71881104]
[-1089.41052246 891.18597412]
[-1109.72314453 876.61224365]
[-1133.74267578 869.67926025]
[-1158.69714355 871.18707275]
[-1181.70703125 880.96179199]
[-1200.11706543 897.87536621]
[-1211.80297852 919.97607422]
[-1215.41601562 944.71356201]
[-1210.53942871 969.23333740]
[-1197.73596191 990.70587158]
[-1178.48303223 1006.65338135]
[-1155.00219727 1015.23559570]
[-1130.00329590 1015.46209717]
[-1106.37084961 1007.30682373]
[-1086.83203125 991.71087646]
[-1073.64147949 970.47387695]
[-1048.90393066 974.08697510]
[-1024.16638184 977.70007324]
[-999.42889404 981.31317139]
[-974.69134521 984.92626953]
[-949.95379639 988.53936768]
[-925.21630859 992.15252686]
[-900.47875977 995.76562500]
[-875.74121094 999.37872314]
[-851.00372314 1002.99182129]
[-826.26617432 1006.60491943]
[-801.52862549 1010.21801758]
[-776.79107666 1013.83111572]
[-752.05358887 1017.44421387]
[-727.31604004 1021.05731201]
[-702.57849121 1024.67041016]
[-677.84094238 1028.28356934]
[-653.10345459 1031.89660645]
[-628.36590576 1035.50976562]
[-603.62835693 1039.12280273]
[-578.89086914 1042.73596191]
[-554.15332031 1046.34899902]
[-529.41577148 1049.96215820]
[-504.67825317 1053.57519531]
[-479.94070435 1057.18835449]
[-455.20318604 1060.80151367]
[-438.77798462 1079.64855957]
[-414.04046631 1083.26171875]
[-392.91088867 1069.89978027]
[-368.17337036 1073.51281738]
[-343.43582153 1077.12597656]
[-318.69830322 1080.73901367]
[-293.96075439 1084.35217285]
[-287.06448364 1108.38220215]
[-272.29190063 1128.55065918]
[-251.46170044 1142.37463379]
[-227.13844299 1148.15222168]
[-202.31672668 1145.17187500]
[-180.05249023 1133.80065918]
[-163.08682251 1115.43859863]
[-153.50848389 1092.34631348]
[-152.49670410 1067.36682129]
[-129.31759644 1058.00036621]
[-106.13849640 1048.63403320]
[-82.95938873 1039.26770020]
[-59.78028488 1029.90124512]
[-39.08438873 1043.92553711]
[-14.22409058 1046.56481934]
[8.95501709 1037.19836426]
[25.00264740 1018.02880859]
[30.14540100 993.56347656]
[23.17401695 969.55511475]
[5.72773457 951.64904785]
[10.87048721 927.18377686]
[16.01323891 902.71844482]
[37.11137009 889.30688477]
[46.07392883 865.96868896]
[39.37595367 841.88262939]
[51.93087006 820.26379395]
[64.48577881 798.64495850]
[77.04069519 777.02612305]
[101.65775299 772.66717529]
[119.86697388 755.53753662]
[125.72051239 731.23248291]
[117.30635834 707.69097900]
[97.37291718 692.60266113]
[96.03689575 667.63836670]
[94.70087433 642.67407227]
[93.36486053 617.70983887]
[103.12343597 594.69305420]
[90.96405029 572.84930420]
[89.62802887 547.88507080]
[106.55715179 529.48925781]
[109.20238495 504.62960815]
[96.52335358 483.08334351]
[103.08270264 458.95916748]
[109.64205170 434.83502197]
[116.20139313 410.71087646]
[122.76074219 386.58670044]
[146.01307678 377.40362549]
[161.41403198 357.71072388]
[164.72282410 332.93063354]
[155.02832031 309.88684082]
[135.00000000 294.92468262]
[145.97467041 272.46234131]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[117.49999956 272.46233930 28.47466707 232.07849252 180.00000000 1.00000000]
[117.49999956 272.46233930 28.47466707 180.00000000 127.92150783 1.00000000]
[117.49999984 339.23611837 47.64193249 248.44935671 218.02742040 1.00000000]
[117.49999984 339.23611837 47.64193249 218.02742040 187.60548404 1.00000000]
[117.49999984 339.23611837 47.64193249 187.60548404 157.18354769 1.00000000]
[117.49999984 339.23611837 47.64193249 157.18354769 126.76161133 1.00000000]
[]
[]
[]
[]
[70.23893566 513.05421676 39.86382195 259.17122200 222.62250550 1.00000000]
[70.23893566 513.05421676 39.86382195 222.62250550 186.07378901 1.00000000]
[70.23893566 513.05421676 39.86382195 186.07378901 149.52507251 1.00000000]
[70.23893566 513.05421676 39.86382195 149.52507251 112.97635601 1.00000000]
[]
[74.68946054 596.21478576 28.47466729 229.01510178 176.93660986 1.00000000]
[74.68946054 596.21478576 28.47466729 176.93660986 124.85811793 1.00000000]
[]
[]
[]
[82.04033999 733.57011442 43.74267810 243.35424565 210.14542774 1.00000000]
[82.04033999 733.57011442 43.74267810 210.14542774 176.93660983 1.00000000]
[82.04033999 733.57011442 43.74267810 176.93660983 143.72779193 1.00000000]
[]
[]
[]
[6.25547770 864.06728610 39.86382195 274.10568161 237.55696512 1.00000000]
[6.25547770 864.06728610 39.86382195 237.55696512 201.00824862 1.00000000]
[6.25547770 864.06728610 39.86382195 201.00824862 164.45953212 1.00000000]
[6.25547770 864.06728610 39.86382195 164.45953212 127.91081562 1.00000000]
[]
[]
[-21.37390485 995.50699306 51.55595110 262.02848960 233.96552156 1.00000000]
[-21.37390485 995.50699306 51.55595110 233.96552156 205.90255352 1.00000000]
[-21.37390485 995.50699306 51.55595110 205.90255352 177.83958547 1.00000000]
[]
[]
[]
[]
[-223.08966725 1077.01771454 71.24960467 323.77880084 303.57032211 1.00000000]
[-223.08966725 1077.01771454 71.24960467 303.57032211 283.36184337 1.00000000]
[-223.08966725 1077.01771454 71.24960467 283.36184337 263.15336463 1.00000000]
[-223.08966725 1077.01771454 71.24960467 263.15336463 242.94488590 1.00000000]
[-223.08966725 1077.01771454 71.24960467 242.94488590 222.73640716 1.00000000]
[-223.08966725 1077.01771454 71.24960467 222.73640716 202.52792842 1.00000000]
[]
[]
[]
[]
[-421.52786519 1048.03431761 36.01426010 339.23704747 298.61883161 1.00000000]
[-421.52786519 1048.03431761 36.01426010 298.61883161 258.00061576 1.00000000]
[-421.52786519 1048.03431761 36.01426010 258.00061576 217.38239991 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-1141.84556580 942.82647935 73.59467347 354.55364473 334.99553637 1.00000000]
[-1141.84556580 942.82647935 73.59467347 334.99553637 315.43742801 1.00000000]
[-1141.84556580 942.82647935 73.59467347 315.43742801 295.87931966 1.00000000]
[-1141.84556580 942.82647935 73.59467347 295.87931966 276.32121130 1.00000000]
[-1141.84556580 942.82647935 73.59467347 276.32121130 256.76310294 1.00000000]
[-1141.84556580 942.82647935 73.59467347 256.76310294 237.20499458 1.00000000]
[-1141.84556580 942.82647935 73.59467347 237.20499458 217.64688622 1.00000000]
[-1141.84556580 942.82647935 73.59467347 217.64688622 198.08877786 1.00000000]
[-1141.84556580 942.82647935 73.59467347 198.08877786 178.53066951 1.00000000]
[-1141.84556580 942.82647935 73.59467347 178.53066951 158.97256115 1.00000000]
[-1141.84556580 942.82647935 73.59467347 158.97256115 139.41445279 1.00000000]
[-1141.84556580 942.82647935 73.59467347 139.41445279 119.85634443 1.00000000]
[-1141.84556580 942.82647935 73.59467347 119.85634443 100.29823607 1.00000000]
[-1141.84556580 942.82647935 73.59467347 100.29823607 80.74012772 1.00000000]
[-1141.84556580 942.82647935 73.59467347 80.74012772 61.18201936 1.00000000]
[-1141.84556580 942.82647935 73.59467347 61.18201936 41.62391100 1.00000000]
[-1141.84556580 942.82647935 73.59467347 41.62391100 22.06580264 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-421.52786519 1048.03431761 36.01426010 159.23704747 118.61883161 1.00000000]
[-421.52786519 1048.03431761 36.01426010 118.61883161 78.00061576 1.00000000]
[-421.52786519 1048.03431761 36.01426010 78.00061576 37.38239991 1.00000000]
[]
[]
[]
[]
[-223.08966725 1077.01771454 71.24960467 174.09151895 153.88304021 1.00000000]
[-223.08966725 1077.01771454 71.24960467 153.88304021 133.67456147 1.00000000]
[-223.08966725 1077.01771454 71.24960467 133.67456147 113.46608274 1.00000000]
[-223.08966725 1077.01771454 71.24960467 113.46608274 93.25760400 1.00000000]
[-223.08966725 1077.01771454 71.24960467 93.25760400 73.04912527 1.00000000]
[-223.08966725 1077.01771454 71.24960467 73.04912527 52.84064653 1.00000000]
[-223.08966725 1077.01771454 71.24960467 52.84064653 32.63216779 1.00000000]
[-223.08966725 1077.01771454 71.24960467 32.63216779 12.42368906 1.00000000]
[-223.08966725 1077.01771454 71.24960467 12.42368906 352.21521032 1.00000000]
[]
[]
[]
[]
[-21.37390485 995.50699306 51.55595110 138.15442569 110.09145765 1.00000000]
[-21.37390485 995.50699306 51.55595110 110.09145765 82.02848960 1.00000000]
[-21.37390485 995.50699306 51.55595110 82.02848960 53.96552156 1.00000000]
[-21.37390485 995.50699306 51.55595110 53.96552156 25.90255352 1.00000000]
[-21.37390485 995.50699306 51.55595110 25.90255352 357.83958547 1.00000000]
[-21.37390485 995.50699306 51.55595110 357.83958547 329.77661743 1.00000000]
[-21.37390485 995.50699306 51.55595110 329.77661743 301.71364939 1.00000000]
[]
[]
[6.25547770 864.06728610 39.86382195 75.83132336 39.28260687 1.00000000]
[6.25547770 864.06728610 39.86382195 39.28260687 2.73389037 1.00000000]
[6.25547770 864.06728610 39.86382195 2.73389037 326.18517387 1.00000000]
[]
[]
[]
[82.04033999 733.57011442 43.74267810 96.56306356 63.35424565 1.00000000]
[82.04033999 733.57011442 43.74267810 63.35424565 30.14542774 1.00000000]
[82.04033999 733.57011442 43.74267810 30.14542774 356.93660983 1.00000000]
[82.04033999 733.57011442 43.74267810 356.93660983 323.72779193 1.00000000]
[82.04033999 733.57011442 43.74267810 323.72779193 290.51897402 1.00000000]
[]
[]
[]
[74.68946054 596.21478576 28.47466729 49.01510174 356.93660981 1.00000000]
[74.68946054 596.21478576 28.47466729 356.93660981 304.85811798 1.00000000]
[]
[70.23893566 513.05421676 39.86382195 60.89686375 24.34814725 1.00000000]
[70.23893566 513.05421676 39.86382195 24.34814725 347.79943076 1.00000000]
[70.23893566 513.05421676 39.86382195 347.79943076 311.25071426 1.00000000]
[]
[]
[]
[]
[117.49999984 339.23611837 47.64193249 83.66032493 53.23838857 1.00000000]
[117.49999984 339.23611837 47.64193249 53.23838857 22.81645222 1.00000000]
[117.49999984 339.23611837 47.64193249 22.81645222 352.39451586 1.00000000]
[117.49999984 339.23611837 47.64193249 352.39451586 321.97257951 1.00000000]
[117.49999984 339.23611837 47.64193249 321.97257951 291.55064311 1.00000000]
[117.49999956 272.46233930 28.47466707 52.07849112 360.00000000 1.00000000]
[117.49999956 272.46233930 28.47466707 360.00000000 307.92150819 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[9 184]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[21 172]
[22 171]
[24 169]
[25 168]
[26 167]
[27 166]
[30 161]
[31 160]
[32 159]
[33 158]
[37 155]
[38 154]
[39 153]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
[75 110]
[76 109]
[77 108]
[78 107]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
] def

init

% Start Annotations
101 133 12 1.00 0.60 0.67 omark 52 84 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
