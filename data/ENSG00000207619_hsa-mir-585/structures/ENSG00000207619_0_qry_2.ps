%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:49 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGUCUGAAAGGAUGAUUGCUGUUGUAAGGCACCCAGUUUGUGGUACAUUGUUAUGGCAGCCCUAGCACACAGAUACGCCCAACGUUCAGGCUUUAUCUGGGCRUAUCUGUGUGCUAGGGCUGCCAUAGCACAGACACCCCACACGCCCCCUGCAGCCUCCCCCAGCUGCUCCAUCUCGUGCUGGCUUCUCC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[89.02532959 272.46234131]
[100.00000000 294.92468262]
[79.97168732 309.88684082]
[70.27717590 332.93063354]
[73.58596039 357.71072388]
[88.98692322 377.40362549]
[82.42757416 401.52777100]
[75.86822510 425.65194702]
[69.30888367 449.77609253]
[62.74953461 473.90023804]
[37.80814743 475.61114502]
[14.29219532 484.09643555]
[-5.99515486 498.70547485]
[-26.44713974 484.32781982]
[-46.89912415 469.95019531]
[-67.35111237 455.57257080]
[-72.22446442 431.05215454]
[-91.21396637 414.79180908]
[-116.19228363 413.75082397]
[-136.46891785 428.37469482]
[-143.36566162 452.40457153]
[-133.93075562 475.55587769]
[-112.20227814 487.92004395]
[-87.47979736 484.20535278]
[-67.02780914 498.58297729]
[-46.57582474 512.96063232]
[-26.12384033 527.33825684]
[-33.00296783 551.37316895]
[-33.02697372 576.37316895]
[-26.19402313 600.42126465]
[-13.02805233 621.67346191]
[5.46139288 638.50024414]
[-4.37487459 661.48388672]
[-23.30220985 677.81658936]
[-22.05051994 702.78521729]
[-31.88678741 725.76885986]
[-41.72305679 748.75250244]
[-51.55932236 771.73614502]
[-61.39558792 794.71978760]
[-86.39052582 795.22283936]
[-109.67304230 804.32916260]
[-128.37667847 820.91754150]
[-140.19871521 842.94567871]
[-143.68367004 867.70159912]
[-138.40248108 892.13739014]
[-158.49426270 907.01422119]
[-178.58602905 921.89111328]
[-198.67781067 936.76794434]
[-218.76959229 951.64477539]
[-238.86135864 966.52166748]
[-258.95312500 981.39849854]
[-279.04492188 996.27532959]
[-299.13668823 1011.15216064]
[-319.22845459 1026.02905273]
[-339.32022095 1040.90588379]
[-359.41201782 1055.78271484]
[-379.50378418 1070.65954590]
[-399.59555054 1085.53637695]
[-419.68734741 1100.41320801]
[-439.77911377 1115.29016113]
[-459.87088013 1130.16699219]
[-479.96264648 1145.04382324]
[-500.05444336 1159.92065430]
[-520.14624023 1174.79748535]
[-540.23797607 1189.67431641]
[-560.32977295 1204.55114746]
[-580.42150879 1219.42797852]
[-600.51330566 1234.30493164]
[-620.60510254 1249.18176270]
[-640.69683838 1264.05859375]
[-660.78863525 1278.93542480]
[-685.37170410 1283.48217773]
[-696.89331055 1305.66894531]
[-716.98504639 1320.54577637]
[-737.07684326 1335.42260742]
[-757.16864014 1350.29943848]
[-777.26037598 1365.17626953]
[-798.92260742 1352.69641113]
[-823.51275635 1348.18811035]
[-848.19329834 1352.17199707]
[-870.11621094 1364.18798828]
[-886.75170898 1382.84973145]
[-896.18011475 1406.00366211]
[-897.31347656 1430.97802734]
[-890.02093506 1454.89074707]
[-875.14410400 1474.98254395]
[-854.39965820 1488.93481445]
[-830.18139648 1495.13769531]
[-805.28393555 1492.87524414]
[-782.58044434 1482.40856934]
[-764.69067383 1464.94555664]
[-753.67907715 1442.50134277]
[-750.81634521 1417.66577148]
[-756.43280029 1393.30480957]
[-736.34106445 1378.42797852]
[-716.24926758 1363.55114746]
[-696.15747070 1348.67431641]
[-676.06573486 1333.79736328]
[-651.48266602 1329.25073242]
[-639.96105957 1307.06396484]
[-619.86926270 1292.18701172]
[-599.77752686 1277.31018066]
[-579.68572998 1262.43334961]
[-559.59393311 1247.55651855]
[-539.50219727 1232.67968750]
[-519.41040039 1217.80285645]
[-499.31863403 1202.92602539]
[-479.22683716 1188.04919434]
[-459.13507080 1173.17224121]
[-439.04330444 1158.29541016]
[-418.95153809 1143.41857910]
[-398.85974121 1128.54174805]
[-378.76797485 1113.66491699]
[-358.67620850 1098.78808594]
[-338.58441162 1083.91125488]
[-318.49264526 1069.03430176]
[-298.40087891 1054.15747070]
[-278.30911255 1039.28063965]
[-258.21731567 1024.40380859]
[-238.12554932 1009.52697754]
[-218.03376770 994.65014648]
[-197.94200134 979.77325439]
[-177.85021973 964.89642334]
[-157.75845337 950.01959229]
[-137.66667175 935.14276123]
[-117.57489777 920.26586914]
[-95.74326324 932.44702148]
[-71.04773712 936.33685303]
[-46.52872467 931.45642090]
[-25.20492172 918.40673828]
[-9.70163250 898.79425049]
[-1.92756236 875.03369141]
[-2.83982468 850.05035400]
[-12.32610512 826.92010498]
[-29.21848869 808.49053955]
[-19.38222313 785.50689697]
[-9.54595470 762.52325439]
[0.29031250 739.53961182]
[10.12658024 716.55596924]
[29.05391693 700.22332764]
[27.80222511 675.25463867]
[37.63849258 652.27099609]
[62.57654953 654.02984619]
[87.04084015 648.88214111]
[109.15547943 637.22271729]
[127.22475433 619.94555664]
[139.86314392 598.37536621]
[146.10156250 574.16625977]
[171.01802063 572.12426758]
[195.93449402 570.08233643]
[220.85095215 568.04034424]
[245.76742554 565.99835205]
[263.90670776 583.20202637]
[288.60290527 587.08764648]
[311.14859009 576.28521729]
[323.59454346 554.60345459]
[321.55258179 529.68701172]
[305.74264526 510.32089233]
[281.73901367 503.33331299]
[258.00497437 511.18789673]
[242.90867615 531.11529541]
[217.99220276 533.15728760]
[193.07572937 535.19927979]
[168.15927124 537.24121094]
[143.24279785 539.28320312]
[133.14608765 516.41278076]
[117.16446686 497.18811035]
[96.52335358 483.08334351]
[103.08270264 458.95916748]
[109.64205170 434.83502197]
[116.20139313 410.71087646]
[122.76074219 386.58670044]
[146.01307678 377.40362549]
[161.41403198 357.71072388]
[164.72282410 332.93063354]
[155.02832031 309.88684082]
[135.00000000 294.92468262]
[145.97467041 272.46234131]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[117.49999953 272.46233930 28.47466707 232.07849252 180.00000000 1.00000000]
[117.49999953 272.46233930 28.47466707 180.00000000 127.92150783 1.00000000]
[117.49999981 339.23611837 47.64193249 248.44935671 218.02742040 1.00000000]
[117.49999981 339.23611837 47.64193249 218.02742040 187.60548404 1.00000000]
[117.49999981 339.23611837 47.64193249 187.60548404 157.18354769 1.00000000]
[117.49999981 339.23611837 47.64193249 157.18354769 126.76161133 1.00000000]
[]
[]
[]
[]
[56.39794031 563.95902666 90.28247940 274.03423071 258.11740126 1.00000000]
[56.39794031 563.95902666 90.28247940 258.11740126 242.20057181 1.00000000]
[56.39794031 563.95902666 90.28247940 242.20057181 226.28374236 1.00000000]
[]
[]
[]
[-105.20681849 450.35178046 38.21401848 7.85228641 329.66596604 1.00000000]
[-105.20681849 450.35178046 38.21401848 329.66596604 291.47964568 1.00000000]
[-105.20681849 450.35178046 38.21401848 291.47964568 253.29332531 1.00000000]
[-105.20681849 450.35178046 38.21401848 253.29332531 215.10700494 1.00000000]
[-105.20681849 450.35178046 38.21401848 215.10700494 176.92068458 1.00000000]
[-105.20681849 450.35178046 38.21401848 176.92068458 138.73436421 1.00000000]
[-105.20681849 450.35178046 38.21401848 138.73436421 100.54804384 1.00000000]
[-105.20681849 450.35178046 38.21401848 100.54804384 62.36172348 1.00000000]
[]
[]
[]
[56.39794031 563.95902666 90.28247940 203.93026752 188.01343807 1.00000000]
[56.39794031 563.95902666 90.28247940 188.01343807 172.09660862 1.00000000]
[56.39794031 563.95902666 90.28247940 172.09660862 156.17977917 1.00000000]
[56.39794031 563.95902666 90.28247940 156.17977917 140.26294972 1.00000000]
[56.39794031 563.95902666 90.28247940 140.26294972 124.34612027 1.00000000]
[]
[2.87585268 689.01993706 28.47466729 255.24787476 203.16938283 1.00000000]
[2.87585268 689.01993706 28.47466729 203.16938283 151.09089090 1.00000000]
[]
[]
[]
[]
[-72.48151493 865.10165281 71.24960467 278.95117807 258.74269933 1.00000000]
[-72.48151493 865.10165281 71.24960467 258.74269933 238.53422060 1.00000000]
[-72.48151493 865.10165281 71.24960467 238.53422060 218.32574186 1.00000000]
[-72.48151493 865.10165281 71.24960467 218.32574186 198.11726312 1.00000000]
[-72.48151493 865.10165281 71.24960467 198.11726312 177.90878439 1.00000000]
[-72.48151493 865.10165281 71.24960467 177.90878439 157.70030565 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-668.42717338 1306.36641895 28.47466729 285.56059282 233.48210089 1.00000000]
[-668.42717338 1306.36641895 28.47466729 233.48210089 181.40360896 1.00000000]
[]
[]
[]
[]
[-824.29601754 1421.77866872 73.59467347 309.72602191 290.16791355 1.00000000]
[-824.29601754 1421.77866872 73.59467347 290.16791355 270.60980519 1.00000000]
[-824.29601754 1421.77866872 73.59467347 270.60980519 251.05169683 1.00000000]
[-824.29601754 1421.77866872 73.59467347 251.05169683 231.49358848 1.00000000]
[-824.29601754 1421.77866872 73.59467347 231.49358848 211.93548012 1.00000000]
[-824.29601754 1421.77866872 73.59467347 211.93548012 192.37737176 1.00000000]
[-824.29601754 1421.77866872 73.59467347 192.37737176 172.81926340 1.00000000]
[-824.29601754 1421.77866872 73.59467347 172.81926340 153.26115504 1.00000000]
[-824.29601754 1421.77866872 73.59467347 153.26115504 133.70304669 1.00000000]
[-824.29601754 1421.77866872 73.59467347 133.70304669 114.14493833 1.00000000]
[-824.29601754 1421.77866872 73.59467347 114.14493833 94.58682997 1.00000000]
[-824.29601754 1421.77866872 73.59467347 94.58682997 75.02872161 1.00000000]
[-824.29601754 1421.77866872 73.59467347 75.02872161 55.47061325 1.00000000]
[-824.29601754 1421.77866872 73.59467347 55.47061325 35.91250490 1.00000000]
[-824.29601754 1421.77866872 73.59467347 35.91250490 16.35439654 1.00000000]
[-824.29601754 1421.77866872 73.59467347 16.35439654 356.79628818 1.00000000]
[-824.29601754 1421.77866872 73.59467347 356.79628818 337.23817982 1.00000000]
[]
[]
[]
[]
[-668.42717338 1306.36641895 28.47466729 105.56059277 53.48210084 1.00000000]
[-668.42717338 1306.36641895 28.47466729 53.48210084 1.40360901 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-72.48151493 865.10165281 71.24960467 129.26389618 109.05541744 1.00000000]
[-72.48151493 865.10165281 71.24960467 109.05541744 88.84693870 1.00000000]
[-72.48151493 865.10165281 71.24960467 88.84693870 68.63845997 1.00000000]
[-72.48151493 865.10165281 71.24960467 68.63845997 48.42998123 1.00000000]
[-72.48151493 865.10165281 71.24960467 48.42998123 28.22150249 1.00000000]
[-72.48151493 865.10165281 71.24960467 28.22150249 8.01302376 1.00000000]
[-72.48151493 865.10165281 71.24960467 8.01302376 347.80454502 1.00000000]
[-72.48151493 865.10165281 71.24960467 347.80454502 327.59606628 1.00000000]
[-72.48151493 865.10165281 71.24960467 327.59606628 307.38758755 1.00000000]
[]
[]
[]
[]
[2.87585268 689.01993706 28.47466729 75.24787471 23.16938278 1.00000000]
[2.87585268 689.01993706 28.47466729 23.16938278 331.09089095 1.00000000]
[]
[56.39794031 563.95902666 90.28247940 101.99264544 86.07581599 1.00000000]
[56.39794031 563.95902666 90.28247940 86.07581599 70.15898654 1.00000000]
[56.39794031 563.95902666 90.28247940 70.15898654 54.24215709 1.00000000]
[56.39794031 563.95902666 90.28247940 54.24215709 38.32532764 1.00000000]
[56.39794031 563.95902666 90.28247940 38.32532764 22.40849819 1.00000000]
[56.39794031 563.95902666 90.28247940 22.40849819 6.49166874 1.00000000]
[]
[]
[]
[]
[282.50355503 545.42908157 42.10271758 150.75466643 116.21250307 1.00000000]
[282.50355503 545.42908157 42.10271758 116.21250307 81.67033971 1.00000000]
[282.50355503 545.42908157 42.10271758 81.67033971 47.12817635 1.00000000]
[282.50355503 545.42908157 42.10271758 47.12817635 12.58601300 1.00000000]
[282.50355503 545.42908157 42.10271758 12.58601300 338.04384964 1.00000000]
[282.50355503 545.42908157 42.10271758 338.04384964 303.50168628 1.00000000]
[282.50355503 545.42908157 42.10271758 303.50168628 268.95952292 1.00000000]
[282.50355503 545.42908157 42.10271758 268.95952292 234.41735956 1.00000000]
[282.50355503 545.42908157 42.10271758 234.41735956 199.87519621 1.00000000]
[]
[]
[]
[]
[56.39794031 563.95902666 90.28247940 344.13819390 328.22136445 1.00000000]
[56.39794031 563.95902666 90.28247940 328.22136445 312.30453500 1.00000000]
[56.39794031 563.95902666 90.28247940 312.30453500 296.38770555 1.00000000]
[]
[]
[]
[]
[117.49999981 339.23611837 47.64193249 83.66032493 53.23838857 1.00000000]
[117.49999981 339.23611837 47.64193249 53.23838857 22.81645222 1.00000000]
[117.49999981 339.23611837 47.64193249 22.81645222 352.39451586 1.00000000]
[117.49999981 339.23611837 47.64193249 352.39451586 321.97257951 1.00000000]
[117.49999981 339.23611837 47.64193249 321.97257951 291.55064311 1.00000000]
[117.49999953 272.46233930 28.47466707 52.07849112 360.00000000 1.00000000]
[117.49999953 272.46233930 28.47466707 360.00000000 307.92150819 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[9 184]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[20 34]
[21 33]
[22 32]
[23 31]
[39 149]
[40 148]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
[75 110]
[76 109]
[77 108]
[78 107]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
] def

init

% Start Annotations
101 133 12 1.00 0.60 0.67 omark 52 84 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
