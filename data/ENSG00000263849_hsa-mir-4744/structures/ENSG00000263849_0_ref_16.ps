%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGACAUUAAAAUGACAUGCAAAUGUAAGGUAUGCUCUUAUAAYGUUCAGUAAUCAAACCUAAAGACUAGAAAUACUGUGACUGGCCUGGUCAUAAGCCCAUUUCUCUUAUGCCACCCAACRGACA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[76.35838318 208.12858582]
[55.81914139 222.38128662]
[39.93108368 241.68334961]
[29.89228058 264.57925415]
[26.45973206 289.34249878]
[29.89228058 314.10571289]
[39.93108368 337.00161743]
[55.81914139 356.30368042]
[76.35838318 370.55639648]
[100.00000000 378.68496704]
[100.00000000 403.68496704]
[100.00000000 428.68496704]
[100.00000000 453.68496704]
[100.00000000 478.68496704]
[100.00000000 503.68496704]
[100.00000000 528.68499756]
[80.33205414 544.11779785]
[71.63780212 567.55731201]
[76.48418427 592.08306885]
[93.44033051 610.45391846]
[117.50000000 617.24597168]
[141.55967712 610.45391846]
[158.51582336 592.08306885]
[163.36219788 567.55731201]
[154.66795349 544.11779785]
[135.00000000 528.68499756]
[135.00000000 503.68496704]
[135.00000000 478.68496704]
[135.00000000 453.68496704]
[135.00000000 428.68496704]
[156.65063477 416.18496704]
[135.00000000 403.68496704]
[135.00000000 378.68496704]
[158.64161682 370.55639648]
[179.18086243 356.30368042]
[195.06892395 337.00161743]
[205.10772705 314.10571289]
[208.54026794 289.34249878]
[205.10772705 264.57925415]
[195.06892395 241.68334961]
[179.18086243 222.38128662]
[158.64161682 208.12858582]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[785.00000000 125.00000000]
[785.00000000 150.00000000]
[764.97167969 164.96217346]
[755.27716064 188.00596619]
[758.58593750 212.78604126]
[773.98693848 232.47894287]
[767.42755127 256.60308838]
[760.86822510 280.72726440]
[741.86810303 296.97518921]
[740.21429443 321.92041016]
[756.90313721 340.53445435]
[760.22027588 365.31341553]
[763.53741455 390.09234619]
[743.73675537 405.35458374]
[766.85455322 414.87130737]
[770.17169189 439.65026855]
[773.48889160 464.42922974]
[776.80603027 489.20816040]
[780.12316895 513.98712158]
[783.44030762 538.76605225]
[765.99395752 556.67211914]
[760.48669434 581.05798340]
[768.54443359 604.72381592]
[787.78820801 620.68243408]
[812.53637695 624.22204590]
[835.48211670 614.29766846]
[849.85076904 593.83935547]
[851.40008545 568.88739014]
[839.67260742 546.80877686]
[818.13085938 534.12207031]
[814.81372070 509.34310913]
[811.49652100 484.56414795]
[808.17938232 459.78521729]
[804.86224365 435.00625610]
[801.54510498 410.22729492]
[798.22796631 385.44836426]
[794.91076660 360.66940308]
[791.59362793 335.89044189]
[802.79888916 313.54223633]
[794.64202881 289.91033936]
[801.20141602 265.78619385]
[807.76074219 241.66203308]
[831.01306152 232.47894287]
[846.41406250 212.78604126]
[849.72283936 188.00596619]
[840.02832031 164.96217346]
[820.00000000 150.00000000]
[820.00000000 125.00000000]
[820.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[117.50000000 289.34248861 91.04026730 258.91747691 243.13398153 1.00000000]
[117.50000000 289.34248861 91.04026730 243.13398153 227.35048615 1.00000000]
[117.50000000 289.34248861 91.04026730 227.35048615 211.56699076 1.00000000]
[117.50000000 289.34248861 91.04026730 211.56699076 195.78349538 1.00000000]
[117.50000000 289.34248861 91.04026730 195.78349538 180.00000000 1.00000000]
[117.50000000 289.34248861 91.04026730 180.00000000 164.21650462 1.00000000]
[117.50000000 289.34248861 91.04026730 164.21650462 148.43300924 1.00000000]
[117.50000000 289.34248861 91.04026730 148.43300924 132.64951385 1.00000000]
[117.50000000 289.34248861 91.04026730 132.64951385 116.86601847 1.00000000]
[117.50000000 289.34248861 91.04026730 116.86601847 101.08252309 1.00000000]
[]
[]
[]
[]
[]
[]
[117.50000000 571.23644908 46.00953986 247.64427026 216.11541621 1.00000000]
[117.50000000 571.23644908 46.00953986 216.11541621 184.58656216 1.00000000]
[117.50000000 571.23644908 46.00953986 184.58656216 153.05770810 1.00000000]
[117.50000000 571.23644908 46.00953986 153.05770810 121.52885405 1.00000000]
[117.50000000 571.23644908 46.00953986 121.52885405 90.00000000 1.00000000]
[117.50000000 571.23644908 46.00953986 90.00000000 58.47114595 1.00000000]
[117.50000000 571.23644908 46.00953986 58.47114595 26.94229190 1.00000000]
[117.50000000 571.23644908 46.00953986 26.94229190 355.41343784 1.00000000]
[117.50000000 571.23644908 46.00953986 355.41343784 323.88458379 1.00000000]
[117.50000000 571.23644908 46.00953986 323.88458379 292.35572974 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[117.50000000 289.34248861 91.04026730 78.91747691 63.13398153 1.00000000]
[117.50000000 289.34248861 91.04026730 63.13398153 47.35048615 1.00000000]
[117.50000000 289.34248861 91.04026730 47.35048615 31.56699076 1.00000000]
[117.50000000 289.34248861 91.04026730 31.56699076 15.78349538 1.00000000]
[117.50000000 289.34248861 91.04026730 15.78349538 360.00000000 1.00000000]
[117.50000000 289.34248861 91.04026730 360.00000000 344.21650462 1.00000000]
[117.50000000 289.34248861 91.04026730 344.21650462 328.43300924 1.00000000]
[117.50000000 289.34248861 91.04026730 328.43300924 312.64951385 1.00000000]
[117.50000000 289.34248861 91.04026730 312.64951385 296.86601847 1.00000000]
[117.50000000 289.34248861 91.04026730 296.86601847 281.08252309 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[802.50000000 194.31144019 47.64193249 248.44935680 218.02742044 1.00000000]
[802.50000000 194.31144019 47.64193249 218.02742044 187.60548409 1.00000000]
[802.50000000 194.31144019 47.64193249 187.60548409 157.18354773 1.00000000]
[802.50000000 194.31144019 47.64193249 157.18354773 126.76161138 1.00000000]
[]
[]
[770.66054247 311.41151061 32.20889362 252.30047604 206.62886975 1.00000000]
[770.66054247 311.41151061 32.20889362 206.62886975 160.95726346 1.00000000]
[770.66054247 311.41151061 32.20889362 160.95726346 115.28565717 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[806.43156549 578.61930963 46.00953986 240.01943529 208.49058124 1.00000000]
[806.43156549 578.61930963 46.00953986 208.49058124 176.96172719 1.00000000]
[806.43156549 578.61930963 46.00953986 176.96172719 145.43287314 1.00000000]
[806.43156549 578.61930963 46.00953986 145.43287314 113.90401908 1.00000000]
[806.43156549 578.61930963 46.00953986 113.90401908 82.37516503 1.00000000]
[806.43156549 578.61930963 46.00953986 82.37516503 50.84631098 1.00000000]
[806.43156549 578.61930963 46.00953986 50.84631098 19.31745693 1.00000000]
[806.43156549 578.61930963 46.00953986 19.31745693 347.78860288 1.00000000]
[806.43156549 578.61930963 46.00953986 347.78860288 316.25974882 1.00000000]
[806.43156549 578.61930963 46.00953986 316.25974882 284.73089477 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[770.66054247 311.41151061 32.20889362 49.46467289 3.79306660 1.00000000]
[770.66054247 311.41151061 32.20889362 3.79306660 318.12146032 1.00000000]
[]
[]
[802.50000000 194.31144019 47.64193249 83.66032498 53.23838862 1.00000000]
[802.50000000 194.31144019 47.64193249 53.23838862 22.81645227 1.00000000]
[802.50000000 194.31144019 47.64193249 22.81645227 352.39451591 1.00000000]
[802.50000000 194.31144019 47.64193249 352.39451591 321.97257956 1.00000000]
[802.50000000 194.31144019 47.64193249 321.97257956 291.55064320 1.00000000]
[]
[]
] def
/pairs [
[1 52]
[2 51]
[3 50]
[4 49]
[5 48]
[15 38]
[16 37]
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[78 127]
[79 126]
[80 125]
[84 120]
[85 119]
[86 118]
[89 116]
[90 115]
[91 114]
[93 113]
[94 112]
[95 111]
[96 110]
[97 109]
[98 108]
] def

init

% Start Annotations
97 97 12 1.00 0.60 0.67 omark 48 72 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
