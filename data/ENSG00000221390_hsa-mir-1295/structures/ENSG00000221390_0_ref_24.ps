%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUCUAAAGCCAGAAUGAUGUAUUUCCCUCACCUUCUUUGGUCACUGAGRAAGUACUUUAUGAYUAGGCCACAGGUCURGGURAAAUGUCUUUCUUUCUCAGGAGCUCCCCAAACAAUAAAUCAGUAAAUUGUCUGAAUUUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[125.00000000 200.00000000]
[105.90137482 216.13203430]
[98.75732422 240.08955383]
[105.90137482 264.04705811]
[125.00000000 280.17910767]
[125.00000000 305.17910767]
[125.00000000 330.17910767]
[104.24338531 344.11334229]
[92.48234558 366.17410278]
[92.48234558 391.17410278]
[104.24338531 413.23489380]
[92.48234558 435.29565430]
[80.72129822 457.35644531]
[68.96025848 479.41720581]
[48.70865250 494.07574463]
[47.82582092 519.06018066]
[36.06478119 541.12091064]
[24.30373955 563.18170166]
[12.54269791 585.24249268]
[0.78165722 607.30328369]
[-10.97938347 629.36401367]
[-33.11760330 640.97863770]
[-40.27865601 664.93109131]
[-28.14828873 686.79095459]
[-30.42590714 711.68701172]
[-32.70352554 736.58300781]
[-50.64009094 753.99798584]
[-75.59248352 755.54003906]
[-100.54488373 757.08209229]
[-121.14854431 742.92266846]
[-145.89418030 746.47985840]
[-161.67520142 765.86950684]
[-160.13313293 790.82189941]
[-142.08473206 808.12091064]
[-117.08940887 808.60406494]
[-98.38598633 792.01544189]
[-73.43359375 790.47338867]
[-48.48119354 788.93133545]
[-28.53681183 804.00518799]
[-3.58441591 802.46313477]
[14.35214806 785.04821777]
[16.62976646 760.15216064]
[2.15092039 739.77166748]
[4.42853880 714.87567139]
[6.70615721 689.97961426]
[22.60167122 670.68371582]
[19.90570450 645.82952881]
[31.66674614 623.76873779]
[43.42778778 601.70794678]
[55.18882751 579.64715576]
[66.94986725 557.58636475]
[78.71090698 535.52563477]
[98.96251678 520.86706543]
[99.84535217 495.88269043]
[111.60639191 473.82189941]
[123.36743164 451.76110840]
[135.12847900 429.70034790]
[160.00000000 427.16912842]
[180.75662231 413.23489380]
[192.51765442 391.17410278]
[192.51765442 366.17410278]
[180.75662231 344.11334229]
[160.00000000 330.17910767]
[160.00000000 305.17910767]
[160.00000000 280.17910767]
[179.09863281 264.04705811]
[186.24267578 240.08955383]
[179.09863281 216.13203430]
[160.00000000 200.00000000]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[785.00000000 125.00000000]
[769.59667969 144.69104004]
[771.62066650 169.60896301]
[790.00000000 186.55593872]
[815.00000000 186.55593872]
[833.37933350 169.60896301]
[835.40332031 144.69104004]
[820.00000000 125.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
[1020.00000000 100.00000000]
[1045.00000000 100.00000000]
[1070.00000000 100.00000000]
[1095.00000000 100.00000000]
[1095.00000000 125.00000000]
[1095.00000000 150.00000000]
[1095.00000000 175.00000000]
[1076.37219238 191.67350769]
[1070.48242188 215.96980286]
[1079.40722656 239.32247925]
[1100.00000000 253.49780273]
[1125.00000000 253.49780273]
[1145.59277344 239.32247925]
[1154.51757812 215.96980286]
[1148.62780762 191.67350769]
[1130.00000000 175.00000000]
[1130.00000000 150.00000000]
[1130.00000000 125.00000000]
[1130.00000000 100.00000000]
[1155.00000000 100.00000000]
[1180.00000000 100.00000000]
[1205.00000000 100.00000000]
[1230.00000000 100.00000000]
[1255.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[142.49999991 240.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[142.49999991 240.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[142.49999991 240.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[142.49999991 240.08954835 43.74267810 146.79118209 113.58236418 1.00000000]
[]
[]
[142.49999991 378.67410773 51.55595110 250.15742011 222.09445206 1.00000000]
[142.49999991 378.67410773 51.55595110 222.09445206 194.03148402 1.00000000]
[142.49999991 378.67410773 51.55595110 194.03148402 165.96851598 1.00000000]
[142.49999991 378.67410773 51.55595110 165.96851598 137.90554794 1.00000000]
[]
[]
[]
[73.83558502 507.47141429 28.47466729 260.14145995 208.06296802 1.00000000]
[73.83558502 507.47141429 28.47466729 208.06296802 155.98447609 1.00000000]
[]
[]
[]
[]
[]
[-8.25759181 661.45772729 32.20889362 265.15247586 219.48086957 1.00000000]
[-8.25759181 661.45772729 32.20889362 219.48086957 173.80926328 1.00000000]
[-8.25759181 661.45772729 32.20889362 173.80926328 128.13765699 1.00000000]
[]
[]
[-18.14397079 769.52307291 36.01426010 246.15448863 205.53627278 1.00000000]
[]
[]
[-128.96871401 776.37208435 34.35139098 325.83700787 283.15889035 1.00000000]
[-128.96871401 776.37208435 34.35139098 283.15889035 240.48077283 1.00000000]
[-128.96871401 776.37208435 34.35139098 240.48077283 197.80265532 1.00000000]
[-128.96871401 776.37208435 34.35139098 197.80265532 155.12453780 1.00000000]
[-128.96871401 776.37208435 34.35139098 155.12453780 112.44642028 1.00000000]
[-128.96871401 776.37208435 34.35139098 112.44642028 69.76830277 1.00000000]
[-128.96871401 776.37208435 34.35139098 69.76830277 27.09018525 1.00000000]
[]
[]
[-18.14397079 769.52307291 36.01426010 147.39092034 106.77270448 1.00000000]
[-18.14397079 769.52307291 36.01426010 106.77270448 66.15448863 1.00000000]
[-18.14397079 769.52307291 36.01426010 66.15448863 25.53627278 1.00000000]
[-18.14397079 769.52307291 36.01426010 25.53627278 344.91805692 1.00000000]
[-18.14397079 769.52307291 36.01426010 344.91805692 304.29984107 1.00000000]
[]
[]
[-8.25759181 661.45772729 32.20889362 62.31667271 16.64506642 1.00000000]
[-8.25759181 661.45772729 32.20889362 16.64506642 330.97346013 1.00000000]
[]
[]
[]
[]
[]
[73.83558502 507.47141429 28.47466729 80.14145990 28.06296797 1.00000000]
[73.83558502 507.47141429 28.47466729 28.06296797 335.98447614 1.00000000]
[]
[]
[]
[142.49999991 378.67410773 51.55595110 98.22038815 70.15742011 1.00000000]
[142.49999991 378.67410773 51.55595110 70.15742011 42.09445206 1.00000000]
[142.49999991 378.67410773 51.55595110 42.09445206 14.03148402 1.00000000]
[142.49999991 378.67410773 51.55595110 14.03148402 345.96851598 1.00000000]
[142.49999991 378.67410773 51.55595110 345.96851598 317.90554794 1.00000000]
[142.49999991 378.67410773 51.55595110 317.90554794 289.84257989 1.00000000]
[]
[]
[142.49999991 240.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[142.49999991 240.08954835 43.74267810 33.20881791 360.00000000 1.00000000]
[142.49999991 240.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[142.49999991 240.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[802.49999942 154.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[802.49999942 154.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[802.49999942 154.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[802.49999942 154.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[802.49999942 154.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[802.49999942 154.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[802.49999942 154.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1112.49999951 213.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[1112.49999951 213.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[1112.49999951 213.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[1112.49999951 213.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[1112.49999951 213.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[1112.49999951 213.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[1112.49999951 213.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[1112.49999951 213.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[1112.49999951 213.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 78]
[3 77]
[4 76]
[5 75]
[6 74]
[10 70]
[11 69]
[12 68]
[16 62]
[17 61]
[18 60]
[19 59]
[21 57]
[22 56]
[23 55]
[24 54]
[25 53]
[26 52]
[29 50]
[30 49]
[31 48]
[32 43]
[33 42]
[34 41]
[103 112]
[104 111]
[123 138]
[124 137]
[125 136]
[126 135]
] def

init

% Start Annotations
55 57 12 1.00 0.60 0.67 omark 62 91 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
