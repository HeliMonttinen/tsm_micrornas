%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAUCUAGAGCCACAAUGAUGUAUUUCCCUCACCUUCUUUGGUCACAGAAGGAGGACAUUUCACCCAGAUCUGCRGCCUAAUCACAGGYCACAUUUAUGAUUAGGCCACGGAUCUGGGUAAAAUGUCCUCCUUUCUCAGGAGCUCCCCAAACAAUAAAUCAGUAAAUUGUAUGAAUUUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[275.00000000 125.00000000]
[275.00000000 150.00000000]
[275.00000000 175.00000000]
[258.72460938 193.97660828]
[258.72460938 218.97660828]
[275.00000000 237.95321655]
[258.72460938 256.92984009]
[258.72460938 281.92984009]
[275.00000000 300.90643311]
[275.00000000 325.90643311]
[275.00000000 350.90643311]
[251.02142334 357.97946167]
[229.39520264 370.52166748]
[211.34783936 387.82174683]
[197.90283203 408.89855957]
[189.82269287 432.55676270]
[187.56565857 457.45468140]
[191.25973511 482.18023682]
[200.69543457 505.33120728]
[215.33763123 525.59466553]
[234.35589600 541.82135010]
[256.67169189 553.09100342]
[281.01940918 558.76452637]
[306.01821899 558.52020264]
[313.32525635 582.42846680]
[320.63232422 606.33679199]
[311.65698242 629.67010498]
[320.87567139 652.90832520]
[343.40573120 663.74328613]
[367.31402588 656.43621826]
[379.93746948 634.85729980]
[374.59002686 610.43591309]
[354.10394287 596.10687256]
[346.79687500 572.19860840]
[339.48983765 548.29028320]
[360.50729370 534.38745117]
[377.60601807 515.87652588]
[389.80078125 493.82412720]
[396.38885498 469.50088501]
[396.99063110 444.30844116]
[421.12503052 437.78692627]
[445.25946045 431.26544189]
[469.39385986 424.74392700]
[493.52828979 418.22241211]
[517.66271973 411.70089722]
[541.79711914 405.17941284]
[565.93151855 398.65789795]
[590.06591797 392.13638306]
[614.20037842 385.61486816]
[638.33477783 379.09338379]
[662.46917725 372.57186890]
[686.60357666 366.05035400]
[710.73803711 359.52883911]
[735.28546143 364.26400757]
[754.10723877 347.80978394]
[778.24163818 341.28826904]
[802.37603760 334.76675415]
[826.51049805 328.24526978]
[850.64489746 321.72375488]
[874.77929688 315.20223999]
[898.91369629 308.68072510]
[923.04815674 302.15924072]
[947.18255615 295.63772583]
[971.31695557 289.11621094]
[995.45135498 282.59469604]
[1018.01654053 293.35632324]
[1042.15100098 286.83483887]
[1056.22497559 266.17269897]
[1080.35937500 259.65118408]
[1104.49377441 253.12968445]
[1128.62817383 246.60818481]
[1152.76257324 240.08666992]
[1176.89697266 233.56517029]
[1201.03137207 227.04365540]
[1225.16589355 220.52215576]
[1249.30029297 214.00064087]
[1266.43554688 232.20448303]
[1289.38464355 242.12109375]
[1314.38464355 242.12451172]
[1337.33654785 232.21418762]
[1354.47680664 214.01502991]
[1362.99523926 190.51107788]
[1361.49511719 165.55613708]
[1350.22241211 143.24189758]
[1331.02539062 127.22712708]
[1307.05163574 120.13765717]
[1282.23205566 123.13591766]
[1260.63623047 135.73030090]
[1245.80493164 155.85575867]
[1240.17016602 180.21246338]
[1216.03576660 186.73397827]
[1191.90136719 193.25547791]
[1167.76684570 199.77699280]
[1143.63244629 206.29849243]
[1119.49804688 212.82000732]
[1095.36364746 219.34150696]
[1071.22924805 225.86302185]
[1047.09484863 232.38452148]
[1024.52966309 221.62289429]
[1000.39526367 228.14439392]
[986.32128906 248.80651855]
[962.18682861 255.32803345]
[938.05242920 261.84954834]
[913.91802979 268.37103271]
[889.78363037 274.89254761]
[865.64916992 281.41406250]
[841.51477051 287.93557739]
[817.38037109 294.45709229]
[793.24597168 300.97857666]
[769.11151123 307.50009155]
[744.97711182 314.02160645]
[720.42962646 309.28643799]
[701.60791016 325.74066162]
[677.47351074 332.26217651]
[653.33905029 338.78369141]
[629.20465088 345.30520630]
[605.07025146 351.82669067]
[580.93585205 358.34820557]
[556.80139160 364.86972046]
[532.66699219 371.39123535]
[508.53259277 377.91271973]
[484.39816284 384.43423462]
[460.26376343 390.95574951]
[436.12933350 397.47726440]
[411.99493408 403.99874878]
[387.86050415 410.52026367]
[356.31869507 371.06344604]
[310.00000000 350.90643311]
[310.00000000 325.90643311]
[310.00000000 300.90643311]
[310.00000000 237.95321655]
[326.27539062 218.97660828]
[326.27539062 193.97660828]
[310.00000000 175.00000000]
[310.00000000 150.00000000]
[310.00000000 125.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[385.00000000 125.00000000]
[374.02532959 147.46234131]
[385.00000000 169.92468262]
[385.00000000 194.92468262]
[385.00000000 219.92468262]
[385.00000000 244.92468262]
[385.00000000 269.92468262]
[364.52520752 284.26980591]
[353.57092285 306.74209595]
[354.88348389 331.70761108]
[368.13381958 352.90731812]
[390.00000000 365.02633667]
[415.00000000 365.02633667]
[436.86618042 352.90731812]
[450.11651611 331.70761108]
[451.42907715 306.74209595]
[440.47482300 284.26980591]
[420.00000000 269.92468262]
[420.00000000 244.92468262]
[420.00000000 219.92468262]
[420.00000000 194.92468262]
[420.00000000 169.92468262]
[430.97467041 147.46234131]
[420.00000000 125.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[292.49999998 206.47660935 36.01426010 240.92732389 200.30910807 1.00000000]
[292.49999998 206.47660935 36.01426010 200.30910807 159.69089218 1.00000000]
[292.49999998 206.47660935 36.01426010 159.69089218 119.07267616 1.00000000]
[292.50000001 269.42982779 36.01426010 240.92732370 200.30910793 1.00000000]
[292.50000001 269.42982779 36.01426010 200.30910793 159.69089207 1.00000000]
[292.50000001 269.42982779 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[292.50000001 454.41586022 104.97833436 260.40393301 246.72681507 1.00000000]
[292.50000001 454.41586022 104.97833436 246.72681507 233.04969713 1.00000000]
[292.50000001 454.41586022 104.97833436 233.04969713 219.37257919 1.00000000]
[292.50000001 454.41586022 104.97833436 219.37257919 205.69546126 1.00000000]
[292.50000001 454.41586022 104.97833436 205.69546126 192.01834332 1.00000000]
[292.50000001 454.41586022 104.97833436 192.01834332 178.34122538 1.00000000]
[292.50000001 454.41586022 104.97833436 178.34122538 164.66410744 1.00000000]
[292.50000001 454.41586022 104.97833436 164.66410744 150.98698950 1.00000000]
[292.50000001 454.41586022 104.97833436 150.98698950 137.30987156 1.00000000]
[292.50000001 454.41586022 104.97833436 137.30987156 123.63275363 1.00000000]
[292.50000001 454.41586022 104.97833436 123.63275363 109.95563569 1.00000000]
[292.50000001 454.41586022 104.97833436 109.95563569 96.27851775 1.00000000]
[292.50000001 454.41586022 104.97833436 96.27851775 82.60139981 1.00000000]
[]
[]
[346.00789816 629.49058820 34.35139098 222.37874413 179.70062661 1.00000000]
[346.00789816 629.49058820 34.35139098 179.70062661 137.02250909 1.00000000]
[346.00789816 629.49058820 34.35139098 137.02250909 94.34439158 1.00000000]
[346.00789816 629.49058820 34.35139098 94.34439158 51.66627406 1.00000000]
[346.00789816 629.49058820 34.35139098 51.66627406 8.98815654 1.00000000]
[346.00789816 629.49058820 34.35139098 8.98815654 326.31003903 1.00000000]
[346.00789816 629.49058820 34.35139098 326.31003903 283.63192151 1.00000000]
[]
[]
[292.50000001 454.41586022 104.97833436 63.40926583 49.62240281 1.00000000]
[292.50000001 454.41586022 104.97833436 49.62240281 35.83553980 1.00000000]
[292.50000001 454.41586022 104.97833436 35.83553980 22.04867678 1.00000000]
[292.50000001 454.41586022 104.97833436 22.04867678 8.26181376 1.00000000]
[292.50000001 454.41586022 104.97833436 8.26181376 354.47495075 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[727.85756712 336.77522475 28.47466729 126.95737566 74.87888373 1.00000000]
[727.85756712 336.77522475 28.47466729 74.87888373 22.80039181 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1021.27310253 257.48961502 36.01426010 135.80620749 95.18799164 1.00000000]
[1021.27310253 257.48961502 36.01426010 95.18799164 54.56977578 1.00000000]
[1021.27310253 257.48961502 36.01426010 54.56977578 13.95155993 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[1301.89296495 181.66160250 61.73983513 148.41281504 125.05082485 1.00000000]
[1301.89296495 181.66160250 61.73983513 125.05082485 101.68883466 1.00000000]
[1301.89296495 181.66160250 61.73983513 101.68883466 78.32684447 1.00000000]
[1301.89296495 181.66160250 61.73983513 78.32684447 54.96485428 1.00000000]
[1301.89296495 181.66160250 61.73983513 54.96485428 31.60286409 1.00000000]
[1301.89296495 181.66160250 61.73983513 31.60286409 8.24087390 1.00000000]
[1301.89296495 181.66160250 61.73983513 8.24087390 344.87888371 1.00000000]
[1301.89296495 181.66160250 61.73983513 344.87888371 321.51689352 1.00000000]
[1301.89296495 181.66160250 61.73983513 321.51689352 298.15490333 1.00000000]
[1301.89296495 181.66160250 61.73983513 298.15490333 274.79291314 1.00000000]
[1301.89296495 181.66160250 61.73983513 274.79291314 251.43092295 1.00000000]
[1301.89296495 181.66160250 61.73983513 251.43092295 228.06893275 1.00000000]
[1301.89296495 181.66160250 61.73983513 228.06893275 204.70694256 1.00000000]
[1301.89296495 181.66160250 61.73983513 204.70694256 181.34495237 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[1021.27310253 257.48961502 36.01426010 315.80620749 275.18799164 1.00000000]
[1021.27310253 257.48961502 36.01426010 275.18799164 234.56977578 1.00000000]
[1021.27310253 257.48961502 36.01426010 234.56977578 193.95155993 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[727.85756712 336.77522475 28.47466729 306.95737561 254.87888369 1.00000000]
[727.85756712 336.77522475 28.47466729 254.87888369 202.80039185 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[292.50000001 454.41586022 104.97833436 335.28281676 307.43944188 1.00000000]
[292.50000001 454.41586022 104.97833436 307.43944188 279.59606699 1.00000000]
[]
[]
[292.50000001 269.42982779 36.01426010 60.92732378 299.07267614 1.00000000]
[292.49999998 206.47660935 36.01426010 60.92732360 20.30910779 1.00000000]
[292.49999998 206.47660935 36.01426010 20.30910779 339.69089197 1.00000000]
[292.49999998 206.47660935 36.01426010 339.69089197 299.07267620 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[402.50000007 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[402.50000007 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[]
[402.50000033 316.68688528 49.92949042 249.48245047 220.48564128 1.00000000]
[402.50000033 316.68688528 49.92949042 220.48564128 191.48883210 1.00000000]
[402.50000033 316.68688528 49.92949042 191.48883210 162.49202291 1.00000000]
[402.50000033 316.68688528 49.92949042 162.49202291 133.49521373 1.00000000]
[402.50000033 316.68688528 49.92949042 133.49521373 104.49840454 1.00000000]
[402.50000033 316.68688528 49.92949042 104.49840454 75.50159536 1.00000000]
[402.50000033 316.68688528 49.92949042 75.50159536 46.50478618 1.00000000]
[402.50000033 316.68688528 49.92949042 46.50478618 17.50797699 1.00000000]
[402.50000033 316.68688528 49.92949042 17.50797699 348.51116781 1.00000000]
[402.50000033 316.68688528 49.92949042 348.51116781 319.51435862 1.00000000]
[402.50000033 316.68688528 49.92949042 319.51435862 290.51754944 1.00000000]
[]
[]
[]
[]
[402.50000007 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[402.50000007 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 145]
[9 144]
[10 143]
[11 142]
[14 139]
[17 138]
[18 137]
[19 136]
[32 43]
[33 42]
[34 41]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[60 122]
[61 121]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
[72 110]
[73 109]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[148 173]
[149 172]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
] def

init

% Start Annotations
55 84 12 1.00 0.60 0.67 omark 98 127 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
