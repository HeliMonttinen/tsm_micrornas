%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCAAUCAACAGUUGUCCCCAUCAACCACUUCAUACCAGAACUCAUCCACUCUUAAUUUCAACUAUUACCUCUAUUAGUAUAACUCCCAAAUCCUAAUAGAGGUAGUAGCUGAAAUUAAAAGUGGCAUAAUUUCUCCCUCUUUCCUUCUCCAAUCUUUGAUUUCUCUCACUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[200.00000000 125.00000000]
[200.00000000 150.00000000]
[200.00000000 175.00000000]
[200.00000000 200.00000000]
[200.00000000 225.00000000]
[175.41784668 229.55166626]
[151.81234741 237.78453064]
[129.73132324 249.50753784]
[114.18404388 229.92994690]
[98.63676453 210.35235596]
[83.08948517 190.77476501]
[85.35432434 165.87756348]
[71.74253082 144.90808105]
[48.07983017 136.84106445]
[24.49364853 145.12913513]
[11.07865524 166.22505188]
[13.57634640 191.09997559]
[30.91773224 209.10763550]
[55.68085861 212.54095459]
[71.22814178 232.11854553]
[86.77542114 251.69613647]
[102.32270050 271.27371216]
[85.90296173 290.12557983]
[72.53735352 311.25280762]
[62.53606033 334.16513062]
[56.13119507 358.33078003]
[53.47140503 383.18887329]
[54.61841965 408.16253662]
[59.54561615 432.67218018]
[68.13864136 456.14898682]
[80.19807434 478.04806519]
[95.44403076 497.86123657]
[113.52268219 515.12860107]
[134.01446533 529.44946289]
[123.66381836 552.20611572]
[113.31317902 574.96270752]
[102.96253204 597.71936035]
[78.89864349 604.49645996]
[62.47663498 623.34631348]
[59.06059265 648.11187744]
[69.76633453 670.70361328]
[59.41569138 693.46020508]
[49.06504822 716.21685791]
[38.71440887 738.97351074]
[28.36376762 761.73010254]
[18.01312447 784.48675537]
[7.66248417 807.24340820]
[-11.62735844 823.14630127]
[-10.93748474 848.13677979]
[-21.28812599 870.89337158]
[-31.63876724 893.65002441]
[-41.98941040 916.40661621]
[-52.34004974 939.16326904]
[-62.69069290 961.91992188]
[-73.04133606 984.67651367]
[-83.39197540 1007.43316650]
[-93.74261475 1030.18981934]
[-113.03245544 1046.09265137]
[-112.34258270 1071.08312988]
[-122.69322968 1093.83984375]
[-133.04386902 1116.59643555]
[-143.39451599 1139.35302734]
[-153.74514771 1162.10974121]
[-164.09579468 1184.86633301]
[-174.44642639 1207.62292480]
[-184.79707336 1230.37963867]
[-195.14772034 1253.13623047]
[-205.49835205 1275.89282227]
[-215.84899902 1298.64941406]
[-226.19964600 1321.40612793]
[-236.55027771 1344.16271973]
[-246.90092468 1366.91931152]
[-257.25155640 1389.67602539]
[-267.60220337 1412.43261719]
[-292.60147095 1412.62304688]
[-315.92260742 1421.63000488]
[-334.56011963 1438.29260254]
[-346.11206055 1460.46362305]
[-349.08975220 1485.28564453]
[-343.10937500 1509.55981445]
[-328.94171143 1530.15783691]
[-308.41256714 1544.42504883]
[-284.16763306 1550.52282715]
[-259.33148193 1547.66540527]
[-237.10482788 1536.22094727]
[-220.35212708 1517.66430664]
[-211.23239136 1494.38708496]
[-210.92089844 1469.38903809]
[-219.45780945 1445.89172363]
[-235.74291992 1426.92346191]
[-225.39228821 1404.16687012]
[-215.04164124 1381.41027832]
[-204.69099426 1358.65368652]
[-194.34036255 1335.89697266]
[-183.98971558 1313.14038086]
[-173.63906860 1290.38378906]
[-163.28843689 1267.62707520]
[-152.93778992 1244.87048340]
[-142.58714294 1222.11389160]
[-132.23651123 1199.35717773]
[-121.88586426 1176.60058594]
[-111.53522491 1153.84399414]
[-101.18458557 1131.08728027]
[-90.83394623 1108.33068848]
[-80.48329926 1085.57409668]
[-61.19345856 1069.67114258]
[-61.88333511 1044.68066406]
[-51.53269196 1021.92407227]
[-41.18205261 999.16741943]
[-30.83140945 976.41082764]
[-20.48076820 953.65417480]
[-10.13012695 930.89752197]
[0.22051460 908.14093018]
[10.57115555 885.38427734]
[20.92179680 862.62762451]
[40.21163940 846.72473145]
[39.52176666 821.73425293]
[49.87240601 798.97766113]
[60.22304916 776.22100830]
[70.57369232 753.46441650]
[80.92433167 730.70776367]
[105.80747223 728.29333496]
[91.27497101 707.95111084]
[101.62561798 685.19451904]
[125.68950653 678.41735840]
[142.11151123 659.56750488]
[145.52755737 634.80200195]
[134.82182312 612.21026611]
[145.17245483 589.45361328]
[155.52310181 566.69702148]
[165.87374878 543.94036865]
[190.13452148 549.97479248]
[215.03041077 552.25396729]
[239.98362732 550.72503662]
[264.41500854 545.42346191]
[287.75759888 536.47229004]
[309.46963501 524.07922363]
[329.04724121 508.53198242]
[346.03601074 490.19128418]
[360.04171753 469.48281860]
[370.73928833 446.88720703]
[377.88046265 422.92883301]
[381.29946899 398.16372681]
[380.91702271 373.16665649]
[376.74197388 348.51773071]
[368.87118530 324.78903198]
[357.48736572 302.53128052]
[342.85467529 282.26098633]
[325.31274414 264.44860840]
[305.26867676 249.50753784]
[283.18765259 237.78453064]
[259.58215332 229.55166626]
[235.00000000 225.00000000]
[235.00000000 200.00000000]
[235.00000000 175.00000000]
[235.00000000 150.00000000]
[235.00000000 125.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[217.50000300 388.16839776 164.10416212 263.87836161 255.14133000 1.00000000]
[217.50000300 388.16839776 164.10416212 255.14133000 246.40429839 1.00000000]
[217.50000300 388.16839776 164.10416212 246.40429839 237.66726677 1.00000000]
[]
[]
[]
[48.25861087 175.05466686 38.21401848 24.29090985 346.10458948 1.00000000]
[48.25861087 175.05466686 38.21401848 346.10458948 307.91826912 1.00000000]
[48.25861087 175.05466686 38.21401848 307.91826912 269.73194875 1.00000000]
[48.25861087 175.05466686 38.21401848 269.73194875 231.54562838 1.00000000]
[48.25861087 175.05466686 38.21401848 231.54562838 193.35930802 1.00000000]
[48.25861087 175.05466686 38.21401848 193.35930802 155.17298765 1.00000000]
[48.25861087 175.05466686 38.21401848 155.17298765 116.98666728 1.00000000]
[48.25861087 175.05466686 38.21401848 116.98666728 78.80034692 1.00000000]
[]
[]
[]
[217.50000300 388.16839776 164.10416212 225.42398999 216.68695838 1.00000000]
[217.50000300 388.16839776 164.10416212 216.68695838 207.94992677 1.00000000]
[217.50000300 388.16839776 164.10416212 207.94992677 199.21289516 1.00000000]
[217.50000300 388.16839776 164.10416212 199.21289516 190.47586354 1.00000000]
[217.50000300 388.16839776 164.10416212 190.47586354 181.73883193 1.00000000]
[217.50000300 388.16839776 164.10416212 181.73883193 173.00180032 1.00000000]
[217.50000300 388.16839776 164.10416212 173.00180032 164.26476871 1.00000000]
[217.50000300 388.16839776 164.10416212 164.26476871 155.52773709 1.00000000]
[217.50000300 388.16839776 164.10416212 155.52773709 146.79070548 1.00000000]
[217.50000300 388.16839776 164.10416212 146.79070548 138.05367387 1.00000000]
[217.50000300 388.16839776 164.10416212 138.05367387 129.31664226 1.00000000]
[217.50000300 388.16839776 164.10416212 129.31664226 120.57961064 1.00000000]
[]
[]
[]
[102.29407486 641.45692631 43.74267810 270.87560807 237.66679016 1.00000000]
[102.29407486 641.45692631 43.74267810 237.66679016 204.45797225 1.00000000]
[102.29407486 641.45692631 43.74267810 204.45797225 171.24915435 1.00000000]
[102.29407486 641.45692631 43.74267810 171.24915435 138.04033644 1.00000000]
[]
[]
[]
[]
[]
[]
[14.29214065 834.93551538 28.47466729 256.53646416 204.45797223 1.00000000]
[14.29214065 834.93551538 28.47466729 204.45797223 152.37948030 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-87.11295925 1057.88192978 28.47466729 256.53646411 204.45797218 1.00000000]
[-87.11295925 1057.88192978 28.47466729 204.45797218 152.37948026 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-279.57995823 1481.03448774 69.63966242 279.90389944 259.22315853 1.00000000]
[-279.57995823 1481.03448774 69.63966242 259.22315853 238.54241762 1.00000000]
[-279.57995823 1481.03448774 69.63966242 238.54241762 217.86167671 1.00000000]
[-279.57995823 1481.03448774 69.63966242 217.86167671 197.18093580 1.00000000]
[-279.57995823 1481.03448774 69.63966242 197.18093580 176.50019489 1.00000000]
[-279.57995823 1481.03448774 69.63966242 176.50019489 155.81945398 1.00000000]
[-279.57995823 1481.03448774 69.63966242 155.81945398 135.13871307 1.00000000]
[-279.57995823 1481.03448774 69.63966242 135.13871307 114.45797216 1.00000000]
[-279.57995823 1481.03448774 69.63966242 114.45797216 93.77723125 1.00000000]
[-279.57995823 1481.03448774 69.63966242 93.77723125 73.09649034 1.00000000]
[-279.57995823 1481.03448774 69.63966242 73.09649034 52.41574943 1.00000000]
[-279.57995823 1481.03448774 69.63966242 52.41574943 31.73500852 1.00000000]
[-279.57995823 1481.03448774 69.63966242 31.73500852 11.05426761 1.00000000]
[-279.57995823 1481.03448774 69.63966242 11.05426761 350.37352670 1.00000000]
[-279.57995823 1481.03448774 69.63966242 350.37352670 329.69278579 1.00000000]
[-279.57995823 1481.03448774 69.63966242 329.69278579 309.01204488 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-87.11295925 1057.88192978 28.47466729 76.53646406 24.45797214 1.00000000]
[-87.11295925 1057.88192978 28.47466729 24.45797214 332.37948030 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[14.29214065 834.93551538 28.47466729 76.53646411 24.45797218 1.00000000]
[14.29214065 834.93551538 28.47466729 24.45797218 332.37948035 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[102.29407486 641.45692631 43.74267810 90.87560807 57.66679016 1.00000000]
[102.29407486 641.45692631 43.74267810 57.66679016 24.45797225 1.00000000]
[102.29407486 641.45692631 43.74267810 24.45797225 351.24915435 1.00000000]
[102.29407486 641.45692631 43.74267810 351.24915435 318.04033644 1.00000000]
[]
[]
[]
[217.50000300 388.16839776 164.10416212 108.33633387 99.59930225 1.00000000]
[217.50000300 388.16839776 164.10416212 99.59930225 90.86227064 1.00000000]
[217.50000300 388.16839776 164.10416212 90.86227064 82.12523903 1.00000000]
[217.50000300 388.16839776 164.10416212 82.12523903 73.38820741 1.00000000]
[217.50000300 388.16839776 164.10416212 73.38820741 64.65117580 1.00000000]
[217.50000300 388.16839776 164.10416212 64.65117580 55.91414419 1.00000000]
[217.50000300 388.16839776 164.10416212 55.91414419 47.17711258 1.00000000]
[217.50000300 388.16839776 164.10416212 47.17711258 38.44008096 1.00000000]
[217.50000300 388.16839776 164.10416212 38.44008096 29.70304935 1.00000000]
[217.50000300 388.16839776 164.10416212 29.70304935 20.96601774 1.00000000]
[217.50000300 388.16839776 164.10416212 20.96601774 12.22898613 1.00000000]
[217.50000300 388.16839776 164.10416212 12.22898613 3.49195451 1.00000000]
[217.50000300 388.16839776 164.10416212 3.49195451 354.75492290 1.00000000]
[217.50000300 388.16839776 164.10416212 354.75492290 346.01789129 1.00000000]
[217.50000300 388.16839776 164.10416212 346.01789129 337.28085968 1.00000000]
[217.50000300 388.16839776 164.10416212 337.28085968 328.54382806 1.00000000]
[217.50000300 388.16839776 164.10416212 328.54382806 319.80679645 1.00000000]
[217.50000300 388.16839776 164.10416212 319.80679645 311.06976484 1.00000000]
[217.50000300 388.16839776 164.10416212 311.06976484 302.33273323 1.00000000]
[217.50000300 388.16839776 164.10416212 302.33273323 293.59570161 1.00000000]
[217.50000300 388.16839776 164.10416212 293.59570161 284.85867000 1.00000000]
[217.50000300 388.16839776 164.10416212 284.85867000 276.12163839 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 163]
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[13 27]
[14 26]
[15 25]
[16 24]
[39 136]
[40 135]
[41 134]
[42 133]
[46 129]
[47 128]
[48 126]
[49 125]
[50 124]
[51 123]
[52 122]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[60 114]
[61 113]
[62 112]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
] def

init

% Start Annotations
95 126 12 1.00 0.60 0.67 omark 48 79 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
