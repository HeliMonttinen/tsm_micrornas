%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAUUUUAUAACUAAUUAUUUAAAAAUAUCUUAGAAUWUUAUUGACCUGAAAGGAACUUAGARAUUAUUUUGAUCAAUCUCUACAUUUUAUAUAUGAAGAAGCUGAAGUCUGAAAGUAUUAUACCUUUUAUGUCUCUAYUCAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[450.00000000 125.00000000]
[450.00000000 150.00000000]
[450.00000000 175.00000000]
[435.92852783 195.66383362]
[440.87762451 220.16906738]
[431.17535400 243.20959473]
[421.47305298 266.25012207]
[411.77075195 289.29061890]
[394.34844971 307.22000122]
[399.32965088 331.71875000]
[422.37017822 341.42102051]
[443.37594604 327.86535645]
[444.02749634 302.87384033]
[453.72976685 279.83331299]
[463.43206787 256.79278564]
[473.13436890 233.75227356]
[494.12237549 220.16906738]
[499.07147217 195.66383362]
[485.00000000 175.00000000]
[485.00000000 150.00000000]
[485.00000000 125.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[735.00000000 125.00000000]
[735.00000000 150.00000000]
[724.02532959 172.46234131]
[735.00000000 194.92468262]
[735.00000000 219.92468262]
[735.00000000 244.92468262]
[735.00000000 269.92468262]
[735.00000000 294.92468262]
[735.00000000 319.92468262]
[735.00000000 344.92468262]
[715.90136719 361.05670166]
[708.75732422 385.01422119]
[715.90136719 408.97174072]
[735.00000000 425.10375977]
[759.81481934 428.14096069]
[773.50714111 449.05795288]
[787.19940186 469.97497559]
[783.97546387 494.76620483]
[797.66778564 515.68322754]
[821.67840576 522.64666748]
[844.43731689 512.30108643]
[854.97766113 489.63168335]
[877.73663330 479.28610229]
[900.49554443 468.94052124]
[923.25445557 458.59494019]
[946.01336670 448.24932861]
[968.77233887 437.90374756]
[993.76263428 438.59918213]
[1009.66979980 419.31286621]
[1033.68041992 426.27630615]
[1047.37280273 447.19332886]
[1061.06506348 468.11032104]
[1053.92102051 492.06784058]
[1061.06506348 516.02532959]
[1080.16369629 532.15734863]
[1104.97851562 535.19458008]
[1118.67077637 556.11157227]
[1132.36315918 577.02856445]
[1135.48327637 601.83306885]
[1156.96801758 614.61614990]
[1170.66027832 635.53314209]
[1184.35253906 656.45013428]
[1179.82104492 681.03601074]
[1191.45874023 703.16210938]
[1214.28479004 713.35870361]
[1238.52990723 707.26171875]
[1253.81738281 687.48059082]
[1253.60437012 662.48150635]
[1237.98193359 642.96380615]
[1213.63635254 637.28094482]
[1199.94409180 616.36395264]
[1186.25183105 595.44689941]
[1183.13159180 570.64239502]
[1161.64685059 557.85937500]
[1147.95458984 536.94232178]
[1134.26232910 516.02532959]
[1141.40637207 492.06784058]
[1134.26232910 468.11032104]
[1115.16369629 451.97827148]
[1090.34887695 448.94110107]
[1076.65649414 428.02410889]
[1062.96423340 407.10708618]
[1066.18823242 382.31585693]
[1052.49584961 361.39883423]
[1028.48522949 354.43539429]
[1005.72631836 364.78097534]
[995.18597412 387.45037842]
[970.19567871 386.75494385]
[954.28851318 406.04125977]
[931.52954102 416.38684082]
[908.77062988 426.73242188]
[886.01171875 437.07800293]
[863.25280762 447.42361450]
[840.49383545 457.76919556]
[816.48321533 450.80575562]
[802.79095459 429.88873291]
[789.09863281 408.97174072]
[796.24267578 385.01422119]
[789.09863281 361.05670166]
[770.00000000 344.92468262]
[770.00000000 319.92468262]
[770.00000000 294.92468262]
[770.00000000 269.92468262]
[770.00000000 244.92468262]
[770.00000000 219.92468262]
[770.00000000 194.92468262]
[780.97467041 172.46234131]
[770.00000000 150.00000000]
[770.00000000 125.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[467.50000000 202.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[467.50000000 202.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[]
[]
[]
[420.03707650 314.75264564 26.77024824 252.01383614 196.34262294 1.00000000]
[420.03707650 314.75264564 26.77024824 196.34262294 140.67140974 1.00000000]
[420.03707650 314.75264564 26.77024824 140.67140974 85.00019655 1.00000000]
[420.03707650 314.75264564 26.77024824 85.00019655 29.32898335 1.00000000]
[420.03707650 314.75264564 26.77024824 29.32898335 333.65777015 1.00000000]
[]
[]
[]
[467.50000000 202.04002271 32.20889362 79.92531101 34.25370472 1.00000000]
[467.50000000 202.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[467.50000000 202.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[752.49999864 172.46233916 28.47466715 232.07849221 180.00000000 1.00000000]
[752.49999864 172.46233916 28.47466715 180.00000000 127.92150791 1.00000000]
[]
[]
[]
[]
[]
[]
[752.49999896 385.01422653 43.74267810 246.41763577 213.20881786 1.00000000]
[752.49999896 385.01422653 43.74267810 213.20881786 180.00000000 1.00000000]
[752.49999896 385.01422653 43.74267810 180.00000000 146.79118204 1.00000000]
[752.49999896 385.01422653 43.74267810 146.79118204 113.58236413 1.00000000]
[752.49999896 385.01422653 43.74267810 113.58236413 80.37354623 1.00000000]
[]
[]
[819.08081060 486.72620321 36.01426010 207.71850582 167.10028997 1.00000000]
[819.08081060 486.72620321 36.01426010 167.10028997 126.48207412 1.00000000]
[819.08081060 486.72620321 36.01426010 126.48207412 85.86385826 1.00000000]
[819.08081060 486.72620321 36.01426010 85.86385826 45.24564241 1.00000000]
[819.08081060 486.72620321 36.01426010 45.24564241 4.62742656 1.00000000]
[]
[]
[]
[]
[]
[981.97915731 412.67705797 28.47466729 117.63324236 65.55475051 1.00000000]
[981.97915731 412.67705797 28.47466729 65.55475051 13.47625839 1.00000000]
[1031.08286316 390.35585258 36.01426010 126.48207399 85.86385822 1.00000000]
[]
[]
[1097.66367488 492.06782921 43.74267810 213.20881781 180.00000000 1.00000000]
[1097.66367488 492.06782921 43.74267810 180.00000000 146.79118200 1.00000000]
[1097.66367488 492.06782921 43.74267810 146.79118200 113.58236409 1.00000000]
[1097.66367488 492.06782921 43.74267810 113.58236409 80.37354618 1.00000000]
[]
[]
[1159.30744296 586.23774597 28.47466729 198.86967390 146.79118197 1.00000000]
[1159.30744296 586.23774597 28.47466729 146.79118197 94.71269005 1.00000000]
[]
[]
[1217.60039206 675.28879405 38.21401848 209.53646341 171.35014305 1.00000000]
[1217.60039206 675.28879405 38.21401848 171.35014305 133.16382268 1.00000000]
[1217.60039206 675.28879405 38.21401848 133.16382268 94.97750232 1.00000000]
[1217.60039206 675.28879405 38.21401848 94.97750232 56.79118195 1.00000000]
[1217.60039206 675.28879405 38.21401848 56.79118195 18.60486158 1.00000000]
[1217.60039206 675.28879405 38.21401848 18.60486158 340.41854122 1.00000000]
[1217.60039206 675.28879405 38.21401848 340.41854122 302.23222085 1.00000000]
[1217.60039206 675.28879405 38.21401848 302.23222085 264.04590048 1.00000000]
[]
[]
[1159.30744296 586.23774597 28.47466729 18.86967385 326.79118193 1.00000000]
[1159.30744296 586.23774597 28.47466729 326.79118193 274.71269009 1.00000000]
[]
[]
[1097.66367488 492.06782921 43.74267810 33.20881781 360.00000000 1.00000000]
[1097.66367488 492.06782921 43.74267810 360.00000000 326.79118200 1.00000000]
[1097.66367488 492.06782921 43.74267810 326.79118200 293.58236409 1.00000000]
[1097.66367488 492.06782921 43.74267810 293.58236409 260.37354618 1.00000000]
[]
[]
[1031.08286316 390.35585258 36.01426010 27.71850578 347.10028992 1.00000000]
[1031.08286316 390.35585258 36.01426010 347.10028992 306.48207407 1.00000000]
[1031.08286316 390.35585258 36.01426010 306.48207407 265.86385822 1.00000000]
[1031.08286316 390.35585258 36.01426010 265.86385822 225.24564236 1.00000000]
[1031.08286316 390.35585258 36.01426010 225.24564236 184.62742643 1.00000000]
[981.97915731 412.67705797 28.47466729 297.63324194 245.55475006 1.00000000]
[981.97915731 412.67705797 28.47466729 245.55475006 193.47625831 1.00000000]
[]
[]
[]
[]
[]
[819.08081060 486.72620321 36.01426010 306.48207412 265.86385826 1.00000000]
[]
[]
[752.49999896 385.01422653 43.74267810 33.20881786 360.00000000 1.00000000]
[752.49999896 385.01422653 43.74267810 360.00000000 326.79118204 1.00000000]
[752.49999896 385.01422653 43.74267810 326.79118204 293.58236413 1.00000000]
[]
[]
[]
[]
[]
[]
[752.49999864 172.46233916 28.47466715 52.07849154 360.00000000 1.00000000]
[752.49999864 172.46233916 28.47466715 360.00000000 307.92150824 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 37]
[16 36]
[17 35]
[18 34]
[20 31]
[21 30]
[22 29]
[23 28]
[47 137]
[48 136]
[49 135]
[51 133]
[52 132]
[53 131]
[54 130]
[55 129]
[56 128]
[57 127]
[62 124]
[63 123]
[64 122]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
[76 114]
[77 109]
[78 108]
[79 107]
[83 103]
[84 102]
[85 101]
[87 99]
[88 98]
[89 97]
] def

init

% Start Annotations
56 69 12 1.00 0.60 0.67 omark 72 98 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
