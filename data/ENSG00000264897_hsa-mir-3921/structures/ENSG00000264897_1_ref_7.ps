%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUUACAGGUUCCUUGAGAAUAGGGACAGUGUCUGUGUCUAKUCUGUUUCCUKCUACCUAGCCCAGUAUAAGGCCUAUGGUACUCAGAGACAYAGGAGCUCAUGUUAAAUGGGUCCUUAAAAAGGAUCAAGGCCAAMCCGCUUMUGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[78.75564575 238.17866516]
[65.57697296 259.42303467]
[63.20749664 284.31048584]
[72.14048004 307.66003418]
[57.00761414 327.55969238]
[41.87475204 347.45935059]
[26.74188805 367.35900879]
[11.60902405 387.25866699]
[-3.52383900 407.15832520]
[-18.65670204 427.05798340]
[-43.64895248 427.68041992]
[-64.51787567 441.44589233]
[-74.92792511 464.17538452]
[-99.17787170 470.25326538]
[-123.42781067 476.33111572]
[-147.88432312 471.14663696]
[-167.00463867 487.25296021]
[-191.25457764 493.33081055]
[-215.50451660 499.40869141]
[-239.75445557 505.48654175]
[-264.21096802 500.30206299]
[-283.33129883 516.40838623]
[-307.58123779 522.48626709]
[-331.83117676 528.56408691]
[-356.08111572 534.64196777]
[-380.94683838 537.22943115]
[-388.93716431 560.91809082]
[-370.71881104 578.03802490]
[-347.57211304 568.59191895]
[-323.32217407 562.51403809]
[-299.07223511 556.43615723]
[-274.82226562 550.35827637]
[-250.36576843 555.54278564]
[-231.24545288 539.43646240]
[-206.99551392 533.35858154]
[-182.74557495 527.28076172]
[-158.49563599 521.20288086]
[-134.03910828 526.38732910]
[-114.91880035 510.28103638]
[-90.66886139 504.20315552]
[-66.41892242 498.12530518]
[-46.51926041 513.25817871]
[-45.89685059 538.25042725]
[-45.27444077 563.24267578]
[-44.65203094 588.23492432]
[-44.02961731 613.22717285]
[-64.43289185 627.67382812]
[-75.64105225 650.02062988]
[-75.01863861 675.01287842]
[-62.71200943 696.77398682]
[-41.61491394 710.18713379]
[-40.99250031 735.17938232]
[-40.37009048 760.17163086]
[-39.74768066 785.16387939]
[-39.12527084 810.15612793]
[-38.50285721 835.14837646]
[-37.88044739 860.14062500]
[-37.25803757 885.13287354]
[-36.63562775 910.12512207]
[-54.84252167 927.25726318]
[-60.12559128 951.69262695]
[-50.62211990 974.81585693]
[-29.68286133 988.47412109]
[-4.69060946 987.85168457]
[15.54282093 973.16809082]
[23.88349533 949.60046387]
[17.39064217 925.45831299]
[-1.64647460 909.25378418]
[-2.26888561 884.26153564]
[19.06383324 871.22637939]
[-2.89129639 859.26928711]
[-3.51370716 834.27703857]
[-4.13611794 809.28479004]
[17.19659996 796.24963379]
[-4.75852871 784.29248047]
[-5.38093996 759.30023193]
[-6.00335073 734.30798340]
[-6.62576151 709.31573486]
[13.77750874 694.86907959]
[24.98567009 672.52233887]
[24.36325836 647.53009033]
[12.05662823 625.76892090]
[-9.04046726 612.35577393]
[-9.66287804 587.36352539]
[-10.28528881 562.37127686]
[-10.90769958 537.37902832]
[-11.53011036 512.38677979]
[7.59160519 496.28213501]
[15.28068352 472.49395752]
[9.20282078 448.24401855]
[24.33568382 428.34436035]
[39.46854782 408.44470215]
[54.60140991 388.54501343]
[69.73427582 368.64535522]
[84.86713409 348.74569702]
[100.00000000 328.84603882]
[124.88745880 331.21551514]
[135.99327087 353.61331177]
[147.09909058 376.01110840]
[145.14682007 400.93475342]
[162.47004700 418.95989990]
[187.45155334 417.99862671]
[203.33839417 398.69555664]
[199.47662354 373.99563599]
[178.45599365 360.46295166]
[167.35017395 338.06515503]
[156.24435425 315.66738892]
[169.42301941 294.42303467]
[194.42301941 294.42303467]
[219.42301941 294.42303467]
[244.42301941 294.42303467]
[269.42303467 294.42303467]
[294.42303467 294.42303467]
[319.42303467 294.42303467]
[344.17178345 297.95843506]
[357.68142700 276.92303467]
[344.17178345 255.88760376]
[319.42303467 259.42303467]
[294.42303467 259.42303467]
[269.42303467 259.42303467]
[244.42301941 259.42303467]
[219.42301941 259.42303467]
[194.42301941 259.42303467]
[169.42301941 259.42303467]
[156.24435425 238.17866516]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[117.50000116 276.92302478 54.79279608 251.37426051 224.99999999 1.00000000]
[117.50000116 276.92302478 54.79279608 224.99999999 198.62573948 1.00000000]
[117.50000116 276.92302478 54.79279608 198.62573948 172.25147896 1.00000000]
[117.50000116 276.92302478 54.79279608 172.25147896 145.87721845 1.00000000]
[]
[]
[]
[]
[]
[]
[-30.06691276 470.97297169 45.37309618 284.56482680 252.58195722 1.00000000]
[-30.06691276 470.97297169 45.37309618 252.58195722 220.59908763 1.00000000]
[-30.06691276 470.97297169 45.37309618 220.59908763 188.61621805 1.00000000]
[]
[]
[-140.96171979 498.76699517 28.47466729 308.00805780 255.92956587 1.00000000]
[-140.96171979 498.76699517 28.47466729 255.92956587 203.85107395 1.00000000]
[]
[]
[]
[-257.28836941 527.92242390 28.47466729 308.00805775 255.92956583 1.00000000]
[-257.28836941 527.92242390 28.47466729 255.92956583 203.85107390 1.00000000]
[]
[]
[]
[-366.49958259 555.29448149 23.13159456 296.76936286 231.34946433 1.00000000]
[-366.49958259 555.29448149 23.13159456 231.34946433 165.92956580 1.00000000]
[-366.49958259 555.29448149 23.13159456 165.92956580 100.50966728 1.00000000]
[-366.49958259 555.29448149 23.13159456 100.50966728 35.08976875 1.00000000]
[]
[]
[]
[-257.28836941 527.92242390 28.47466729 128.00805771 75.92956578 1.00000000]
[-257.28836941 527.92242390 28.47466729 75.92956578 23.85107395 1.00000000]
[]
[]
[]
[-140.96171979 498.76699517 28.47466729 128.00805775 75.92956583 1.00000000]
[-140.96171979 498.76699517 28.47466729 75.92956583 23.85107400 1.00000000]
[]
[]
[-30.06691276 470.97297169 45.37309618 143.24291375 111.26004416 1.00000000]
[]
[]
[]
[]
[-25.32768989 661.27146616 51.55595110 248.73081212 220.66784408 1.00000000]
[-25.32768989 661.27146616 51.55595110 220.66784408 192.60487603 1.00000000]
[-25.32768989 661.27146616 51.55595110 192.60487603 164.54190799 1.00000000]
[-25.32768989 661.27146616 51.55595110 164.54190799 136.47893995 1.00000000]
[-25.32768989 661.27146616 51.55595110 136.47893995 108.41597190 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-18.18767977 947.97103972 42.10271758 244.01312712 209.47096377 1.00000000]
[-18.18767977 947.97103972 42.10271758 209.47096377 174.92880041 1.00000000]
[-18.18767977 947.97103972 42.10271758 174.92880041 140.38663705 1.00000000]
[-18.18767977 947.97103972 42.10271758 140.38663705 105.84447369 1.00000000]
[-18.18767977 947.97103972 42.10271758 105.84447369 71.30231033 1.00000000]
[-18.18767977 947.97103972 42.10271758 71.30231033 36.76014697 1.00000000]
[-18.18767977 947.97103972 42.10271758 36.76014697 2.21798362 1.00000000]
[-18.18767977 947.97103972 42.10271758 2.21798362 327.67582026 1.00000000]
[-18.18767977 947.97103972 42.10271758 327.67582026 293.13365690 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-25.32768989 661.27146616 51.55595110 68.73081212 40.66784408 1.00000000]
[-25.32768989 661.27146616 51.55595110 40.66784408 12.60487603 1.00000000]
[-25.32768989 661.27146616 51.55595110 12.60487603 344.54190799 1.00000000]
[-25.32768989 661.27146616 51.55595110 344.54190799 316.47893995 1.00000000]
[-25.32768989 661.27146616 51.55595110 316.47893995 288.41597190 1.00000000]
[]
[]
[]
[]
[-30.06691276 470.97297169 45.37309618 65.88673986 33.90387028 1.00000000]
[-30.06691276 470.97297169 45.37309618 33.90387028 1.92100069 1.00000000]
[-30.06691276 470.97297169 45.37309618 1.92100069 329.93813111 1.00000000]
[]
[]
[]
[]
[]
[]
[117.50000116 276.92302478 54.79279608 108.62573946 82.25147895 1.00000000]
[]
[]
[173.88985936 390.64790926 30.52836670 208.64945355 160.30821552 1.00000000]
[173.88985936 390.64790926 30.52836670 160.30821552 111.96697749 1.00000000]
[173.88985936 390.64790926 30.52836670 111.96697749 63.62573946 1.00000000]
[173.88985936 390.64790926 30.52836670 63.62573946 15.28450142 1.00000000]
[173.88985936 390.64790926 30.52836670 15.28450142 326.94326339 1.00000000]
[173.88985936 390.64790926 30.52836670 326.94326339 278.60202536 1.00000000]
[]
[]
[117.50000116 276.92302478 54.79279608 44.99999996 18.62573945 1.00000000]
[]
[]
[]
[]
[]
[]
[334.54984580 276.92302487 23.13159415 130.83979819 65.41989913 1.00000000]
[334.54984580 276.92302487 23.13159415 65.41989913 360.00000000 1.00000000]
[334.54984580 276.92302487 23.13159415 360.00000000 294.58010025 1.00000000]
[334.54984580 276.92302487 23.13159415 294.58010025 229.16020256 1.00000000]
[]
[]
[]
[]
[]
[]
[117.50000116 276.92302478 54.79279608 341.37426046 314.99999995 1.00000000]
[117.50000116 276.92302478 54.79279608 314.99999995 288.62573949 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[10 102]
[11 101]
[12 100]
[13 99]
[14 98]
[15 97]
[16 96]
[19 47]
[20 46]
[21 45]
[23 43]
[24 42]
[25 41]
[26 40]
[28 38]
[29 37]
[30 36]
[31 35]
[48 93]
[49 92]
[50 91]
[51 90]
[52 89]
[57 84]
[58 83]
[59 82]
[60 81]
[61 79]
[62 78]
[63 77]
[64 75]
[65 74]
[103 113]
[104 112]
[105 111]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[119 125]
[120 124]
] def

init

% Start Annotations
99 102 12 1.00 0.60 0.67 omark 58 85 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
