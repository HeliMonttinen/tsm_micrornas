%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUGAUCCGAGAAUUCUGGUAGGGCUGUGGUGGUCUCACUAGUGUCCCAGGCCCAUGGGUCUUAUCCUGCAAGGUGCUGCAGAGACGAGGCCUGUAGCACCUUGCAGGAUAAGGUCUACUGGGCCUAGUUACUCUUCAGCCACAUGGAUUCAGCCCCUUUCCUGGAGACGUGAGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[130.90136719 191.13203430]
[123.75732422 215.08955383]
[130.90136719 239.04705811]
[150.00000000 255.17909241]
[150.00000000 280.17910767]
[150.00000000 305.17910767]
[150.00000000 330.17910767]
[150.00000000 355.17910767]
[150.00000000 380.17910767]
[150.00000000 405.17910767]
[128.19367981 417.40548706]
[113.34816742 437.52041626]
[108.09245300 461.96173096]
[113.35729980 486.40106201]
[128.21032715 506.51046753]
[150.02120972 518.72869873]
[174.92744446 520.89202881]
[185.22097778 543.67456055]
[195.51451111 566.45709229]
[205.80805969 589.23956299]
[198.78974915 613.23425293]
[209.08328247 636.01672363]
[231.72851562 646.60888672]
[242.02206421 669.39141846]
[252.31559753 692.17395020]
[262.60913086 714.95642090]
[272.90267944 737.73895264]
[274.19882202 762.70532227]
[295.54736328 775.71453857]
[318.32989502 765.42095947]
[322.67730713 740.80187988]
[304.79818726 723.32800293]
[294.50466919 700.54547119]
[284.21112061 677.76293945]
[273.91757202 654.98046875]
[263.62405396 632.19793701]
[270.64236450 608.20330811]
[260.34881592 585.42077637]
[237.70358276 574.82861328]
[227.41003418 552.04608154]
[217.11650085 529.26361084]
[206.82296753 506.48107910]
[221.77818298 486.09881592]
[226.90444946 461.34365845]
[250.71865845 453.73559570]
[274.53286743 446.12750244]
[298.34710693 438.51940918]
[322.16131592 430.91131592]
[345.97552490 423.30322266]
[369.78976440 415.69515991]
[393.60397339 408.08706665]
[417.41818237 400.47897339]
[441.23242188 392.87088013]
[465.04663086 385.26278687]
[488.86083984 377.65472412]
[512.67504883 370.04663086]
[536.48925781 362.43853760]
[560.30352783 354.83044434]
[584.11773682 347.22235107]
[607.93194580 339.61428833]
[631.74615479 332.00619507]
[655.56036377 324.39810181]
[679.37457275 316.79000854]
[703.18884277 309.18191528]
[727.00305176 301.57385254]
[750.81726074 293.96575928]
[774.63146973 286.35766602]
[798.44567871 278.74957275]
[822.25988770 271.14151001]
[846.07415771 263.53341675]
[869.88836670 255.92532349]
[893.70257568 248.31723022]
[917.51678467 240.70915222]
[941.33099365 233.10105896]
[965.14520264 225.49298096]
[988.95947266 217.88488770]
[1012.77368164 210.27679443]
[1031.26953125 227.09648132]
[1036.58789062 202.66871643]
[1060.03259277 211.34901428]
[1083.15258789 201.83789062]
[1093.70251465 179.17294312]
[1086.09448242 155.35873413]
[1064.35803223 143.00851440]
[1040.00598145 148.66362000]
[1025.93652344 169.32881165]
[1002.12231445 176.93688965]
[978.30810547 184.54498291]
[954.49389648 192.15306091]
[930.67968750 199.76115417]
[906.86547852 207.36924744]
[883.05126953 214.97732544]
[859.23699951 222.58541870]
[835.42279053 230.19349670]
[811.60858154 237.80158997]
[787.79437256 245.40968323]
[763.98016357 253.01776123]
[740.16595459 260.62585449]
[716.35174561 268.23394775]
[692.53747559 275.84201050]
[668.72326660 283.45010376]
[644.90905762 291.05819702]
[621.09484863 298.66629028]
[597.28063965 306.27438354]
[573.46643066 313.88244629]
[549.65216064 321.49053955]
[525.83795166 329.09863281]
[502.02374268 336.70672607]
[478.20953369 344.31481934]
[454.39532471 351.92288208]
[430.58108521 359.53097534]
[406.76687622 367.13906860]
[382.95266724 374.74716187]
[364.45675659 357.92749023]
[359.13842773 382.35525513]
[335.32421875 389.96331787]
[311.51000977 397.57141113]
[287.69577026 405.17950439]
[263.88156128 412.78759766]
[240.06733704 420.39569092]
[216.25312805 428.00375366]
[185.00000000 405.17910767]
[185.00000000 380.17910767]
[185.00000000 355.17910767]
[185.00000000 330.17910767]
[206.65063477 317.67910767]
[185.00000000 305.17910767]
[185.00000000 280.17910767]
[185.00000000 255.17909241]
[211.24267578 215.08955383]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[1135.00000000 100.00000000]
[1135.00000000 125.00000000]
[1124.02539062 147.46234131]
[1135.00000000 169.92468262]
[1135.00000000 194.92468262]
[1135.00000000 219.92468262]
[1135.00000000 244.92468262]
[1118.72460938 263.90127563]
[1118.72460938 288.90127563]
[1135.00000000 307.87789917]
[1135.00000000 332.87789917]
[1135.00000000 357.87789917]
[1135.00000000 382.87789917]
[1135.00000000 407.87789917]
[1116.37219238 424.55139160]
[1110.48242188 448.84771729]
[1119.40722656 472.20037842]
[1140.00000000 486.37570190]
[1165.00000000 486.37570190]
[1185.59277344 472.20037842]
[1194.51757812 448.84771729]
[1188.62780762 424.55139160]
[1170.00000000 407.87789917]
[1170.00000000 382.87789917]
[1170.00000000 357.87789917]
[1170.00000000 332.87789917]
[1170.00000000 307.87789917]
[1186.27539062 288.90127563]
[1186.27539062 263.90127563]
[1170.00000000 244.92468262]
[1170.00000000 219.92468262]
[1170.00000000 194.92468262]
[1170.00000000 169.92468262]
[1180.97460938 147.46234131]
[1170.00000000 125.00000000]
[1170.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[167.50000000 215.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[167.50000000 215.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[167.50000000 215.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[167.50000000 215.08954835 43.74267810 146.79118209 113.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[167.50000000 461.95062479 59.40754499 252.86792309 228.57504701 1.00000000]
[167.50000000 461.95062479 59.40754499 228.57504701 204.28217093 1.00000000]
[167.50000000 461.95062479 59.40754499 204.28217093 180.00000000 1.00000000]
[167.50000000 461.95062479 59.40754499 180.00000000 155.69641877 1.00000000]
[167.50000000 461.95062479 59.40754499 155.69641877 131.40354269 1.00000000]
[167.50000000 461.95062479 59.40754499 131.40354269 107.11066661 1.00000000]
[167.50000000 461.95062479 59.40754499 107.11066661 82.81779053 1.00000000]
[]
[]
[]
[234.71604912 610.71875676 36.01426010 216.61303740 175.99482155 1.00000000]
[234.71604912 610.71875676 36.01426010 175.99482155 135.37660569 1.00000000]
[234.71604912 610.71875676 36.01426010 135.37660569 94.75838984 1.00000000]
[]
[]
[]
[]
[297.19159760 748.99481975 26.77024824 204.86374662 149.19253342 1.00000000]
[297.19159760 748.99481975 26.77024824 149.19253342 93.52132022 1.00000000]
[297.19159760 748.99481975 26.77024824 93.52132022 37.85010702 1.00000000]
[297.19159760 748.99481975 26.77024824 37.85010702 342.17889383 1.00000000]
[297.19159760 748.99481975 26.77024824 342.17889383 286.50768063 1.00000000]
[]
[]
[]
[]
[234.71604912 610.71875676 36.01426010 36.61303740 355.99482155 1.00000000]
[234.71604912 610.71875676 36.01426010 355.99482155 315.37660569 1.00000000]
[234.71604912 610.71875676 36.01426010 315.37660569 274.75838984 1.00000000]
[]
[]
[]
[167.50000000 461.95062479 59.40754499 48.55363671 23.98412314 1.00000000]
[167.50000000 461.95062479 59.40754499 23.98412314 359.41460958 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1059.41974060 177.00308947 34.35139098 131.65594397 88.97782646 1.00000000]
[1059.41974060 177.00308947 34.35139098 88.97782646 46.29970894 1.00000000]
[1059.41974060 177.00308947 34.35139098 46.29970894 3.62159142 1.00000000]
[1059.41974060 177.00308947 34.35139098 3.62159142 320.94347391 1.00000000]
[1059.41974060 177.00308947 34.35139098 320.94347391 278.26535639 1.00000000]
[1059.41974060 177.00308947 34.35139098 278.26535639 235.58723887 1.00000000]
[1059.41974060 177.00308947 34.35139098 235.58723887 192.90912136 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000000 461.95062479 59.40754499 325.15045575 287.13207691 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[167.50000000 215.08954835 43.74267810 66.41763582 0.00000000 1.00000000]
[167.50000000 215.08954835 43.74267810 0.00000000 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[1152.49999988 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[1152.49999988 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[1152.50000011 276.40128744 36.01426010 240.92732373 200.30910788 1.00000000]
[1152.50000011 276.40128744 36.01426010 200.30910788 159.69089203 1.00000000]
[1152.50000011 276.40128744 36.01426010 159.69089203 119.07267617 1.00000000]
[]
[]
[]
[]
[1152.50000025 446.17135342 42.10271758 245.43973506 210.89757171 1.00000000]
[1152.50000025 446.17135342 42.10271758 210.89757171 176.35540835 1.00000000]
[1152.50000025 446.17135342 42.10271758 176.35540835 141.81324499 1.00000000]
[1152.50000025 446.17135342 42.10271758 141.81324499 107.27108163 1.00000000]
[1152.50000025 446.17135342 42.10271758 107.27108163 72.72891827 1.00000000]
[1152.50000025 446.17135342 42.10271758 72.72891827 38.18675492 1.00000000]
[1152.50000025 446.17135342 42.10271758 38.18675492 3.64459156 1.00000000]
[1152.50000025 446.17135342 42.10271758 3.64459156 329.10242820 1.00000000]
[1152.50000025 446.17135342 42.10271758 329.10242820 294.56026484 1.00000000]
[]
[]
[]
[]
[1152.50000011 276.40128744 36.01426010 60.92732373 20.30910788 1.00000000]
[1152.50000011 276.40128744 36.01426010 20.30910788 339.69089203 1.00000000]
[1152.50000011 276.40128744 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[]
[]
[1152.49999988 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[1152.49999988 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[6 137]
[10 135]
[11 134]
[12 133]
[13 131]
[14 130]
[15 129]
[16 128]
[23 48]
[24 47]
[25 46]
[26 45]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[57 119]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[85 92]
[141 176]
[142 175]
[144 173]
[145 172]
[146 171]
[147 170]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
] def

init

% Start Annotations
59 78 12 1.00 0.60 0.67 omark 98 117 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
