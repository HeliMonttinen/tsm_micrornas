%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGUCCUUCCCCCAAGACCCCAGAUGUCUCGUGGCCACCCAGUCUCCUUUGUCCAAUUCUCUGAGCAABGCUUAACGCCAAGGGGUUAAGGGUUUGCUUUGGAGUUAAGGGUUGCUUGGAGAAUUGGAGAAGGGGCACCUGGUAGAUCAUUCUUUUCUUCCCUGAUUUCUUCCCCCACCCC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[500.00000000 125.00000000]
[500.00000000 150.00000000]
[500.00000000 175.00000000]
[482.74304199 193.08860779]
[480.36175537 217.97492981]
[493.87530518 239.00787354]
[517.50000000 247.18550110]
[541.12469482 239.00787354]
[554.63824463 217.97492981]
[552.25695801 193.08860779]
[535.00000000 175.00000000]
[535.00000000 150.00000000]
[535.00000000 125.00000000]
[535.00000000 100.00000000]
[585.00000000 100.00000000]
[635.00000000 100.00000000]
[635.00000000 125.00000000]
[635.00000000 150.00000000]
[635.00000000 175.00000000]
[612.12194824 185.07946777]
[593.99810791 202.29940796]
[582.76245117 224.63232422]
[579.73779297 249.44866943]
[585.28027344 273.82653809]
[565.20623779 288.72726440]
[545.13214111 303.62796021]
[525.05804443 318.52868652]
[500.37271118 314.57476807]
[478.18713379 326.09866333]
[467.22686768 348.56805420]
[443.49282837 356.42269897]
[419.75878906 364.27731323]
[396.02474976 372.13195801]
[372.29071045 379.98657227]
[348.55667114 387.84121704]
[323.78372192 384.47961426]
[305.90689087 401.95587158]
[282.17285156 409.81051636]
[258.43881226 417.66513062]
[234.70477295 425.51977539]
[210.97073364 433.37442017]
[187.23669434 441.22903442]
[163.50265503 449.08367920]
[139.76860046 456.93829346]
[116.03456116 464.79293823]
[92.30052185 472.64755249]
[68.56647491 480.50219727]
[44.83243561 488.35681152]
[21.09839249 496.21145630]
[-2.63564944 504.06610107]
[-26.36969185 511.92071533]
[-50.10373306 519.77532959]
[-73.83777618 527.63000488]
[-96.96692657 518.14093018]
[-120.70097351 525.99554443]
[-133.60314941 547.40893555]
[-157.33718872 555.26361084]
[-181.07124329 563.11822510]
[-204.80528259 570.97283936]
[-228.53932190 578.82745361]
[-252.27336121 586.68212891]
[-277.04632568 583.32049561]
[-294.92312622 600.79675293]
[-318.65716553 608.65142822]
[-342.39120483 616.50604248]
[-366.12524414 624.36065674]
[-389.85931396 632.21533203]
[-413.59335327 640.06994629]
[-438.36630249 636.70831299]
[-456.24310303 654.18463135]
[-477.07382202 640.36138916]
[-502.05798340 639.47174072]
[-523.81915283 651.77832031]
[-535.93237305 673.64770508]
[-534.82128906 698.62298584]
[-520.81396484 719.33038330]
[-498.04598999 729.65600586]
[-473.23953247 726.55139160]
[-453.71856689 710.93304443]
[-445.24664307 687.41229248]
[-420.47366333 690.77386475]
[-402.59686279 673.29760742]
[-378.86282349 665.44299316]
[-355.12878418 657.58831787]
[-331.39474487 649.73370361]
[-307.66070557 641.87908936]
[-283.92663574 634.02441406]
[-259.15368652 637.38604736]
[-241.27688599 619.90979004]
[-217.54283142 612.05511475]
[-193.80879211 604.20050049]
[-170.07475281 596.34588623]
[-146.34071350 588.49127197]
[-122.60666656 580.63659668]
[-99.47751617 590.12567139]
[-75.74346924 582.27105713]
[-62.84129333 560.85766602]
[-39.10725021 553.00299072]
[-15.37320805 545.14837646]
[8.36083412 537.29376221]
[32.09487534 529.43908691]
[55.82891846 521.58447266]
[79.56295776 513.72985840]
[103.29700470 505.87521362]
[127.03104401 498.02059937]
[150.76509094 490.16595459]
[174.49913025 482.31134033]
[198.23316956 474.45669556]
[221.96720886 466.60208130]
[245.70126343 458.74743652]
[269.43530273 450.89279175]
[293.16934204 443.03817749]
[316.90338135 435.18353271]
[341.67636108 438.54513550]
[359.55316162 421.06887817]
[383.28720093 413.21423340]
[407.02124023 405.35961914]
[430.75527954 397.50497437]
[454.48931885 389.65036011]
[478.22335815 381.79571533]
[500.42391968 393.29074097]
[525.10412598 389.30471802]
[542.55725098 371.40533447]
[545.91906738 346.63238525]
[565.99316406 331.73168945]
[586.06719971 316.83096313]
[606.14129639 301.93026733]
[627.87072754 314.29281616]
[652.50000000 318.58203125]
[658.50488281 342.85012817]
[664.50976562 367.11825562]
[670.51464844 391.38638306]
[676.51953125 415.65447998]
[682.52435303 439.92260742]
[663.95892334 456.66549683]
[653.55474854 479.39767456]
[653.01770020 504.39190674]
[662.43585205 527.55004883]
[680.26501465 545.07489014]
[703.58178711 554.09313965]
[728.56304932 553.12597656]
[751.11285400 542.33209229]
[767.53369141 523.48126221]
[775.13330078 499.66430664]
[772.66546631 474.78640747]
[760.53491211 452.92663574]
[740.73065186 437.66918945]
[716.49975586 431.51577759]
[710.49487305 407.24765015]
[704.48999023 382.97955322]
[698.48510742 358.71142578]
[692.48022461 334.44329834]
[686.47534180 310.17520142]
[706.26263428 294.89562988]
[719.71972656 273.82653809]
[725.26226807 249.44866943]
[722.23760986 224.63232422]
[711.00189209 202.29940796]
[692.87805176 185.07946777]
[670.00000000 175.00000000]
[670.00000000 150.00000000]
[670.00000000 125.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[517.50000000 208.97147640 38.21401848 242.74528147 204.55896110 1.00000000]
[517.50000000 208.97147640 38.21401848 204.55896110 166.37264073 1.00000000]
[517.50000000 208.97147640 38.21401848 166.37264073 128.18632037 1.00000000]
[517.50000000 208.97147640 38.21401848 128.18632037 90.00000000 1.00000000]
[517.50000000 208.97147640 38.21401848 90.00000000 51.81367963 1.00000000]
[517.50000000 208.97147640 38.21401848 51.81367963 13.62735927 1.00000000]
[517.50000000 208.97147640 38.21401848 13.62735927 335.44103890 1.00000000]
[517.50000000 208.97147640 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[652.50000697 245.72454698 72.85747419 256.10195112 236.34397207 1.00000000]
[652.50000697 245.72454698 72.85747419 236.34397207 216.58599302 1.00000000]
[652.50000697 245.72454698 72.85747419 216.58599302 196.82801397 1.00000000]
[652.50000697 245.72454698 72.85747419 196.82801397 177.07003492 1.00000000]
[652.50000697 245.72454698 72.85747419 177.07003492 157.31205586 1.00000000]
[]
[]
[]
[506.72863538 353.92863986 39.86382195 297.37426085 260.82554436 1.00000000]
[506.72863538 353.92863986 39.86382195 260.82554436 224.27682786 1.00000000]
[506.72863538 353.92863986 39.86382195 224.27682786 187.72811136 1.00000000]
[]
[]
[]
[]
[]
[332.73002815 411.51237757 28.47466729 303.76685713 251.68836521 1.00000000]
[332.73002815 411.51237757 28.47466729 251.68836521 199.60987328 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-98.22222215 554.13329745 36.01426010 312.61568896 271.99747311 1.00000000]
[-98.22222215 554.13329745 36.01426010 271.99747311 231.37925726 1.00000000]
[-98.22222215 554.13329745 36.01426010 231.37925726 190.76104140 1.00000000]
[]
[]
[]
[]
[]
[-268.10000581 610.35327484 28.47466729 303.76685709 251.68836516 1.00000000]
[-268.10000581 610.35327484 28.47466729 251.68836516 199.60987323 1.00000000]
[]
[]
[]
[]
[]
[-429.41998668 663.74110172 28.47466729 303.76685716 251.68836531 1.00000000]
[-429.41998668 663.74110172 28.47466729 251.68836531 199.60987319 1.00000000]
[-491.14160844 684.16748194 46.00953986 319.33263530 287.80378130 1.00000000]
[-491.14160844 684.16748194 46.00953986 287.80378130 256.27492725 1.00000000]
[-491.14160844 684.16748194 46.00953986 256.27492725 224.74607319 1.00000000]
[-491.14160844 684.16748194 46.00953986 224.74607319 193.21721914 1.00000000]
[-491.14160844 684.16748194 46.00953986 193.21721914 161.68836509 1.00000000]
[-491.14160844 684.16748194 46.00953986 161.68836509 130.15951104 1.00000000]
[-491.14160844 684.16748194 46.00953986 130.15951104 98.63065699 1.00000000]
[-491.14160844 684.16748194 46.00953986 98.63065699 67.10180293 1.00000000]
[-491.14160844 684.16748194 46.00953986 67.10180293 35.57294888 1.00000000]
[-491.14160844 684.16748194 46.00953986 35.57294888 4.04409478 1.00000000]
[-429.41998668 663.74110172 28.47466729 123.76685674 71.68836486 1.00000000]
[-429.41998668 663.74110172 28.47466729 71.68836486 19.60987311 1.00000000]
[]
[]
[]
[]
[]
[-268.10000581 610.35327484 28.47466729 123.76685704 71.68836511 1.00000000]
[-268.10000581 610.35327484 28.47466729 71.68836511 19.60987328 1.00000000]
[]
[]
[]
[]
[]
[-98.22222215 554.13329745 36.01426010 132.61568896 91.99747311 1.00000000]
[-98.22222215 554.13329745 36.01426010 91.99747311 51.37925726 1.00000000]
[-98.22222215 554.13329745 36.01426010 51.37925726 10.76104140 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[332.73002815 411.51237757 28.47466729 123.76685709 71.68836516 1.00000000]
[332.73002815 411.51237757 28.47466729 71.68836516 19.60987333 1.00000000]
[]
[]
[]
[]
[]
[506.72863538 353.92863986 39.86382195 135.64861910 99.09990260 1.00000000]
[506.72863538 353.92863986 39.86382195 99.09990260 62.55118611 1.00000000]
[506.72863538 353.92863986 39.86382195 62.55118611 26.00246961 1.00000000]
[506.72863538 353.92863986 39.86382195 26.00246961 349.45375311 1.00000000]
[]
[]
[]
[652.50000697 245.72454698 72.85747419 129.51595810 109.75797905 1.00000000]
[652.50000697 245.72454698 72.85747419 109.75797905 90.00000000 1.00000000]
[]
[]
[]
[]
[]
[713.73346565 493.19361127 61.73983513 239.63588245 216.27389226 1.00000000]
[713.73346565 493.19361127 61.73983513 216.27389226 192.91190207 1.00000000]
[713.73346565 493.19361127 61.73983513 192.91190207 169.54991188 1.00000000]
[713.73346565 493.19361127 61.73983513 169.54991188 146.18792169 1.00000000]
[713.73346565 493.19361127 61.73983513 146.18792169 122.82593150 1.00000000]
[713.73346565 493.19361127 61.73983513 122.82593150 99.46394131 1.00000000]
[713.73346565 493.19361127 61.73983513 99.46394131 76.10195112 1.00000000]
[713.73346565 493.19361127 61.73983513 76.10195112 52.73996093 1.00000000]
[713.73346565 493.19361127 61.73983513 52.73996093 29.37797074 1.00000000]
[713.73346565 493.19361127 61.73983513 29.37797074 6.01598055 1.00000000]
[713.73346565 493.19361127 61.73983513 6.01598055 342.65399036 1.00000000]
[713.73346565 493.19361127 61.73983513 342.65399036 319.29200017 1.00000000]
[713.73346565 493.19361127 61.73983513 319.29200017 295.93000997 1.00000000]
[713.73346565 493.19361127 61.73983513 295.93000997 272.56801978 1.00000000]
[]
[]
[]
[]
[]
[652.50000697 245.72454698 72.85747419 62.20390224 42.44592319 1.00000000]
[652.50000697 245.72454698 72.85747419 42.44592319 22.68794414 1.00000000]
[652.50000697 245.72454698 72.85747419 22.68794414 2.92996508 1.00000000]
[652.50000697 245.72454698 72.85747419 2.92996508 343.17198603 1.00000000]
[652.50000697 245.72454698 72.85747419 343.17198603 323.41400698 1.00000000]
[652.50000697 245.72454698 72.85747419 323.41400698 303.65602793 1.00000000]
[652.50000697 245.72454698 72.85747419 303.65602793 283.89804888 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 31]
[18 30]
[19 29]
[20 28]
[33 180]
[34 179]
[35 178]
[36 177]
[41 144]
[42 143]
[43 142]
[44 141]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[80 104]
[81 103]
[82 102]
[83 101]
[84 100]
[85 99]
[87 97]
[146 170]
[147 169]
[148 168]
[149 167]
[150 166]
[151 165]
] def

init

% Start Annotations
55 84 12 1.00 0.60 0.67 omark 99 130 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
