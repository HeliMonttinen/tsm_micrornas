%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGUCCUUCUCCCAAGCCCCCAGAUGUCUCGUGGCCACCCAGUCUCCUUUGUCCAAUUCUCUGAGCAAGGCUUAACACCAAAGGGUUAAGGGUUUGCUCUGGAGUUAAGGGUUGCUUGGAGAAUUGGAGAAGGGGCACCUGGUAGGUCAUUCUUUUCUUCCCUGAUUUCUUCCCCCACCUC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[105.90137482 191.13203430]
[98.75732422 215.08955383]
[105.90137482 239.04705811]
[92.20907593 259.96405029]
[78.51677704 280.88107300]
[56.03509521 291.81607056]
[49.26139832 315.88092041]
[62.73822784 336.93737793]
[87.42782593 340.86471558]
[106.77298737 325.02914429]
[107.80057526 300.05029297]
[121.49287415 279.13327026]
[135.18518066 258.21627808]
[160.00000000 255.17909241]
[179.09863281 239.04705811]
[186.24267578 215.08955383]
[179.09863281 191.13203430]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[335.00000000 125.00000000]
[335.00000000 150.00000000]
[335.00000000 175.00000000]
[335.00000000 200.00000000]
[335.00000000 225.00000000]
[318.72460938 243.97660828]
[318.72460938 268.97662354]
[335.00000000 287.95321655]
[335.00000000 312.95321655]
[335.00000000 337.95321655]
[335.00000000 362.95321655]
[317.11196899 380.41799927]
[313.14199829 405.10076904]
[324.65148926 427.29385376]
[316.81228638 451.03298950]
[308.97308350 474.77215576]
[301.13391113 498.51129150]
[293.29470825 522.25042725]
[285.45553589 545.98956299]
[267.99090576 563.87774658]
[271.36862183 588.64849854]
[263.52941895 612.38769531]
[255.69023132 636.12683105]
[247.85104370 659.86596680]
[240.01185608 683.60510254]
[232.17266846 707.34423828]
[224.33348083 731.08343506]
[216.49429321 754.82257080]
[208.65510559 778.56170654]
[200.81591797 802.30084229]
[192.97673035 826.03997803]
[185.13754272 849.77917480]
[177.29835510 873.51831055]
[169.45916748 897.25744629]
[161.61997986 920.99658203]
[153.78079224 944.73571777]
[145.94160461 968.47491455]
[124.53659821 981.39099121]
[116.69741058 1005.13012695]
[126.20151520 1028.25317383]
[118.36232758 1051.99230957]
[110.52313995 1075.73144531]
[102.68395233 1099.47058105]
[94.84476471 1123.20971680]
[87.00557709 1146.94885254]
[69.54094696 1164.83703613]
[72.91865540 1189.60778809]
[65.07946777 1213.34692383]
[57.24028015 1237.08605957]
[39.77565002 1254.97424316]
[43.15336227 1279.74499512]
[64.76974487 1292.30419922]
[78.67863464 1313.07775879]
[92.58752441 1333.85144043]
[106.49641418 1354.62500000]
[98.73957825 1378.39123535]
[104.55583191 1402.70520020]
[122.22794342 1420.38842773]
[146.53829956 1426.21997070]
[170.30935669 1418.47802734]
[186.52279663 1399.44848633]
[190.39166260 1374.74963379]
[180.77369690 1351.67382812]
[160.50857544 1337.03393555]
[135.57946777 1335.15258789]
[121.67057800 1314.37890625]
[107.76168823 1293.60534668]
[93.85279846 1272.83178711]
[90.47509003 1248.06091309]
[98.31427765 1224.32177734]
[106.15346527 1200.58264160]
[123.61809540 1182.69445801]
[120.24038696 1157.92370605]
[128.07957458 1134.18457031]
[135.91876221 1110.44543457]
[143.75794983 1086.70629883]
[151.59713745 1062.96716309]
[159.43632507 1039.22802734]
[180.84132385 1026.31188965]
[188.68051147 1002.57275391]
[179.17640686 979.44976807]
[187.01559448 955.71063232]
[194.85478210 931.97143555]
[202.69396973 908.23229980]
[210.53315735 884.49316406]
[218.37234497 860.75402832]
[226.21153259 837.01489258]
[234.05072021 813.27569580]
[241.88990784 789.53656006]
[249.72911072 765.79742432]
[257.56829834 742.05828857]
[265.40747070 718.31915283]
[273.24667358 694.57995605]
[281.08584595 670.84082031]
[288.92504883 647.10168457]
[296.76422119 623.36254883]
[304.60342407 599.62341309]
[322.06805420 581.73522949]
[318.69033813 556.96447754]
[326.52954102 533.22528076]
[334.36871338 509.48614502]
[342.20791626 485.74700928]
[350.04708862 462.00784302]
[357.88629150 438.26870728]
[380.34851074 427.29385376]
[391.85800171 405.10076904]
[387.88803101 380.41799927]
[370.00000000 362.95321655]
[370.00000000 337.95321655]
[370.00000000 312.95321655]
[370.00000000 287.95321655]
[386.27539062 268.97662354]
[386.27539062 243.97660828]
[370.00000000 225.00000000]
[370.00000000 200.00000000]
[370.00000000 175.00000000]
[370.00000000 150.00000000]
[370.00000000 125.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
[1020.00000000 100.00000000]
[1045.00000000 100.00000000]
[1070.00000000 100.00000000]
[1095.00000000 100.00000000]
[1120.00000000 100.00000000]
[1145.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[142.50000000 215.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[142.50000000 215.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[142.50000000 215.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[]
[]
[79.45836869 311.39490702 30.52836670 268.23253200 219.89129397 1.00000000]
[79.45836869 311.39490702 30.52836670 219.89129397 171.55005594 1.00000000]
[79.45836869 311.39490702 30.52836670 171.55005594 123.20881791 1.00000000]
[79.45836869 311.39490702 30.52836670 123.20881791 74.86757988 1.00000000]
[79.45836869 311.39490702 30.52836670 74.86757988 26.52634185 1.00000000]
[79.45836869 311.39490702 30.52836670 26.52634185 338.18510381 1.00000000]
[]
[]
[142.50000000 215.08954835 43.74267810 99.62645373 66.41763582 1.00000000]
[142.50000000 215.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[142.50000000 215.08954835 43.74267810 33.20881791 360.00000000 1.00000000]
[142.50000000 215.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[142.50000000 215.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[352.49999904 256.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[352.49999904 256.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[352.49999904 256.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[]
[352.49999904 398.77045322 39.86382195 243.96025387 207.41153737 1.00000000]
[352.49999904 398.77045322 39.86382195 207.41153737 170.86282088 1.00000000]
[352.49999904 398.77045322 39.86382195 170.86282088 134.31410438 1.00000000]
[]
[]
[]
[]
[]
[295.02947665 572.80648748 28.47466729 250.35285015 198.27435822 1.00000000]
[295.02947665 572.80648748 28.47466729 198.27435822 146.19586630 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[152.68896432 1003.85143569 36.01426010 259.20168198 218.58346613 1.00000000]
[152.68896432 1003.85143569 36.01426010 218.58346613 177.96525027 1.00000000]
[152.68896432 1003.85143569 36.01426010 177.96525027 137.34703442 1.00000000]
[]
[]
[]
[]
[]
[96.57952125 1173.76576009 28.47466729 250.35285010 198.27435818 1.00000000]
[96.57952125 1173.76576009 28.47466729 198.27435818 146.19586625 1.00000000]
[]
[]
[66.81422497 1263.90299803 28.47466729 250.35285006 198.27435813 1.00000000]
[66.81422497 1263.90299803 28.47466729 198.27435813 146.19586620 1.00000000]
[66.81422497 1263.90299803 28.47466729 146.19586620 94.11737428 1.00000000]
[]
[]
[]
[144.71168837 1380.24668052 46.00953986 213.84013644 182.31128239 1.00000000]
[144.71168837 1380.24668052 46.00953986 182.31128239 150.78242834 1.00000000]
[144.71168837 1380.24668052 46.00953986 150.78242834 119.25357428 1.00000000]
[144.71168837 1380.24668052 46.00953986 119.25357428 87.72472023 1.00000000]
[144.71168837 1380.24668052 46.00953986 87.72472023 56.19586618 1.00000000]
[144.71168837 1380.24668052 46.00953986 56.19586618 24.66701213 1.00000000]
[144.71168837 1380.24668052 46.00953986 24.66701213 353.13815808 1.00000000]
[144.71168837 1380.24668052 46.00953986 353.13815808 321.60930402 1.00000000]
[144.71168837 1380.24668052 46.00953986 321.60930402 290.08044997 1.00000000]
[144.71168837 1380.24668052 46.00953986 290.08044997 258.55159592 1.00000000]
[]
[]
[]
[66.81422497 1263.90299803 28.47466729 18.27435808 326.19586625 1.00000000]
[]
[]
[96.57952125 1173.76576009 28.47466729 70.35285006 18.27435813 1.00000000]
[96.57952125 1173.76576009 28.47466729 18.27435813 326.19586630 1.00000000]
[]
[]
[]
[]
[]
[152.68896432 1003.85143569 36.01426010 79.20168198 38.58346613 1.00000000]
[152.68896432 1003.85143569 36.01426010 38.58346613 357.96525027 1.00000000]
[152.68896432 1003.85143569 36.01426010 357.96525027 317.34703442 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[295.02947665 572.80648748 28.47466729 70.35285010 18.27435818 1.00000000]
[295.02947665 572.80648748 28.47466729 18.27435818 326.19586635 1.00000000]
[]
[]
[]
[]
[]
[352.49999904 398.77045322 39.86382195 82.23461212 45.68589562 1.00000000]
[352.49999904 398.77045322 39.86382195 45.68589562 9.13717912 1.00000000]
[352.49999904 398.77045322 39.86382195 9.13717912 332.58846263 1.00000000]
[352.49999904 398.77045322 39.86382195 332.58846263 296.03974613 1.00000000]
[]
[]
[]
[352.49999904 256.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[352.49999904 256.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[352.49999904 256.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 26]
[3 25]
[4 24]
[5 23]
[8 18]
[9 17]
[10 16]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[41 144]
[42 143]
[43 142]
[44 141]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[80 104]
[81 103]
[82 102]
[85 101]
[86 100]
[87 99]
[88 98]
] def

init

% Start Annotations
55 84 12 1.00 0.60 0.67 omark 99 130 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
