%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUUUUUUCCUUUUACUGCUAGAAAGAAUAAUAUCAGAAUGAGGUACCAACCUAGGUGGUCAGAGUUGGCCAAAAUAAAAAUUUUCCUGCUGAGCAAUUUAGGCUGGGUUAACUCAUACUUGACCA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[150.00000000 250.00000000]
[133.72460938 268.97662354]
[133.72460938 293.97662354]
[150.00000000 312.95321655]
[132.74304199 331.04180908]
[130.36175537 355.92816162]
[143.87530518 376.96109009]
[167.50000000 385.13870239]
[191.12469482 376.96109009]
[204.63824463 355.92816162]
[202.25695801 331.04180908]
[185.00000000 312.95321655]
[201.27539062 293.97662354]
[201.27539062 268.97662354]
[185.00000000 250.00000000]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[360.00000000 125.00000000]
[360.00000000 150.00000000]
[360.00000000 175.00000000]
[349.02532959 197.46234131]
[360.00000000 219.92468262]
[360.00000000 244.92468262]
[360.00000000 269.92468262]
[360.00000000 294.92468262]
[360.00000000 319.92468262]
[339.24337769 333.85891724]
[327.48233032 355.91967773]
[327.48233032 380.91967773]
[339.24337769 402.98046875]
[327.48233032 425.04125977]
[315.72131348 447.10202026]
[295.46969604 461.76055908]
[294.58685303 486.74496460]
[282.82580566 508.80572510]
[271.06478882 530.86651611]
[259.30374146 552.92730713]
[247.54269409 574.98803711]
[235.78166199 597.04882812]
[224.02061462 619.10961914]
[212.25958252 641.17041016]
[192.00796509 655.82891846]
[191.12513733 680.81335449]
[179.36408997 702.87408447]
[167.60305786 724.93487549]
[155.84201050 746.99566650]
[131.39961243 752.24627686]
[113.82486725 770.02630615]
[108.85838318 794.52801514]
[118.12242889 817.74816895]
[138.59098816 832.10223389]
[140.83326721 857.00146484]
[131.91751099 880.35760498]
[144.86262512 901.74505615]
[169.69003296 904.67761230]
[190.70994568 918.21142578]
[211.72985840 931.74517822]
[232.74977112 945.27899170]
[253.76969910 958.81274414]
[268.42260742 979.06842041]
[293.41342163 978.39080811]
[306.94720459 957.37091064]
[297.22088623 934.34051514]
[272.71697998 929.38482666]
[251.69706726 915.85107422]
[230.67715454 902.31732178]
[209.65722656 888.78350830]
[188.63731384 875.24975586]
[175.69219971 853.86230469]
[173.44992065 828.96301270]
[191.02465820 811.18304443]
[195.99114990 786.68133545]
[186.72709656 763.46112061]
[198.48814392 741.40032959]
[210.24919128 719.33959961]
[222.01022339 697.27880859]
[242.26182556 682.62023926]
[243.14466858 657.63586426]
[268.13037109 656.79083252]
[254.90570068 635.57507324]
[266.66674805 613.51428223]
[278.42779541 591.45355225]
[290.18884277 569.39276123]
[301.94985962 547.33197021]
[313.71090698 525.27117920]
[325.47195435 503.21041870]
[345.72357178 488.55187988]
[346.60638428 463.56747437]
[358.36743164 441.50671387]
[370.12847900 419.44592285]
[395.00000000 416.91470337]
[415.75662231 402.98046875]
[427.51766968 380.91967773]
[427.51766968 355.91967773]
[415.75662231 333.85891724]
[395.00000000 319.92468262]
[395.00000000 294.92468262]
[395.00000000 269.92468262]
[395.00000000 244.92468262]
[395.00000000 219.92468262]
[405.97467041 197.46234131]
[395.00000000 175.00000000]
[416.65063477 162.50000000]
[395.00000000 150.00000000]
[395.00000000 125.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999997 281.47660935 36.01426010 240.92732389 200.30910807 1.00000000]
[167.49999997 281.47660935 36.01426010 200.30910807 159.69089218 1.00000000]
[167.49999997 281.47660935 36.01426010 159.69089218 119.07267616 1.00000000]
[167.50000000 346.92469492 38.21401848 242.74528140 204.55896110 1.00000000]
[167.50000000 346.92469492 38.21401848 204.55896110 166.37264073 1.00000000]
[167.50000000 346.92469492 38.21401848 166.37264073 128.18632037 1.00000000]
[167.50000000 346.92469492 38.21401848 128.18632037 90.00000000 1.00000000]
[167.50000000 346.92469492 38.21401848 90.00000000 51.81367963 1.00000000]
[167.50000000 346.92469492 38.21401848 51.81367963 13.62735927 1.00000000]
[167.50000000 346.92469492 38.21401848 13.62735927 335.44103890 1.00000000]
[167.50000000 346.92469492 38.21401848 335.44103890 297.25471847 1.00000000]
[167.49999997 281.47660935 36.01426010 60.92732360 20.30910779 1.00000000]
[167.49999997 281.47660935 36.01426010 20.30910779 339.69089197 1.00000000]
[167.49999997 281.47660935 36.01426010 339.69089197 299.07267620 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[377.49999912 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[377.49999912 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[]
[]
[]
[377.49999925 368.41968951 51.55595118 250.15742035 222.09445240 1.00000000]
[377.49999925 368.41968951 51.55595118 222.09445240 194.03148436 1.00000000]
[377.49999925 368.41968951 51.55595118 194.03148436 165.96851622 1.00000000]
[377.49999925 368.41968951 51.55595118 165.96851622 137.90554802 1.00000000]
[]
[]
[320.59662557 475.15621804 28.47466729 260.14145990 208.06296797 1.00000000]
[320.59662557 475.15621804 28.47466729 208.06296797 155.98447605 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[217.13490001 669.22459624 28.47466729 260.14145985 208.06296792 1.00000000]
[217.13490001 669.22459624 28.47466729 208.06296792 155.98447600 1.00000000]
[]
[]
[]
[152.42476505 790.60466120 43.74267810 274.48060372 241.27178581 1.00000000]
[152.42476505 790.60466120 43.74267810 241.27178581 208.06296790 1.00000000]
[152.42476505 790.60466120 43.74267810 208.06296790 174.85414999 1.00000000]
[152.42476505 790.60466120 43.74267810 174.85414999 141.64533208 1.00000000]
[152.42476505 790.60466120 43.74267810 141.64533208 108.43651417 1.00000000]
[]
[160.27741061 877.80368042 28.47466729 226.93264189 174.85414997 1.00000000]
[160.27741061 877.80368042 28.47466729 174.85414997 122.77565804 1.00000000]
[160.27741061 877.80368042 28.47466729 122.77565804 70.69716612 1.00000000]
[]
[]
[]
[]
[280.27639640 955.06561427 26.77024824 171.95369101 116.28247781 1.00000000]
[280.27639640 955.06561427 26.77024824 116.28247781 60.61126462 1.00000000]
[280.27639640 955.06561427 26.77024824 60.61126462 4.94005142 1.00000000]
[280.27639640 955.06561427 26.77024824 4.94005142 309.26883822 1.00000000]
[280.27639640 955.06561427 26.77024824 309.26883822 253.59762502 1.00000000]
[]
[]
[]
[]
[160.27741061 877.80368042 28.47466729 354.85414992 302.77565809 1.00000000]
[]
[152.42476505 790.60466120 43.74267810 61.27178581 28.06296790 1.00000000]
[152.42476505 790.60466120 43.74267810 28.06296790 354.85414999 1.00000000]
[152.42476505 790.60466120 43.74267810 354.85414999 321.64533208 1.00000000]
[]
[]
[]
[217.13490001 669.22459624 28.47466729 80.14145980 28.06296788 1.00000000]
[217.13490001 669.22459624 28.47466729 28.06296788 335.98447605 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[320.59662557 475.15621804 28.47466729 80.14145985 28.06296792 1.00000000]
[320.59662557 475.15621804 28.47466729 28.06296792 335.98447609 1.00000000]
[]
[]
[377.49999925 368.41968951 51.55595118 98.22038797 70.15741977 1.00000000]
[377.49999925 368.41968951 51.55595118 70.15741977 42.09445164 1.00000000]
[377.49999925 368.41968951 51.55595118 42.09445164 14.03148359 1.00000000]
[377.49999925 368.41968951 51.55595118 14.03148359 345.96851564 1.00000000]
[377.49999925 368.41968951 51.55595118 345.96851564 317.90554775 1.00000000]
[377.49999925 368.41968951 51.55595118 317.90554775 289.84257990 1.00000000]
[]
[]
[]
[]
[377.49999912 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[377.49999912 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 29]
[4 28]
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[12 20]
[36 125]
[37 124]
[38 123]
[39 121]
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[49 109]
[50 108]
[51 107]
[53 105]
[54 104]
[55 103]
[56 102]
[57 101]
[58 100]
[59 99]
[60 97]
[62 95]
[63 94]
[64 93]
[65 92]
[70 89]
[71 88]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
] def

init

% Start Annotations
31 35 12 1.00 0.60 0.67 omark 47 85 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
