%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCCUUUUCUUUUUACUGCUAGAAAGAAUUUCUGCUAGHAGMAUUUUUAUUUUGGCCAACUCUGACCCCUUAGGUUGAUAUCAGAAUGAGGUACCAACCUAGGUGGUCAGAGUUGGCCAAAAUAAACAUUUUCCUGCUGAGCAAUUUAGACUGGGUUAAGUCAUACUUGACCA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[300.00000000 125.00000000]
[300.00000000 150.00000000]
[300.00000000 175.00000000]
[300.00000000 200.00000000]
[300.00000000 225.00000000]
[300.00000000 250.00000000]
[300.00000000 275.00000000]
[300.00000000 300.00000000]
[290.90148926 323.28555298]
[305.00000000 343.93093872]
[330.00000000 343.93093872]
[344.09851074 323.28555298]
[335.00000000 300.00000000]
[335.00000000 275.00000000]
[335.00000000 250.00000000]
[335.00000000 225.00000000]
[335.00000000 200.00000000]
[335.00000000 175.00000000]
[335.00000000 150.00000000]
[335.00000000 125.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[460.00000000 125.00000000]
[460.00000000 150.00000000]
[460.00000000 175.00000000]
[460.00000000 200.00000000]
[460.00000000 225.00000000]
[449.02532959 247.46234131]
[460.00000000 269.92468262]
[460.00000000 294.92468262]
[437.80746460 306.43515015]
[421.79556274 325.63461304]
[414.45751953 349.53341675]
[416.93600464 374.41024780]
[428.84509277 396.39147949]
[414.81549072 417.08374023]
[400.78585815 437.77603149]
[386.75625610 458.46829224]
[372.72665405 479.16058350]
[358.69705200 499.85284424]
[344.66744995 520.54510498]
[330.63784790 541.23742676]
[316.60824585 561.92968750]
[302.57864380 582.62194824]
[288.54904175 603.31420898]
[274.51943970 624.00646973]
[260.48983765 644.69879150]
[246.46022034 665.39105225]
[232.43061829 686.08331299]
[218.40101624 706.77557373]
[204.37141418 727.46783447]
[190.34181213 748.16015625]
[176.31219482 768.85241699]
[162.28259277 789.54467773]
[148.25299072 810.23693848]
[134.22338867 830.92926025]
[112.53424835 843.36230469]
[109.01236725 868.11297607]
[94.98276520 888.80523682]
[80.95316315 909.49755859]
[66.92355347 930.18981934]
[52.89395142 950.88208008]
[38.86434555 971.57434082]
[24.83474159 992.26660156]
[10.80513763 1012.95892334]
[-3.22446680 1033.65112305]
[-24.91360855 1046.08422852]
[-28.43548584 1070.83496094]
[-42.46508789 1091.52722168]
[-56.49469376 1112.21948242]
[-70.52429962 1132.91174316]
[-94.95876312 1138.19921875]
[-110.89554596 1157.46105957]
[-111.51386261 1182.45336914]
[-96.54906464 1202.47973633]
[-72.40596008 1208.96899414]
[-49.41757584 1199.14379883]
[-37.42273331 1177.20935059]
[-41.55511475 1152.55322266]
[-27.52551079 1131.86096191]
[-13.49590588 1111.16870117]
[0.53369814 1090.47631836]
[22.22283936 1078.04333496]
[25.74471664 1053.29260254]
[39.77432251 1032.60034180]
[53.80392456 1011.90808105]
[67.83352661 991.21582031]
[81.86313629 970.52349854]
[95.89273834 949.83123779]
[109.92234039 929.13897705]
[123.95195007 908.44671631]
[137.98155212 887.75445557]
[159.67070007 875.32135010]
[163.19256592 850.57067871]
[177.22216797 829.87841797]
[191.25178528 809.18615723]
[205.28138733 788.49383545]
[219.31098938 767.80157471]
[233.34059143 747.10931396]
[247.37019348 726.41705322]
[261.39981079 705.72479248]
[275.42941284 685.03247070]
[289.45901489 664.34020996]
[303.48861694 643.64794922]
[317.51821899 622.95568848]
[331.54782104 602.26336670]
[345.57742310 581.57110596]
[359.60702515 560.87884521]
[373.63662720 540.18658447]
[387.66622925 519.49432373]
[401.69583130 498.80203247]
[415.72546387 478.10974121]
[429.75506592 457.41748047]
[443.78466797 436.72518921]
[457.81427002 416.03292847]
[482.64233398 418.95989990]
[506.66967773 412.05432129]
[526.15490723 396.39147949]
[538.06396484 374.41024780]
[540.54248047 349.53341675]
[533.20446777 325.63461304]
[517.19256592 306.43515015]
[495.00000000 294.92468262]
[495.00000000 269.92468262]
[505.97467041 247.46234131]
[495.00000000 225.00000000]
[495.00000000 200.00000000]
[516.65063477 187.50000000]
[495.00000000 175.00000000]
[495.00000000 150.00000000]
[495.00000000 125.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[770.00000000 125.00000000]
[770.00000000 150.00000000]
[770.00000000 175.00000000]
[770.00000000 200.00000000]
[770.00000000 225.00000000]
[770.00000000 250.00000000]
[770.00000000 275.00000000]
[766.46459961 299.74874878]
[787.50000000 313.25842285]
[808.53540039 299.74874878]
[805.00000000 275.00000000]
[805.00000000 250.00000000]
[805.00000000 225.00000000]
[805.00000000 200.00000000]
[805.00000000 175.00000000]
[805.00000000 150.00000000]
[805.00000000 125.00000000]
[805.00000000 100.00000000]
[830.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[317.50000000 320.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[317.50000000 320.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[317.50000000 320.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[317.50000000 320.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[317.50000000 320.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.49999949 247.46233919 28.47466709 232.07849235 180.00000000 1.00000000]
[477.49999949 247.46233919 28.47466709 180.00000000 127.92150785 1.00000000]
[]
[477.49999978 355.81436292 63.35458712 253.96508418 231.20659673 1.00000000]
[477.49999978 355.81436292 63.35458712 231.20659673 208.44810927 1.00000000]
[477.49999978 355.81436292 63.35458712 208.44810927 185.68962182 1.00000000]
[477.49999978 355.81436292 63.35458712 185.68962182 162.93113436 1.00000000]
[477.49999978 355.81436292 63.35458712 162.93113436 140.17264691 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[136.10246958 859.34183117 28.47466729 266.21622304 214.13773111 1.00000000]
[136.10246958 859.34183117 28.47466729 214.13773111 162.05923918 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-1.34538436 1062.06377233 28.47466729 266.21622299 214.13773106 1.00000000]
[-1.34538436 1062.06377233 28.47466729 214.13773106 162.05923914 1.00000000]
[]
[]
[]
[-75.10396183 1170.85035285 38.21401848 276.88301251 238.69669214 1.00000000]
[-75.10396183 1170.85035285 38.21401848 238.69669214 200.51037177 1.00000000]
[-75.10396183 1170.85035285 38.21401848 200.51037177 162.32405141 1.00000000]
[-75.10396183 1170.85035285 38.21401848 162.32405141 124.13773104 1.00000000]
[-75.10396183 1170.85035285 38.21401848 124.13773104 85.95141067 1.00000000]
[-75.10396183 1170.85035285 38.21401848 85.95141067 47.76509031 1.00000000]
[-75.10396183 1170.85035285 38.21401848 47.76509031 9.57876994 1.00000000]
[-75.10396183 1170.85035285 38.21401848 9.57876994 331.39244957 1.00000000]
[]
[]
[]
[-1.34538436 1062.06377233 28.47466729 86.21622294 34.13773102 1.00000000]
[-1.34538436 1062.06377233 28.47466729 34.13773102 342.05923918 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[136.10246958 859.34183117 28.47466729 86.21622299 34.13773106 1.00000000]
[136.10246958 859.34183117 28.47466729 34.13773106 342.05923923 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.49999978 355.81436292 63.35458712 108.10281536 85.34432791 1.00000000]
[477.49999978 355.81436292 63.35458712 85.34432791 62.58584045 1.00000000]
[477.49999978 355.81436292 63.35458712 62.58584045 39.82735300 1.00000000]
[477.49999978 355.81436292 63.35458712 39.82735300 17.06886554 1.00000000]
[477.49999978 355.81436292 63.35458712 17.06886554 354.31037809 1.00000000]
[477.49999978 355.81436292 63.35458712 354.31037809 331.55189063 1.00000000]
[477.49999978 355.81436292 63.35458712 331.55189063 308.79340318 1.00000000]
[477.49999978 355.81436292 63.35458712 308.79340318 286.03491573 1.00000000]
[]
[477.49999949 247.46233919 28.47466709 52.07849141 360.00000000 1.00000000]
[477.49999949 247.46233919 28.47466709 360.00000000 307.92150830 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[787.49999785 290.12681945 23.13159456 220.83979705 155.41989853 1.00000000]
[787.49999785 290.12681945 23.13159456 155.41989853 90.00000000 1.00000000]
[787.49999785 290.12681945 23.13159456 90.00000000 24.58010147 1.00000000]
[787.49999785 290.12681945 23.13159456 24.58010147 319.16020295 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[35 145]
[36 144]
[37 143]
[38 142]
[39 140]
[40 139]
[42 137]
[43 136]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[78 98]
[79 97]
[81 95]
[82 94]
[83 93]
[84 92]
[156 174]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
] def

init

% Start Annotations
44 82 12 1.00 0.60 0.67 omark 94 132 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
