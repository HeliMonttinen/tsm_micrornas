%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCCCUUUUCUUUUUACUGCUAGAAAGAAUUUCUGCUAGUAGAAUUUUUAUUUUGGCCAACUCUGACCCCUUAGGUUGAUGUCAGAAUGAGGUGUACCAACCUAGGUGGUCAGAGUUGGCCAAAAUACACAUUUUCCUGCUGAGCAAUUUAGUCUAGGUUAAGUCAUACUUGACCA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[300.00000000 125.00000000]
[300.00000000 150.00000000]
[300.00000000 175.00000000]
[300.00000000 200.00000000]
[300.00000000 225.00000000]
[300.00000000 250.00000000]
[300.00000000 275.00000000]
[300.00000000 300.00000000]
[290.90148926 323.28555298]
[305.00000000 343.93093872]
[330.00000000 343.93093872]
[344.09851074 323.28555298]
[335.00000000 300.00000000]
[335.00000000 275.00000000]
[335.00000000 250.00000000]
[335.00000000 225.00000000]
[335.00000000 200.00000000]
[335.00000000 175.00000000]
[335.00000000 150.00000000]
[335.00000000 125.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[460.00000000 125.00000000]
[460.00000000 150.00000000]
[460.00000000 175.00000000]
[460.00000000 200.00000000]
[460.00000000 225.00000000]
[460.00000000 250.00000000]
[460.00000000 275.00000000]
[460.00000000 300.00000000]
[460.00000000 325.00000000]
[460.00000000 350.00000000]
[443.72460938 368.97662354]
[443.72460938 393.97662354]
[460.00000000 412.95321655]
[443.72460938 431.92984009]
[443.72460938 456.92984009]
[427.44921875 475.90643311]
[411.17382812 494.88305664]
[394.89843750 513.85968018]
[378.62304688 532.83624268]
[362.34765625 551.81286621]
[346.07226562 570.78948975]
[329.79687500 589.76611328]
[313.52148438 608.74267578]
[297.24609375 627.71929932]
[280.97070312 646.69592285]
[264.69531250 665.67254639]
[248.41993713 684.64910889]
[232.14454651 703.62573242]
[215.86915588 722.60235596]
[199.59376526 741.57897949]
[183.31837463 760.55560303]
[167.04298401 779.53216553]
[150.76760864 798.50878906]
[134.49221802 817.48541260]
[111.53839874 827.39111328]
[105.24554443 851.58612061]
[88.97015381 870.56274414]
[72.69477081 889.53936768]
[56.41938019 908.51593018]
[40.14398956 927.49255371]
[23.86859894 946.46917725]
[7.59321022 965.44580078]
[-8.68217945 984.42236328]
[-24.95756912 1003.39898682]
[-49.66570663 1007.20794678]
[-70.90044403 994.01379395]
[-84.18766785 972.83715820]
[-109.05900574 970.30407715]
[-130.29374695 957.10992432]
[-151.52848816 943.91577148]
[-170.68394470 927.85125732]
[-193.26069641 938.58856201]
[-192.88752747 963.58581543]
[-170.00030518 973.64440918]
[-148.76556396 986.83856201]
[-127.53082275 1000.03271484]
[-114.24359894 1021.20935059]
[-89.37226105 1023.74243164]
[-68.13751984 1036.93652344]
[-60.60858536 1060.77587891]
[-39.37384033 1073.97009277]
[-14.66570473 1070.16113281]
[1.60968447 1051.18457031]
[1.60968447 1026.18457031]
[17.88507462 1007.20794678]
[34.16046143 988.23132324]
[50.43585205 969.25469971]
[66.71124268 950.27813721]
[82.98663330 931.30151367]
[99.26202393 912.32489014]
[115.53740692 893.34826660]
[131.81280518 874.37164307]
[154.76661682 864.46600342]
[161.05946350 840.27093506]
[177.33485413 821.29431152]
[193.61024475 802.31774902]
[209.88563538 783.34112549]
[226.16102600 764.36450195]
[242.43641663 745.38787842]
[258.71179199 726.41131592]
[274.98718262 707.43469238]
[291.26257324 688.45806885]
[307.53796387 669.48144531]
[323.81335449 650.50488281]
[340.08874512 631.52825928]
[356.36413574 612.55163574]
[372.63952637 593.57501221]
[388.91491699 574.59844971]
[405.19030762 555.62182617]
[421.46569824 536.64520264]
[437.74108887 517.66857910]
[454.01647949 498.69198608]
[470.29187012 479.71536255]
[495.00000000 475.90643311]
[511.27539062 456.92984009]
[511.27539062 431.92984009]
[495.00000000 412.95321655]
[511.27539062 393.97662354]
[511.27539062 368.97662354]
[495.00000000 350.00000000]
[495.00000000 325.00000000]
[516.65063477 312.50000000]
[495.00000000 300.00000000]
[495.00000000 275.00000000]
[495.00000000 250.00000000]
[495.00000000 225.00000000]
[495.00000000 200.00000000]
[516.65063477 187.50000000]
[495.00000000 175.00000000]
[495.00000000 150.00000000]
[495.00000000 125.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[770.00000000 125.00000000]
[770.00000000 150.00000000]
[770.00000000 175.00000000]
[770.00000000 200.00000000]
[770.00000000 225.00000000]
[770.00000000 250.00000000]
[770.00000000 275.00000000]
[766.46459961 299.74874878]
[787.50000000 313.25842285]
[808.53540039 299.74874878]
[805.00000000 275.00000000]
[805.00000000 250.00000000]
[805.00000000 225.00000000]
[805.00000000 200.00000000]
[805.00000000 175.00000000]
[805.00000000 150.00000000]
[805.00000000 125.00000000]
[805.00000000 100.00000000]
[830.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[317.50000000 320.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[317.50000000 320.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[317.50000000 320.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[317.50000000 320.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[317.50000000 320.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.50000045 381.47660935 36.01426010 240.92732389 200.30910807 1.00000000]
[477.50000045 381.47660935 36.01426010 200.30910807 159.69089218 1.00000000]
[477.50000045 381.47660935 36.01426010 159.69089218 119.07267616 1.00000000]
[477.50000048 444.42982779 36.01426010 240.92732370 200.30910793 1.00000000]
[477.50000048 444.42982779 36.01426010 200.30910793 159.69089207 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[133.15250585 845.92853766 28.47466729 272.69670776 220.61821583 1.00000000]
[133.15250585 845.92853766 28.47466729 220.61821583 168.53972390 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-32.16570495 1038.68454578 36.01426010 281.54553959 240.92732373 1.00000000]
[]
[-99.21563517 997.02323970 28.47466729 353.93313942 301.85464749 1.00000000]
[-99.21563517 997.02323970 28.47466729 301.85464749 249.77615556 1.00000000]
[]
[]
[-173.61296493 950.79664542 23.13159456 342.69444452 277.27454599 1.00000000]
[-173.61296493 950.79664542 23.13159456 277.27454599 211.85464747 1.00000000]
[-173.61296493 950.79664542 23.13159456 211.85464747 146.43474894 1.00000000]
[-173.61296493 950.79664542 23.13159456 146.43474894 81.01485041 1.00000000]
[]
[]
[-99.21563517 997.02323970 28.47466729 173.93313937 121.85464744 1.00000000]
[-99.21563517 997.02323970 28.47466729 121.85464744 69.77615561 1.00000000]
[]
[-32.16570495 1038.68454578 36.01426010 182.78197129 142.16375544 1.00000000]
[-32.16570495 1038.68454578 36.01426010 142.16375544 101.54553959 1.00000000]
[-32.16570495 1038.68454578 36.01426010 101.54553959 60.92732373 1.00000000]
[-32.16570495 1038.68454578 36.01426010 60.92732373 20.30910788 1.00000000]
[-32.16570495 1038.68454578 36.01426010 20.30910788 339.69089203 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[133.15250585 845.92853766 28.47466729 92.69670771 40.61821578 1.00000000]
[133.15250585 845.92853766 28.47466729 40.61821578 348.53972395 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.50000048 444.42982779 36.01426010 101.54553963 60.92732378 1.00000000]
[477.50000048 444.42982779 36.01426010 60.92732378 20.30910793 1.00000000]
[477.50000048 444.42982779 36.01426010 20.30910793 339.69089207 1.00000000]
[477.50000048 444.42982779 36.01426010 339.69089207 299.07267614 1.00000000]
[477.50000045 381.47660935 36.01426010 60.92732360 20.30910779 1.00000000]
[477.50000045 381.47660935 36.01426010 20.30910779 339.69089197 1.00000000]
[477.50000045 381.47660935 36.01426010 339.69089197 299.07267620 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[787.49999791 290.12681945 23.13159456 220.83979705 155.41989853 1.00000000]
[787.49999791 290.12681945 23.13159456 155.41989853 90.00000000 1.00000000]
[787.49999791 290.12681945 23.13159456 90.00000000 24.58010147 1.00000000]
[787.49999791 290.12681945 23.13159456 24.58010147 319.16020295 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[35 147]
[36 146]
[37 145]
[38 144]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[44 136]
[45 135]
[48 132]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 94]
[81 93]
[83 91]
[84 90]
[85 89]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[165 169]
] def

init

% Start Annotations
44 82 12 1.00 0.60 0.67 omark 96 134 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
