%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:56 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGACUGUGCCGCCAUCACCCAGCGGAUGGUGGAUUUCGCUGGCGUGAAGGACAAGGUGUGCAUGCCUGACCCGUUGUCAGACCUGGAAAAAGGGCCGGCUGUGGGCAGGGAGGGCAUGCGCACUUUGUCCUCCCCACCAGGUGUUCACACCACGUUCACUGAAAACCCACUAUCACCAGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[158.72460938 143.97660828]
[158.72460938 168.97660828]
[175.00000000 187.95321655]
[175.00000000 212.95321655]
[175.00000000 237.95321655]
[150.45217896 242.68658447]
[126.96040344 251.23855591]
[105.11465454 263.39434814]
[85.46358490 278.84866333]
[68.50074768 297.21334839]
[54.65215683 318.02719116]
[44.26562119 340.76748657]
[19.97012901 334.87432861]
[-4.32536030 328.98117065]
[-28.62084961 323.08804321]
[-52.91633987 317.19488525]
[-77.21183014 311.30175781]
[-101.50731659 305.40859985]
[-125.80281067 299.51544189]
[-150.09829712 293.62231445]
[-174.39378357 287.72915649]
[-198.68928528 281.83602905]
[-222.98477173 275.94287109]
[-234.79736328 253.90965271]
[-257.02059937 242.45857239]
[-281.81900024 245.62707520]
[-300.44909668 262.29800415]
[-306.34225464 286.59350586]
[-297.42062378 309.94741821]
[-276.82986450 324.12554932]
[-251.82986450 324.12902832]
[-231.23516846 309.95654297]
[-206.93968201 315.84970093]
[-182.64419556 321.74285889]
[-158.34870911 327.63598633]
[-134.05320740 333.52914429]
[-109.75772095 339.42227173]
[-85.46223450 345.31542969]
[-61.16674423 351.20858765]
[-54.12261200 375.19564819]
[-36.87125397 357.10171509]
[-12.57576466 362.99487305]
[11.71972466 368.88800049]
[36.01521683 374.78115845]
[34.82864380 399.75299072]
[10.08383465 403.31591797]
[-14.66097355 406.87884521]
[-39.40578079 410.44177246]
[-64.15058899 414.00469971]
[-88.89540100 417.56762695]
[-113.64020538 421.13055420]
[-138.38500977 424.69348145]
[-163.12982178 428.25640869]
[-187.87463379 431.81933594]
[-212.61944580 435.38226318]
[-237.36425781 438.94519043]
[-262.10906982 442.50811768]
[-286.85388184 446.07104492]
[-311.59866333 449.63397217]
[-336.34347534 453.19689941]
[-361.08828735 456.75982666]
[-385.83309937 460.32275391]
[-410.57791138 463.88568115]
[-435.32272339 467.44860840]
[-457.78103638 456.46572876]
[-481.33081055 464.85671997]
[-491.78421021 487.56631470]
[-513.20678711 500.45324707]
[-534.62939453 513.34014893]
[-556.05200195 526.22711182]
[-577.47454834 539.11401367]
[-598.89715576 552.00091553]
[-623.54785156 547.83648682]
[-644.97045898 560.72338867]
[-652.84197998 584.45184326]
[-674.26458740 597.33874512]
[-695.68719482 610.22570801]
[-717.55883789 598.11663818]
[-717.10974121 623.11260986]
[-738.53234863 635.99951172]
[-760.40405273 623.89050293]
[-759.95495605 648.88647461]
[-781.37750244 661.77337646]
[-805.26727295 654.40594482]
[-829.12292480 661.88317871]
[-844.53338623 681.56866455]
[-846.06518555 706.52166748]
[-833.17828369 727.94427490]
[-810.41632080 738.28320312]
[-785.80474854 733.89318848]
[-768.02124023 716.32202148]
[-763.33581543 691.76501465]
[-741.91326904 678.87805176]
[-720.49066162 665.99114990]
[-699.06805420 653.10424805]
[-677.64550781 640.21728516]
[-656.22290039 627.33038330]
[-634.80029297 614.44348145]
[-610.14959717 618.60791016]
[-588.72698975 605.72100830]
[-580.85546875 581.99255371]
[-559.43286133 569.10565186]
[-538.01031494 556.21868896]
[-516.13861084 568.32775879]
[-516.58770752 543.33178711]
[-495.16510010 530.44488525]
[-473.74252319 517.55792236]
[-448.78210449 518.96411133]
[-430.33462524 502.09133911]
[-405.58981323 498.52841187]
[-380.84500122 494.96548462]
[-356.10018921 491.40255737]
[-331.35537720 487.83963013]
[-306.61056519 484.27670288]
[-281.86578369 480.71377563]
[-257.12097168 477.15084839]
[-232.37614441 473.58792114]
[-207.63134766 470.02499390]
[-182.88653564 466.46206665]
[-158.14172363 462.89913940]
[-133.39691162 459.33621216]
[-108.65210724 455.77328491]
[-83.90730286 452.21035767]
[-59.16249084 448.64743042]
[-34.41768265 445.08450317]
[-9.67287540 441.52157593]
[15.07193375 437.95864868]
[39.81674194 434.39572144]
[48.00027847 458.01837158]
[59.81293488 480.05154419]
[74.95803070 499.94189453]
[93.05519867 517.18988037]
[113.64993286 531.36230469]
[136.22499084 542.10314941]
[160.21339417 549.14282227]
[185.01266479 552.30438232]
[210.00000000 551.50848389]
[215.51246643 575.89318848]
[221.02493286 600.27783203]
[226.53741455 624.66253662]
[222.79725647 649.38116455]
[241.10105896 666.40972900]
[265.48574829 660.89721680]
[274.68499756 637.65130615]
[260.67596436 616.94506836]
[255.16349792 592.56042480]
[249.65101624 568.17572021]
[244.13854980 543.79101562]
[267.03848267 533.76141357]
[288.06637573 520.23999023]
[306.69409180 503.56646729]
[322.45382690 484.15948486]
[334.94976807 462.50650024]
[343.86810303 439.15133667]
[348.98477173 414.68054199]
[350.17135620 389.70874023]
[347.39801025 364.86303711]
[340.73437500 340.76748657]
[330.34783936 318.02719116]
[316.49923706 297.21334839]
[299.53640747 278.84866333]
[279.88534546 263.39434814]
[258.03958130 251.23855591]
[234.54782104 242.68658447]
[210.00000000 237.95321655]
[210.00000000 212.95321655]
[210.00000000 187.95321655]
[226.27539062 168.97660828]
[226.27539062 143.97660828]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[192.50000000 156.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[192.50000000 156.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[192.50000000 156.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[192.50000000 394.73085848 157.75131818 263.63083506 254.54122681 1.00000000]
[192.50000000 394.73085848 157.75131818 254.54122681 245.45161856 1.00000000]
[192.50000000 394.73085848 157.75131818 245.45161856 236.36201031 1.00000000]
[192.50000000 394.73085848 157.75131818 236.36201031 227.27240206 1.00000000]
[192.50000000 394.73085848 157.75131818 227.27240206 218.18279381 1.00000000]
[192.50000000 394.73085848 157.75131818 218.18279381 209.09318557 1.00000000]
[192.50000000 394.73085848 157.75131818 209.09318557 200.00357732 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-264.32430361 283.92295465 42.10271758 349.07414748 314.53198413 1.00000000]
[-264.32430361 283.92295465 42.10271758 314.53198413 279.98982077 1.00000000]
[-264.32430361 283.92295465 42.10271758 279.98982077 245.44765741 1.00000000]
[-264.32430361 283.92295465 42.10271758 245.44765741 210.90549405 1.00000000]
[-264.32430361 283.92295465 42.10271758 210.90549405 176.36333069 1.00000000]
[-264.32430361 283.92295465 42.10271758 176.36333069 141.82116734 1.00000000]
[-264.32430361 283.92295465 42.10271758 141.82116734 107.27900398 1.00000000]
[-264.32430361 283.92295465 42.10271758 107.27900398 72.73684062 1.00000000]
[-264.32430361 283.92295465 42.10271758 72.73684062 38.19467726 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[192.50000000 394.73085848 157.75131818 187.26524743 178.17563918 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-459.59267674 488.62363548 32.20889362 318.89598210 273.22437581 1.00000000]
[-459.59267674 488.62363548 32.20889362 273.22437581 227.55276952 1.00000000]
[-459.59267674 488.62363548 32.20889362 227.55276952 181.88116323 1.00000000]
[]
[]
[]
[]
[]
[-616.84872972 583.22219789 36.01426010 299.89799487 259.27977902 1.00000000]
[-616.84872972 583.22219789 36.01426010 259.27977902 218.66156316 1.00000000]
[-616.84872972 583.22219789 36.01426010 218.66156316 178.04334731 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-805.17047892 696.50856371 42.10271758 304.41040620 269.86824284 1.00000000]
[-805.17047892 696.50856371 42.10271758 269.86824284 235.32607949 1.00000000]
[-805.17047892 696.50856371 42.10271758 235.32607949 200.78391613 1.00000000]
[-805.17047892 696.50856371 42.10271758 200.78391613 166.24175277 1.00000000]
[-805.17047892 696.50856371 42.10271758 166.24175277 131.69958941 1.00000000]
[-805.17047892 696.50856371 42.10271758 131.69958941 97.15742605 1.00000000]
[-805.17047892 696.50856371 42.10271758 97.15742605 62.61526269 1.00000000]
[-805.17047892 696.50856371 42.10271758 62.61526269 28.07309934 1.00000000]
[-805.17047892 696.50856371 42.10271758 28.07309934 353.53093598 1.00000000]
[]
[]
[]
[]
[]
[]
[-616.84872972 583.22219789 36.01426010 119.89799487 79.27977902 1.00000000]
[-616.84872972 583.22219789 36.01426010 79.27977902 38.66156316 1.00000000]
[-616.84872972 583.22219789 36.01426010 38.66156316 358.04334731 1.00000000]
[]
[]
[]
[]
[]
[]
[-459.59267674 488.62363548 32.20889362 116.06017895 70.38857266 1.00000000]
[-459.59267674 488.62363548 32.20889362 70.38857266 24.71696637 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[192.50000000 394.73085848 157.75131818 165.43730929 156.34770104 1.00000000]
[192.50000000 394.73085848 157.75131818 156.34770104 147.25809279 1.00000000]
[192.50000000 394.73085848 157.75131818 147.25809279 138.16848455 1.00000000]
[192.50000000 394.73085848 157.75131818 138.16848455 129.07887630 1.00000000]
[192.50000000 394.73085848 157.75131818 129.07887630 119.98926805 1.00000000]
[192.50000000 394.73085848 157.75131818 119.98926805 110.89965980 1.00000000]
[192.50000000 394.73085848 157.75131818 110.89965980 101.81005155 1.00000000]
[192.50000000 394.73085848 157.75131818 101.81005155 92.72044330 1.00000000]
[192.50000000 394.73085848 157.75131818 92.72044330 83.63083506 1.00000000]
[]
[]
[]
[248.07360123 640.56344058 26.77024824 216.43970310 160.76848991 1.00000000]
[248.07360123 640.56344058 26.77024824 160.76848991 105.09727671 1.00000000]
[248.07360123 640.56344058 26.77024824 105.09727671 49.42606351 1.00000000]
[248.07360123 640.56344058 26.77024824 49.42606351 353.75485031 1.00000000]
[248.07360123 640.56344058 26.77024824 353.75485031 298.08363712 1.00000000]
[]
[]
[]
[192.50000000 394.73085848 157.75131818 70.89250517 61.80289692 1.00000000]
[192.50000000 394.73085848 157.75131818 61.80289692 52.71328867 1.00000000]
[192.50000000 394.73085848 157.75131818 52.71328867 43.62368042 1.00000000]
[192.50000000 394.73085848 157.75131818 43.62368042 34.53407217 1.00000000]
[192.50000000 394.73085848 157.75131818 34.53407217 25.44446392 1.00000000]
[192.50000000 394.73085848 157.75131818 25.44446392 16.35485568 1.00000000]
[192.50000000 394.73085848 157.75131818 16.35485568 7.26524743 1.00000000]
[192.50000000 394.73085848 157.75131818 7.26524743 358.17563918 1.00000000]
[192.50000000 394.73085848 157.75131818 358.17563918 349.08603093 1.00000000]
[192.50000000 394.73085848 157.75131818 349.08603093 339.99642268 1.00000000]
[192.50000000 394.73085848 157.75131818 339.99642268 330.90681443 1.00000000]
[192.50000000 394.73085848 157.75131818 330.90681443 321.81720619 1.00000000]
[192.50000000 394.73085848 157.75131818 321.81720619 312.72759794 1.00000000]
[192.50000000 394.73085848 157.75131818 312.72759794 303.63798969 1.00000000]
[192.50000000 394.73085848 157.75131818 303.63798969 294.54838144 1.00000000]
[192.50000000 394.73085848 157.75131818 294.54838144 285.45877319 1.00000000]
[192.50000000 394.73085848 157.75131818 285.45877319 276.36916494 1.00000000]
[]
[]
[192.50000000 156.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[192.50000000 156.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[192.50000000 156.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[8 172]
[9 171]
[10 170]
[17 49]
[18 48]
[19 47]
[20 46]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[72 112]
[73 111]
[74 110]
[75 108]
[76 107]
[77 106]
[80 103]
[81 102]
[82 101]
[84 100]
[85 99]
[87 98]
[88 97]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% Start Annotations
114 142 12 1.00 0.60 0.67 omark 41 69 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
