%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGAACCCAGGCUAGCMCACAAUGGUUAACAGGGUCCACCAUGGUUAACAAGGCAUCUYGCAGAGCCUUUCCAAKGUGACAYUCYAGGGGAUGACACUCUAGAGGUGUCACAUGGGAAAGGCUCUGCAAGAUGCCUUCCUGCCCAGAGUCUGAGGGGAUUCUCAGUUAUAGAUUGUCCUGGCCA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[350.00000000 125.00000000]
[350.00000000 150.00000000]
[350.00000000 175.00000000]
[350.00000000 200.00000000]
[350.00000000 225.00000000]
[333.72460938 243.97660828]
[333.72460938 268.97662354]
[350.00000000 287.95321655]
[374.70812988 291.76214600]
[390.98352051 310.73876953]
[407.25891113 329.71536255]
[423.53430176 348.69198608]
[439.80969238 367.66857910]
[435.81481934 392.34735107]
[445.98873901 415.18353271]
[467.00823975 428.71792603]
[492.00753784 428.52969360]
[508.28292847 447.50628662]
[524.55828857 466.48291016]
[540.83367920 485.45950317]
[547.12652588 509.65454102]
[542.15936279 534.15612793]
[537.19213867 558.65771484]
[532.22491455 583.15924072]
[527.25769043 607.66082764]
[522.29046631 632.16241455]
[517.32330322 656.66394043]
[493.62069702 664.61303711]
[512.35607910 681.16552734]
[507.38885498 705.66711426]
[485.96194458 718.54681396]
[475.82119751 741.39776611]
[480.64654541 765.92761230]
[465.81072998 786.04974365]
[450.97494507 806.17187500]
[425.97543335 806.32922363]
[404.49755859 819.12377930]
[392.45544434 841.03240967]
[393.16503906 866.02233887]
[406.43093872 887.21234131]
[397.39437866 910.52197266]
[388.35784912 933.83166504]
[379.32131958 957.14135742]
[370.28479004 980.45104980]
[361.24826050 1003.76068115]
[352.21173096 1027.07043457]
[343.17517090 1050.38000488]
[334.13864136 1073.68969727]
[315.78674316 1090.66638184]
[317.90011597 1115.57690430]
[308.86358643 1138.88659668]
[299.82705688 1162.19628906]
[290.79049683 1185.50598145]
[281.75396729 1208.81567383]
[272.71743774 1232.12536621]
[263.68090820 1255.43493652]
[254.64437866 1278.74462891]
[245.60783386 1302.05432129]
[236.57130432 1325.36401367]
[227.53477478 1348.67370605]
[218.49822998 1371.98339844]
[209.46170044 1395.29309082]
[185.82328796 1403.43090820]
[170.50254822 1423.18627930]
[168.50384521 1448.10632324]
[180.48005676 1470.05102539]
[171.44352722 1493.36071777]
[162.40698242 1516.67041016]
[153.37045288 1539.97998047]
[144.33392334 1563.28967285]
[135.29737854 1586.59936523]
[114.70816040 1600.77978516]
[110.46492767 1625.41711426]
[93.09038544 1643.39270020]
[69.58837891 1651.91662598]
[61.86854553 1675.69482422]
[44.49399948 1693.67053223]
[27.11945152 1711.64611816]
[9.74490356 1729.62182617]
[-15.23456669 1730.63476562]
[-34.24232864 1746.87377930]
[-39.14323044 1771.38867188]
[-27.83973122 1793.68737793]
[-5.16962624 1804.22619629]
[19.16448402 1798.49462891]
[34.74782181 1778.94567871]
[34.91085815 1753.94616699]
[52.28540421 1735.97058105]
[69.65995026 1717.99487305]
[87.03450012 1700.01916504]
[110.53649902 1691.49536133]
[118.25634003 1667.71716309]
[135.63088989 1649.74145508]
[160.10963440 1644.66296387]
[173.58180237 1623.60351562]
[167.93093872 1599.25048828]
[176.96746826 1575.94091797]
[186.00399780 1552.63122559]
[195.04052734 1529.32153320]
[204.07707214 1506.01184082]
[213.11360168 1482.70214844]
[236.75201416 1474.56420898]
[252.07275391 1454.80883789]
[254.07145691 1429.88891602]
[242.09524536 1407.94421387]
[251.13179016 1384.63452148]
[260.16830444 1361.32482910]
[269.20486450 1338.01513672]
[278.24139404 1314.70544434]
[287.27792358 1291.39587402]
[296.31445312 1268.08618164]
[305.35098267 1244.77648926]
[314.38751221 1221.46679688]
[323.42407227 1198.15710449]
[332.46060181 1174.84741211]
[341.49713135 1151.53771973]
[350.53366089 1128.22802734]
[368.88555908 1111.25134277]
[366.77218628 1086.34094238]
[375.80874634 1063.03125000]
[384.84527588 1039.72155762]
[393.88180542 1016.41186523]
[402.91833496 993.10217285]
[411.95486450 969.79248047]
[420.99139404 946.48284912]
[430.02792358 923.17315674]
[439.06448364 899.86346436]
[463.14685059 893.15240479]
[480.51535034 875.17083740]
[486.38729858 850.87023926]
[479.14587402 826.94195557]
[493.98168945 806.81988525]
[508.81747437 786.69775391]
[533.67736816 784.05444336]
[552.41271973 800.60693359]
[571.14807129 817.15948486]
[587.35437012 836.19512939]
[611.40625000 829.37561035]
[615.20947266 804.66662598]
[594.32159424 790.92993164]
[575.58624268 774.37744141]
[556.85089111 757.82489014]
[556.41015625 732.82879639]
[541.69104004 712.62121582]
[546.65826416 688.11962891]
[551.62548828 663.61804199]
[556.59271240 639.11651611]
[561.55987549 614.61492920]
[566.52709961 590.11334229]
[571.49432373 565.61181641]
[576.46154785 541.11022949]
[581.42877197 516.60864258]
[596.64764404 496.77468872]
[590.35473633 472.57965088]
[567.40093994 462.67398071]
[551.12554932 443.69735718]
[534.85015869 424.72076416]
[518.57476807 405.74414062]
[522.56964111 381.06539917]
[512.39575195 358.22918701]
[491.37625122 344.69479370]
[466.37695312 344.88305664]
[450.10156250 325.90643311]
[433.82617188 306.92984009]
[417.55078125 287.95321655]
[401.27539062 268.97662354]
[401.27539062 243.97660828]
[385.00000000 225.00000000]
[385.00000000 200.00000000]
[385.00000000 175.00000000]
[385.00000000 150.00000000]
[385.00000000 125.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[367.49999765 256.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[367.49999765 256.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[367.49999765 256.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[367.49999765 256.47660926 36.01426010 119.07267622 78.45446037 1.00000000]
[]
[]
[]
[]
[479.19223873 386.70636670 43.74267810 205.79941996 172.59060206 1.00000000]
[479.19223873 386.70636670 43.74267810 172.59060206 139.38178415 1.00000000]
[479.19223873 386.70636670 43.74267810 139.38178415 106.17296624 1.00000000]
[479.19223873 386.70636670 43.74267810 106.17296624 72.96414833 1.00000000]
[]
[]
[]
[568.74066009 491.11710355 28.47466729 191.46027605 139.38178412 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[517.06319289 746.02445869 41.50071865 256.51961268 221.46027601 1.00000000]
[517.06319289 746.02445869 41.50071865 221.46027601 186.40093935 1.00000000]
[517.06319289 746.02445869 41.50071865 186.40093935 151.34160268 1.00000000]
[]
[]
[438.76457221 852.22247905 47.64193249 284.85029614 254.42835978 1.00000000]
[438.76457221 852.22247905 47.64193249 254.42835978 224.00642343 1.00000000]
[438.76457221 852.22247905 47.64193249 224.00642343 193.58448707 1.00000000]
[438.76457221 852.22247905 47.64193249 193.58448707 163.16255072 1.00000000]
[438.76457221 852.22247905 47.64193249 163.16255072 132.74061436 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[342.33615539 1100.95890529 28.47466729 253.26846306 201.18997114 1.00000000]
[342.33615539 1100.95890529 28.47466729 201.18997114 149.11147921 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[211.28765227 1438.99760266 43.74267810 267.60760693 234.39878902 1.00000000]
[211.28765227 1438.99760266 43.74267810 234.39878902 201.18997111 1.00000000]
[211.28765227 1438.99760266 43.74267810 201.18997111 167.98115320 1.00000000]
[211.28765227 1438.99760266 43.74267810 167.98115320 134.77233529 1.00000000]
[]
[]
[]
[]
[]
[141.84023367 1618.13673330 32.20889362 258.27947897 212.60787268 1.00000000]
[141.84023367 1618.13673330 32.20889362 212.60787268 166.93626640 1.00000000]
[]
[90.06244130 1671.70596076 28.47466729 276.10426616 224.02577423 1.00000000]
[90.06244130 1671.70596076 28.47466729 224.02577423 171.94728231 1.00000000]
[]
[]
[]
[-1.28168038 1766.21045423 38.21401848 286.77105568 248.58473531 1.00000000]
[-1.28168038 1766.21045423 38.21401848 248.58473531 210.39841494 1.00000000]
[-1.28168038 1766.21045423 38.21401848 210.39841494 172.21209458 1.00000000]
[-1.28168038 1766.21045423 38.21401848 172.21209458 134.02577421 1.00000000]
[-1.28168038 1766.21045423 38.21401848 134.02577421 95.83945384 1.00000000]
[-1.28168038 1766.21045423 38.21401848 95.83945384 57.65313348 1.00000000]
[-1.28168038 1766.21045423 38.21401848 57.65313348 19.46681311 1.00000000]
[-1.28168038 1766.21045423 38.21401848 19.46681311 341.28049274 1.00000000]
[]
[]
[]
[90.06244130 1671.70596076 28.47466729 96.10426611 44.02577419 1.00000000]
[90.06244130 1671.70596076 28.47466729 44.02577419 351.94728235 1.00000000]
[]
[141.84023367 1618.13673330 32.20889362 101.11528212 55.44367583 1.00000000]
[141.84023367 1618.13673330 32.20889362 55.44367583 9.77206954 1.00000000]
[141.84023367 1618.13673330 32.20889362 9.77206954 324.10046325 1.00000000]
[]
[]
[]
[]
[]
[211.28765227 1438.99760266 43.74267810 87.60760693 54.39878902 1.00000000]
[211.28765227 1438.99760266 43.74267810 54.39878902 21.18997111 1.00000000]
[211.28765227 1438.99760266 43.74267810 21.18997111 347.98115320 1.00000000]
[211.28765227 1438.99760266 43.74267810 347.98115320 314.77233529 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[342.33615539 1100.95890529 28.47466729 73.26846302 21.18997109 1.00000000]
[342.33615539 1100.95890529 28.47466729 21.18997109 329.11147926 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[438.76457221 852.22247905 47.64193249 89.63932796 59.21739160 1.00000000]
[438.76457221 852.22247905 47.64193249 59.21739160 28.79545525 1.00000000]
[438.76457221 852.22247905 47.64193249 28.79545525 358.37351889 1.00000000]
[438.76457221 852.22247905 47.64193249 358.37351889 327.95158254 1.00000000]
[]
[]
[517.06319289 746.02445869 41.50071865 101.46027599 66.40093933 1.00000000]
[]
[]
[594.07111477 814.06018934 23.13159456 172.30007304 106.88017451 1.00000000]
[594.07111477 814.06018934 23.13159456 106.88017451 41.46027598 1.00000000]
[594.07111477 814.06018934 23.13159456 41.46027598 336.04037745 1.00000000]
[594.07111477 814.06018934 23.13159456 336.04037745 270.62047893 1.00000000]
[]
[]
[517.06319289 746.02445869 41.50071865 16.51961264 341.46027597 1.00000000]
[517.06319289 746.02445869 41.50071865 341.46027597 306.40093937 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[568.74066009 491.11710355 28.47466729 63.53876793 11.46027600 1.00000000]
[568.74066009 491.11710355 28.47466729 11.46027600 319.38178408 1.00000000]
[568.74066009 491.11710355 28.47466729 319.38178408 267.30329224 1.00000000]
[]
[]
[]
[479.19223873 386.70636670 43.74267810 25.79941996 352.59060206 1.00000000]
[479.19223873 386.70636670 43.74267810 352.59060206 319.38178415 1.00000000]
[479.19223873 386.70636670 43.74267810 319.38178415 286.17296624 1.00000000]
[479.19223873 386.70636670 43.74267810 286.17296624 252.96414833 1.00000000]
[]
[]
[]
[]
[367.49999765 256.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[367.49999765 256.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 184]
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[28 169]
[29 168]
[30 167]
[31 166]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[40 156]
[41 155]
[44 144]
[45 143]
[46 142]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[58 131]
[59 130]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[73 116]
[77 112]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[84 104]
[85 103]
[87 101]
[88 100]
[89 99]
[90 98]
[145 153]
[146 152]
[147 151]
] def

init

% Start Annotations
51 92 12 1.00 0.60 0.67 omark 36 138 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
