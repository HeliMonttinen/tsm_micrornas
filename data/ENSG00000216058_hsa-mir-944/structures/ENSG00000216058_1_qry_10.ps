%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUUUUUUCAACCAAGAUAAACAAUUUUUUCUGCAGUAAAUUUGUAUUUAURUUCCAGACACAUCUCAUCUGAUAUACAAUAUUUUCUUAAAUUGUAUAAAGAGAAAUUAUUGUAUAUCAGAUGAGAUGUGUCUGGGAUUAAGUAUUAGCUGCACUGUAAACCUUCAUUUUCUUGGACUCUGGAAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[175.00000000 200.00000000]
[175.00000000 225.00000000]
[175.00000000 250.00000000]
[175.00000000 275.00000000]
[175.00000000 300.00000000]
[157.11198425 317.46478271]
[153.14201355 342.14755249]
[132.70758057 356.55014038]
[112.27316284 370.95272827]
[91.83873749 385.35528564]
[71.40431213 399.75787354]
[50.96988678 414.16046143]
[32.50882339 397.30255127]
[11.32089520 384.03335571]
[-11.90522194 374.78414917]
[-36.41459656 369.85562134]
[-61.41058731 369.40789795]
[-86.08073425 373.45556641]
[-109.62318420 381.86706543]
[-131.27272034 394.36895752]
[-150.32565308 410.55493164]
[-166.16268921 429.89886475]
[-178.26908875 451.77203369]
[-186.25134277 475.46347046]
[-189.85000610 500.20309448]
[-188.94808960 525.18682861]
[-183.57493591 549.60260010]
[-206.26329041 560.10205078]
[-228.95166016 570.60150146]
[-251.64001465 581.10095215]
[-274.32836914 591.60034180]
[-297.01672363 602.09979248]
[-318.37985229 589.11456299]
[-343.34014893 587.70605469]
[-366.02850342 598.20550537]
[-381.11004639 618.14404297]
[-385.03851318 642.83349609]
[-376.89019775 666.46832275]
[-358.58105469 683.49108887]
[-362.50952148 708.18048096]
[-366.43801880 732.86993408]
[-370.36648560 757.55932617]
[-374.29495239 782.24871826]
[-378.22341919 806.93817139]
[-382.15191650 831.62756348]
[-399.29565430 849.82348633]
[-398.25875854 874.80200195]
[-379.66595459 891.51446533]
[-373.70477295 915.79339600]
[-367.74359131 940.07226562]
[-361.78237915 964.35113525]
[-355.82119751 988.63000488]
[-349.86001587 1012.90893555]
[-343.89883423 1037.18774414]
[-337.93765259 1061.46667480]
[-331.97644043 1085.74560547]
[-326.01525879 1110.02441406]
[-320.05407715 1134.30334473]
[-314.09289551 1158.58227539]
[-308.13171387 1182.86108398]
[-302.17050171 1207.14001465]
[-296.20932007 1231.41882324]
[-290.24813843 1255.69775391]
[-284.28695679 1279.97668457]
[-278.32577515 1304.25549316]
[-272.36456299 1328.53442383]
[-266.40338135 1352.81335449]
[-260.44219971 1377.09216309]
[-254.48101807 1401.37109375]
[-248.51982117 1425.64990234]
[-242.55863953 1449.92883301]
[-236.59744263 1474.20776367]
[-230.63626099 1498.48657227]
[-224.67507935 1522.76550293]
[-218.71388245 1547.04443359]
[-212.75270081 1571.32324219]
[-206.79150391 1595.60217285]
[-212.09352112 1620.03344727]
[-196.07933044 1639.23095703]
[-190.11814880 1663.50988770]
[-184.15695190 1687.78881836]
[-178.19577026 1712.06762695]
[-172.23457336 1736.34655762]
[-166.27339172 1760.62536621]
[-184.28404236 1777.96374512]
[-193.28758240 1801.28613281]
[-191.59945679 1826.22912598]
[-179.53549194 1848.12573242]
[-159.35289001 1862.87902832]
[-134.82780457 1867.72888184]
[-110.54891968 1861.76770020]
[-91.05883026 1846.11083984]
[-80.00414276 1823.68774414]
[-79.45320129 1798.69384766]
[-89.50908661 1775.80541992]
[-108.29032898 1759.30493164]
[-132.28295898 1752.27978516]
[-138.24414062 1728.00085449]
[-144.20532227 1703.72192383]
[-150.16651917 1679.44311523]
[-156.12770081 1655.16418457]
[-162.08889771 1630.88537598]
[-156.78688049 1606.45397949]
[-172.80107117 1587.25646973]
[-178.76225281 1562.97753906]
[-184.72344971 1538.69873047]
[-190.68463135 1514.41979980]
[-196.64582825 1490.14099121]
[-202.60700989 1465.86206055]
[-208.56819153 1441.58312988]
[-214.52938843 1417.30432129]
[-220.49057007 1393.02539062]
[-226.45176697 1368.74658203]
[-232.41294861 1344.46765137]
[-238.37413025 1320.18872070]
[-244.33532715 1295.90991211]
[-250.29650879 1271.63098145]
[-256.25769043 1247.35205078]
[-262.21887207 1223.07324219]
[-268.18008423 1198.79431152]
[-274.14126587 1174.51550293]
[-280.10244751 1150.23657227]
[-286.06362915 1125.95764160]
[-292.02484131 1101.67883301]
[-297.98602295 1077.39990234]
[-303.94720459 1053.12097168]
[-309.90838623 1028.84216309]
[-315.86956787 1004.56323242]
[-321.83078003 980.28436279]
[-327.79196167 956.00549316]
[-333.75314331 931.72662354]
[-339.71432495 907.44769287]
[-345.67550659 883.16882324]
[-336.93719482 859.74572754]
[-347.58673096 837.12744141]
[-343.65826416 812.43804932]
[-339.72976685 787.74859619]
[-335.80130005 763.05920410]
[-331.87283325 738.36981201]
[-327.94436646 713.68035889]
[-324.01586914 688.99096680]
[-301.32751465 678.49151611]
[-286.24597168 658.55291748]
[-282.31750488 633.86352539]
[-259.62915039 623.36407471]
[-236.94078064 612.86462402]
[-214.25242615 602.36517334]
[-191.56407166 591.86572266]
[-168.87571716 581.36627197]
[-153.74156189 601.26495361]
[-135.28050232 618.12286377]
[-114.09256744 631.39208984]
[-90.86645508 640.64123535]
[-66.35707855 645.56982422]
[-41.36109161 646.01751709]
[-16.69093895 641.96984863]
[6.85150862 633.55834961]
[28.50103951 621.05645752]
[47.55397034 604.87048340]
[63.39101791 585.52655029]
[75.49741364 563.65338135]
[83.47966766 539.96197510]
[87.07832336 515.22235107]
[86.17642212 490.23858643]
[80.80326080 465.82284546]
[71.13349915 442.76864624]
[91.56792450 428.36605835]
[112.00234985 413.96350098]
[132.43676758 399.56091309]
[152.87120056 385.15832520]
[173.30561829 370.75576782]
[197.88627625 375.31549072]
[220.34852600 364.34063721]
[231.85798645 342.14755249]
[227.88801575 317.46478271]
[210.00000000 300.00000000]
[210.00000000 275.00000000]
[210.00000000 250.00000000]
[210.00000000 225.00000000]
[210.00000000 200.00000000]
[210.00000000 175.00000000]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[192.49999958 335.81723469 39.86382195 243.96025387 207.41153737 1.00000000]
[192.49999958 335.81723469 39.86382195 207.41153737 170.86282088 1.00000000]
[]
[]
[]
[]
[]
[-51.38583791 507.71271289 138.66765713 317.57295620 307.22922102 1.00000000]
[-51.38583791 507.71271289 138.66765713 307.22922102 296.88548583 1.00000000]
[-51.38583791 507.71271289 138.66765713 296.88548583 286.54175065 1.00000000]
[-51.38583791 507.71271289 138.66765713 286.54175065 276.19801547 1.00000000]
[-51.38583791 507.71271289 138.66765713 276.19801547 265.85428029 1.00000000]
[-51.38583791 507.71271289 138.66765713 265.85428029 255.51054511 1.00000000]
[-51.38583791 507.71271289 138.66765713 255.51054511 245.16680993 1.00000000]
[-51.38583791 507.71271289 138.66765713 245.16680993 234.82307475 1.00000000]
[-51.38583791 507.71271289 138.66765713 234.82307475 224.47933956 1.00000000]
[-51.38583791 507.71271289 138.66765713 224.47933956 214.13560438 1.00000000]
[-51.38583791 507.71271289 138.66765713 214.13560438 203.79186920 1.00000000]
[-51.38583791 507.71271289 138.66765713 203.79186920 193.44813402 1.00000000]
[-51.38583791 507.71271289 138.66765713 193.44813402 183.10439884 1.00000000]
[-51.38583791 507.71271289 138.66765713 183.10439884 172.76066366 1.00000000]
[-51.38583791 507.71271289 138.66765713 172.76066366 162.41692848 1.00000000]
[]
[]
[]
[]
[]
[-333.67800606 638.34849831 51.55595110 315.32423003 287.26126199 1.00000000]
[-333.67800606 638.34849831 51.55595110 287.26126199 259.19829395 1.00000000]
[-333.67800606 638.34849831 51.55595110 259.19829395 231.13532591 1.00000000]
[-333.67800606 638.34849831 51.55595110 231.13532591 203.07235786 1.00000000]
[-333.67800606 638.34849831 51.55595110 203.07235786 175.00938982 1.00000000]
[-333.67800606 638.34849831 51.55595110 175.00938982 146.94642178 1.00000000]
[-333.67800606 638.34849831 51.55595110 146.94642178 118.88345373 1.00000000]
[]
[]
[]
[]
[]
[]
[-369.11836144 861.08159565 32.20889362 246.13038170 200.45877541 1.00000000]
[-369.11836144 861.08159565 32.20889362 200.45877541 154.78716912 1.00000000]
[-369.11836144 861.08159565 32.20889362 154.78716912 109.11556283 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-184.44020106 1613.24373608 28.47466729 218.28356260 166.20507067 1.00000000]
[-184.44020106 1613.24373608 28.47466729 166.20507067 114.12657875 1.00000000]
[]
[]
[]
[]
[]
[-136.14364218 1809.94724935 57.79658687 238.58005406 213.59928738 1.00000000]
[-136.14364218 1809.94724935 57.79658687 213.59928738 188.61852070 1.00000000]
[-136.14364218 1809.94724935 57.79658687 188.61852070 163.63775402 1.00000000]
[-136.14364218 1809.94724935 57.79658687 163.63775402 138.65698734 1.00000000]
[-136.14364218 1809.94724935 57.79658687 138.65698734 113.67622067 1.00000000]
[-136.14364218 1809.94724935 57.79658687 113.67622067 88.69545399 1.00000000]
[-136.14364218 1809.94724935 57.79658687 88.69545399 63.71468731 1.00000000]
[-136.14364218 1809.94724935 57.79658687 63.71468731 38.73392063 1.00000000]
[-136.14364218 1809.94724935 57.79658687 38.73392063 13.75315395 1.00000000]
[-136.14364218 1809.94724935 57.79658687 13.75315395 348.77238728 1.00000000]
[-136.14364218 1809.94724935 57.79658687 348.77238728 323.79162060 1.00000000]
[-136.14364218 1809.94724935 57.79658687 323.79162060 298.81085392 1.00000000]
[-136.14364218 1809.94724935 57.79658687 298.81085392 273.83008724 1.00000000]
[]
[]
[]
[]
[]
[-184.44020106 1613.24373608 28.47466729 38.28356255 346.20507063 1.00000000]
[-184.44020106 1613.24373608 28.47466729 346.20507063 294.12657879 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-369.11836144 861.08159565 32.20889362 43.29457856 357.62297227 1.00000000]
[-369.11836144 861.08159565 32.20889362 357.62297227 311.95136598 1.00000000]
[]
[]
[]
[]
[]
[]
[-333.67800606 638.34849831 51.55595110 79.19829395 51.13532591 1.00000000]
[-333.67800606 638.34849831 51.55595110 51.13532591 23.07235786 1.00000000]
[-333.67800606 638.34849831 51.55595110 23.07235786 355.00938982 1.00000000]
[]
[]
[]
[]
[]
[-51.38583791 507.71271289 138.66765713 147.91669138 137.57295620 1.00000000]
[-51.38583791 507.71271289 138.66765713 137.57295620 127.22922102 1.00000000]
[-51.38583791 507.71271289 138.66765713 127.22922102 116.88548583 1.00000000]
[-51.38583791 507.71271289 138.66765713 116.88548583 106.54175065 1.00000000]
[-51.38583791 507.71271289 138.66765713 106.54175065 96.19801547 1.00000000]
[-51.38583791 507.71271289 138.66765713 96.19801547 85.85428029 1.00000000]
[-51.38583791 507.71271289 138.66765713 85.85428029 75.51054511 1.00000000]
[-51.38583791 507.71271289 138.66765713 75.51054511 65.16680993 1.00000000]
[-51.38583791 507.71271289 138.66765713 65.16680993 54.82307475 1.00000000]
[-51.38583791 507.71271289 138.66765713 54.82307475 44.47933956 1.00000000]
[-51.38583791 507.71271289 138.66765713 44.47933956 34.13560438 1.00000000]
[-51.38583791 507.71271289 138.66765713 34.13560438 23.79186920 1.00000000]
[-51.38583791 507.71271289 138.66765713 23.79186920 13.44813402 1.00000000]
[-51.38583791 507.71271289 138.66765713 13.44813402 3.10439884 1.00000000]
[-51.38583791 507.71271289 138.66765713 3.10439884 352.76066366 1.00000000]
[-51.38583791 507.71271289 138.66765713 352.76066366 342.41692848 1.00000000]
[-51.38583791 507.71271289 138.66765713 342.41692848 332.07319329 1.00000000]
[]
[]
[]
[]
[]
[192.49999958 335.81723469 39.86382195 118.78332862 82.23461212 1.00000000]
[192.49999958 335.81723469 39.86382195 82.23461212 45.68589562 1.00000000]
[192.49999958 335.81723469 39.86382195 45.68589562 9.13717912 1.00000000]
[192.49999958 335.81723469 39.86382195 9.13717912 332.58846263 1.00000000]
[192.49999958 335.81723469 39.86382195 332.58846263 296.03974613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[19 173]
[34 156]
[35 155]
[36 154]
[37 153]
[38 152]
[39 151]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
] def

init

% Start Annotations
98 141 12 1.00 0.60 0.67 omark 54 92 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
