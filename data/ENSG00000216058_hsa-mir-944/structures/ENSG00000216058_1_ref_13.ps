%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUUUUUUUCAACCAAGAUAAACRAUUUUUUCUGMAGUAAAUUUGUAUUCAUVUCACAGACACAUCUCAUCUGAUAUAYAAUAAUCUCUCUUURUAAUUUAGGAGUUAUUAAUACUGAUUAAAUAUUAGCUGCACUGUCAACCUUCAUUUUCUUGGACUCUGGAAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[175.00000000 200.00000000]
[175.00000000 225.00000000]
[175.00000000 250.00000000]
[175.00000000 275.00000000]
[175.00000000 300.00000000]
[157.11198425 317.46478271]
[153.14201355 342.14755249]
[132.70758057 356.55014038]
[112.27316284 370.95272827]
[91.83873749 385.35528564]
[71.40431213 399.75787354]
[50.96989059 414.16046143]
[33.99744415 395.80462646]
[15.10882759 379.42721558]
[-5.46670675 365.22695923]
[-27.47942734 353.37622070]
[-50.66216278 344.01882935]
[-74.73354340 337.26834106]
[-99.40140533 333.20675659]
[-124.36634827 331.88330078]
[-149.32537842 333.31405640]
[-173.97554016 337.48168945]
[-198.01768494 344.33557129]
[-221.15997314 353.79254150]
[-243.12155151 365.73779297]
[-257.85961914 345.54400635]
[-272.59768677 325.35021973]
[-287.33575439 305.15643311]
[-272.58932495 284.96875000]
[-263.46942139 261.69155884]
[-260.57723999 236.85942078]
[-264.10348511 212.10935974]
[-273.81567383 189.07299805]
[-289.07351685 169.26901245]
[-308.87118530 154.00296021]
[-331.90350342 144.28123474]
[-356.65209961 140.74475098]
[-381.48544312 143.62663269]
[-404.76641846 152.73690796]
[-424.96020508 167.47499084]
[-440.73556519 186.86926270]
[-451.05252075 209.64117432]
[-455.23092651 234.28952026]
[-452.99533081 259.18936157]
[-444.49313354 282.69918823]
[-430.28479004 303.26916504]
[-411.30700684 319.54318237]
[-388.81088257 330.44839478]
[-364.27944946 335.26593018]
[-339.32989502 333.67813110]
[-315.60708618 325.78973389]
[-300.86898804 345.98352051]
[-286.13092041 366.17730713]
[-271.39285278 386.37109375]
[-289.46588135 403.64437866]
[-305.52914429 422.80087280]
[-319.38769531 443.60809326]
[-330.87329102 465.81353760]
[-354.39984131 457.35766602]
[-377.92639160 448.90182495]
[-391.24694824 427.74615479]
[-415.38085938 421.22277832]
[-437.54553223 432.78683472]
[-446.00137329 456.31338501]
[-436.26974487 479.34152222]
[-413.50500488 489.67431641]
[-389.76458740 481.83898926]
[-366.23803711 490.29486084]
[-342.71148682 498.75070190]
[-347.98974609 523.18713379]
[-350.54797363 548.05590820]
[-350.35504150 573.05517578]
[-347.41333008 597.88146973]
[-341.75851440 622.23358154]
[-333.45925903 645.81579590]
[-322.61630249 668.34197998]
[-343.51519775 682.06188965]
[-364.41409302 695.78179932]
[-385.31301880 709.50170898]
[-410.10848999 706.31048584]
[-431.00741577 720.03039551]
[-437.93914795 744.05017090]
[-458.83804321 757.77008057]
[-479.73696899 771.48999023]
[-500.63586426 785.20989990]
[-521.53479004 798.92980957]
[-545.69598389 792.50811768]
[-569.23889160 800.91827393]
[-583.86279297 821.19488525]
[-584.41149902 846.18884277]
[-570.69165039 867.08776855]
[-547.54046631 876.52301025]
[-523.12072754 871.16796875]
[-506.04238892 852.91064453]
[-502.32690430 828.18823242]
[-481.42800903 814.46838379]
[-460.52911377 800.74847412]
[-439.63018799 787.02856445]
[-418.73129272 773.30865479]
[-393.93579102 776.49987793]
[-373.03689575 762.77996826]
[-366.10516357 738.76019287]
[-345.20623779 725.04028320]
[-324.30734253 711.32037354]
[-303.40841675 697.60046387]
[-287.05142212 716.50677490]
[-268.71395874 733.49902344]
[-248.61859131 748.37103271]
[-227.00923157 760.94226074]
[-236.61984253 784.02117920]
[-246.23045349 807.10009766]
[-255.84106445 830.17901611]
[-265.45169067 853.25793457]
[-285.53799438 868.14215088]
[-287.76898193 893.04235840]
[-270.64852905 911.26019287]
[-245.65782166 910.57849121]
[-229.55601501 891.45434570]
[-233.14120483 866.71276855]
[-223.53059387 843.63385010]
[-213.91998291 820.55493164]
[-204.30937195 797.47601318]
[-194.69876099 774.39709473]
[-170.55369568 780.87915039]
[-145.84214783 784.66583252]
[-120.86401367 785.71118164]
[-95.92246246 784.00262451]
[-71.32022858 779.56072998]
[-47.35590363 772.43957520]
[-24.32034683 762.72552490]
[-2.49314761 750.53643799]
[17.86077309 736.02032471]
[36.49437332 719.35333252]
[53.18149948 700.73773193]
[67.71961212 680.39953613]
[79.93225861 658.58551025]
[89.67121887 635.56048584]
[96.81827545 611.60382080]
[101.28669739 587.00640869]
[103.02224731 562.06671143]
[102.00385284 537.08746338]
[98.24388123 512.37182617]
[91.78796387 488.21981812]
[82.71446228 464.92449951]
[71.13349915 442.76864624]
[91.56792450 428.36605835]
[112.00234985 413.96350098]
[132.43676758 399.56091309]
[152.87120056 385.15832520]
[173.30561829 370.75576782]
[197.88627625 375.31549072]
[220.34852600 364.34063721]
[231.85798645 342.14755249]
[227.88801575 317.46478271]
[210.00000000 300.00000000]
[210.00000000 275.00000000]
[210.00000000 250.00000000]
[210.00000000 225.00000000]
[210.00000000 200.00000000]
[210.00000000 175.00000000]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[192.50000001 335.81723469 39.86382195 243.96025387 207.41153737 1.00000000]
[192.50000001 335.81723469 39.86382195 207.41153737 170.86282088 1.00000000]
[]
[]
[]
[]
[]
[-123.87856433 558.80699567 226.92422190 320.40013276 314.08472116 1.00000000]
[-123.87856433 558.80699567 226.92422190 314.08472116 307.76930956 1.00000000]
[-123.87856433 558.80699567 226.92422190 307.76930956 301.45389795 1.00000000]
[-123.87856433 558.80699567 226.92422190 301.45389795 295.13848635 1.00000000]
[-123.87856433 558.80699567 226.92422190 295.13848635 288.82307475 1.00000000]
[-123.87856433 558.80699567 226.92422190 288.82307475 282.50766314 1.00000000]
[-123.87856433 558.80699567 226.92422190 282.50766314 276.19225154 1.00000000]
[-123.87856433 558.80699567 226.92422190 276.19225154 269.87683993 1.00000000]
[-123.87856433 558.80699567 226.92422190 269.87683993 263.56142833 1.00000000]
[-123.87856433 558.80699567 226.92422190 263.56142833 257.24601673 1.00000000]
[-123.87856433 558.80699567 226.92422190 257.24601673 250.93060512 1.00000000]
[-123.87856433 558.80699567 226.92422190 250.93060512 244.61519352 1.00000000]
[-123.87856433 558.80699567 226.92422190 244.61519352 238.29978192 1.00000000]
[]
[]
[]
[-357.93749003 238.10447574 97.36820795 43.52279930 28.77097674 1.00000000]
[-357.93749003 238.10447574 97.36820795 28.77097674 14.01915419 1.00000000]
[-357.93749003 238.10447574 97.36820795 14.01915419 359.26733164 1.00000000]
[-357.93749003 238.10447574 97.36820795 359.26733164 344.51550908 1.00000000]
[-357.93749003 238.10447574 97.36820795 344.51550908 329.76368653 1.00000000]
[-357.93749003 238.10447574 97.36820795 329.76368653 315.01186398 1.00000000]
[-357.93749003 238.10447574 97.36820795 315.01186398 300.26004142 1.00000000]
[-357.93749003 238.10447574 97.36820795 300.26004142 285.50821887 1.00000000]
[-357.93749003 238.10447574 97.36820795 285.50821887 270.75639632 1.00000000]
[-357.93749003 238.10447574 97.36820795 270.75639632 256.00457376 1.00000000]
[-357.93749003 238.10447574 97.36820795 256.00457376 241.25275121 1.00000000]
[-357.93749003 238.10447574 97.36820795 241.25275121 226.50092866 1.00000000]
[-357.93749003 238.10447574 97.36820795 226.50092866 211.74910610 1.00000000]
[-357.93749003 238.10447574 97.36820795 211.74910610 196.99728355 1.00000000]
[-357.93749003 238.10447574 97.36820795 196.99728355 182.24546100 1.00000000]
[-357.93749003 238.10447574 97.36820795 182.24546100 167.49363844 1.00000000]
[-357.93749003 238.10447574 97.36820795 167.49363844 152.74181589 1.00000000]
[-357.93749003 238.10447574 97.36820795 152.74181589 137.98999334 1.00000000]
[-357.93749003 238.10447574 97.36820795 137.98999334 123.23817078 1.00000000]
[-357.93749003 238.10447574 97.36820795 123.23817078 108.48634823 1.00000000]
[-357.93749003 238.10447574 97.36820795 108.48634823 93.73452568 1.00000000]
[-357.93749003 238.10447574 97.36820795 93.73452568 78.98270312 1.00000000]
[-357.93749003 238.10447574 97.36820795 78.98270312 64.23088057 1.00000000]
[]
[]
[]
[-123.87856433 558.80699567 226.92422190 229.45389795 223.13848635 1.00000000]
[-123.87856433 558.80699567 226.92422190 223.13848635 216.82307475 1.00000000]
[-123.87856433 558.80699567 226.92422190 216.82307475 210.50766314 1.00000000]
[-123.87856433 558.80699567 226.92422190 210.50766314 204.19225154 1.00000000]
[]
[]
[-411.66287549 455.37236673 34.35139098 349.14272087 306.46460335 1.00000000]
[-411.66287549 455.37236673 34.35139098 306.46460335 263.78648583 1.00000000]
[-411.66287549 455.37236673 34.35139098 263.78648583 221.10836832 1.00000000]
[-411.66287549 455.37236673 34.35139098 221.10836832 178.43025080 1.00000000]
[-411.66287549 455.37236673 34.35139098 178.43025080 135.75213328 1.00000000]
[-411.66287549 455.37236673 34.35139098 135.75213328 93.07401576 1.00000000]
[-411.66287549 455.37236673 34.35139098 93.07401576 50.39589825 1.00000000]
[]
[]
[-123.87856433 558.80699567 226.92422190 195.34636758 189.03095597 1.00000000]
[-123.87856433 558.80699567 226.92422190 189.03095597 182.71554437 1.00000000]
[-123.87856433 558.80699567 226.92422190 182.71554437 176.40013276 1.00000000]
[-123.87856433 558.80699567 226.92422190 176.40013276 170.08472116 1.00000000]
[-123.87856433 558.80699567 226.92422190 170.08472116 163.76930956 1.00000000]
[-123.87856433 558.80699567 226.92422190 163.76930956 157.45389795 1.00000000]
[-123.87856433 558.80699567 226.92422190 157.45389795 151.13848635 1.00000000]
[]
[]
[]
[-402.02215141 741.40518109 36.01426010 297.64286815 257.02465230 1.00000000]
[-402.02215141 741.40518109 36.01426010 257.02465230 216.40643644 1.00000000]
[-402.02215141 741.40518109 36.01426010 216.40643644 175.78822059 1.00000000]
[]
[]
[]
[]
[-543.94250434 834.57432151 42.10271758 302.15527948 267.61311612 1.00000000]
[-543.94250434 834.57432151 42.10271758 267.61311612 233.07095276 1.00000000]
[-543.94250434 834.57432151 42.10271758 233.07095276 198.52878941 1.00000000]
[-543.94250434 834.57432151 42.10271758 198.52878941 163.98662605 1.00000000]
[-543.94250434 834.57432151 42.10271758 163.98662605 129.44446269 1.00000000]
[-543.94250434 834.57432151 42.10271758 129.44446269 94.90229933 1.00000000]
[-543.94250434 834.57432151 42.10271758 94.90229933 60.36013597 1.00000000]
[-543.94250434 834.57432151 42.10271758 60.36013597 25.81797261 1.00000000]
[-543.94250434 834.57432151 42.10271758 25.81797261 351.27580926 1.00000000]
[]
[]
[]
[]
[-402.02215141 741.40518109 36.01426010 117.64286815 77.02465230 1.00000000]
[-402.02215141 741.40518109 36.01426010 77.02465230 36.40643644 1.00000000]
[-402.02215141 741.40518109 36.01426010 36.40643644 355.78822059 1.00000000]
[]
[]
[]
[-123.87856433 558.80699567 226.92422190 142.29260239 135.97719078 1.00000000]
[-123.87856433 558.80699567 226.92422190 135.97719078 129.66177918 1.00000000]
[-123.87856433 558.80699567 226.92422190 129.66177918 123.34636758 1.00000000]
[-123.87856433 558.80699567 226.92422190 123.34636758 117.03095597 1.00000000]
[]
[]
[]
[]
[-258.91266875 883.07774829 30.52836670 257.63172809 209.29049005 1.00000000]
[-258.91266875 883.07774829 30.52836670 209.29049005 160.94925202 1.00000000]
[-258.91266875 883.07774829 30.52836670 160.94925202 112.60801399 1.00000000]
[-258.91266875 883.07774829 30.52836670 112.60801399 64.26677596 1.00000000]
[-258.91266875 883.07774829 30.52836670 64.26677596 15.92553793 1.00000000]
[-258.91266875 883.07774829 30.52836670 15.92553793 327.58429990 1.00000000]
[]
[]
[]
[]
[-123.87856433 558.80699567 226.92422190 108.18507201 101.86966041 1.00000000]
[-123.87856433 558.80699567 226.92422190 101.86966041 95.55424880 1.00000000]
[-123.87856433 558.80699567 226.92422190 95.55424880 89.23883720 1.00000000]
[-123.87856433 558.80699567 226.92422190 89.23883720 82.92342559 1.00000000]
[-123.87856433 558.80699567 226.92422190 82.92342559 76.60801399 1.00000000]
[-123.87856433 558.80699567 226.92422190 76.60801399 70.29260239 1.00000000]
[-123.87856433 558.80699567 226.92422190 70.29260239 63.97719078 1.00000000]
[-123.87856433 558.80699567 226.92422190 63.97719078 57.66177918 1.00000000]
[-123.87856433 558.80699567 226.92422190 57.66177918 51.34636758 1.00000000]
[-123.87856433 558.80699567 226.92422190 51.34636758 45.03095597 1.00000000]
[-123.87856433 558.80699567 226.92422190 45.03095597 38.71554437 1.00000000]
[-123.87856433 558.80699567 226.92422190 38.71554437 32.40013276 1.00000000]
[-123.87856433 558.80699567 226.92422190 32.40013276 26.08472116 1.00000000]
[-123.87856433 558.80699567 226.92422190 26.08472116 19.76930956 1.00000000]
[-123.87856433 558.80699567 226.92422190 19.76930956 13.45389795 1.00000000]
[-123.87856433 558.80699567 226.92422190 13.45389795 7.13848635 1.00000000]
[-123.87856433 558.80699567 226.92422190 7.13848635 0.82307475 1.00000000]
[-123.87856433 558.80699567 226.92422190 0.82307475 354.50766314 1.00000000]
[-123.87856433 558.80699567 226.92422190 354.50766314 348.19225154 1.00000000]
[-123.87856433 558.80699567 226.92422190 348.19225154 341.87683993 1.00000000]
[-123.87856433 558.80699567 226.92422190 341.87683993 335.56142833 1.00000000]
[-123.87856433 558.80699567 226.92422190 335.56142833 329.24601673 1.00000000]
[]
[]
[]
[]
[]
[192.50000001 335.81723469 39.86382195 118.78332862 82.23461212 1.00000000]
[192.50000001 335.81723469 39.86382195 82.23461212 45.68589562 1.00000000]
[192.50000001 335.81723469 39.86382195 45.68589562 9.13717912 1.00000000]
[192.50000001 335.81723469 39.86382195 9.13717912 332.58846263 1.00000000]
[192.50000001 335.81723469 39.86382195 332.58846263 296.03974613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[10 164]
[11 163]
[12 162]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[32 61]
[33 60]
[34 59]
[35 58]
[65 76]
[66 75]
[67 74]
[83 112]
[84 111]
[85 110]
[86 109]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
] def

init

% Start Annotations
102 120 12 1.00 0.60 0.67 omark 54 97 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
