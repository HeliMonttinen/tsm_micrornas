%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UMGGACACUACCCAGAGAUACAGGCAUGAUGGACCAAAUGACUUCUCCAAACUUUGAUUCUCUCUGGAUCCCAUGGACAUGGGAACUGGGAACUUUAGGAUUCAGUGAGUGAAGGUGUGUGCUGCUAGAAUUUUCCUCAUAAACCU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[126.13011932 132.43162537]
[104.85597229 145.56213379]
[87.51236725 163.56767273]
[75.18753815 185.31849670]
[68.65478516 209.44987488]
[68.32400513 234.44769287]
[74.21595001 258.74346924]
[85.96094513 280.81280518]
[68.38062286 298.58728027]
[50.80031204 316.36178589]
[33.21999359 334.13626099]
[15.63967991 351.91076660]
[-1.94063532 369.68524170]
[-19.52095032 387.45974731]
[-41.48121643 375.51208496]
[-65.61586761 368.99142456]
[-90.60500336 368.25442505]
[-115.08199310 373.34136963]
[-137.70822144 383.97406006]
[-157.24627686 399.57098389]
[-172.62765503 419.27917480]
[-183.01116943 442.02081299]
[-187.82894897 466.55221558]
[-186.81750488 491.53173828]
[-180.03216553 515.59332275]
[-167.84400940 537.42102051]
[-185.42431641 555.19549561]
[-203.00463867 572.97003174]
[-220.58494568 590.74450684]
[-244.78099060 584.45544434]
[-269.36941528 588.97308350]
[-289.74972534 603.45214844]
[-302.10876465 625.18353271]
[-304.13412476 650.10137939]
[-295.44683838 673.54345703]
[-277.67236328 691.12377930]
[-254.13626099 699.55303955]
[-229.24218750 697.25408936]
[-207.64782715 684.65710449]
[-193.39352417 664.11901855]
[-189.14624023 639.48242188]
[-195.70066833 615.35693359]
[-178.12034607 597.58245850]
[-160.54003906 579.80798340]
[-142.95971680 562.03344727]
[-120.99945068 573.98114014]
[-96.86479950 580.50177002]
[-71.87567139 581.23876953]
[-47.39867783 576.15185547]
[-24.77244949 565.51916504]
[-5.23438883 549.92224121]
[10.14699173 530.21405029]
[20.53049850 507.47238159]
[25.34827232 482.94097900]
[24.33683205 457.96145630]
[17.55149269 433.89990234]
[5.36333609 412.07217407]
[22.94365120 394.29769897]
[40.52396774 376.52319336]
[58.10428238 358.74871826]
[75.68460083 340.97421265]
[93.26491547 323.19973755]
[110.84523010 305.42523193]
[133.04223633 316.92709351]
[157.40126038 322.55181885]
[159.27188110 347.48175049]
[161.14250183 372.41168213]
[163.01312256 397.34158325]
[164.88374329 422.27151489]
[166.75436401 447.20141602]
[159.42369080 471.10247803]
[175.02748108 490.63507080]
[199.95739746 488.76443481]
[212.47160339 467.12203979]
[201.65625000 444.58255005]
[199.78562927 419.65261841]
[197.91500854 394.72271729]
[196.04438782 369.79278564]
[194.17376709 344.86288452]
[192.30314636 319.93295288]
[215.55004883 310.73611450]
[231.24162292 330.19824219]
[246.93321228 349.66036987]
[262.62478638 369.12249756]
[278.31637573 388.58459473]
[294.00796509 408.04672241]
[293.24874878 433.03518677]
[308.94033813 452.49731445]
[333.52139282 457.05487061]
[341.05380249 480.89312744]
[364.98764038 488.11608887]
[384.44976807 472.42453003]
[382.46691895 447.50326538]
[360.76837158 435.08663940]
[361.52758789 410.09817505]
[345.83599854 390.63604736]
[321.25494385 386.07852173]
[305.56335449 366.61639404]
[289.87176514 347.15426636]
[274.18017578 327.69213867]
[258.48858643 308.23001099]
[242.79701233 288.76791382]
[256.71478271 268.00024414]
[280.68090820 275.11538696]
[304.64703369 282.23052979]
[310.46820068 306.54336548]
[328.61315918 289.34567261]
[352.57925415 296.46081543]
[376.54537964 303.57595825]
[400.51150513 310.69110107]
[424.47763062 317.80624390]
[448.44372559 324.92138672]
[453.47570801 349.40972900]
[467.80575562 369.89508057]
[489.08422852 383.01858521]
[513.82220459 386.62847900]
[537.96362305 380.13281250]
[557.55004883 364.59667969]
[569.37011719 342.56747437]
[571.48565674 317.65713501]
[563.54980469 293.95010376]
[546.86383057 275.33349609]
[524.16363525 264.85974121]
[499.17114258 264.24618530]
[475.98431396 273.59341431]
[458.40493774 291.36880493]
[434.43881226 284.25366211]
[410.47268677 277.13851929]
[386.50659180 270.02340698]
[362.54046631 262.90826416]
[338.57434082 255.79310608]
[314.60821533 248.67796326]
[290.64212036 241.56283569]
[266.67599487 234.44769287]
[266.34521484 209.44987488]
[259.81246948 185.31849670]
[247.48762512 163.56767273]
[230.14402771 145.56213379]
[208.86987305 132.43162537]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[167.50000000 223.25892430 99.80514118 259.90145828 245.51175923 1.00000000]
[167.50000000 223.25892430 99.80514118 245.51175923 231.12206019 1.00000000]
[167.50000000 223.25892430 99.80514118 231.12206019 216.73236115 1.00000000]
[167.50000000 223.25892430 99.80514118 216.73236115 202.34266211 1.00000000]
[167.50000000 223.25892430 99.80514118 202.34266211 187.95296306 1.00000000]
[167.50000000 223.25892430 99.80514118 187.95296306 173.56326402 1.00000000]
[167.50000000 223.25892430 99.80514118 173.56326402 159.17356498 1.00000000]
[167.50000000 223.25892430 99.80514118 159.17356498 144.78386593 1.00000000]
[]
[]
[]
[]
[]
[]
[-81.24033490 474.74660341 106.90312956 305.26362404 291.83390740 1.00000000]
[-81.24033490 474.74660341 106.90312956 291.83390740 278.40419077 1.00000000]
[-81.24033490 474.74660341 106.90312956 278.40419077 264.97447413 1.00000000]
[-81.24033490 474.74660341 106.90312956 264.97447413 251.54475749 1.00000000]
[-81.24033490 474.74660341 106.90312956 251.54475749 238.11504085 1.00000000]
[-81.24033490 474.74660341 106.90312956 238.11504085 224.68532421 1.00000000]
[-81.24033490 474.74660341 106.90312956 224.68532421 211.25560757 1.00000000]
[-81.24033490 474.74660341 106.90312956 211.25560757 197.82589093 1.00000000]
[-81.24033490 474.74660341 106.90312956 197.82589093 184.39617429 1.00000000]
[-81.24033490 474.74660341 106.90312956 184.39617429 170.96645766 1.00000000]
[-81.24033490 474.74660341 106.90312956 170.96645766 157.53674102 1.00000000]
[-81.24033490 474.74660341 106.90312956 157.53674102 144.10702438 1.00000000]
[]
[]
[]
[-246.87824287 642.21398687 57.79658687 297.06030762 272.07954094 1.00000000]
[-246.87824287 642.21398687 57.79658687 272.07954094 247.09877426 1.00000000]
[-246.87824287 642.21398687 57.79658687 247.09877426 222.11800758 1.00000000]
[-246.87824287 642.21398687 57.79658687 222.11800758 197.13724091 1.00000000]
[-246.87824287 642.21398687 57.79658687 197.13724091 172.15647423 1.00000000]
[-246.87824287 642.21398687 57.79658687 172.15647423 147.17570755 1.00000000]
[-246.87824287 642.21398687 57.79658687 147.17570755 122.19494087 1.00000000]
[-246.87824287 642.21398687 57.79658687 122.19494087 97.21417419 1.00000000]
[-246.87824287 642.21398687 57.79658687 97.21417419 72.23340752 1.00000000]
[-246.87824287 642.21398687 57.79658687 72.23340752 47.25264084 1.00000000]
[-246.87824287 642.21398687 57.79658687 47.25264084 22.27187416 1.00000000]
[-246.87824287 642.21398687 57.79658687 22.27187416 357.29110748 1.00000000]
[-246.87824287 642.21398687 57.79658687 357.29110748 332.31034080 1.00000000]
[]
[]
[]
[-81.24033490 474.74660341 106.90312956 125.26362404 111.83390740 1.00000000]
[-81.24033490 474.74660341 106.90312956 111.83390740 98.40419077 1.00000000]
[-81.24033490 474.74660341 106.90312956 98.40419077 84.97447413 1.00000000]
[-81.24033490 474.74660341 106.90312956 84.97447413 71.54475749 1.00000000]
[-81.24033490 474.74660341 106.90312956 71.54475749 58.11504085 1.00000000]
[-81.24033490 474.74660341 106.90312956 58.11504085 44.68532421 1.00000000]
[-81.24033490 474.74660341 106.90312956 44.68532421 31.25560757 1.00000000]
[-81.24033490 474.74660341 106.90312956 31.25560757 17.82589093 1.00000000]
[-81.24033490 474.74660341 106.90312956 17.82589093 4.39617429 1.00000000]
[-81.24033490 474.74660341 106.90312956 4.39617429 350.96645766 1.00000000]
[-81.24033490 474.74660341 106.90312956 350.96645766 337.53674102 1.00000000]
[-81.24033490 474.74660341 106.90312956 337.53674102 324.10702438 1.00000000]
[]
[]
[]
[]
[]
[]
[167.50000000 223.25892430 99.80514118 124.58678249 110.19708345 1.00000000]
[167.50000000 223.25892430 99.80514118 110.19708345 95.80738440 1.00000000]
[]
[]
[]
[]
[]
[185.72112939 466.09343295 26.77024824 224.88687567 169.21566248 1.00000000]
[185.72112939 466.09343295 26.77024824 169.21566248 113.54444928 1.00000000]
[185.72112939 466.09343295 26.77024824 113.54444928 57.87323608 1.00000000]
[185.72112939 466.09343295 26.77024824 57.87323608 2.20202288 1.00000000]
[185.72112939 466.09343295 26.77024824 2.20202288 306.53080969 1.00000000]
[]
[]
[]
[]
[]
[167.50000000 223.25892430 99.80514118 75.61030096 61.22060191 1.00000000]
[]
[]
[]
[]
[]
[327.38816339 421.56668338 36.01426010 202.04938408 161.43116826 1.00000000]
[327.38816339 421.56668338 36.01426010 161.43116826 120.81295237 1.00000000]
[327.38816339 421.56668338 36.01426010 120.81295237 80.19473636 1.00000000]
[359.86023167 461.84147889 26.77024824 190.30009305 134.62887999 1.00000000]
[359.86023167 461.84147889 26.77024824 134.62887999 78.95766679 1.00000000]
[359.86023167 461.84147889 26.77024824 78.95766679 23.28645359 1.00000000]
[359.86023167 461.84147889 26.77024824 23.28645359 327.61524040 1.00000000]
[359.86023167 461.84147889 26.77024824 327.61524040 271.94402706 1.00000000]
[327.38816339 421.56668338 36.01426010 22.04938379 341.43116798 1.00000000]
[327.38816339 421.56668338 36.01426010 341.43116798 300.81295216 1.00000000]
[327.38816339 421.56668338 36.01426010 300.81295216 260.19473639 1.00000000]
[]
[]
[]
[]
[]
[167.50000000 223.25892430 99.80514118 41.02351847 26.63381943 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[510.18352274 324.99595768 61.73983513 180.06920904 156.70721885 1.00000000]
[510.18352274 324.99595768 61.73983513 156.70721885 133.34522866 1.00000000]
[510.18352274 324.99595768 61.73983513 133.34522866 109.98323847 1.00000000]
[510.18352274 324.99595768 61.73983513 109.98323847 86.62124828 1.00000000]
[510.18352274 324.99595768 61.73983513 86.62124828 63.25925808 1.00000000]
[510.18352274 324.99595768 61.73983513 63.25925808 39.89726789 1.00000000]
[510.18352274 324.99595768 61.73983513 39.89726789 16.53527770 1.00000000]
[510.18352274 324.99595768 61.73983513 16.53527770 353.17328751 1.00000000]
[510.18352274 324.99595768 61.73983513 353.17328751 329.81129732 1.00000000]
[510.18352274 324.99595768 61.73983513 329.81129732 306.44930713 1.00000000]
[510.18352274 324.99595768 61.73983513 306.44930713 283.08731694 1.00000000]
[510.18352274 324.99595768 61.73983513 283.08731694 259.72532675 1.00000000]
[510.18352274 324.99595768 61.73983513 259.72532675 236.36333656 1.00000000]
[510.18352274 324.99595768 61.73983513 236.36333656 213.00134637 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000000 223.25892430 99.80514118 6.43673598 352.04703694 1.00000000]
[167.50000000 223.25892430 99.80514118 352.04703694 337.65733789 1.00000000]
[167.50000000 223.25892430 99.80514118 337.65733789 323.26763885 1.00000000]
[167.50000000 223.25892430 99.80514118 323.26763885 308.87793981 1.00000000]
[167.50000000 223.25892430 99.80514118 308.87793981 294.48824077 1.00000000]
[167.50000000 223.25892430 99.80514118 294.48824077 280.09854172 1.00000000]
[]
[]
] def
/pairs [
[3 145]
[4 144]
[12 67]
[13 66]
[14 65]
[15 64]
[16 63]
[17 62]
[18 61]
[30 49]
[31 48]
[32 47]
[33 46]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[85 106]
[86 105]
[87 104]
[88 103]
[89 102]
[90 101]
[93 98]
[107 138]
[108 137]
[109 136]
[111 135]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
] def

init

% Start Annotations
101 102 12 1.00 0.60 0.67 omark 49 70 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
