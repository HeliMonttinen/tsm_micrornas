%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAGGACACUACCCAGAGAUACAGGCAUGAUGGACCAAAUGACUUCUCCAAACUUUGAUUCUCUCUGGAUCCCAUGGAUAUGGGAACUGUGABRUCUAGGAGAUSCAGAGAGAAUCARAGUUUCAGUGAGUGAACCCUAGAGUGUGUGCUGCUAGGAUUUUCCUCAUAAACCU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[90.90147400 223.28555298]
[105.00000000 243.93092346]
[130.00000000 243.93092346]
[144.09852600 223.28555298]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[210.00000000 125.00000000]
[210.00000000 150.00000000]
[210.00000000 175.00000000]
[195.92854309 195.66383362]
[200.87762451 220.16906738]
[221.86564636 233.75227356]
[246.24812317 228.23010254]
[269.50976562 237.38963318]
[286.38925171 255.83094788]
[311.31057739 253.84916687]
[334.57220459 263.00869751]
[357.83383179 272.16821289]
[363.67987061 296.47509766]
[380.57614136 314.90106201]
[404.28656006 322.82666016]
[428.86685181 318.26486206]
[448.15451050 302.35934448]
[457.31402588 279.09771729]
[454.04907227 254.31182861]
[439.17813110 234.21566772]
[416.42950439 223.84748840]
[391.50637817 225.80662537]
[370.65716553 239.60194397]
[347.39553833 230.44242859]
[324.13391113 221.28289795]
[307.25442505 202.84158325]
[282.33306885 204.82334900]
[259.07147217 195.66383362]
[245.00000000 175.00000000]
[245.00000000 150.00000000]
[245.00000000 125.00000000]
[245.00000000 100.00000000]
[370.00000000 100.00000000]
[495.00000000 100.00000000]
[495.00000000 125.00000000]
[495.00000000 150.00000000]
[495.00000000 175.00000000]
[495.00000000 200.00000000]
[484.02532959 222.46234131]
[495.00000000 244.92468262]
[495.00000000 269.92468262]
[495.00000000 294.92468262]
[495.00000000 319.92468262]
[495.00000000 344.92468262]
[495.00000000 369.92468262]
[495.00000000 394.92468262]
[495.00000000 419.92468262]
[495.00000000 444.92468262]
[495.00000000 469.92468262]
[495.00000000 494.92468262]
[495.00000000 519.92468262]
[484.02532959 542.38702393]
[495.00000000 564.84936523]
[495.00000000 589.84936523]
[495.00000000 614.84936523]
[495.00000000 639.84936523]
[495.00000000 664.84936523]
[473.34936523 677.34936523]
[495.00000000 689.84936523]
[495.00000000 714.84936523]
[495.00000000 739.84936523]
[495.00000000 764.84936523]
[480.92852783 785.51318359]
[457.66693115 794.67272949]
[434.40530396 803.83221436]
[411.14367676 812.99176025]
[387.88204956 822.15130615]
[363.55889893 827.92913818]
[358.69558716 852.45159912]
[378.97283936 867.07458496]
[400.70538330 854.71752930]
[423.96701050 845.55804443]
[447.22863770 836.39849854]
[470.49023438 827.23901367]
[493.75186157 818.07946777]
[518.13433838 823.60162354]
[539.12237549 810.01843262]
[544.07147217 785.51318359]
[530.00000000 764.84936523]
[530.00000000 739.84936523]
[530.00000000 714.84936523]
[530.00000000 689.84936523]
[530.00000000 664.84936523]
[530.00000000 639.84936523]
[551.65063477 627.34936523]
[530.00000000 614.84936523]
[530.00000000 589.84936523]
[530.00000000 564.84936523]
[540.97467041 542.38702393]
[530.00000000 519.92468262]
[530.00000000 494.92468262]
[530.00000000 469.92468262]
[530.00000000 444.92468262]
[530.00000000 419.92468262]
[530.00000000 394.92468262]
[530.00000000 369.92468262]
[530.00000000 344.92468262]
[530.00000000 319.92468262]
[530.00000000 294.92468262]
[530.00000000 269.92468262]
[530.00000000 244.92468262]
[540.97467041 222.46234131]
[530.00000000 200.00000000]
[530.00000000 175.00000000]
[530.00000000 150.00000000]
[530.00000000 125.00000000]
[530.00000000 100.00000000]
[605.00000000 100.00000000]
[680.00000000 100.00000000]
[755.00000000 100.00000000]
[755.00000000 125.00000000]
[755.00000000 150.00000000]
[755.00000000 175.00000000]
[755.00000000 200.00000000]
[733.34936523 212.50000000]
[755.00000000 225.00000000]
[755.00000000 250.00000000]
[755.00000000 275.00000000]
[738.72460938 293.97662354]
[738.72460938 318.97662354]
[722.44921875 337.95321655]
[706.17382812 356.92984009]
[689.89843750 375.90643311]
[673.62304688 394.88305664]
[657.34765625 413.85964966]
[641.07226562 432.83627319]
[624.79687500 451.81286621]
[602.73126221 463.56481934]
[599.99249268 488.41436768]
[618.96911621 504.68972778]
[643.11126709 498.19692993]
[651.36413574 474.59841919]
[667.63952637 455.62179565]
[683.91491699 436.64520264]
[708.48681641 441.25180054]
[700.19030762 417.66857910]
[716.46569824 398.69198608]
[732.74108887 379.71536255]
[749.01647949 360.73876953]
[765.29187012 341.76214600]
[790.00000000 337.95321655]
[806.27539062 318.97662354]
[806.27539062 293.97662354]
[790.00000000 275.00000000]
[790.00000000 250.00000000]
[790.00000000 225.00000000]
[790.00000000 200.00000000]
[790.00000000 175.00000000]
[790.00000000 150.00000000]
[790.00000000 125.00000000]
[790.00000000 100.00000000]
[815.00000000 100.00000000]
[840.00000000 100.00000000]
[865.00000000 100.00000000]
[890.00000000 100.00000000]
[915.00000000 100.00000000]
[940.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[117.50000000 220.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[117.50000000 220.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[117.50000000 220.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[117.50000000 220.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[117.50000000 220.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[227.49999989 202.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[227.49999989 202.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[227.49999989 202.04002271 32.20889362 145.74629528 100.07468899 1.00000000]
[227.49999989 202.04002271 32.20889362 100.07468899 54.40308270 1.00000000]
[]
[296.82183666 229.33626530 28.47466729 163.57108247 111.49259054 1.00000000]
[296.82183666 229.33626530 28.47466729 111.49259054 59.41409862 1.00000000]
[]
[]
[407.75609880 273.01786209 49.92949042 180.97504103 151.97823185 1.00000000]
[407.75609880 273.01786209 49.92949042 151.97823185 122.98142266 1.00000000]
[407.75609880 273.01786209 49.92949042 122.98142266 93.98461348 1.00000000]
[407.75609880 273.01786209 49.92949042 93.98461348 64.98780429 1.00000000]
[407.75609880 273.01786209 49.92949042 64.98780429 35.99099511 1.00000000]
[407.75609880 273.01786209 49.92949042 35.99099511 6.99418593 1.00000000]
[407.75609880 273.01786209 49.92949042 6.99418593 337.99737674 1.00000000]
[407.75609880 273.01786209 49.92949042 337.99737674 309.00056756 1.00000000]
[407.75609880 273.01786209 49.92949042 309.00056756 280.00375837 1.00000000]
[407.75609880 273.01786209 49.92949042 280.00375837 251.00694919 1.00000000]
[407.75609880 273.01786209 49.92949042 251.00694919 222.01014000 1.00000000]
[]
[]
[296.82183666 229.33626530 28.47466729 343.57108242 291.49259049 1.00000000]
[296.82183666 229.33626530 28.47466729 291.49259049 239.41409866 1.00000000]
[]
[227.49999989 202.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[512.49999954 222.46233918 28.47466711 232.07849231 180.00000000 1.00000000]
[512.49999954 222.46233918 28.47466711 180.00000000 127.92150787 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[512.49999909 542.38701770 28.47466640 232.07849382 180.00000000 1.00000000]
[512.49999909 542.38701770 28.47466640 180.00000000 127.92150712 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[512.50000040 791.88937906 32.20889362 237.08950777 191.41790148 1.00000000]
[]
[]
[]
[]
[380.21873598 843.97659528 23.13159456 289.34720639 223.92730787 1.00000000]
[380.21873598 843.97659528 23.13159456 223.92730787 158.50740934 1.00000000]
[380.21873598 843.97659528 23.13159456 158.50740934 93.08751081 1.00000000]
[380.21873598 843.97659528 23.13159456 93.08751081 27.66761229 1.00000000]
[]
[]
[]
[]
[512.50000040 791.88937906 32.20889362 125.59691720 79.92531091 1.00000000]
[512.50000040 791.88937906 32.20889362 79.92531091 34.25370462 1.00000000]
[512.50000040 791.88937906 32.20889362 34.25370462 348.58209833 1.00000000]
[512.50000040 791.88937906 32.20889362 348.58209833 302.91049204 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[512.49999909 542.38701770 28.47466640 52.07848985 360.00000000 1.00000000]
[512.49999909 542.38701770 28.47466640 360.00000000 307.92150893 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[512.49999954 222.46233918 28.47466711 52.07849145 360.00000000 1.00000000]
[512.49999954 222.46233918 28.47466711 360.00000000 307.92150828 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[772.49999988 306.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[772.49999988 306.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[624.89208273 478.58295308 26.77024824 269.79624885 214.12503565 1.00000000]
[624.89208273 478.58295308 26.77024824 214.12503565 158.45382245 1.00000000]
[624.89208273 478.58295308 26.77024824 158.45382245 102.78260925 1.00000000]
[624.89208273 478.58295308 26.77024824 102.78260925 47.11139606 1.00000000]
[624.89208273 478.58295308 26.77024824 47.11139606 351.44018286 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[772.49999988 306.47660926 36.01426010 101.54553963 60.92732378 1.00000000]
[772.49999988 306.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[772.49999988 306.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[772.49999988 306.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[17 49]
[18 48]
[19 47]
[20 46]
[24 45]
[25 44]
[27 42]
[28 41]
[29 40]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[57 118]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[70 105]
[71 104]
[72 103]
[73 101]
[74 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[127 168]
[128 167]
[129 166]
[130 165]
[131 164]
[133 163]
[134 162]
[135 161]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 151]
[143 150]
[144 149]
] def

init

% Start Annotations
103 124 12 1.00 0.60 0.67 omark 51 72 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
