%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUUGGGAUGUUUCCUAAUUAGGGAGAUUGGGUGUUGUACCAUGCCACAGAUUCAGAACUMGUGUUUGAAGCCUUUAGCACUCUCCCAUUGAUGGGCUAAAGGCUUUGAACACGAGUUCUGAAUCUAUGGCACAGUGAGAACUAUUUUAUUAUAGAUGCUAUGUUUUAAAGUCACUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[175.00000000 200.00000000]
[175.00000000 225.00000000]
[175.00000000 250.00000000]
[175.00000000 275.00000000]
[165.90147400 298.28555298]
[180.00000000 318.93093872]
[205.00000000 318.93093872]
[219.09852600 298.28555298]
[210.00000000 275.00000000]
[210.00000000 250.00000000]
[210.00000000 225.00000000]
[210.00000000 200.00000000]
[210.00000000 175.00000000]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[435.00000000 125.00000000]
[435.00000000 150.00000000]
[416.37222290 166.67350769]
[410.48242188 190.96980286]
[419.40725708 214.32247925]
[440.00000000 228.49780273]
[465.00000000 228.49780273]
[485.59274292 214.32247925]
[494.51757812 190.96980286]
[488.62777710 166.67350769]
[470.00000000 150.00000000]
[470.00000000 125.00000000]
[470.00000000 100.00000000]
[520.00000000 100.00000000]
[520.00000000 125.00000000]
[520.00000000 150.00000000]
[520.00000000 175.00000000]
[520.00000000 200.00000000]
[509.02532959 222.46234131]
[520.00000000 244.92468262]
[520.00000000 269.92468262]
[520.00000000 294.92468262]
[520.00000000 319.92468262]
[520.00000000 344.92468262]
[520.00000000 369.92468262]
[520.00000000 394.92468262]
[520.00000000 419.92468262]
[520.00000000 444.92468262]
[520.00000000 469.92468262]
[520.00000000 494.92468262]
[520.00000000 519.92468262]
[509.02532959 542.38702393]
[520.00000000 564.84936523]
[520.00000000 589.84936523]
[520.00000000 614.84936523]
[520.00000000 639.84936523]
[520.00000000 664.84936523]
[520.00000000 689.84936523]
[520.00000000 714.84936523]
[520.00000000 739.84936523]
[520.00000000 764.84936523]
[520.00000000 789.84936523]
[520.00000000 814.84936523]
[520.00000000 839.84936523]
[520.00000000 864.84936523]
[520.00000000 889.84936523]
[520.00000000 914.84936523]
[520.00000000 939.84936523]
[520.00000000 964.84936523]
[520.00000000 989.84936523]
[498.34936523 1002.34936523]
[520.00000000 1014.84936523]
[520.00000000 1039.84936523]
[509.02532959 1062.31164551]
[520.00000000 1084.77404785]
[520.00000000 1109.77404785]
[507.17904663 1131.23620605]
[514.69177246 1155.08068848]
[537.50000000 1165.31701660]
[560.30822754 1155.08068848]
[567.82098389 1131.23620605]
[555.00000000 1109.77404785]
[555.00000000 1084.77404785]
[565.97467041 1062.31164551]
[555.00000000 1039.84936523]
[555.00000000 1014.84936523]
[555.00000000 989.84936523]
[555.00000000 964.84936523]
[555.00000000 939.84936523]
[555.00000000 914.84936523]
[555.00000000 889.84936523]
[555.00000000 864.84936523]
[555.00000000 839.84936523]
[555.00000000 814.84936523]
[555.00000000 789.84936523]
[555.00000000 764.84936523]
[555.00000000 739.84936523]
[555.00000000 714.84936523]
[555.00000000 689.84936523]
[555.00000000 664.84936523]
[555.00000000 639.84936523]
[555.00000000 614.84936523]
[555.00000000 589.84936523]
[555.00000000 564.84936523]
[565.97467041 542.38702393]
[555.00000000 519.92468262]
[555.00000000 494.92468262]
[555.00000000 469.92468262]
[555.00000000 444.92468262]
[555.00000000 419.92468262]
[555.00000000 394.92468262]
[555.00000000 369.92468262]
[555.00000000 344.92468262]
[555.00000000 319.92468262]
[555.00000000 294.92468262]
[555.00000000 269.92468262]
[555.00000000 244.92468262]
[565.97467041 222.46234131]
[555.00000000 200.00000000]
[555.00000000 175.00000000]
[555.00000000 150.00000000]
[555.00000000 125.00000000]
[555.00000000 100.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
[605.00000000 125.00000000]
[605.00000000 150.00000000]
[605.00000000 175.00000000]
[605.00000000 200.00000000]
[585.90136719 216.13203430]
[578.75732422 240.08955383]
[585.90136719 264.04705811]
[605.00000000 280.17910767]
[629.81481934 283.21627808]
[652.24035645 272.16656494]
[664.95147705 250.63919067]
[689.59942627 246.45860291]
[714.24743652 242.27799988]
[738.89538574 238.09739685]
[763.54333496 233.91679382]
[784.97436523 246.78967285]
[809.62237549 242.60906982]
[825.61010742 223.38951111]
[850.25811768 219.20890808]
[874.90606689 215.02832031]
[895.62573242 229.01742554]
[920.55987549 227.20358276]
[939.03686523 210.36312866]
[943.14868164 185.70358276]
[931.13562012 163.77903748]
[908.13903809 153.97299194]
[884.00134277 160.48234558]
[869.05322266 180.52114868]
[844.40527344 184.70175171]
[819.75726318 188.88235474]
[798.32623291 176.00947571]
[773.67828369 180.19007874]
[757.69049072 199.40963745]
[733.04254150 203.59024048]
[708.39459229 207.77082825]
[683.74658203 211.95143127]
[659.09863281 216.13203430]
[640.00000000 200.00000000]
[640.00000000 175.00000000]
[640.00000000 150.00000000]
[640.00000000 125.00000000]
[640.00000000 100.00000000]
[665.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[192.50000000 295.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[192.50000000 295.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[192.50000000 295.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[192.50000000 295.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[192.50000000 295.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[452.50000000 188.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[452.50000000 188.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[452.50000000 188.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[452.50000000 188.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[452.50000000 188.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[452.50000000 188.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[452.50000000 188.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[452.50000000 188.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[452.50000000 188.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[537.49999886 222.46233918 28.47466711 232.07849231 180.00000000 1.00000000]
[537.49999886 222.46233918 28.47466711 180.00000000 127.92150787 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[537.49999841 542.38701770 28.47466640 232.07849382 180.00000000 1.00000000]
[537.49999841 542.38701770 28.47466640 180.00000000 127.92150712 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[537.50000017 1062.31169544 28.47466729 232.07849181 180.00000000 1.00000000]
[537.50000017 1062.31169544 28.47466729 180.00000000 127.92150796 1.00000000]
[]
[537.50000034 1134.78865372 30.52836670 235.02371395 186.68247592 1.00000000]
[537.50000034 1134.78865372 30.52836670 186.68247592 138.34123789 1.00000000]
[537.50000034 1134.78865372 30.52836670 138.34123789 89.99999986 1.00000000]
[537.50000034 1134.78865372 30.52836670 89.99999986 41.65876183 1.00000000]
[537.50000034 1134.78865372 30.52836670 41.65876183 353.31752379 1.00000000]
[537.50000034 1134.78865372 30.52836670 353.31752379 304.97628576 1.00000000]
[]
[537.50000017 1062.31169544 28.47466729 52.07849176 360.00000000 1.00000000]
[537.50000017 1062.31169544 28.47466729 360.00000000 307.92150800 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[537.49999841 542.38701770 28.47466640 52.07848985 360.00000000 1.00000000]
[537.49999841 542.38701770 28.47466640 360.00000000 307.92150893 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[537.49999886 222.46233918 28.47466711 52.07849145 360.00000000 1.00000000]
[537.49999886 222.46233918 28.47466711 360.00000000 307.92150828 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[622.49999817 240.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[622.49999817 240.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[622.49999817 240.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[622.49999817 240.08954835 43.74267810 146.79118209 113.58236418 1.00000000]
[622.49999817 240.08954835 43.74267810 113.58236418 80.37354627 1.00000000]
[622.49999817 240.08954835 43.74267810 80.37354627 47.16472836 1.00000000]
[622.49999817 240.08954835 43.74267810 47.16472836 13.95591045 1.00000000]
[]
[]
[]
[]
[791.65032141 211.39957472 36.01426010 141.30087005 100.68265420 1.00000000]
[791.65032141 211.39957472 36.01426010 100.68265420 60.06443835 1.00000000]
[791.65032141 211.39957472 36.01426010 60.06443835 19.44622249 1.00000000]
[]
[]
[905.47277497 192.09388776 38.21401848 143.11882774 104.93250737 1.00000000]
[905.47277497 192.09388776 38.21401848 104.93250737 66.74618701 1.00000000]
[905.47277497 192.09388776 38.21401848 66.74618701 28.55986664 1.00000000]
[905.47277497 192.09388776 38.21401848 28.55986664 350.37354627 1.00000000]
[905.47277497 192.09388776 38.21401848 350.37354627 312.18722591 1.00000000]
[905.47277497 192.09388776 38.21401848 312.18722591 274.00090554 1.00000000]
[905.47277497 192.09388776 38.21401848 274.00090554 235.81458517 1.00000000]
[905.47277497 192.09388776 38.21401848 235.81458517 197.62826481 1.00000000]
[]
[]
[791.65032141 211.39957472 36.01426010 321.30087005 280.68265420 1.00000000]
[791.65032141 211.39957472 36.01426010 280.68265420 240.06443835 1.00000000]
[791.65032141 211.39957472 36.01426010 240.06443835 199.44622249 1.00000000]
[]
[]
[]
[]
[622.49999817 240.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[32 45]
[33 44]
[34 43]
[46 135]
[47 134]
[48 133]
[49 132]
[50 131]
[52 129]
[53 128]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[84 98]
[85 97]
[87 95]
[88 94]
[137 179]
[138 178]
[139 177]
[140 176]
[141 175]
[148 174]
[149 173]
[150 172]
[151 171]
[152 170]
[155 167]
[156 166]
[157 165]
] def

init

% Start Annotations
46 82 12 1.00 0.60 0.67 omark 99 135 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
