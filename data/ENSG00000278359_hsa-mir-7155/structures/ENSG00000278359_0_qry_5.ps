%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGGUUGUGCAAGGGAGAUGGAAGUUUGGGGCCCAGGUAUGGGGUUGUGGUCUGAGGUCUUGGGCCAUCGGGGCUGUCACAACCAGAUGGCCCAAGACCCCAGACCACAACCCCAUGDCUGGURUUGUGGUUGGGGGUCGAUGUGCAGAGGCAU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[124.99999237 100.00000000]
[124.99999237 125.00000000]
[124.99999237 150.00000000]
[110.92853546 170.66383362]
[115.87762451 195.16906738]
[136.86563110 208.75227356]
[146.56793213 231.79280090]
[156.27021790 254.83331299]
[165.97250366 277.87384033]
[175.67478943 300.91436768]
[185.37707520 323.95486450]
[195.07937622 346.99539185]
[187.44429016 370.80096436]
[197.14659119 393.84149170]
[219.51098633 405.01440430]
[229.21327209 428.05490112]
[217.87228394 450.33453369]
[220.58589172 475.18682861]
[236.46771240 494.49404907]
[260.33010864 501.94964600]
[258.93307495 526.91058350]
[277.76498413 543.35314941]
[287.46728516 566.39367676]
[268.83331299 583.06024170]
[255.43527222 604.16693115]
[248.28347778 628.12219238]
[247.91720581 653.11950684]
[254.36410522 677.27392578]
[267.13800049 698.76409912]
[285.27569580 715.96948242]
[307.40942383 727.59265137]
[331.87017822 732.75708008]
[356.81341553 731.07348633]
[380.35824585 722.66870117]
[395.96182251 742.20141602]
[411.56539917 761.73419189]
[427.16897583 781.26696777]
[432.61404419 805.66674805]
[455.20837402 816.36706543]
[470.81195068 835.89984131]
[486.41552734 855.43255615]
[502.01907349 874.96533203]
[517.62268066 894.49810791]
[533.22625732 914.03082275]
[548.82977295 933.56359863]
[564.43334961 953.09637451]
[580.03692627 972.62915039]
[595.64050293 992.16186523]
[611.24407959 1011.69464111]
[626.84765625 1031.22741699]
[642.45123291 1050.76013184]
[658.05480957 1070.29284668]
[673.65838623 1089.82568359]
[689.26190186 1109.35839844]
[704.86547852 1128.89123535]
[710.31060791 1153.29101562]
[732.90490723 1163.99133301]
[748.50848389 1183.52404785]
[764.11206055 1203.05676270]
[779.71563721 1222.58959961]
[795.31921387 1242.12231445]
[810.92279053 1261.65502930]
[826.52630615 1281.18786621]
[842.12988281 1300.72058105]
[857.73345947 1320.25329590]
[873.33703613 1339.78613281]
[888.94061279 1359.31884766]
[904.54418945 1378.85156250]
[920.14776611 1398.38439941]
[935.75134277 1417.91711426]
[941.19641113 1442.31689453]
[963.79071045 1453.01721191]
[979.39428711 1472.55004883]
[972.35052490 1496.53723145]
[977.81774902 1520.93200684]
[994.42535400 1539.61865234]
[1018.00964355 1547.91210938]
[1042.65783691 1543.73315430]
[1062.19067383 1528.12963867]
[1071.71093750 1505.01330566]
[1068.83190918 1480.17968750]
[1054.27539062 1459.85461426]
[1031.69079590 1449.13378906]
[1006.74017334 1450.70495605]
[991.13659668 1431.17224121]
[985.69152832 1406.77246094]
[963.09716797 1396.07214355]
[947.49359131 1376.53942871]
[931.89001465 1357.00659180]
[916.28649902 1337.47387695]
[900.68292236 1317.94116211]
[885.07934570 1298.40832520]
[869.47576904 1278.87561035]
[853.87219238 1259.34289551]
[838.26861572 1239.81005859]
[822.66503906 1220.27734375]
[807.06146240 1200.74450684]
[791.45788574 1181.21179199]
[775.85437012 1161.67907715]
[760.25079346 1142.14624023]
[754.80566406 1117.74645996]
[732.21136475 1107.04614258]
[716.60778809 1087.51342773]
[701.00421143 1067.98071289]
[685.40063477 1048.44787598]
[669.79705811 1028.91516113]
[654.19348145 1009.38238525]
[638.58996582 989.84960938]
[622.98638916 970.31689453]
[607.38281250 950.78411865]
[591.77923584 931.25134277]
[576.17565918 911.71862793]
[560.57208252 892.18585205]
[544.96850586 872.65307617]
[529.36492920 853.12036133]
[513.76135254 833.58758545]
[498.15780640 814.05480957]
[482.55422974 794.52209473]
[477.10916138 770.12225342]
[454.51483154 759.42193604]
[438.91125488 739.88922119]
[423.30767822 720.35644531]
[407.70410156 700.82366943]
[421.10214233 679.71697998]
[428.25393677 655.76177979]
[428.62020874 630.76446533]
[422.17330933 606.60998535]
[409.39941406 585.11987305]
[391.26174927 567.91448975]
[369.12799072 556.29132080]
[344.66726685 551.12683105]
[319.72399902 552.81048584]
[310.02172852 529.76995850]
[311.41876221 504.80902100]
[292.58682251 488.36642456]
[303.92782593 466.08679199]
[301.21420288 441.23449707]
[285.33239746 421.92730713]
[261.47000122 414.47171021]
[251.76771545 391.43118286]
[259.40280151 367.62561035]
[249.70050049 344.58508301]
[227.33610535 333.41220093]
[217.63380432 310.37167358]
[207.93151855 287.33114624]
[198.22923279 264.29061890]
[188.52694702 241.25010681]
[178.82464600 218.20959473]
[169.12236023 195.16906738]
[174.07145691 170.66383362]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[142.49999501 177.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[142.49999501 177.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[142.49999501 177.04002271 32.20889362 145.74629528 100.07468899 1.00000000]
[]
[]
[]
[]
[]
[]
[223.42354149 369.21329201 36.01426010 218.09152064 177.47330478 1.00000000]
[223.42354149 369.21329201 36.01426010 177.47330478 136.85508893 1.00000000]
[223.42354149 369.21329201 36.01426010 136.85508893 96.23687308 1.00000000]
[]
[260.90005294 458.21067343 43.74267812 223.58183273 190.37301485 1.00000000]
[260.90005294 458.21067343 43.74267812 190.37301485 157.16419695 1.00000000]
[260.90005294 458.21067343 43.74267812 157.16419695 123.95537901 1.00000000]
[260.90005294 458.21067343 43.74267812 123.95537901 90.74656100 1.00000000]
[285.17591296 515.85979514 28.47466729 209.24268863 157.16419683 1.00000000]
[285.17591296 515.85979514 28.47466729 157.16419683 105.08570491 1.00000000]
[]
[338.26871304 641.94197256 91.04026730 236.08167372 220.29817834 1.00000000]
[338.26871304 641.94197256 91.04026730 220.29817834 204.51468296 1.00000000]
[338.26871304 641.94197256 91.04026730 204.51468296 188.73118757 1.00000000]
[338.26871304 641.94197256 91.04026730 188.73118757 172.94769219 1.00000000]
[338.26871304 641.94197256 91.04026730 172.94769219 157.16419681 1.00000000]
[338.26871304 641.94197256 91.04026730 157.16419681 141.38070143 1.00000000]
[338.26871304 641.94197256 91.04026730 141.38070143 125.59720604 1.00000000]
[338.26871304 641.94197256 91.04026730 125.59720604 109.81371066 1.00000000]
[338.26871304 641.94197256 91.04026730 109.81371066 94.03021528 1.00000000]
[338.26871304 641.94197256 91.04026730 94.03021528 78.24671990 1.00000000]
[338.26871304 641.94197256 91.04026730 78.24671990 62.46322451 1.00000000]
[]
[]
[]
[454.86160048 787.89450678 28.47466729 193.45919333 141.38070140 1.00000000]
[454.86160048 787.89450678 28.47466729 141.38070140 89.30220948 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[732.55813338 1135.51873619 28.47466729 193.45919328 141.38070135 1.00000000]
[732.55813338 1135.51873619 28.47466729 141.38070135 89.30220943 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[963.44395677 1424.54469364 28.47466729 193.45919323 141.38070131 1.00000000]
[963.44395677 1424.54469364 28.47466729 141.38070131 89.30220938 1.00000000]
[]
[1022.25352865 1498.16330107 49.92949042 210.86315180 181.86634261 1.00000000]
[1022.25352865 1498.16330107 49.92949042 181.86634261 152.86953343 1.00000000]
[1022.25352865 1498.16330107 49.92949042 152.86953343 123.87272424 1.00000000]
[1022.25352865 1498.16330107 49.92949042 123.87272424 94.87591506 1.00000000]
[1022.25352865 1498.16330107 49.92949042 94.87591506 65.87910588 1.00000000]
[1022.25352865 1498.16330107 49.92949042 65.87910588 36.88229669 1.00000000]
[1022.25352865 1498.16330107 49.92949042 36.88229669 7.88548751 1.00000000]
[1022.25352865 1498.16330107 49.92949042 7.88548751 338.88867832 1.00000000]
[1022.25352865 1498.16330107 49.92949042 338.88867832 309.89186914 1.00000000]
[1022.25352865 1498.16330107 49.92949042 309.89186914 280.89505995 1.00000000]
[1022.25352865 1498.16330107 49.92949042 280.89505995 251.89825077 1.00000000]
[]
[963.44395677 1424.54469364 28.47466729 13.45919319 321.38070126 1.00000000]
[963.44395677 1424.54469364 28.47466729 321.38070126 269.30220943 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[732.55813338 1135.51873619 28.47466729 13.45919323 321.38070131 1.00000000]
[732.55813338 1135.51873619 28.47466729 321.38070131 269.30220948 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[454.86160048 787.89450678 28.47466729 13.45919328 321.38070135 1.00000000]
[454.86160048 787.89450678 28.47466729 321.38070135 269.30220952 1.00000000]
[]
[]
[]
[338.26871304 641.94197256 91.04026730 40.29817834 24.51468296 1.00000000]
[338.26871304 641.94197256 91.04026730 24.51468296 8.73118757 1.00000000]
[338.26871304 641.94197256 91.04026730 8.73118757 352.94769219 1.00000000]
[338.26871304 641.94197256 91.04026730 352.94769219 337.16419681 1.00000000]
[338.26871304 641.94197256 91.04026730 337.16419681 321.38070143 1.00000000]
[338.26871304 641.94197256 91.04026730 321.38070143 305.59720604 1.00000000]
[338.26871304 641.94197256 91.04026730 305.59720604 289.81371066 1.00000000]
[338.26871304 641.94197256 91.04026730 289.81371066 274.03021528 1.00000000]
[338.26871304 641.94197256 91.04026730 274.03021528 258.24671990 1.00000000]
[]
[285.17591296 515.85979514 28.47466729 29.24268871 337.16419678 1.00000000]
[285.17591296 515.85979514 28.47466729 337.16419678 285.08570483 1.00000000]
[260.90005294 458.21067343 43.74267812 43.58183256 10.37301467 1.00000000]
[260.90005294 458.21067343 43.74267812 10.37301467 337.16419677 1.00000000]
[260.90005294 458.21067343 43.74267812 337.16419677 303.95537889 1.00000000]
[260.90005294 458.21067343 43.74267812 303.95537889 270.74656103 1.00000000]
[]
[223.42354149 369.21329201 36.01426010 38.09152064 357.47330478 1.00000000]
[223.42354149 369.21329201 36.01426010 357.47330478 316.85508893 1.00000000]
[223.42354149 369.21329201 36.01426010 316.85508893 276.23687308 1.00000000]
[]
[]
[]
[]
[]
[]
[142.49999501 177.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[142.49999501 177.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
] def
/pairs [
[2 154]
[3 153]
[4 152]
[7 150]
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[13 144]
[16 141]
[17 140]
[21 136]
[23 134]
[24 133]
[35 124]
[36 123]
[37 122]
[38 121]
[40 119]
[41 118]
[42 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 112]
[48 111]
[49 110]
[50 109]
[51 108]
[52 107]
[53 106]
[54 105]
[55 104]
[56 103]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[73 86]
[74 85]
] def

init

% Start Annotations
88 124 12 1.00 0.60 0.67 omark 35 71 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
