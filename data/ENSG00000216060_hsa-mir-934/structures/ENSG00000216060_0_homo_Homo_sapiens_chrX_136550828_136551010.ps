%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGGGCCAGCCUUUGAUGGUGUGUGUCUGUAUCCUGAGAACGAACUUGAGAAAUAAGGCUUCUGUCUACUACUGGAGACACUGGUAGUAUAAAACCCAGAGUCUCCAGUAAUGGACGGGAGCCUUAUUUCUAUCACUCAGUGUUUUCAUAGAUAGAAUUUGUUUCAUUUUAGCCUCAAAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[200.00000000 125.00000000]
[187.17903137 146.46212769]
[194.69174194 170.30661011]
[217.50000000 180.54298401]
[240.30825806 170.30661011]
[247.82096863 146.46212769]
[235.00000000 125.00000000]
[235.00000000 100.00000000]
[285.00000000 100.00000000]
[285.00000000 125.00000000]
[285.00000000 150.00000000]
[285.00000000 175.00000000]
[285.00000000 200.00000000]
[263.34936523 212.50000000]
[285.00000000 225.00000000]
[285.00000000 250.00000000]
[285.00000000 275.00000000]
[265.90136719 291.13201904]
[258.75732422 315.08953857]
[265.90136719 339.04705811]
[252.20907593 359.96405029]
[238.51678467 380.88107300]
[173.93019104 400.23681641]
[150.99076843 390.29788208]
[128.05133057 380.35891724]
[105.11190796 370.41998291]
[82.17247772 360.48104858]
[76.40594482 336.15518188]
[59.11561584 318.09848022]
[35.06255722 311.28302002]
[10.87002945 317.58554077]
[-6.80030870 335.27053833]
[-31.54380417 331.69848633]
[-56.28729630 328.12643433]
[-81.03079224 324.55441284]
[-105.77428436 320.98236084]
[-130.51777649 317.41030884]
[-155.26127625 313.83825684]
[-180.00477600 310.26623535]
[-191.92266846 282.84304810]
[-215.68826294 264.69741821]
[-245.28242493 260.42514038]
[-273.20980835 271.10821533]
[-292.39721680 294.04092407]
[-317.14071655 290.46887207]
[-341.88421631 286.89685059]
[-404.19152832 277.90197754]
[-428.93499756 274.32992554]
[-453.67849731 270.75790405]
[-478.42199707 267.18585205]
[-503.16549683 263.61380005]
[-527.90899658 260.04174805]
[-552.65246582 256.46972656]
[-577.39599609 252.89767456]
[-602.13946533 249.32563782]
[-626.88293457 245.75358582]
[-651.62646484 242.18154907]
[-676.36993408 238.60951233]
[-701.11346436 235.03746033]
[-725.85693359 231.46542358]
[-750.60046387 227.89337158]
[-775.34393311 224.32133484]
[-800.08740234 220.74929810]
[-824.83093262 217.17724609]
[-849.57440186 213.60520935]
[-870.23822021 199.53369141]
[-894.03814697 207.18629456]
[-918.78167725 203.61424255]
[-943.52514648 200.04220581]
[-968.26861572 196.47016907]
[-993.01214600 192.89811707]
[-1017.75561523 189.32608032]
[-1042.49914551 185.75402832]
[-1067.24255371 182.18199158]
[-1091.98608398 178.60995483]
[-1116.72961426 175.03790283]
[-1137.39343262 160.96638489]
[-1161.19335938 168.61898804]
[-1185.93688965 165.04695129]
[-1210.68029785 161.47489929]
[-1235.42382812 157.90286255]
[-1245.65844727 135.09379578]
[-1265.08874512 119.36280823]
[-1289.52832031 114.09922791]
[-1313.71154785 120.43714142]
[-1332.42810059 137.01100159]
[-1341.64526367 160.24984741]
[-1339.37707520 185.14674377]
[-1326.11242676 206.33749390]
[-1304.70910645 219.25642395]
[-1279.77868652 221.12005615]
[-1256.69250488 211.52685547]
[-1240.42468262 192.54376221]
[-1215.68115234 196.11579895]
[-1190.93774414 199.68783569]
[-1166.19421387 203.25988770]
[-1145.53039551 217.33140564]
[-1121.73046875 209.67880249]
[-1096.98693848 213.25083923]
[-1072.24353027 216.82289124]
[-1047.50000000 220.39492798]
[-1022.75646973 223.96696472]
[-998.01300049 227.53901672]
[-973.26947021 231.11105347]
[-948.52600098 234.68309021]
[-923.78253174 238.25514221]
[-899.03900146 241.82717896]
[-878.37524414 255.89871216]
[-854.57525635 248.24609375]
[-829.83178711 251.81814575]
[-805.08825684 255.39018250]
[-780.34478760 258.96221924]
[-755.60131836 262.53427124]
[-730.85778809 266.10632324]
[-706.11431885 269.67834473]
[-681.37078857 273.25039673]
[-656.62731934 276.82244873]
[-631.88385010 280.39447021]
[-607.14031982 283.96652222]
[-582.39685059 287.53857422]
[-557.65332031 291.11062622]
[-532.90985107 294.68264771]
[-508.16635132 298.25469971]
[-483.42285156 301.82675171]
[-458.67935181 305.39877319]
[-433.93588257 308.97082520]
[-409.19238281 312.54287720]
[-392.73593140 331.36267090]
[-367.99243164 334.93472290]
[-346.88507080 321.53771973]
[-322.14157104 325.10977173]
[-297.39807129 328.68182373]
[-288.41430664 352.01187134]
[-270.62884521 369.58111572]
[-247.19067383 378.27890015]
[-222.24946594 376.56530762]
[-200.22108459 364.74371338]
[-185.00563049 344.90713501]
[-160.26213074 348.47915649]
[-135.51864624 352.05120850]
[-110.77514648 355.62326050]
[-86.03165436 359.19528198]
[-61.28815842 362.76733398]
[-36.54466248 366.33938599]
[-11.80116844 369.91140747]
[0.14581025 391.87207031]
[21.56800461 404.75964355]
[46.56658936 405.02542114]
[68.25795746 392.59622192]
[91.19738007 402.53518677]
[114.13681030 412.47412109]
[137.07623291 422.41308594]
[160.01565552 432.35202026]
[162.70541382 459.02279663]
[176.50747681 482.00253296]
[198.78831482 496.90655518]
[225.29660034 500.89105225]
[250.97438049 493.19573975]
[270.92214966 475.28897095]
[281.33370972 450.58749390]
[280.22253418 423.80444336]
[267.80056763 400.05029297]
[281.49288940 379.13327026]
[295.18518066 358.21627808]
[320.00000000 355.17910767]
[339.09863281 339.04705811]
[346.24267578 315.08953857]
[339.09863281 291.13201904]
[320.00000000 275.00000000]
[320.00000000 250.00000000]
[320.00000000 225.00000000]
[320.00000000 200.00000000]
[320.00000000 175.00000000]
[320.00000000 150.00000000]
[320.00000000 125.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[217.50000000 150.01461919 30.52836670 235.02371410 186.68247606 1.00000000]
[217.50000000 150.01461919 30.52836670 186.68247606 138.34123803 1.00000000]
[217.50000000 150.01461919 30.52836670 138.34123803 90.00000000 1.00000000]
[217.50000000 150.01461919 30.52836670 90.00000000 41.65876197 1.00000000]
[217.50000000 150.01461919 30.52836670 41.65876197 353.31752394 1.00000000]
[217.50000000 150.01461919 30.52836670 353.31752394 304.97628590 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[302.50000382 315.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[302.50000382 315.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[302.50000382 315.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[]
[]
[220.94394927 439.67841006 61.36719120 286.63988713 219.99453201 1.00000000]
[]
[]
[]
[]
[34.55605580 358.92226826 47.64193249 1.87495803 331.45302168 1.00000000]
[34.55605580 358.92226826 47.64193249 331.45302168 301.03108532 1.00000000]
[34.55605580 358.92226826 47.64193249 301.03108532 270.60914897 1.00000000]
[34.55605580 358.92226826 47.64193249 270.60914897 240.18721261 1.00000000]
[34.55605580 358.92226826 47.64193249 240.18721261 209.76527626 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[-238.70142569 319.47402323 59.41448475 351.08461905 321.93662466 1.00000000]
[-238.70142569 319.47402323 59.41448475 321.93662466 292.78863026 1.00000000]
[-238.70142569 319.47402323 59.41448475 292.78863026 263.64063586 1.00000000]
[-238.70142569 319.47402323 59.41448475 263.64063586 234.49264146 1.00000000]
[-238.70142569 319.47402323 59.41448475 234.49264146 205.34464706 1.00000000]
[]
[]
[-375.53829303 299.71985495 36.01426008 339.14195682 217.28730929 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-874.30671281 227.71619478 28.47466729 330.29312496 278.21463303 1.00000000]
[-874.30671281 227.71619478 28.47466729 278.21463303 226.13614111 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-1141.46190225 189.14889461 28.47466729 330.29312491 278.21463299 1.00000000]
[-1141.46190225 189.14889461 28.47466729 278.21463299 226.13614106 1.00000000]
[]
[]
[]
[-1288.33855696 167.94535367 53.85926493 349.25385109 322.41398140 1.00000000]
[-1288.33855696 167.94535367 53.85926493 322.41398140 295.57411172 1.00000000]
[-1288.33855696 167.94535367 53.85926493 295.57411172 268.73424203 1.00000000]
[-1288.33855696 167.94535367 53.85926493 268.73424203 241.89437234 1.00000000]
[-1288.33855696 167.94535367 53.85926493 241.89437234 215.05450265 1.00000000]
[-1288.33855696 167.94535367 53.85926493 215.05450265 188.21463296 1.00000000]
[-1288.33855696 167.94535367 53.85926493 188.21463296 161.37476327 1.00000000]
[-1288.33855696 167.94535367 53.85926493 161.37476327 134.53489359 1.00000000]
[-1288.33855696 167.94535367 53.85926493 134.53489359 107.69502390 1.00000000]
[-1288.33855696 167.94535367 53.85926493 107.69502390 80.85515421 1.00000000]
[-1288.33855696 167.94535367 53.85926493 80.85515421 54.01528452 1.00000000]
[-1288.33855696 167.94535367 53.85926493 54.01528452 27.17541483 1.00000000]
[]
[]
[]
[-1141.46190225 189.14889461 28.47466729 150.29312486 98.21463294 1.00000000]
[-1141.46190225 189.14889461 28.47466729 98.21463294 46.13614111 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-874.30671281 227.71619478 28.47466729 150.29312491 98.21463299 1.00000000]
[-874.30671281 227.71619478 28.47466729 98.21463299 46.13614115 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-375.53829303 299.71985495 36.01426008 159.14195682 118.52374095 1.00000000]
[-375.53829303 299.71985495 36.01426008 118.52374095 77.90552507 1.00000000]
[-375.53829303 299.71985495 36.01426008 77.90552507 37.28730929 1.00000000]
[]
[]
[-238.70142569 319.47402323 59.41448475 171.08461905 146.79462372 1.00000000]
[-238.70142569 319.47402323 59.41448475 146.79462372 122.50462839 1.00000000]
[-238.70142569 319.47402323 59.41448475 122.50462839 98.21463306 1.00000000]
[-238.70142569 319.47402323 59.41448475 98.21463306 73.92463772 1.00000000]
[-238.70142569 319.47402323 59.41448475 73.92463772 49.63464239 1.00000000]
[-238.70142569 319.47402323 59.41448475 49.63464239 25.34464706 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[34.55605580 358.92226826 47.64193249 166.66398985 136.24205350 1.00000000]
[34.55605580 358.92226826 47.64193249 136.24205350 105.82011715 1.00000000]
[34.55605580 358.92226826 47.64193249 105.82011715 75.39818079 1.00000000]
[34.55605580 358.92226826 47.64193249 75.39818079 44.97624444 1.00000000]
[]
[]
[]
[]
[220.94394927 439.67841006 61.36719120 186.85667046 161.62567915 1.00000000]
[220.94394927 439.67841006 61.36719120 161.62567915 136.39468784 1.00000000]
[220.94394927 439.67841006 61.36719120 136.39468784 111.16369653 1.00000000]
[220.94394927 439.67841006 61.36719120 111.16369653 85.93270523 1.00000000]
[220.94394927 439.67841006 61.36719120 85.93270523 60.70171392 1.00000000]
[220.94394927 439.67841006 61.36719120 60.70171392 35.47072261 1.00000000]
[220.94394927 439.67841006 61.36719120 35.47072261 10.23973130 1.00000000]
[220.94394927 439.67841006 61.36719120 10.23973130 345.00873999 1.00000000]
[220.94394927 439.67841006 61.36719120 345.00873999 319.77774868 1.00000000]
[]
[]
[302.50000382 315.08954835 43.74267810 99.62645373 66.41763582 1.00000000]
[302.50000382 315.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[302.50000382 315.08954835 43.74267810 33.20881791 0.00000000 1.00000000]
[302.50000382 315.08954835 43.74267810 0.00000000 326.79118209 1.00000000]
[302.50000382 315.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 13]
[6 12]
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[20 176]
[21 175]
[22 174]
[25 169]
[26 168]
[27 167]
[28 158]
[29 157]
[30 156]
[31 155]
[32 154]
[37 150]
[38 149]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[49 137]
[50 136]
[51 135]
[52 132]
[53 131]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[79 105]
[80 104]
[81 103]
[83 101]
[84 100]
[85 99]
[86 98]
] def

init

% Start Annotations
51 85 12 1.00 0.60 0.67 omark 99 133 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
