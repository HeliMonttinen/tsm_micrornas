%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGGUUCAGCCUUUGACAGUGUGUCUCUGUAUCCUGAGAACAAACUUGAGAAGUAUGUAGUGUAAAAACCAGGGUCUCCAGCAACUGACGGGAGCCUUAUUUCUAUUAUUUAGUGUUUUCAUAGAUAGAAUUUGUUUCAUYUUAGUCUCAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[116.80548859 251.76037598]
[92.37477875 246.45564270]
[77.28374481 226.52424622]
[52.85303116 221.21952820]
[30.85508537 233.09767151]
[6.42436981 227.79295349]
[-18.00634766 222.48822021]
[-42.43706512 217.18350220]
[-54.14923096 195.09674072]
[-76.04531097 183.03184509]
[-100.97317505 184.92970276]
[-120.79037476 200.17037964]
[-145.22108459 194.86566162]
[-169.65180969 189.56094360]
[-189.27394104 174.06991577]
[-213.55349731 180.02841187]
[-237.98420715 174.72369385]
[-262.41491699 169.41897583]
[-286.84564209 164.11424255]
[-311.27636719 158.80952454]
[-335.70706177 153.50480652]
[-348.04827881 131.76325989]
[-370.54159546 120.85218811]
[-395.25625610 124.61862183]
[-413.47830200 141.73458862]
[-418.78305054 166.16529846]
[-409.30004883 189.29695129]
[-388.37292480 202.97373962]
[-363.38012695 202.37347412]
[-343.13369751 187.70780945]
[-318.70297241 193.01252747]
[-294.27224731 198.31724548]
[-286.65090942 222.12722778]
[-269.84152222 203.62197876]
[-245.41082764 208.92669678]
[-220.98010254 214.23141479]
[-201.35797119 229.72244263]
[-177.07841492 223.76394653]
[-152.64770508 229.06866455]
[-128.21697998 234.37338257]
[-116.50482178 256.46014404]
[-94.60873413 268.52505493]
[-69.68087769 266.62719727]
[-49.86367798 251.38650513]
[-25.43296051 256.69122314]
[-1.00224304 261.99594116]
[23.42847252 267.30065918]
[38.51950073 287.23208618]
[62.95021820 292.53680420]
[84.94816589 280.65866089]
[109.37887573 285.96337891]
[116.92398071 309.79763794]
[133.74969482 328.28802490]
[156.76853943 338.04165649]
[181.75657654 337.26867676]
[204.12857056 326.11099243]
[219.77928162 306.61599731]
[225.83682251 282.36096191]
[221.18965149 257.79669189]
[206.69052124 237.43064880]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[260.00000000 100.00000000]
[260.00000000 125.00000000]
[238.34936523 137.50000000]
[260.00000000 150.00000000]
[260.00000000 175.00000000]
[260.00000000 200.00000000]
[260.00000000 225.00000000]
[249.02532959 247.46234131]
[260.00000000 269.92468262]
[260.00000000 294.92468262]
[250.90147400 318.21023560]
[265.00000000 338.85559082]
[290.00000000 338.85559082]
[304.09854126 318.21023560]
[295.00000000 294.92468262]
[316.65063477 282.42468262]
[295.00000000 269.92468262]
[305.97467041 247.46234131]
[295.00000000 225.00000000]
[295.00000000 200.00000000]
[295.00000000 175.00000000]
[295.00000000 150.00000000]
[295.00000000 125.00000000]
[295.00000000 100.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[420.00000000 125.00000000]
[420.00000000 150.00000000]
[420.00000000 175.00000000]
[420.00000000 200.00000000]
[420.00000000 225.00000000]
[420.00000000 250.00000000]
[400.90136719 266.13201904]
[393.75732422 290.08953857]
[400.90136719 314.04705811]
[420.00000000 330.17910767]
[444.81481934 333.21627808]
[467.24032593 322.16656494]
[490.15249634 332.16824341]
[513.06463623 342.16989136]
[530.76550293 359.82434082]
[555.32702637 355.16278076]
[565.32873535 332.25064087]
[552.04785156 311.07000732]
[527.06695557 310.09289551]
[504.15481567 300.09121704]
[481.24267578 290.08953857]
[474.09863281 266.13201904]
[455.00000000 250.00000000]
[455.00000000 225.00000000]
[455.00000000 200.00000000]
[455.00000000 175.00000000]
[455.00000000 150.00000000]
[455.00000000 125.00000000]
[455.00000000 100.00000000]
[480.00000000 100.00000000]
[505.00000000 100.00000000]
[530.00000000 100.00000000]
[555.00000000 100.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
[630.00000000 100.00000000]
[655.00000000 100.00000000]
[680.00000000 100.00000000]
[705.00000000 100.00000000]
[730.00000000 100.00000000]
[755.00000000 100.00000000]
[780.00000000 100.00000000]
[805.00000000 100.00000000]
[830.00000000 100.00000000]
[855.00000000 100.00000000]
[880.00000000 100.00000000]
[905.00000000 100.00000000]
[930.00000000 100.00000000]
[955.00000000 100.00000000]
[980.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000095 280.67562363 58.36116060 252.55098819 209.69967208 1.00000000]
[]
[57.90162454 256.87816092 36.01426010 343.17798406 302.55976820 1.00000000]
[57.90162454 256.87816092 36.01426010 302.55976820 261.94155235 1.00000000]
[57.90162454 256.87816092 36.01426010 261.94155235 221.32333650 1.00000000]
[]
[]
[]
[-85.32702545 225.77844421 43.74267810 348.66829609 315.45947819 1.00000000]
[-85.32702545 225.77844421 43.74267810 315.45947819 282.25066028 1.00000000]
[-85.32702545 225.77844421 43.74267810 282.25066028 249.04184237 1.00000000]
[-85.32702545 225.77844421 43.74267810 249.04184237 215.83302446 1.00000000]
[]
[]
[-195.31595574 201.89617922 28.47466729 334.32915218 282.25066025 1.00000000]
[-195.31595574 201.89617922 28.47466729 282.25066025 230.17216833 1.00000000]
[]
[]
[]
[]
[]
[-376.84184343 162.48085512 42.10271758 347.69039534 313.14823198 1.00000000]
[-376.84184343 162.48085512 42.10271758 313.14823198 278.60606862 1.00000000]
[-376.84184343 162.48085512 42.10271758 278.60606862 244.06390527 1.00000000]
[-376.84184343 162.48085512 42.10271758 244.06390527 209.52174191 1.00000000]
[-376.84184343 162.48085512 42.10271758 209.52174191 174.97957855 1.00000000]
[-376.84184343 162.48085512 42.10271758 174.97957855 140.43741519 1.00000000]
[-376.84184343 162.48085512 42.10271758 140.43741519 105.89525183 1.00000000]
[-376.84184343 162.48085512 42.10271758 105.89525183 71.35308848 1.00000000]
[-376.84184343 162.48085512 42.10271758 71.35308848 36.81092512 1.00000000]
[]
[]
[]
[]
[]
[]
[-195.31595574 201.89617922 28.47466729 154.32915213 102.25066021 1.00000000]
[-195.31595574 201.89617922 28.47466729 102.25066021 50.17216837 1.00000000]
[]
[]
[-85.32702545 225.77844421 43.74267810 168.66829609 135.45947819 1.00000000]
[-85.32702545 225.77844421 43.74267810 135.45947819 102.25066028 1.00000000]
[-85.32702545 225.77844421 43.74267810 102.25066028 69.04184237 1.00000000]
[-85.32702545 225.77844421 43.74267810 69.04184237 35.83302446 1.00000000]
[]
[]
[]
[57.90162454 256.87816092 36.01426010 163.17798406 122.55976820 1.00000000]
[57.90162454 256.87816092 36.01426010 122.55976820 81.94155235 1.00000000]
[57.90162454 256.87816092 36.01426010 81.94155235 41.32333650 1.00000000]
[]
[167.50000095 280.67562363 58.36116060 174.80164847 150.06638480 1.00000000]
[167.50000095 280.67562363 58.36116060 150.06638480 125.33112114 1.00000000]
[167.50000095 280.67562363 58.36116060 125.33112114 100.59585747 1.00000000]
[167.50000095 280.67562363 58.36116060 100.59585747 75.86059380 1.00000000]
[167.50000095 280.67562363 58.36116060 75.86059380 51.12533014 1.00000000]
[167.50000095 280.67562363 58.36116060 51.12533014 26.39006647 1.00000000]
[167.50000095 280.67562363 58.36116060 26.39006647 1.65480281 1.00000000]
[167.50000095 280.67562363 58.36116060 1.65480281 336.91953914 1.00000000]
[167.50000095 280.67562363 58.36116060 336.91953914 312.18427547 1.00000000]
[167.50000095 280.67562363 58.36116060 312.18427547 287.44901181 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[277.50000002 247.46233919 28.47466709 232.07849235 180.00000000 1.00000000]
[277.50000002 247.46233919 28.47466709 180.00000000 127.92150785 1.00000000]
[]
[277.50000002 315.18291596 26.77024796 229.17803362 173.50682006 1.00000000]
[277.50000002 315.18291596 26.77024796 173.50682006 117.83560624 1.00000000]
[277.50000002 315.18291596 26.77024796 117.83560624 62.16439268 1.00000000]
[277.50000002 315.18291596 26.77024796 62.16439268 6.49317972 1.00000000]
[277.50000002 315.18291596 26.77024796 6.49317972 310.82196713 1.00000000]
[]
[]
[277.50000002 247.46233919 28.47466709 52.07849141 360.00000000 1.00000000]
[277.50000002 247.46233919 28.47466709 360.00000000 307.92150830 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[437.50000037 290.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[437.50000037 290.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[437.50000037 290.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[437.50000037 290.08954835 43.74267810 146.79118209 113.58236418 1.00000000]
[437.50000037 290.08954835 43.74267810 113.58236418 80.37354627 1.00000000]
[437.50000037 290.08954835 43.74267810 80.37354627 47.16472836 1.00000000]
[]
[]
[538.63219193 334.23605100 26.77024824 162.76039718 107.08918398 1.00000000]
[538.63219193 334.23605100 26.77024824 107.08918398 51.41797078 1.00000000]
[538.63219193 334.23605100 26.77024824 51.41797078 355.74675758 1.00000000]
[538.63219193 334.23605100 26.77024824 355.74675758 300.07554439 1.00000000]
[538.63219193 334.23605100 26.77024824 300.07554439 244.40433119 1.00000000]
[]
[]
[437.50000037 290.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[437.50000037 290.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[8 69]
[9 59]
[10 58]
[13 55]
[14 54]
[15 53]
[16 52]
[20 48]
[21 47]
[22 46]
[24 44]
[25 43]
[26 42]
[27 40]
[28 39]
[29 38]
[75 98]
[76 97]
[78 96]
[79 95]
[80 94]
[81 93]
[83 91]
[84 89]
[103 132]
[104 131]
[105 130]
[106 129]
[107 128]
[108 127]
[109 126]
[115 124]
[116 123]
[117 122]
] def

init

% Start Annotations
51 59 12 1.00 0.60 0.67 omark 72 106 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
