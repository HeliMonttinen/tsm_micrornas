%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACAGCAAAUAAAAAUUGCUUCAAUCUAUUAUAAGUUUAUUAAAAAUCAGGAACCUUAGUAAGGUUUGGAUAGAUGCAAUAAAGUAUGUCCACAGCUGAAAGGACAUACUUUAUUGCAUGUAUCCAAACCUUACUAAUUCAGAGUUUUGUGCUGCGUGUAUGUGUGUGUAGUAGGAGUAUGUGUGUGUGUG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[139.02532959 247.46234131]
[150.00000000 269.92468262]
[150.00000000 294.92468262]
[150.00000000 319.92468262]
[129.97167969 334.88684082]
[120.27717590 357.93063354]
[123.58596039 382.71072388]
[138.98692322 402.40362549]
[162.23925781 411.58670044]
[168.79859924 435.71087646]
[175.35794067 459.83502197]
[181.91729736 483.95916748]
[188.47663879 508.08334351]
[183.77998352 532.63818359]
[200.26370239 551.43414307]
[206.82305908 575.55828857]
[196.09681702 598.14031982]
[202.65617371 622.26446533]
[223.34033203 636.30603027]
[209.14343262 656.88385010]
[208.53549194 681.87646484]
[221.71508789 703.12023926]
[244.37724304 713.67614746]
[250.93658447 737.80029297]
[257.49594116 761.92443848]
[264.05526733 786.04864502]
[259.35864258 810.60351562]
[275.84234619 829.39941406]
[282.40170288 853.52355957]
[266.02822876 872.41564941]
[260.46740723 896.78930664]
[267.02676392 920.91351318]
[284.16394043 939.11560059]
[307.84933472 947.11566162]
[314.40869141 971.23986816]
[320.96804810 995.36401367]
[327.52737427 1019.48815918]
[334.08673096 1043.61230469]
[329.39007568 1068.16723633]
[345.87380981 1086.96313477]
[352.43313599 1111.08728027]
[344.27630615 1134.71911621]
[355.48156738 1157.06738281]
[379.29815674 1164.66796875]
[394.70578003 1184.35571289]
[410.11337280 1204.04333496]
[415.31439209 1228.49633789]
[437.80065918 1239.42187500]
[460.23895264 1228.39819336]
[485.23889160 1228.34350586]
[510.23883057 1228.28881836]
[535.23876953 1228.23425293]
[560.23870850 1228.17956543]
[585.23864746 1228.12487793]
[610.23858643 1228.07019043]
[635.23852539 1228.01562500]
[660.23846436 1227.96093750]
[685.23840332 1227.90625000]
[710.23834229 1227.85156250]
[735.23828125 1227.79699707]
[760.23822021 1227.74230957]
[785.23815918 1227.68762207]
[810.23809814 1227.63293457]
[835.23803711 1227.57836914]
[860.23797607 1227.52368164]
[882.72430420 1238.44921875]
[905.16259766 1227.42541504]
[930.16253662 1227.37084961]
[955.16247559 1227.31616211]
[980.16241455 1227.26147461]
[1005.16235352 1227.20678711]
[1030.16223145 1227.15222168]
[1055.16223145 1227.09753418]
[1080.16210938 1227.04284668]
[1105.16210938 1226.98815918]
[1130.16198730 1226.93359375]
[1155.16198730 1226.87890625]
[1180.16186523 1226.82421875]
[1205.16186523 1226.76953125]
[1230.16174316 1226.71496582]
[1255.16174316 1226.66027832]
[1280.16162109 1226.60559082]
[1305.16162109 1226.55090332]
[1330.16149902 1226.49633789]
[1344.55139160 1246.93969727]
[1367.04760742 1257.84484863]
[1392.01013184 1256.47766113]
[1413.18090820 1243.18103027]
[1425.25207520 1221.28845215]
[1425.19738770 1196.28845215]
[1413.03063965 1174.44885254]
[1391.80200195 1161.24487305]
[1366.83361816 1159.98693848]
[1344.38537598 1170.99023438]
[1330.08508301 1191.49633789]
[1305.08508301 1191.55102539]
[1280.08520508 1191.60571289]
[1255.08520508 1191.66040039]
[1230.08532715 1191.71496582]
[1205.08532715 1191.76965332]
[1180.08544922 1191.82434082]
[1155.08544922 1191.87902832]
[1130.08557129 1191.93359375]
[1105.08557129 1191.98828125]
[1080.08569336 1192.04296875]
[1055.08569336 1192.09765625]
[1030.08569336 1192.15222168]
[1005.08581543 1192.20690918]
[980.08587646 1192.26159668]
[955.08593750 1192.31628418]
[930.08599854 1192.37084961]
[905.08605957 1192.42553711]
[882.59979248 1181.50000000]
[860.16149902 1192.52380371]
[835.16156006 1192.57836914]
[810.16162109 1192.63305664]
[785.16168213 1192.68774414]
[760.16174316 1192.74243164]
[735.16180420 1192.79699707]
[710.16186523 1192.85168457]
[685.16192627 1192.90637207]
[660.16198730 1192.96105957]
[635.16198730 1193.01562500]
[610.16204834 1193.07031250]
[585.16210938 1193.12500000]
[560.16217041 1193.17968750]
[535.16223145 1193.23425293]
[510.16232300 1193.28894043]
[485.16238403 1193.34362793]
[460.16244507 1193.39831543]
[437.67614746 1182.47277832]
[422.26855469 1162.78503418]
[406.86093140 1143.09729004]
[405.20709229 1118.15209961]
[386.20697021 1101.90417480]
[379.64761353 1077.78002930]
[384.34426880 1053.22509766]
[367.86056519 1034.42919922]
[361.30120850 1010.30505371]
[354.74185181 986.18090820]
[348.18252563 962.05676270]
[341.62316895 937.93261719]
[357.99661255 919.04052734]
[363.55746460 894.66680908]
[356.99810791 870.54266357]
[339.86093140 852.34057617]
[316.17550659 844.34051514]
[309.61618042 820.21630859]
[314.31280518 795.66149902]
[297.82910156 776.86553955]
[291.26974487 752.74139404]
[284.71041870 728.61724854]
[278.15106201 704.49304199]
[292.34796143 683.91522217]
[292.95590210 658.92260742]
[279.77630615 637.67883301]
[257.11416626 627.12292480]
[267.84039307 604.54089355]
[261.28103638 580.41674805]
[240.59687805 566.37518311]
[234.03752136 542.25103760]
[238.73417664 517.69616699]
[222.25045776 498.90023804]
[215.69111633 474.77609253]
[209.13175964 450.65194702]
[202.57241821 426.52777100]
[196.01307678 402.40362549]
[211.41403198 382.71072388]
[214.72280884 357.93063354]
[205.02830505 334.88684082]
[185.00000000 319.92468262]
[185.00000000 294.92468262]
[185.00000000 269.92468262]
[195.97467041 247.46234131]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[206.65063477 162.50000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999543 247.46233919 28.47466709 232.07849235 180.00000000 1.00000000]
[167.49999543 247.46233919 28.47466709 180.00000000 127.92150785 1.00000000]
[]
[]
[167.49999573 364.23611837 47.64193249 248.44935675 218.02742040 1.00000000]
[167.49999573 364.23611837 47.64193249 218.02742040 187.60548404 1.00000000]
[167.49999573 364.23611837 47.64193249 187.60548404 157.18354769 1.00000000]
[167.49999573 364.23611837 47.64193249 157.18354769 126.76161133 1.00000000]
[167.49999573 364.23611837 47.64193249 126.76161133 96.33967498 1.00000000]
[]
[]
[]
[]
[211.25708403 525.16719268 28.47466729 216.86752368 164.78903175 1.00000000]
[211.25708403 525.16719268 28.47466729 164.78903175 112.71053983 1.00000000]
[]
[231.96860450 601.34061652 36.01426010 225.71635561 185.09813980 1.00000000]
[231.96860450 601.34061652 36.01426010 185.09813980 144.47992391 1.00000000]
[231.96860450 601.34061652 36.01426010 144.47992391 103.86170789 1.00000000]
[250.74569706 670.39954570 43.74267810 231.20666749 197.99784964 1.00000000]
[250.74569706 670.39954570 43.74267810 197.99784964 164.78903173 1.00000000]
[250.74569706 670.39954570 43.74267810 164.78903173 131.58021382 1.00000000]
[250.74569706 670.39954570 43.74267810 131.58021382 98.37139591 1.00000000]
[]
[]
[]
[286.83572350 803.13247955 28.47466729 216.86752363 164.78903170 1.00000000]
[286.83572350 803.13247955 28.47466729 164.78903170 112.71053978 1.00000000]
[]
[312.01242865 895.72808721 51.55595110 234.94645179 206.88348375 1.00000000]
[312.01242865 895.72808721 51.55595110 206.88348375 178.82051570 1.00000000]
[312.01242865 895.72808721 51.55595110 178.82051570 150.75754766 1.00000000]
[312.01242865 895.72808721 51.55595110 150.75754766 122.69457962 1.00000000]
[312.01242865 895.72808721 51.55595110 122.69457962 94.63161157 1.00000000]
[]
[]
[]
[]
[356.86717706 1060.69616625 28.47466729 216.86752358 164.78903166 1.00000000]
[356.86717706 1060.69616625 28.47466729 164.78903166 112.71053973 1.00000000]
[]
[376.41465310 1132.58843352 32.20889362 221.87853950 176.20693321 1.00000000]
[376.41465310 1132.58843352 32.20889362 176.20693321 130.53532692 1.00000000]
[376.41465310 1132.58843352 32.20889362 130.53532692 84.86372063 1.00000000]
[]
[]
[437.73841008 1210.94733112 28.47466729 194.03172039 141.95322846 1.00000000]
[437.73841008 1210.94733112 28.47466729 141.95322846 89.87473654 1.00000000]
[437.73841008 1210.94733112 28.47466729 89.87473654 37.79624461 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[882.66202494 1209.97461076 28.47466729 141.95322842 89.87473649 1.00000000]
[882.66202494 1209.97461076 28.47466729 89.87473649 37.79624457 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1376.88539001 1208.89410773 49.92949042 159.35718698 130.36037780 1.00000000]
[1376.88539001 1208.89410773 49.92949042 130.36037780 101.36356861 1.00000000]
[1376.88539001 1208.89410773 49.92949042 101.36356861 72.36675943 1.00000000]
[1376.88539001 1208.89410773 49.92949042 72.36675943 43.36995024 1.00000000]
[1376.88539001 1208.89410773 49.92949042 43.36995024 14.37314106 1.00000000]
[1376.88539001 1208.89410773 49.92949042 14.37314106 345.37633188 1.00000000]
[1376.88539001 1208.89410773 49.92949042 345.37633188 316.37952269 1.00000000]
[1376.88539001 1208.89410773 49.92949042 316.37952269 287.38271351 1.00000000]
[1376.88539001 1208.89410773 49.92949042 287.38271351 258.38590432 1.00000000]
[1376.88539001 1208.89410773 49.92949042 258.38590432 229.38909514 1.00000000]
[1376.88539001 1208.89410773 49.92949042 229.38909514 200.39228595 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[882.66202494 1209.97461076 28.47466729 321.95322837 269.87473644 1.00000000]
[882.66202494 1209.97461076 28.47466729 269.87473644 217.79624461 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[437.73841008 1210.94733112 28.47466729 321.95322842 269.87473659 1.00000000]
[]
[]
[376.41465310 1132.58843352 32.20889362 19.04273635 333.37113006 1.00000000]
[376.41465310 1132.58843352 32.20889362 333.37113006 287.69952377 1.00000000]
[]
[356.86717706 1060.69616625 28.47466729 36.86752354 344.78903161 1.00000000]
[356.86717706 1060.69616625 28.47466729 344.78903161 292.71053978 1.00000000]
[]
[]
[]
[]
[312.01242865 895.72808721 51.55595110 54.94645179 26.88348375 1.00000000]
[312.01242865 895.72808721 51.55595110 26.88348375 358.82051570 1.00000000]
[312.01242865 895.72808721 51.55595110 358.82051570 330.75754766 1.00000000]
[312.01242865 895.72808721 51.55595110 330.75754766 302.69457962 1.00000000]
[312.01242865 895.72808721 51.55595110 302.69457962 274.63161157 1.00000000]
[]
[286.83572350 803.13247955 28.47466729 36.86752358 344.78903166 1.00000000]
[286.83572350 803.13247955 28.47466729 344.78903166 292.71053983 1.00000000]
[]
[]
[]
[250.74569706 670.39954570 43.74267810 51.20666755 17.99784964 1.00000000]
[250.74569706 670.39954570 43.74267810 17.99784964 344.78903173 1.00000000]
[250.74569706 670.39954570 43.74267810 344.78903173 311.58021382 1.00000000]
[250.74569706 670.39954570 43.74267810 311.58021382 278.37139586 1.00000000]
[231.96860450 601.34061652 36.01426010 45.71635532 5.09813951 1.00000000]
[231.96860450 601.34061652 36.01426010 5.09813951 324.47992369 1.00000000]
[231.96860450 601.34061652 36.01426010 324.47992369 283.86170793 1.00000000]
[]
[211.25708403 525.16719268 28.47466729 36.86752363 344.78903170 1.00000000]
[211.25708403 525.16719268 28.47466729 344.78903170 292.71053987 1.00000000]
[]
[]
[]
[]
[167.49999573 364.23611837 47.64193249 53.23838857 22.81645222 1.00000000]
[167.49999573 364.23611837 47.64193249 22.81645222 352.39451586 1.00000000]
[167.49999573 364.23611837 47.64193249 352.39451586 321.97257951 1.00000000]
[167.49999573 364.23611837 47.64193249 321.97257951 291.55064315 1.00000000]
[]
[]
[167.49999543 247.46233919 28.47466709 52.07849141 360.00000000 1.00000000]
[167.49999543 247.46233919 28.47466709 360.00000000 307.92150830 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 185]
[7 184]
[8 183]
[10 181]
[11 180]
[12 179]
[17 175]
[18 174]
[19 173]
[20 172]
[21 171]
[23 169]
[24 168]
[27 165]
[31 161]
[32 160]
[33 159]
[34 158]
[36 156]
[37 155]
[42 150]
[43 149]
[44 148]
[45 147]
[46 146]
[48 144]
[49 143]
[52 141]
[53 140]
[54 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
] def

init

% Start Annotations
57 92 12 1.00 0.60 0.67 omark 103 138 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
