%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAACAGCAAAUAAAAAUUGCUUCAAUCUAUUAUAAGUUUAUUAAAAAUCAGGAACCUUAGUAAGGUUUGGAUAGAUGCAAUAAAGUAUGUCCACAGCUGAAAGGACAUACUUUAUUGCAURUAUCCAAACCUUACUAAUUCAGAGUUUUGUGCUGUGUGUAUGUGUGUGUAGUAGGAGUGUGUGUGUGUGUGUG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[139.02532959 247.46234131]
[150.00000000 269.92468262]
[150.00000000 294.92468262]
[150.00000000 319.92468262]
[129.97167969 334.88684082]
[120.27717590 357.93063354]
[123.58596039 382.71072388]
[138.98692322 402.40362549]
[162.23925781 411.58670044]
[168.79859924 435.71087646]
[175.35794067 459.83502197]
[181.91729736 483.95916748]
[188.47663879 508.08334351]
[183.77998352 532.63818359]
[200.26370239 551.43414307]
[206.82305908 575.55828857]
[196.09681702 598.14031982]
[202.65617371 622.26446533]
[223.34033203 636.30603027]
[209.14343262 656.88385010]
[208.53549194 681.87646484]
[221.71508789 703.12023926]
[244.37724304 713.67614746]
[250.93658447 737.80029297]
[257.49594116 761.92443848]
[264.05526733 786.04864502]
[244.41838074 801.52093506]
[230.93852234 822.57543945]
[225.10539246 846.88543701]
[227.56364441 871.76428223]
[238.04159546 894.46258545]
[255.38130188 912.47186279]
[277.66650391 923.80187988]
[302.43441772 927.20050049]
[308.99377441 951.32470703]
[315.55313110 975.44885254]
[322.11245728 999.57299805]
[328.67181396 1023.69714355]
[323.97515869 1048.25207520]
[340.45886230 1067.04797363]
[347.01821899 1091.17211914]
[338.86138916 1114.80395508]
[350.06661987 1137.15222168]
[373.88323975 1144.75280762]
[389.29083252 1164.44055176]
[404.69845581 1184.12817383]
[409.89947510 1208.58129883]
[432.38574219 1219.50671387]
[454.82403564 1208.48303223]
[479.82397461 1208.42834473]
[504.82391357 1208.37365723]
[529.82385254 1208.31909180]
[554.82379150 1208.26440430]
[579.82373047 1208.20971680]
[604.82366943 1208.15502930]
[629.82360840 1208.10046387]
[654.82354736 1208.04577637]
[679.82348633 1207.99108887]
[704.82342529 1207.93640137]
[729.82336426 1207.88183594]
[754.82330322 1207.82714844]
[779.82324219 1207.77246094]
[804.82318115 1207.71777344]
[829.82312012 1207.66320801]
[854.82305908 1207.60852051]
[877.30932617 1218.53405762]
[899.74761963 1207.51025391]
[924.74755859 1207.45568848]
[949.74749756 1207.40100098]
[974.74749756 1207.34631348]
[999.74743652 1207.29162598]
[1024.74731445 1207.23706055]
[1049.74731445 1207.18237305]
[1074.74719238 1207.12768555]
[1099.74719238 1207.07299805]
[1124.74707031 1207.01843262]
[1149.74707031 1206.96374512]
[1174.74694824 1206.90905762]
[1199.74694824 1206.85437012]
[1224.74682617 1206.79980469]
[1249.74682617 1206.74511719]
[1274.74670410 1206.69042969]
[1299.74670410 1206.63574219]
[1324.74658203 1206.58117676]
[1339.13647461 1227.02453613]
[1361.63269043 1237.92968750]
[1386.59521484 1236.56250000]
[1407.76599121 1223.26586914]
[1419.83715820 1201.37329102]
[1419.78247070 1176.37329102]
[1407.61572266 1154.53369141]
[1386.38708496 1141.32971191]
[1361.41870117 1140.07177734]
[1338.97045898 1151.07507324]
[1324.67016602 1171.58117676]
[1299.67016602 1171.63586426]
[1274.67028809 1171.69055176]
[1249.67028809 1171.74523926]
[1224.67041016 1171.79980469]
[1199.67041016 1171.85449219]
[1174.67041016 1171.90917969]
[1149.67053223 1171.96386719]
[1124.67053223 1172.01843262]
[1099.67065430 1172.07312012]
[1074.67065430 1172.12780762]
[1049.67077637 1172.18249512]
[1024.67077637 1172.23706055]
[999.67089844 1172.29174805]
[974.67095947 1172.34643555]
[949.67102051 1172.40112305]
[924.67108154 1172.45568848]
[899.67114258 1172.51037598]
[877.18487549 1161.58483887]
[854.74658203 1172.60864258]
[829.74664307 1172.66320801]
[804.74670410 1172.71789551]
[779.74676514 1172.77258301]
[754.74682617 1172.82727051]
[729.74682617 1172.88183594]
[704.74688721 1172.93652344]
[679.74694824 1172.99121094]
[654.74700928 1173.04589844]
[629.74707031 1173.10046387]
[604.74713135 1173.15515137]
[579.74719238 1173.20983887]
[554.74725342 1173.26452637]
[529.74731445 1173.31909180]
[504.74740601 1173.37377930]
[479.74746704 1173.42846680]
[454.74752808 1173.48315430]
[432.26123047 1162.55761719]
[416.85360718 1142.86987305]
[401.44601440 1123.18212891]
[399.79217529 1098.23693848]
[380.79205322 1081.98901367]
[374.23269653 1057.86486816]
[378.92935181 1033.30993652]
[362.44561768 1014.51403809]
[355.88629150 990.38989258]
[349.32693481 966.26574707]
[342.76757812 942.14160156]
[336.20825195 918.01745605]
[355.84515381 902.54516602]
[369.32501221 881.49060059]
[375.15814209 857.18066406]
[372.69989014 832.30175781]
[362.22192383 809.60351562]
[344.88223267 791.59423828]
[322.59701538 780.26416016]
[297.82910156 776.86553955]
[291.26974487 752.74139404]
[284.71041870 728.61724854]
[278.15106201 704.49304199]
[292.34796143 683.91522217]
[292.95590210 658.92260742]
[279.77630615 637.67883301]
[257.11416626 627.12292480]
[267.84039307 604.54089355]
[261.28103638 580.41674805]
[240.59687805 566.37518311]
[234.03752136 542.25103760]
[238.73417664 517.69616699]
[222.25045776 498.90023804]
[215.69111633 474.77609253]
[209.13177490 450.65194702]
[202.57241821 426.52777100]
[196.01307678 402.40362549]
[211.41403198 382.71072388]
[214.72282410 357.93063354]
[205.02830505 334.88684082]
[185.00000000 319.92468262]
[185.00000000 294.92468262]
[185.00000000 269.92468262]
[195.97467041 247.46234131]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[206.65063477 162.50000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999608 247.46233919 28.47466709 232.07849235 180.00000000 1.00000000]
[167.49999608 247.46233919 28.47466709 180.00000000 127.92150785 1.00000000]
[]
[]
[167.49999638 364.23611837 47.64193249 248.44935675 218.02742040 1.00000000]
[167.49999638 364.23611837 47.64193249 218.02742040 187.60548404 1.00000000]
[167.49999638 364.23611837 47.64193249 187.60548404 157.18354769 1.00000000]
[167.49999638 364.23611837 47.64193249 157.18354769 126.76161133 1.00000000]
[167.49999638 364.23611837 47.64193249 126.76161133 96.33967498 1.00000000]
[]
[]
[]
[]
[211.25708469 525.16719268 28.47466729 216.86752368 164.78903175 1.00000000]
[211.25708469 525.16719268 28.47466729 164.78903175 112.71053983 1.00000000]
[]
[231.96860515 601.34061652 36.01426010 225.71635561 185.09813980 1.00000000]
[231.96860515 601.34061652 36.01426010 185.09813980 144.47992391 1.00000000]
[231.96860515 601.34061652 36.01426010 144.47992391 103.86170789 1.00000000]
[250.74569771 670.39954570 43.74267810 231.20666749 197.99784964 1.00000000]
[250.74569771 670.39954570 43.74267810 197.99784964 164.78903173 1.00000000]
[250.74569771 670.39954570 43.74267810 164.78903173 131.58021382 1.00000000]
[250.74569771 670.39954570 43.74267810 131.58021382 98.37139591 1.00000000]
[]
[]
[]
[300.13176203 852.03302884 75.20275385 241.33269736 222.19678095 1.00000000]
[300.13176203 852.03302884 75.20275385 222.19678095 203.06086454 1.00000000]
[300.13176203 852.03302884 75.20275385 203.06086454 183.92494814 1.00000000]
[300.13176203 852.03302884 75.20275385 183.92494814 164.78903173 1.00000000]
[300.13176203 852.03302884 75.20275385 164.78903173 145.65311532 1.00000000]
[300.13176203 852.03302884 75.20275385 145.65311532 126.51719891 1.00000000]
[300.13176203 852.03302884 75.20275385 126.51719891 107.38128251 1.00000000]
[300.13176203 852.03302884 75.20275385 107.38128251 88.24536610 1.00000000]
[]
[]
[]
[]
[351.45225429 1040.78100647 28.47466729 216.86752363 164.78903170 1.00000000]
[351.45225429 1040.78100647 28.47466729 164.78903170 112.71053978 1.00000000]
[]
[370.99973026 1112.67327376 32.20889362 221.87853954 176.20693325 1.00000000]
[370.99973026 1112.67327376 32.20889362 176.20693325 130.53532696 1.00000000]
[370.99973026 1112.67327376 32.20889362 130.53532696 84.86372067 1.00000000]
[]
[]
[432.32348718 1191.03217141 28.47466729 194.03172044 141.95322851 1.00000000]
[432.32348718 1191.03217141 28.47466729 141.95322851 89.87473659 1.00000000]
[432.32348718 1191.03217141 28.47466729 89.87473659 37.79624466 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[877.24710204 1190.05945142 28.47466729 141.95322846 89.87473654 1.00000000]
[877.24710204 1190.05945142 28.47466729 89.87473654 37.79624461 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1371.47046711 1188.97894880 49.92949042 159.35718703 130.36037784 1.00000000]
[1371.47046711 1188.97894880 49.92949042 130.36037784 101.36356866 1.00000000]
[1371.47046711 1188.97894880 49.92949042 101.36356866 72.36675948 1.00000000]
[1371.47046711 1188.97894880 49.92949042 72.36675948 43.36995029 1.00000000]
[1371.47046711 1188.97894880 49.92949042 43.36995029 14.37314111 1.00000000]
[1371.47046711 1188.97894880 49.92949042 14.37314111 345.37633192 1.00000000]
[1371.47046711 1188.97894880 49.92949042 345.37633192 316.37952274 1.00000000]
[1371.47046711 1188.97894880 49.92949042 316.37952274 287.38271355 1.00000000]
[1371.47046711 1188.97894880 49.92949042 287.38271355 258.38590437 1.00000000]
[1371.47046711 1188.97894880 49.92949042 258.38590437 229.38909519 1.00000000]
[1371.47046711 1188.97894880 49.92949042 229.38909519 200.39228600 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[877.24710204 1190.05945142 28.47466729 321.95322842 269.87473649 1.00000000]
[877.24710204 1190.05945142 28.47466729 269.87473649 217.79624466 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[432.32348718 1191.03217141 28.47466729 321.95322846 269.87473663 1.00000000]
[]
[]
[370.99973026 1112.67327376 32.20889362 19.04273640 333.37113011 1.00000000]
[370.99973026 1112.67327376 32.20889362 333.37113011 287.69952382 1.00000000]
[]
[351.45225429 1040.78100647 28.47466729 36.86752358 344.78903166 1.00000000]
[351.45225429 1040.78100647 28.47466729 344.78903166 292.71053983 1.00000000]
[]
[]
[]
[]
[300.13176203 852.03302884 75.20275385 61.33269736 42.19678095 1.00000000]
[300.13176203 852.03302884 75.20275385 42.19678095 23.06086454 1.00000000]
[300.13176203 852.03302884 75.20275385 23.06086454 3.92494814 1.00000000]
[300.13176203 852.03302884 75.20275385 3.92494814 344.78903173 1.00000000]
[300.13176203 852.03302884 75.20275385 344.78903173 325.65311532 1.00000000]
[300.13176203 852.03302884 75.20275385 325.65311532 306.51719891 1.00000000]
[300.13176203 852.03302884 75.20275385 306.51719891 287.38128251 1.00000000]
[300.13176203 852.03302884 75.20275385 287.38128251 268.24536610 1.00000000]
[]
[]
[]
[250.74569771 670.39954570 43.74267810 51.20666755 17.99784964 1.00000000]
[250.74569771 670.39954570 43.74267810 17.99784964 344.78903173 1.00000000]
[250.74569771 670.39954570 43.74267810 344.78903173 311.58021382 1.00000000]
[250.74569771 670.39954570 43.74267810 311.58021382 278.37139586 1.00000000]
[231.96860515 601.34061652 36.01426010 45.71635532 5.09813951 1.00000000]
[231.96860515 601.34061652 36.01426010 5.09813951 324.47992369 1.00000000]
[231.96860515 601.34061652 36.01426010 324.47992369 283.86170793 1.00000000]
[]
[211.25708469 525.16719268 28.47466729 36.86752363 344.78903170 1.00000000]
[211.25708469 525.16719268 28.47466729 344.78903170 292.71053987 1.00000000]
[]
[]
[]
[]
[167.49999638 364.23611837 47.64193249 53.23838857 22.81645222 1.00000000]
[167.49999638 364.23611837 47.64193249 22.81645222 352.39451586 1.00000000]
[167.49999638 364.23611837 47.64193249 352.39451586 321.97257951 1.00000000]
[167.49999638 364.23611837 47.64193249 321.97257951 291.55064315 1.00000000]
[]
[]
[167.49999608 247.46233919 28.47466709 52.07849141 360.00000000 1.00000000]
[167.49999608 247.46233919 28.47466709 360.00000000 307.92150830 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 185]
[7 184]
[8 183]
[10 181]
[11 180]
[12 179]
[17 175]
[18 174]
[19 173]
[20 172]
[21 171]
[23 169]
[24 168]
[27 165]
[31 161]
[32 160]
[33 159]
[34 158]
[42 150]
[43 149]
[44 148]
[45 147]
[46 146]
[48 144]
[49 143]
[52 141]
[53 140]
[54 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[75 120]
[76 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
] def

init

% Start Annotations
57 92 12 1.00 0.60 0.67 omark 103 138 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
