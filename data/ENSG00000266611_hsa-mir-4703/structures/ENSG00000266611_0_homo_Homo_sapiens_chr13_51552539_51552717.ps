%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCCUCUUAUUAAUCCCAUAAAAUCCUAUACCAUUUGCGAGAUUUGCUUUAUGCAUAUUAGCAAUACAGUACAAAUAUAGUGUGUUUGAUUUGCACUGUAGUUGUAUUGUAUUGCCACUCUGUAUAAAAAUCCAAUCAUCAGCUAGAUACCUACCUAACAAAAAAGUUGCUCCUAGA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[600.00000000 100.00000000]
[625.00000000 100.00000000]
[650.00000000 100.00000000]
[675.00000000 100.00000000]
[700.00000000 100.00000000]
[725.00000000 100.00000000]
[750.00000000 100.00000000]
[775.00000000 100.00000000]
[800.00000000 100.00000000]
[825.00000000 100.00000000]
[850.00000000 100.00000000]
[875.00000000 100.00000000]
[900.00000000 100.00000000]
[925.00000000 100.00000000]
[950.00000000 100.00000000]
[950.00000000 125.00000000]
[950.00000000 150.00000000]
[950.00000000 175.00000000]
[950.00000000 200.00000000]
[950.00000000 225.00000000]
[950.00000000 250.00000000]
[950.00000000 275.00000000]
[950.00000000 300.00000000]
[950.00000000 325.00000000]
[950.00000000 350.00000000]
[950.00000000 375.00000000]
[939.02532959 397.46234131]
[950.00000000 419.92468262]
[933.72460938 438.90127563]
[933.72460938 463.90127563]
[917.44921875 482.87789917]
[901.17382812 501.85449219]
[884.89843750 520.83111572]
[868.62304688 539.80773926]
[852.34765625 558.78436279]
[836.07226562 577.76092529]
[819.79687500 596.73754883]
[795.28521729 591.82043457]
[770.92077637 597.42156982]
[751.01721191 612.54931641]
[739.09851074 634.52532959]
[737.27484131 659.45874023]
[745.86914062 682.93505859]
[729.59375000 701.91168213]
[713.31835938 720.88830566]
[697.04296875 739.86486816]
[680.76757812 758.84149170]
[664.49218750 777.81811523]
[648.21679688 796.79473877]
[631.94140625 815.77130127]
[615.66601562 834.74792480]
[599.39062500 853.72454834]
[583.11523438 872.70117188]
[566.83984375 891.67779541]
[550.56445312 910.65435791]
[534.28906250 929.63098145]
[511.33526611 939.53668213]
[505.04238892 963.73168945]
[488.76702881 982.70831299]
[472.49163818 1001.68493652]
[456.21624756 1020.66156006]
[439.94085693 1039.63818359]
[423.66546631 1058.61474609]
[407.39007568 1077.59130859]
[391.11468506 1096.56799316]
[374.83929443 1115.54455566]
[349.96420288 1118.04040527]
[331.95526123 1135.38049316]
[328.52014160 1160.14343262]
[341.12902832 1181.73083496]
[364.38546753 1190.90344238]
[388.33587646 1183.73571777]
[402.72970581 1163.29504395]
[401.40655518 1138.33007812]
[417.68194580 1119.35351562]
[433.95730591 1100.37695312]
[450.23269653 1081.40026855]
[466.50808716 1062.42370605]
[482.78347778 1043.44702148]
[499.05886841 1024.47045898]
[515.33428955 1005.49383545]
[531.60968018 986.51727295]
[554.56347656 976.61157227]
[560.85632324 952.41650391]
[577.13171387 933.43994141]
[593.40710449 914.46331787]
[609.68249512 895.48669434]
[625.95788574 876.51007080]
[642.23327637 857.53350830]
[658.50866699 838.55688477]
[674.78405762 819.58026123]
[691.05944824 800.60363770]
[707.33483887 781.62707520]
[723.61022949 762.65045166]
[739.88562012 743.67382812]
[756.16101074 724.69720459]
[772.43640137 705.72058105]
[796.94805908 710.63775635]
[821.31250000 705.03662109]
[841.21606445 689.90881348]
[853.13476562 667.93286133]
[854.95843506 642.99945068]
[846.36413574 619.52307129]
[862.63952637 600.54650879]
[878.91491699 581.56988525]
[895.19030762 562.59326172]
[911.46569824 543.61663818]
[927.74108887 524.64007568]
[944.01647949 505.66345215]
[960.29187012 486.68682861]
[985.00000000 482.87789917]
[1001.27539062 463.90127563]
[1001.27539062 438.90127563]
[985.00000000 419.92468262]
[995.97467041 397.46234131]
[985.00000000 375.00000000]
[985.00000000 350.00000000]
[985.00000000 325.00000000]
[985.00000000 300.00000000]
[1006.65063477 287.50000000]
[985.00000000 275.00000000]
[985.00000000 250.00000000]
[1006.65063477 237.50000000]
[985.00000000 225.00000000]
[985.00000000 200.00000000]
[1006.65063477 187.50000000]
[985.00000000 175.00000000]
[985.00000000 150.00000000]
[985.00000000 125.00000000]
[985.00000000 100.00000000]
[1035.00000000 100.00000000]
[1085.00000000 100.00000000]
[1135.00000000 100.00000000]
[1135.00000000 125.00000000]
[1135.00000000 150.00000000]
[1115.90136719 166.13203430]
[1108.75732422 190.08955383]
[1115.90136719 214.04705811]
[1102.20910645 234.96406555]
[1088.51672363 255.88105774]
[1074.82446289 276.79806519]
[1051.15222168 284.83688354]
[1039.19824219 306.79373169]
[1045.29418945 331.03915405]
[1066.21118164 344.73144531]
[1090.87048340 340.61846924]
[1106.21130371 320.87866211]
[1104.10827637 295.96728516]
[1117.80053711 275.05029297]
[1131.49291992 254.13328552]
[1145.18518066 233.21627808]
[1170.00000000 230.17909241]
[1189.09863281 214.04705811]
[1196.24267578 190.08955383]
[1189.09863281 166.13203430]
[1170.00000000 150.00000000]
[1170.00000000 125.00000000]
[1170.00000000 100.00000000]
[1195.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[967.49999967 397.46233935 28.47466696 232.07849275 180.00000000 1.00000000]
[967.49999967 397.46233935 28.47466696 180.00000000 127.92150773 1.00000000]
[967.50000004 451.40128744 36.01426010 240.92732366 200.30910788 1.00000000]
[967.50000004 451.40128744 36.01426010 200.30910788 159.69089203 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[796.11663455 651.22908154 59.41448475 293.48820180 269.19820647 1.00000000]
[796.11663455 651.22908154 59.41448475 269.19820647 244.90821114 1.00000000]
[796.11663455 651.22908154 59.41448475 244.90821114 220.61821581 1.00000000]
[796.11663455 651.22908154 59.41448475 220.61821581 196.32822047 1.00000000]
[796.11663455 651.22908154 59.41448475 196.32822047 172.03822514 1.00000000]
[796.11663455 651.22908154 59.41448475 172.03822514 147.74822981 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[532.94936291 958.07411997 28.47466729 272.69670771 220.61821578 1.00000000]
[532.94936291 958.07411997 28.47466729 220.61821578 168.53972386 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[366.00695490 1152.72389298 38.21401848 283.36349722 245.17717686 1.00000000]
[366.00695490 1152.72389298 38.21401848 245.17717686 206.99085649 1.00000000]
[366.00695490 1152.72389298 38.21401848 206.99085649 168.80453613 1.00000000]
[366.00695490 1152.72389298 38.21401848 168.80453613 130.61821576 1.00000000]
[366.00695490 1152.72389298 38.21401848 130.61821576 92.43189539 1.00000000]
[366.00695490 1152.72389298 38.21401848 92.43189539 54.24557503 1.00000000]
[366.00695490 1152.72389298 38.21401848 54.24557503 16.05925466 1.00000000]
[366.00695490 1152.72389298 38.21401848 16.05925466 337.87293429 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[532.94936291 958.07411997 28.47466729 92.69670766 40.61821574 1.00000000]
[532.94936291 958.07411997 28.47466729 40.61821574 348.53972390 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[796.11663455 651.22908154 59.41448475 113.48820180 89.19820647 1.00000000]
[796.11663455 651.22908154 59.41448475 89.19820647 64.90821114 1.00000000]
[796.11663455 651.22908154 59.41448475 64.90821114 40.61821581 1.00000000]
[796.11663455 651.22908154 59.41448475 40.61821581 16.32822047 1.00000000]
[796.11663455 651.22908154 59.41448475 16.32822047 352.03822514 1.00000000]
[796.11663455 651.22908154 59.41448475 352.03822514 327.74822981 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[967.50000004 451.40128744 36.01426010 101.54553959 60.92732373 1.00000000]
[967.50000004 451.40128744 36.01426010 60.92732373 20.30910788 1.00000000]
[967.50000004 451.40128744 36.01426010 20.30910788 339.69089203 1.00000000]
[967.50000004 451.40128744 36.01426010 339.69089203 299.07267610 1.00000000]
[967.49999967 397.46233935 28.47466696 52.07849089 360.00000000 1.00000000]
[967.49999967 397.46233935 28.47466696 360.00000000 307.92150830 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1152.49999839 190.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[1152.49999839 190.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[1152.49999839 190.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[]
[]
[]
[1073.27683507 311.11457578 34.35139098 272.58222922 229.90411170 1.00000000]
[1073.27683507 311.11457578 34.35139098 229.90411170 187.22599418 1.00000000]
[1073.27683507 311.11457578 34.35139098 187.22599418 144.54787667 1.00000000]
[1073.27683507 311.11457578 34.35139098 144.54787667 101.86975915 1.00000000]
[1073.27683507 311.11457578 34.35139098 101.86975915 59.19164163 1.00000000]
[1073.27683507 311.11457578 34.35139098 59.19164163 16.51352412 1.00000000]
[1073.27683507 311.11457578 34.35139098 16.51352412 333.83540660 1.00000000]
[]
[]
[]
[1152.49999839 190.08954835 43.74267810 99.62645373 66.41763582 1.00000000]
[1152.49999839 190.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[1152.49999839 190.08954835 43.74267810 33.20881791 360.00000000 1.00000000]
[1152.49999839 190.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[1152.49999839 190.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
] def
/pairs [
[35 150]
[36 149]
[37 148]
[38 147]
[39 145]
[40 144]
[41 142]
[42 141]
[43 139]
[44 138]
[45 137]
[46 136]
[48 134]
[50 130]
[51 129]
[52 128]
[53 127]
[54 126]
[55 125]
[56 124]
[57 123]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[76 104]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[153 178]
[154 177]
[155 176]
[158 171]
[159 170]
[160 169]
[161 168]
] def

init

% Start Annotations
50 84 12 1.00 0.60 0.67 omark 96 130 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
