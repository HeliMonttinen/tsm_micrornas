%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUGGMGGGGAUUAMAUACRAAGAUGCAUGGAAARUGCCUAGCACAGUACCUGGSAUAUAUUAAGAGCUAAUCAAUAGUUGUMAUUGAUCUCARACUMUUCUUGAKUUGAAUUUCUAUCAGAAGAUGCAAUGCCAGGUUCUAAACAAYCAACUUAKAAACACACUC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[115.90147400 198.28555298]
[130.00000000 218.93092346]
[155.00000000 218.93092346]
[169.09852600 198.28555298]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[510.00000000 125.00000000]
[510.00000000 150.00000000]
[493.72460938 168.97660828]
[493.72460938 193.97660828]
[510.00000000 212.95321655]
[510.00000000 237.95321655]
[494.59664917 257.64425659]
[496.62066650 282.56219482]
[515.00000000 299.50915527]
[540.00000000 299.50915527]
[558.37933350 282.56219482]
[560.40332031 257.64425659]
[545.00000000 237.95321655]
[545.00000000 212.95321655]
[561.27539062 193.97660828]
[561.27539062 168.97660828]
[545.00000000 150.00000000]
[545.00000000 125.00000000]
[545.00000000 100.00000000]
[595.00000000 100.00000000]
[645.00000000 100.00000000]
[645.00000000 125.00000000]
[634.02532959 147.46234131]
[645.00000000 169.92468262]
[645.00000000 194.92468262]
[645.00000000 219.92468262]
[645.00000000 244.92468262]
[645.00000000 269.92468262]
[645.00000000 294.92468262]
[620.59191895 300.33248901]
[597.56140137 310.05853271]
[576.66558838 323.78314209]
[558.59130859 341.05511475]
[543.93273926 361.30667114]
[533.17169189 383.87216187]
[526.66198730 408.00973511]
[524.61755371 432.92602539]
[527.10559082 457.80191040]
[534.04437256 481.81967163]
[545.20574951 504.18984985]
[525.77954102 519.92590332]
[506.35333252 535.66192627]
[481.43939209 537.73443604]
[465.51281738 557.00469971]
[468.16876221 581.86322021]
[487.80709839 597.33374023]
[495.33157349 621.17449951]
[502.85601807 645.01525879]
[510.38049316 668.85601807]
[517.90490723 692.69683838]
[525.42938232 716.53759766]
[514.41693115 738.98138428]
[519.63629150 763.43048096]
[538.85363770 779.42089844]
[563.84417725 780.10876465]
[583.91217041 765.19982910]
[590.46862793 741.07489014]
[580.70751953 718.05926514]
[558.80645752 706.00335693]
[551.28204346 682.16259766]
[543.75756836 658.32177734]
[536.23309326 634.48101807]
[528.70867920 610.64025879]
[521.18420410 586.79949951]
[528.38378906 562.85858154]
[547.80999756 547.12255859]
[567.23620605 531.38647461]
[586.80181885 546.94885254]
[608.85577393 558.72265625]
[632.67315674 566.32086182]
[657.47094727 569.49377441]
[682.43414307 568.13696289]
[706.74200439 562.29510498]
[729.59558105 552.16027832]
[744.43395996 572.28045654]
[759.27239990 592.40063477]
[756.12011719 617.20111084]
[768.97454834 638.64318848]
[792.33416748 647.54986572]
[816.20123291 640.10913086]
[830.36083984 619.50561523]
[828.75280762 594.55737305]
[812.06536865 575.94207764]
[787.44061279 571.62683105]
[772.60223389 551.50665283]
[757.76379395 531.38647461]
[774.19787598 512.54718018]
[786.96026611 491.05010986]
[795.63128662 467.60205078]
[799.92608643 442.97369385]
[799.70336914 417.97470093]
[824.06231689 412.34963989]
[848.42126465 406.72460938]
[872.78021240 401.09954834]
[897.51586914 404.72549438]
[914.45965576 386.34323120]
[908.83465576 361.98425293]
[885.54644775 352.89248657]
[864.90515137 366.99700928]
[840.54620361 372.62207031]
[816.18725586 378.24710083]
[791.82830811 383.87216187]
[781.06726074 361.30667114]
[766.40869141 341.05511475]
[748.33441162 323.78314209]
[727.43859863 310.05853271]
[704.40808105 300.33248901]
[680.00000000 294.92468262]
[680.00000000 269.92468262]
[680.00000000 244.92468262]
[680.00000000 219.92468262]
[680.00000000 194.92468262]
[680.00000000 169.92468262]
[690.97467041 147.46234131]
[680.00000000 125.00000000]
[680.00000000 100.00000000]
[705.00000000 100.00000000]
[730.00000000 100.00000000]
[755.00000000 100.00000000]
[780.00000000 100.00000000]
[805.00000000 100.00000000]
[830.00000000 100.00000000]
[855.00000000 100.00000000]
[880.00000000 100.00000000]
[905.00000000 100.00000000]
[930.00000000 100.00000000]
[955.00000000 100.00000000]
[980.00000000 100.00000000]
[1005.00000000 100.00000000]
[1030.00000000 100.00000000]
[1055.00000000 100.00000000]
[1080.00000000 100.00000000]
[1105.00000000 100.00000000]
[1130.00000000 100.00000000]
[1155.00000000 100.00000000]
[1180.00000000 100.00000000]
[1205.00000000 100.00000000]
[1230.00000000 100.00000000]
[1255.00000000 100.00000000]
[1280.00000000 100.00000000]
[1305.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[142.50000000 195.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[142.50000000 195.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[142.50000000 195.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[142.50000000 195.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[142.50000000 195.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[527.50000000 181.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[527.50000000 181.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[527.50000000 181.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[527.50000000 267.51278656 34.35139098 239.37341131 196.69529379 1.00000000]
[527.50000000 267.51278656 34.35139098 196.69529379 154.01717628 1.00000000]
[527.50000000 267.51278656 34.35139098 154.01717628 111.33905876 1.00000000]
[527.50000000 267.51278656 34.35139098 111.33905876 68.66094124 1.00000000]
[527.50000000 267.51278656 34.35139098 68.66094124 25.98282372 1.00000000]
[527.50000000 267.51278656 34.35139098 25.98282372 343.30470621 1.00000000]
[527.50000000 267.51278656 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[527.50000000 181.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[527.50000000 181.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[527.50000000 181.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[662.49999988 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[662.49999988 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[]
[]
[662.50000023 431.69757660 137.88791006 262.70866034 252.30627126 1.00000000]
[662.50000023 431.69757660 137.88791006 252.30627126 241.90388219 1.00000000]
[662.50000023 431.69757660 137.88791006 241.90388219 231.50149312 1.00000000]
[662.50000023 431.69757660 137.88791006 231.50149312 221.09910405 1.00000000]
[662.50000023 431.69757660 137.88791006 221.09910405 210.69671498 1.00000000]
[662.50000023 431.69757660 137.88791006 210.69671498 200.29432591 1.00000000]
[662.50000023 431.69757660 137.88791006 200.29432591 189.89193684 1.00000000]
[662.50000023 431.69757660 137.88791006 189.89193684 179.48954777 1.00000000]
[662.50000023 431.69757660 137.88791006 179.48954777 169.08715870 1.00000000]
[662.50000023 431.69757660 137.88791006 169.08715870 158.68476962 1.00000000]
[662.50000023 431.69757660 137.88791006 158.68476962 148.28238055 1.00000000]
[]
[]
[496.35719410 566.28038832 32.20889362 288.08054880 242.40894251 1.00000000]
[496.35719410 566.28038832 32.20889362 242.40894251 196.73733622 1.00000000]
[496.35719410 566.28038832 32.20889362 196.73733622 151.06572993 1.00000000]
[496.35719410 566.28038832 32.20889362 151.06572993 105.39412364 1.00000000]
[]
[]
[]
[]
[]
[552.34260941 743.66672115 38.21401848 225.22891297 187.04259260 1.00000000]
[552.34260941 743.66672115 38.21401848 187.04259260 148.85627223 1.00000000]
[552.34260941 743.66672115 38.21401848 148.85627223 110.66995187 1.00000000]
[552.34260941 743.66672115 38.21401848 110.66995187 72.48363150 1.00000000]
[552.34260941 743.66672115 38.21401848 72.48363150 34.29731114 1.00000000]
[552.34260941 743.66672115 38.21401848 34.29731114 356.11099077 1.00000000]
[552.34260941 743.66672115 38.21401848 356.11099077 317.92467040 1.00000000]
[552.34260941 743.66672115 38.21401848 317.92467040 279.73835004 1.00000000]
[]
[]
[]
[]
[]
[496.35719410 566.28038832 32.20889362 39.57313936 353.90153307 1.00000000]
[]
[]
[662.50000023 431.69757660 137.88791006 133.69970132 123.29731225 1.00000000]
[662.50000023 431.69757660 137.88791006 123.29731225 112.89492318 1.00000000]
[662.50000023 431.69757660 137.88791006 112.89492318 102.49253411 1.00000000]
[662.50000023 431.69757660 137.88791006 102.49253411 92.09014503 1.00000000]
[662.50000023 431.69757660 137.88791006 92.09014503 81.68775596 1.00000000]
[662.50000023 431.69757660 137.88791006 81.68775596 71.28536689 1.00000000]
[662.50000023 431.69757660 137.88791006 71.28536689 60.88297782 1.00000000]
[]
[]
[793.51981012 609.35423543 38.21401848 206.33691967 168.15059930 1.00000000]
[793.51981012 609.35423543 38.21401848 168.15059930 129.96427894 1.00000000]
[793.51981012 609.35423543 38.21401848 129.96427894 91.77795857 1.00000000]
[793.51981012 609.35423543 38.21401848 91.77795857 53.59163820 1.00000000]
[793.51981012 609.35423543 38.21401848 53.59163820 15.40531784 1.00000000]
[793.51981012 609.35423543 38.21401848 15.40531784 337.21899747 1.00000000]
[793.51981012 609.35423543 38.21401848 337.21899747 299.03267710 1.00000000]
[793.51981012 609.35423543 38.21401848 299.03267710 260.84635674 1.00000000]
[]
[]
[662.50000023 431.69757660 137.88791006 46.30029859 35.89790952 1.00000000]
[662.50000023 431.69757660 137.88791006 35.89790952 25.49552044 1.00000000]
[662.50000023 431.69757660 137.88791006 25.49552044 15.09313137 1.00000000]
[662.50000023 431.69757660 137.88791006 15.09313137 4.69074230 1.00000000]
[662.50000023 431.69757660 137.88791006 4.69074230 354.28835323 1.00000000]
[]
[]
[]
[888.58147241 379.49014396 26.77024824 126.17504661 70.50383341 1.00000000]
[888.58147241 379.49014396 26.77024824 70.50383341 14.83262021 1.00000000]
[888.58147241 379.49014396 26.77024824 14.83262021 319.16140702 1.00000000]
[888.58147241 379.49014396 26.77024824 319.16140702 263.49019382 1.00000000]
[888.58147241 379.49014396 26.77024824 263.49019382 207.81898062 1.00000000]
[]
[]
[]
[662.50000023 431.69757660 137.88791006 339.70567400 329.30328493 1.00000000]
[662.50000023 431.69757660 137.88791006 329.30328493 318.90089585 1.00000000]
[662.50000023 431.69757660 137.88791006 318.90089585 308.49850678 1.00000000]
[662.50000023 431.69757660 137.88791006 308.49850678 298.09611771 1.00000000]
[662.50000023 431.69757660 137.88791006 298.09611771 287.69372864 1.00000000]
[662.50000023 431.69757660 137.88791006 287.69372864 277.29133957 1.00000000]
[]
[]
[]
[]
[]
[662.49999988 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[662.49999988 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[27 46]
[28 45]
[29 44]
[32 41]
[33 40]
[48 143]
[49 142]
[51 140]
[52 139]
[53 138]
[54 137]
[55 136]
[56 135]
[67 94]
[68 93]
[69 92]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[101 113]
[102 112]
[103 111]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% Start Annotations
99 101 12 1.00 0.60 0.67 omark 58 89 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
