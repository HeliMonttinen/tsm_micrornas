%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCUGGCGGGGAUUACAUACAAAGAUGCAUGGAAAAUGCCUAGCACAGUGCCUGGGAUAUAUUAAGAGCUCAUCCAUAGUUGUCACUGAUUUGAGACAGUGACAACUAUGGAUGAGCUCUCAAUAUAUUCUUGAGUUGCAUGUCUAUCAGAAGAUGUGAUGCCAGGUUCUCAACAGUCAACUUAGAAACACACUC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[90.94595337 266.14169312]
[67.49446869 257.47982788]
[44.04298019 248.81797791]
[26.77440643 230.74046326]
[1.90095675 233.25273132]
[-21.55053139 224.59088135]
[-45.00201797 215.92903137]
[-73.51599121 177.42184448]
[-120.21478271 188.14904785]
[-143.66627502 179.48719788]
[-167.11776733 170.82534790]
[-184.38633728 152.74783325]
[-209.25978088 155.26010132]
[-232.71127319 146.59825134]
[-251.40209961 129.99545288]
[-275.65347290 136.06762695]
[-284.31530762 159.51910400]
[-269.83349609 179.89746094]
[-244.83786011 179.43032837]
[-221.38638306 188.09219360]
[-204.11781311 206.16969299]
[-179.24435425 203.65742493]
[-155.79286194 212.31927490]
[-132.34138489 220.98114014]
[-123.82575226 244.48611450]
[-103.82740784 259.48831177]
[-78.87860107 261.08743286]
[-57.12861252 248.76110840]
[-33.67712402 257.42297363]
[-10.22563744 266.08480835]
[7.04293537 284.16232300]
[31.91638565 281.65005493]
[55.36787415 290.31192017]
[78.81935883 298.97375488]
[78.36927795 323.96972656]
[84.82809448 348.12097168]
[64.15416718 362.17761230]
[43.48023605 376.23422241]
[21.02622986 387.22592163]
[21.68179893 412.21734619]
[44.68119049 422.01672363]
[63.15950394 405.17773438]
[83.83343506 391.12109375]
[104.50736237 377.06448364]
[129.32980347 394.35034180]
[113.27449036 413.51348877]
[118.52413177 437.95611572]
[112.51092529 462.22216797]
[106.49771118 486.48822021]
[100.48449707 510.75427246]
[94.47129059 535.02032471]
[88.45807648 559.28637695]
[82.44486237 583.55242920]
[76.43165588 607.81848145]
[70.41844177 632.08453369]
[64.40522766 656.35058594]
[48.34992599 675.51373291]
[53.59956741 699.95635986]
[47.58635330 724.22241211]
[41.57314301 748.48846436]
[35.55993271 772.75451660]
[29.54672050 797.02056885]
[23.53350830 821.28662109]
[17.52029800 845.55267334]
[11.50708580 869.81872559]
[5.49387455 894.08477783]
[-0.51933700 918.35083008]
[-6.53254843 942.61688232]
[-12.54576015 966.88293457]
[-18.55897141 991.14898682]
[-24.57218361 1015.41503906]
[-30.58539391 1039.68115234]
[-36.59860611 1063.94714355]
[-42.61181641 1088.21325684]
[-48.62503052 1112.47924805]
[-54.63824081 1136.74536133]
[-60.65145111 1161.01135254]
[-66.66466522 1185.27746582]
[-72.67787170 1209.54345703]
[-78.69108582 1233.80957031]
[-84.70429993 1258.07556152]
[-106.79566193 1269.77905273]
[-118.35648346 1291.94543457]
[-115.31064606 1316.75915527]
[-98.73204041 1335.47143555]
[-74.46598816 1341.48474121]
[-51.06825256 1332.67871094]
[-36.78844833 1312.15820312]
[-36.66136932 1287.15856934]
[-50.73182678 1266.49401855]
[-44.71861267 1242.22802734]
[-38.70540237 1217.96191406]
[-32.69219208 1193.69592285]
[-26.67897987 1169.42980957]
[-20.66576767 1145.16381836]
[-14.65255642 1120.89770508]
[-8.63934422 1096.63171387]
[-2.62613320 1072.36560059]
[3.38707852 1048.09960938]
[9.40028954 1023.83355713]
[15.41350174 999.56750488]
[21.42671204 975.30145264]
[27.43992424 951.03540039]
[33.45313644 926.76934814]
[39.46634674 902.50329590]
[45.47956085 878.23724365]
[51.49277115 853.97119141]
[57.50598145 829.70513916]
[63.51919174 805.43908691]
[69.53240204 781.17303467]
[75.54561615 756.90698242]
[81.55883026 732.64093018]
[87.57203674 708.37487793]
[103.62734222 689.21166992]
[98.37770081 664.76910400]
[104.39091492 640.50305176]
[110.40412903 616.23699951]
[116.41733551 591.97094727]
[122.43054962 567.70489502]
[128.44375610 543.43884277]
[134.45697021 519.17279053]
[140.47018433 494.90670776]
[146.48339844 470.64065552]
[152.49661255 446.37460327]
[168.55191040 427.21142578]
[163.30227661 402.76882935]
[188.80511475 400.30288696]
[212.57334900 390.73486328]
[232.67179871 374.84371948]
[247.46408081 353.92327881]
[255.74586487 329.67687988]
[256.84283447 304.07858276]
[280.75213623 296.77481079]
[304.66143799 289.47100830]
[328.57073975 282.16723633]
[352.48004150 274.86343384]
[376.38934326 267.55966187]
[400.29864502 260.25585938]
[423.63070679 269.23443604]
[446.87020874 260.01892090]
[457.70828247 237.49035645]
[450.40447998 213.58105469]
[428.82733154 200.95465088]
[404.40518188 206.29875183]
[390.07333374 226.78285217]
[366.16403198 234.08663940]
[342.25473022 241.39042664]
[318.34542847 248.69419861]
[294.43612671 255.99798584]
[270.52682495 263.30175781]
[246.61752319 270.60556030]
[230.91590881 249.50015259]
[209.77186584 233.85061646]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
[860.00000000 100.00000000]
[885.00000000 100.00000000]
[910.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[167.50000194 313.07260185 89.79439395 258.76172140 211.51008645 1.00000000]
[]
[]
[16.90867084 257.45139875 28.47466729 342.35029968 290.27180775 1.00000000]
[16.90867084 257.45139875 28.47466729 290.27180775 238.19331583 1.00000000]
[]
[]
[-88.67169980 218.45508223 43.74267810 356.68944355 290.27180773 1.00000000]
[-88.67169980 218.45508223 43.74267810 290.27180773 223.85417191 1.00000000]
[]
[]
[-194.25207044 179.45876570 28.47466729 342.35029963 290.27180771 1.00000000]
[-194.25207044 179.45876570 28.47466729 290.27180771 238.19331578 1.00000000]
[]
[-257.77800280 155.99533832 26.77024824 339.44984068 283.77862748 1.00000000]
[-257.77800280 155.99533832 26.77024824 283.77862748 228.10741428 1.00000000]
[-257.77800280 155.99533832 26.77024824 228.10741428 172.43620108 1.00000000]
[-257.77800280 155.99533832 26.77024824 172.43620108 116.76498789 1.00000000]
[-257.77800280 155.99533832 26.77024824 116.76498789 61.09377469 1.00000000]
[]
[-194.25207044 179.45876570 28.47466729 162.35029959 110.27180766 1.00000000]
[-194.25207044 179.45876570 28.47466729 110.27180766 58.19331583 1.00000000]
[]
[]
[-88.67169980 218.45508223 43.74267810 176.68944355 143.48062564 1.00000000]
[-88.67169980 218.45508223 43.74267810 143.48062564 110.27180773 1.00000000]
[-88.67169980 218.45508223 43.74267810 110.27180773 77.06298982 1.00000000]
[-88.67169980 218.45508223 43.74267810 77.06298982 43.85417191 1.00000000]
[]
[]
[16.90867084 257.45139875 28.47466729 162.35029963 110.27180771 1.00000000]
[16.90867084 257.45139875 28.47466729 110.27180771 58.19331588 1.00000000]
[]
[]
[167.50000194 313.07260185 89.79439395 189.03352921 173.02961704 1.00000000]
[167.50000194 313.07260185 89.79439395 173.02961704 157.02570486 1.00000000]
[]
[]
[40.81063713 399.21125453 23.13159456 276.62722325 211.20732473 1.00000000]
[40.81063713 399.21125453 23.13159456 211.20732473 145.78742620 1.00000000]
[40.81063713 399.21125453 23.13159456 145.78742620 80.36752767 1.00000000]
[40.81063713 399.21125453 23.13159456 80.36752767 14.94762914 1.00000000]
[]
[]
[167.50000194 313.07260185 89.79439395 134.54914760 115.15601134 1.00000000]
[140.91320261 420.36246732 28.47466729 245.99622451 193.91773270 1.00000000]
[140.91320261 420.36246732 28.47466729 193.91773270 141.83924078 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[75.98863502 682.36272002 28.47466729 245.99622458 193.91773266 1.00000000]
[75.98863502 682.36272002 28.47466729 193.91773266 141.83924073 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-76.92872797 1299.45405199 42.10271758 259.35746775 224.81530439 1.00000000]
[-76.92872797 1299.45405199 42.10271758 224.81530439 190.27314103 1.00000000]
[-76.92872797 1299.45405199 42.10271758 190.27314103 155.73097767 1.00000000]
[-76.92872797 1299.45405199 42.10271758 155.73097767 121.18881431 1.00000000]
[-76.92872797 1299.45405199 42.10271758 121.18881431 86.64665095 1.00000000]
[-76.92872797 1299.45405199 42.10271758 86.64665095 52.10448760 1.00000000]
[-76.92872797 1299.45405199 42.10271758 52.10448760 17.56232424 1.00000000]
[-76.92872797 1299.45405199 42.10271758 17.56232424 343.02016088 1.00000000]
[-76.92872797 1299.45405199 42.10271758 343.02016088 308.47799752 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[75.98863502 682.36272002 28.47466729 65.99622454 13.91773261 1.00000000]
[75.98863502 682.36272002 28.47466729 13.91773261 321.83924078 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[140.91320261 420.36246732 28.47466729 65.99622458 13.91773266 1.00000000]
[140.91320261 420.36246732 28.47466729 13.91773266 321.83924070 1.00000000]
[167.50000194 313.07260185 89.79439395 92.67945408 76.27479145 1.00000000]
[167.50000194 313.07260185 89.79439395 76.27479145 59.87012881 1.00000000]
[167.50000194 313.07260185 89.79439395 59.87012881 43.46546618 1.00000000]
[167.50000194 313.07260185 89.79439395 43.46546618 27.06080355 1.00000000]
[167.50000194 313.07260185 89.79439395 27.06080355 10.65614092 1.00000000]
[167.50000194 313.07260185 89.79439395 10.65614092 354.25147830 1.00000000]
[]
[]
[]
[]
[]
[]
[423.45593869 234.88349274 34.35139098 132.38661103 89.70849351 1.00000000]
[423.45593869 234.88349274 34.35139098 89.70849351 47.03037600 1.00000000]
[423.45593869 234.88349274 34.35139098 47.03037600 4.35225848 1.00000000]
[423.45593869 234.88349274 34.35139098 4.35225848 321.67414096 1.00000000]
[423.45593869 234.88349274 34.35139098 321.67414096 278.99602345 1.00000000]
[423.45593869 234.88349274 34.35139098 278.99602345 236.31790593 1.00000000]
[423.45593869 234.88349274 34.35139098 236.31790593 193.63978841 1.00000000]
[]
[]
[]
[]
[]
[]
[167.50000194 313.07260185 89.79439395 331.77492106 314.92937358 1.00000000]
[167.50000194 313.07260185 89.79439395 314.92937358 298.08382611 1.00000000]
[167.50000194 313.07260185 89.79439395 298.08382611 281.23827863 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[9 42]
[10 41]
[11 40]
[13 38]
[14 37]
[15 36]
[17 32]
[18 31]
[19 30]
[21 28]
[22 27]
[44 52]
[45 51]
[46 50]
[53 134]
[55 132]
[56 131]
[57 130]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[140 159]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
] def

init

% Start Annotations
98 129 12 1.00 0.60 0.67 omark 58 89 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
