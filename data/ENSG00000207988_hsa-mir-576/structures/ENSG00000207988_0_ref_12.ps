%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
WUAAGCUUUUGAGAAACUGCCARASUGUUUUCCAAAGUGRCUGCACCAUUUUACAAUCCCAUGAGGAUUCCARUUUCUCCACAUCUUUCCCAGAAGUUGSCAUUCCCCAUCUSUUUGGUUAUAACCAUCCURGUGGAUGUGAARUGGUAUCUUGUURUUUUGAUUUUCAUUUCCCUA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[175.00000000 200.00000000]
[175.00000000 225.00000000]
[175.00000000 250.00000000]
[175.00000000 275.00000000]
[164.02532959 297.46234131]
[175.00000000 319.92468262]
[175.00000000 344.92468262]
[175.00000000 369.92468262]
[175.00000000 394.92468262]
[175.00000000 419.92468262]
[155.33204651 435.35748291]
[146.63780212 458.79699707]
[151.48417664 483.32275391]
[168.44032288 501.69363403]
[192.50000000 508.48568726]
[216.55967712 501.69363403]
[233.51582336 483.32275391]
[238.36219788 458.79699707]
[229.66795349 435.35748291]
[210.00000000 419.92468262]
[210.00000000 394.92468262]
[210.00000000 369.92468262]
[210.00000000 344.92468262]
[210.00000000 319.92468262]
[220.97467041 297.46234131]
[210.00000000 275.00000000]
[210.00000000 250.00000000]
[210.00000000 225.00000000]
[210.00000000 200.00000000]
[210.00000000 175.00000000]
[231.65063477 162.50000000]
[210.00000000 150.00000000]
[231.65063477 137.50000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[285.00000000 125.00000000]
[285.00000000 150.00000000]
[285.00000000 175.00000000]
[274.02532959 197.46234131]
[285.00000000 219.92468262]
[285.00000000 244.92468262]
[285.00000000 269.92468262]
[285.00000000 294.92468262]
[285.00000000 319.92468262]
[285.00000000 344.92468262]
[268.72460938 363.90127563]
[268.72460938 388.90127563]
[285.00000000 407.87789917]
[309.70812988 411.68682861]
[325.98352051 430.66345215]
[342.25891113 449.64004517]
[358.53430176 468.61666870]
[364.82714844 492.81170654]
[387.78097534 502.71737671]
[404.05636597 521.69396973]
[420.33175659 540.67059326]
[436.60714722 559.64721680]
[452.88253784 578.62384033]
[437.80172729 598.56292725]
[426.50018311 620.86260986]
[419.33691406 644.81439209]
[416.53952026 669.65740967]
[418.19683838 694.60241699]
[424.25622559 718.85699463]
[434.52517700 741.65057373]
[448.67749023 762.25909424]
[466.26358032 780.02789307]
[486.72473145 794.39245605]
[509.41101074 804.89642334]
[533.60162354 811.20617676]
[558.52819824 813.12121582]
[583.39874268 810.58074951]
[591.17083740 834.34191895]
[587.72314453 859.10308838]
[605.13720703 877.04052734]
[612.90930176 900.80169678]
[620.68133545 924.56292725]
[628.45343018 948.32409668]
[627.04486084 973.28442383]
[646.86309814 988.52374268]
[670.62426758 980.75170898]
[677.60589600 956.74633789]
[661.71911621 937.44317627]
[653.94702148 913.68200684]
[646.17498779 889.92077637]
[638.40289307 866.15960693]
[641.85058594 841.39849854]
[624.43652344 823.46099854]
[616.66442871 799.69982910]
[638.22894287 787.05181885]
[657.20556641 770.77642822]
[672.99145508 751.39068604]
[685.08508301 729.51049805]
[693.10235596 705.83087158]
[696.78851318 681.10412598]
[696.02642822 656.11572266]
[690.84039307 631.65954590]
[713.63403320 621.39062500]
[736.42761230 611.12164307]
[760.70788574 617.07727051]
[782.59527588 604.99664307]
[790.49707031 581.27825928]
[780.22814941 558.48468018]
[757.22735596 548.68853760]
[733.67718506 557.07843018]
[722.05108643 579.21057129]
[699.25744629 589.47955322]
[676.46386719 599.74853516]
[661.58190918 579.66052246]
[643.37017822 562.53356934]
[622.40722656 548.91174316]
[599.35900879 539.22772217]
[574.95770264 533.78918457]
[549.97851562 532.76892090]
[525.21502686 536.19934082]
[501.45379639 543.97137451]
[479.44976807 555.83825684]
[463.17437744 536.86169434]
[446.89898682 517.88507080]
[430.62359619 498.90844727]
[414.34823608 479.93182373]
[408.05535889 455.73678589]
[385.10156250 445.83111572]
[368.82617188 426.85449219]
[352.55078125 407.87789917]
[336.27539062 388.90127563]
[336.27539062 363.90127563]
[320.00000000 344.92468262]
[320.00000000 319.92468262]
[320.00000000 294.92468262]
[320.00000000 269.92468262]
[320.00000000 244.92468262]
[320.00000000 219.92468262]
[330.97467041 197.46234131]
[320.00000000 175.00000000]
[320.00000000 150.00000000]
[320.00000000 125.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
[995.00000000 100.00000000]
[1020.00000000 100.00000000]
[1045.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[192.49999975 297.46233921 28.47466705 232.07849244 180.00000000 1.00000000]
[192.49999975 297.46233921 28.47466705 180.00000000 127.92150781 1.00000000]
[]
[]
[]
[]
[192.50000014 462.47615004 46.00953986 247.64427021 216.11541616 1.00000000]
[192.50000014 462.47615004 46.00953986 216.11541616 184.58656211 1.00000000]
[192.50000014 462.47615004 46.00953986 184.58656211 153.05770806 1.00000000]
[192.50000014 462.47615004 46.00953986 153.05770806 121.52885400 1.00000000]
[192.50000014 462.47615004 46.00953986 121.52885400 89.99999995 1.00000000]
[192.50000014 462.47615004 46.00953986 89.99999995 58.47114590 1.00000000]
[192.50000014 462.47615004 46.00953986 58.47114590 26.94229185 1.00000000]
[192.50000014 462.47615004 46.00953986 26.94229185 355.41343780 1.00000000]
[192.50000014 462.47615004 46.00953986 355.41343780 323.88458374 1.00000000]
[192.50000014 462.47615004 46.00953986 323.88458374 292.35572969 1.00000000]
[]
[]
[]
[]
[192.49999975 297.46233921 28.47466705 52.07849132 360.00000000 1.00000000]
[192.49999975 297.46233921 28.47466705 360.00000000 307.92150834 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[302.49999848 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[302.49999848 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[]
[]
[]
[]
[302.49999879 376.40128744 36.01426010 240.92732373 200.30910788 1.00000000]
[302.49999879 376.40128744 36.01426010 200.30910788 159.69089203 1.00000000]
[302.49999879 376.40128744 36.01426010 159.69089203 119.07267617 1.00000000]
[302.49999879 376.40128744 36.01426010 119.07267617 78.45446032 1.00000000]
[]
[]
[]
[386.44126272 474.27424904 28.47466729 191.46027600 139.38178408 1.00000000]
[386.44126272 474.27424904 28.47466729 139.38178408 87.30329215 1.00000000]
[]
[]
[]
[]
[556.76661829 672.86843473 140.26386530 222.21460773 211.98889992 1.00000000]
[556.76661829 672.86843473 140.26386530 211.98889992 201.76319211 1.00000000]
[556.76661829 672.86843473 140.26386530 201.76319211 191.53748430 1.00000000]
[556.76661829 672.86843473 140.26386530 191.53748430 181.31177649 1.00000000]
[556.76661829 672.86843473 140.26386530 181.31177649 171.08606869 1.00000000]
[556.76661829 672.86843473 140.26386530 171.08606869 160.86036088 1.00000000]
[556.76661829 672.86843473 140.26386530 160.86036088 150.63465307 1.00000000]
[556.76661829 672.86843473 140.26386530 150.63465307 140.40894526 1.00000000]
[556.76661829 672.86843473 140.26386530 140.40894526 130.18323745 1.00000000]
[556.76661829 672.86843473 140.26386530 130.18323745 119.95752965 1.00000000]
[556.76661829 672.86843473 140.26386530 119.95752965 109.73182184 1.00000000]
[556.76661829 672.86843473 140.26386530 109.73182184 99.50611403 1.00000000]
[556.76661829 672.86843473 140.26386530 99.50611403 89.28040622 1.00000000]
[556.76661829 672.86843473 140.26386530 89.28040622 79.05469842 1.00000000]
[]
[614.78686368 850.25077303 28.47466729 213.96601399 161.88752207 1.00000000]
[614.78686368 850.25077303 28.47466729 161.88752207 109.80903014 1.00000000]
[]
[]
[]
[651.38423998 962.13806554 26.77024824 211.06555504 155.39434184 1.00000000]
[651.38423998 962.13806554 26.77024824 155.39434184 99.72312864 1.00000000]
[651.38423998 962.13806554 26.77024824 99.72312864 44.05191544 1.00000000]
[651.38423998 962.13806554 26.77024824 44.05191544 348.38070225 1.00000000]
[651.38423998 962.13806554 26.77024824 348.38070225 292.70948905 1.00000000]
[]
[]
[]
[614.78686368 850.25077303 28.47466729 33.96601394 341.88752202 1.00000000]
[614.78686368 850.25077303 28.47466729 341.88752202 289.80903019 1.00000000]
[]
[556.76661829 672.86843473 140.26386530 64.72034576 54.49463796 1.00000000]
[556.76661829 672.86843473 140.26386530 54.49463796 44.26893015 1.00000000]
[556.76661829 672.86843473 140.26386530 44.26893015 34.04322234 1.00000000]
[556.76661829 672.86843473 140.26386530 34.04322234 23.81751453 1.00000000]
[556.76661829 672.86843473 140.26386530 23.81751453 13.59180672 1.00000000]
[556.76661829 672.86843473 140.26386530 13.59180672 3.36609892 1.00000000]
[556.76661829 672.86843473 140.26386530 3.36609892 353.14039111 1.00000000]
[556.76661829 672.86843473 140.26386530 353.14039111 342.91468330 1.00000000]
[]
[]
[756.19010434 583.02426639 34.35139098 125.12091828 82.44280077 1.00000000]
[756.19010434 583.02426639 34.35139098 82.44280077 39.76468325 1.00000000]
[756.19010434 583.02426639 34.35139098 39.76468325 357.08656573 1.00000000]
[756.19010434 583.02426639 34.35139098 357.08656573 314.40844822 1.00000000]
[756.19010434 583.02426639 34.35139098 314.40844822 271.73033070 1.00000000]
[756.19010434 583.02426639 34.35139098 271.73033070 229.05221318 1.00000000]
[756.19010434 583.02426639 34.35139098 229.05221318 186.37409567 1.00000000]
[]
[]
[556.76661829 672.86843473 140.26386530 328.58033065 318.35462284 1.00000000]
[556.76661829 672.86843473 140.26386530 318.35462284 308.12891503 1.00000000]
[556.76661829 672.86843473 140.26386530 308.12891503 297.90320723 1.00000000]
[556.76661829 672.86843473 140.26386530 297.90320723 287.67749942 1.00000000]
[556.76661829 672.86843473 140.26386530 287.67749942 277.45179161 1.00000000]
[556.76661829 672.86843473 140.26386530 277.45179161 267.22608380 1.00000000]
[556.76661829 672.86843473 140.26386530 267.22608380 257.00037599 1.00000000]
[556.76661829 672.86843473 140.26386530 257.00037599 246.77466819 1.00000000]
[556.76661829 672.86843473 140.26386530 246.77466819 236.54896038 1.00000000]
[]
[]
[]
[]
[386.44126272 474.27424904 28.47466729 11.46027595 319.38178403 1.00000000]
[386.44126272 474.27424904 28.47466729 319.38178403 267.30329220 1.00000000]
[]
[]
[]
[302.49999879 376.40128744 36.01426010 20.30910788 339.69089203 1.00000000]
[302.49999879 376.40128744 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[]
[]
[]
[]
[302.49999848 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[302.49999848 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 39]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[45 148]
[46 147]
[47 146]
[48 145]
[50 143]
[51 142]
[52 141]
[53 140]
[54 139]
[55 138]
[59 136]
[60 135]
[61 134]
[62 133]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[82 99]
[83 98]
[85 96]
[86 95]
[87 94]
[88 93]
[107 118]
[108 117]
[109 116]
] def

init

% Start Annotations
89 117 12 1.00 0.60 0.67 omark 54 95 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
