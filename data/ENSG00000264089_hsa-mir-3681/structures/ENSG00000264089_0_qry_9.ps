%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUCACAAGCCCUUCACACCAAGCCCAUCUUCAGGGAGAUGCUUAUCUUCUUCCAAUAGUGGAUGAGGCACUGUKUGCAGGGCCAACUGUGCACACAGUGCUUCAUCCASUACYAGAAGUAUCAUGAGCUACUGCUCAGGGGUCCAGUGCAACCUGGAAUUCUGAGGGUG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[115.90147400 198.28555298]
[130.00000000 218.93092346]
[155.00000000 218.93092346]
[169.09852600 198.28555298]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[310.00000000 125.00000000]
[310.00000000 150.00000000]
[310.00000000 175.00000000]
[287.03405762 188.31044006]
[272.17535400 210.30636597]
[268.40078735 236.58094788]
[276.46658325 261.87017822]
[259.66873169 280.38592529]
[242.87088013 298.90164185]
[217.93589783 300.70343018]
[199.45077515 317.53494263]
[195.32698059 342.19247437]
[207.32946777 364.12283325]
[230.32127380 373.94000244]
[254.46211243 367.44232178]
[269.41992188 347.41076660]
[268.79290771 322.41864014]
[285.59075928 303.90289307]
[302.38861084 285.38714600]
[326.75921631 290.96151733]
[333.83755493 314.93853760]
[323.60107422 337.74673462]
[330.67941284 361.72375488]
[351.66174316 375.31573486]
[358.74008179 399.29275513]
[365.81845093 423.26974487]
[372.89678955 447.24676514]
[379.97512817 471.22378540]
[387.05346680 495.20077515]
[372.08102417 515.22137451]
[369.30767822 540.06707764]
[379.49716187 562.89636230]
[399.84362793 577.42291260]
[400.38305664 602.41705322]
[400.92248535 627.41125488]
[401.46191406 652.40545654]
[382.71582031 668.94580078]
[376.09036255 693.05187988]
[383.74966431 716.84967041]
[403.19192505 732.56585693]
[403.73135376 757.56005859]
[393.24392700 780.25396729]
[404.70068359 802.47424316]
[405.24011230 827.46844482]
[405.77954102 852.46264648]
[406.31896973 877.45678711]
[406.85839844 902.45098877]
[407.39782715 927.44512939]
[407.93725586 952.43933105]
[408.47668457 977.43353271]
[409.01608276 1002.42767334]
[409.55551147 1027.42187500]
[410.09494019 1052.41601562]
[410.63436890 1077.41027832]
[411.17379761 1102.40441895]
[411.71322632 1127.39855957]
[412.25265503 1152.39282227]
[401.76519775 1175.08666992]
[413.22198486 1197.30700684]
[413.76141357 1222.30114746]
[414.30084229 1247.29541016]
[414.84027100 1272.28955078]
[404.35281372 1294.98339844]
[415.80960083 1317.20373535]
[416.34902954 1342.19787598]
[407.75503540 1365.67443848]
[422.29574585 1386.01074219]
[447.28994751 1385.47131348]
[460.93969727 1364.52648926]
[451.34088135 1341.44274902]
[450.80145264 1316.44860840]
[461.28887939 1293.75463867]
[449.83209229 1271.53430176]
[449.29269409 1246.54016113]
[448.75326538 1221.54602051]
[448.21383667 1196.55175781]
[458.70126343 1173.85791016]
[447.24450684 1151.63757324]
[446.70507812 1126.64343262]
[446.16564941 1101.64916992]
[445.62622070 1076.65502930]
[445.08679199 1051.66088867]
[444.54736328 1026.66662598]
[444.00793457 1001.67248535]
[443.46853638 976.67834473]
[442.92910767 951.68414307]
[442.38967896 926.68994141]
[441.85025024 901.69580078]
[441.31082153 876.70159912]
[440.77139282 851.70739746]
[440.23196411 826.71325684]
[439.69253540 801.71905518]
[450.17999268 779.02514648]
[438.72320557 756.80487061]
[438.18377686 731.81066895]
[456.92987061 715.27032471]
[463.55532837 691.16418457]
[455.89602661 667.36639404]
[436.45376587 651.65020752]
[435.91433716 626.65606689]
[435.37490845 601.66186523]
[434.83547974 576.66772461]
[454.53628540 561.27685547]
[463.73132324 538.02923584]
[459.88864136 513.32635498]
[444.06634521 493.97033691]
[420.62127686 485.29110718]
[413.54293823 461.31408691]
[406.46459961 437.33706665]
[399.38626099 413.36007690]
[392.30789185 389.38305664]
[385.22955322 365.40603638]
[395.46603394 342.59783936]
[388.38769531 318.62081909]
[367.40536499 305.02883911]
[360.32702637 281.05184937]
[378.31466675 262.23672485]
[386.51242065 237.53121948]
[411.01193237 232.55392456]
[435.51144409 227.57662964]
[460.01098633 222.59931946]
[484.51049805 217.62202454]
[509.01000977 212.64471436]
[533.50952148 207.66741943]
[557.70715332 213.95030212]
[577.53485107 198.72326660]
[602.03436279 193.74597168]
[626.53387451 188.76866150]
[651.03338623 183.79136658]
[675.53295898 178.81405640]
[697.89642334 189.98870850]
[721.91259766 183.04426575]
[734.86108398 161.65885925]
[729.88378906 137.15933228]
[709.61694336 122.52194214]
[684.79486084 125.49942017]
[668.56469727 144.51472473]
[644.06518555 149.49203491]
[619.56567383 154.46932983]
[595.06616211 159.44664001]
[570.56665039 164.42393494]
[546.36901855 158.14105225]
[526.54132080 173.36808777]
[502.04177856 178.34538269]
[477.54226685 183.32269287]
[453.04275513 188.29998779]
[428.54324341 193.27729797]
[404.04370117 198.25459290]
[379.54418945 203.23190308]
[345.00000000 175.00000000]
[345.00000000 150.00000000]
[345.00000000 125.00000000]
[345.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[142.50000000 195.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[142.50000000 195.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[142.50000000 195.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[142.50000000 195.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[142.50000000 195.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[327.49999577 231.66264712 59.30350394 252.83693529 226.97220316 1.00000000]
[327.49999577 231.66264712 59.30350394 226.97220316 201.10747102 1.00000000]
[327.49999577 231.66264712 59.30350394 201.10747102 175.24273889 1.00000000]
[327.49999577 231.66264712 59.30350394 175.24273889 149.37800675 1.00000000]
[]
[]
[233.00599315 335.82041287 38.21401848 284.96022351 246.77390314 1.00000000]
[233.00599315 335.82041287 38.21401848 246.77390314 208.58758278 1.00000000]
[233.00599315 335.82041287 38.21401848 208.58758278 170.40126241 1.00000000]
[233.00599315 335.82041287 38.21401848 170.40126241 132.21494205 1.00000000]
[233.00599315 335.82041287 38.21401848 132.21494205 94.02862168 1.00000000]
[233.00599315 335.82041287 38.21401848 94.02862168 55.84230131 1.00000000]
[233.00599315 335.82041287 38.21401848 55.84230131 17.65598095 1.00000000]
[233.00599315 335.82041287 38.21401848 17.65598095 339.46966058 1.00000000]
[]
[]
[327.49999577 231.66264712 59.30350394 115.05187734 90.71573034 1.00000000]
[]
[359.53355338 340.17228966 36.01426010 224.47998942 183.86177356 1.00000000]
[359.53355338 340.17228966 36.01426010 183.86177356 143.24355771 1.00000000]
[359.53355338 340.17228966 36.01426010 143.24355771 102.62534186 1.00000000]
[]
[]
[]
[]
[]
[416.38345459 532.74417114 47.64193249 232.00202243 201.58008608 1.00000000]
[416.38345459 532.74417114 47.64193249 201.58008608 171.15814972 1.00000000]
[416.38345459 532.74417114 47.64193249 171.15814972 140.73621337 1.00000000]
[416.38345459 532.74417114 47.64193249 140.73621337 110.31427701 1.00000000]
[]
[]
[]
[419.82284751 692.10804949 43.74267810 245.18126963 211.97245172 1.00000000]
[419.82284751 692.10804949 43.74267810 211.97245172 178.76363381 1.00000000]
[419.82284751 692.10804949 43.74267810 178.76363381 145.55481590 1.00000000]
[419.82284751 692.10804949 43.74267810 145.55481590 112.34599799 1.00000000]
[]
[421.71195337 779.63955396 28.47466729 230.84212572 178.76363379 1.00000000]
[421.71195337 779.63955396 28.47466729 178.76363379 126.68514186 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[430.23323800 1174.47228961 28.47466729 230.84212567 178.76363374 1.00000000]
[430.23323800 1174.47228961 28.47466729 178.76363374 126.68514182 1.00000000]
[]
[]
[]
[432.82085131 1294.36904808 28.47466729 230.84212562 178.76363369 1.00000000]
[432.82085131 1294.36904808 28.47466729 178.76363369 126.68514177 1.00000000]
[]
[434.28205742 1362.07385873 26.77024824 227.94166666 172.27045347 1.00000000]
[434.28205742 1362.07385873 26.77024824 172.27045347 116.59924027 1.00000000]
[434.28205742 1362.07385873 26.77024824 116.59924027 60.92802707 1.00000000]
[434.28205742 1362.07385873 26.77024824 60.92802707 5.25681387 1.00000000]
[434.28205742 1362.07385873 26.77024824 5.25681387 309.58560068 1.00000000]
[]
[432.82085131 1294.36904808 28.47466729 50.84212557 358.76363365 1.00000000]
[432.82085131 1294.36904808 28.47466729 358.76363365 306.68514182 1.00000000]
[]
[]
[]
[430.23323800 1174.47228961 28.47466729 50.84212562 358.76363369 1.00000000]
[430.23323800 1174.47228961 28.47466729 358.76363369 306.68514186 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[421.71195337 779.63955396 28.47466729 50.84212567 358.76363374 1.00000000]
[421.71195337 779.63955396 28.47466729 358.76363374 306.68514191 1.00000000]
[]
[419.82284751 692.10804949 43.74267810 65.18126963 31.97245172 1.00000000]
[419.82284751 692.10804949 43.74267810 31.97245172 358.76363381 1.00000000]
[419.82284751 692.10804949 43.74267810 358.76363381 325.55481590 1.00000000]
[419.82284751 692.10804949 43.74267810 325.55481590 292.34599799 1.00000000]
[]
[]
[]
[416.38345459 532.74417114 47.64193249 67.21299061 36.79105426 1.00000000]
[416.38345459 532.74417114 47.64193249 36.79105426 6.36911790 1.00000000]
[416.38345459 532.74417114 47.64193249 6.36911790 335.94718155 1.00000000]
[416.38345459 532.74417114 47.64193249 335.94718155 305.52524519 1.00000000]
[416.38345459 532.74417114 47.64193249 305.52524519 275.10330884 1.00000000]
[]
[]
[]
[]
[]
[359.53355338 340.17228966 36.01426010 44.47998942 3.86177356 1.00000000]
[359.53355338 340.17228966 36.01426010 3.86177356 323.24355771 1.00000000]
[359.53355338 340.17228966 36.01426010 323.24355771 282.62534186 1.00000000]
[]
[327.49999577 231.66264712 59.30350394 56.38960093 31.03439717 1.00000000]
[327.49999577 231.66264712 59.30350394 31.03439717 5.67919342 1.00000000]
[]
[]
[]
[]
[]
[]
[552.03808024 186.04567736 28.47466729 130.59462061 78.51612869 1.00000000]
[552.03808024 186.04567736 28.47466729 78.51612869 26.43763676 1.00000000]
[]
[]
[]
[]
[701.01662850 155.77931976 34.35139098 137.88953997 95.21142246 1.00000000]
[701.01662850 155.77931976 34.35139098 95.21142246 52.53330494 1.00000000]
[701.01662850 155.77931976 34.35139098 52.53330494 9.85518742 1.00000000]
[701.01662850 155.77931976 34.35139098 9.85518742 327.17706991 1.00000000]
[701.01662850 155.77931976 34.35139098 327.17706991 284.49895239 1.00000000]
[701.01662850 155.77931976 34.35139098 284.49895239 241.82083487 1.00000000]
[701.01662850 155.77931976 34.35139098 241.82083487 199.14271735 1.00000000]
[]
[]
[]
[]
[552.03808024 186.04567736 28.47466729 310.59462057 258.51612864 1.00000000]
[552.03808024 186.04567736 28.47466729 258.51612864 206.43763681 1.00000000]
[]
[]
[]
[]
[]
[]
[327.49999577 231.66264712 59.30350394 331.35306400 287.16306471 1.00000000]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[19 172]
[20 171]
[21 170]
[22 169]
[26 38]
[27 37]
[28 36]
[39 135]
[40 134]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[52 121]
[53 120]
[54 119]
[55 118]
[59 114]
[60 113]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[78 95]
[79 94]
[80 93]
[81 92]
[83 90]
[84 89]
[137 168]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[143 162]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% Start Annotations
92 121 12 1.00 0.60 0.67 omark 52 81 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
