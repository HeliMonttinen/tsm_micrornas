%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGCCCACGUAGAGAGGCCAAUUAGAGAGGCCCUGAGACCGUGUGAAGAGAGAAGAAUGCCCAACCAGCCCUCAGUUGCUACAGUUCCCUGUUGUUUCAGCUCGACAACAACAGGCGGCUGUAGCAAUGGGGGGCUGGAUGGGCAUCUCAAUGUGCUUCUCCCACAUUGCUUCAGCCACAGUCUAAUUGUAACCACAUGAGAGACU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[132.74304199 193.08860779]
[130.36175537 217.97492981]
[143.87530518 239.00787354]
[167.50000000 247.18550110]
[191.12469482 239.00787354]
[204.63824463 217.97492981]
[202.25695801 193.08860779]
[185.00000000 175.00000000]
[206.65063477 162.50000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[235.00000000 100.00000000]
[235.00000000 125.00000000]
[235.00000000 150.00000000]
[235.00000000 175.00000000]
[235.00000000 200.00000000]
[235.00000000 225.00000000]
[235.00000000 250.00000000]
[235.00000000 275.00000000]
[218.72460938 293.97662354]
[218.72460938 318.97662354]
[235.00000000 337.95321655]
[215.90136719 354.08526611]
[208.75732422 378.04275513]
[215.90136719 402.00027466]
[235.00000000 418.13232422]
[235.00000000 443.13232422]
[235.00000000 468.13232422]
[235.00000000 493.13232422]
[235.00000000 518.13232422]
[224.02532959 540.59466553]
[235.00000000 563.05700684]
[224.02532959 585.51934814]
[235.00000000 607.98168945]
[235.00000000 632.98168945]
[235.00000000 657.98168945]
[235.00000000 682.98168945]
[235.00000000 707.98168945]
[224.02532959 730.44403076]
[235.00000000 752.90637207]
[259.46432495 758.05389404]
[256.01892090 782.81530762]
[279.18563843 773.41839600]
[298.90698242 788.78295898]
[318.62832642 804.14746094]
[338.34967041 819.51202393]
[358.07098389 834.87652588]
[377.79232788 850.24108887]
[374.03390503 874.95697021]
[380.77517700 899.03088379]
[363.07235718 916.68341064]
[345.36956787 934.33593750]
[327.66677856 951.98846436]
[309.96398926 969.64093018]
[292.26119995 987.29345703]
[274.55841064 1004.94598389]
[250.90333557 1013.03533936]
[242.74670410 1036.66723633]
[225.04391479 1054.31982422]
[207.34112549 1071.97229004]
[189.63832092 1089.62487793]
[171.93553162 1107.27734375]
[154.23274231 1124.92980957]
[136.52995300 1142.58239746]
[118.82715607 1160.23486328]
[101.12435913 1177.88732910]
[77.46929932 1185.97680664]
[69.31266785 1209.60876465]
[51.60987473 1227.26123047]
[33.90707779 1244.91369629]
[16.20428467 1262.56628418]
[-1.49850821 1280.21875000]
[-19.20130157 1297.87121582]
[-36.90409470 1315.52380371]
[-54.60688782 1333.17626953]
[-72.30968475 1350.82873535]
[-90.01247406 1368.48132324]
[-107.71527100 1386.13378906]
[-125.41806793 1403.78625488]
[-149.07313538 1411.87573242]
[-157.22975159 1435.50769043]
[-174.93255615 1453.16015625]
[-192.63534546 1470.81262207]
[-210.33813477 1488.46520996]
[-228.04093933 1506.11767578]
[-245.74372864 1523.77014160]
[-263.44653320 1541.42272949]
[-281.14932251 1559.07519531]
[-298.85211182 1576.72766113]
[-316.55490112 1594.38024902]
[-334.25769043 1612.03271484]
[-358.50817871 1618.10852051]
[-370.08798218 1640.26489258]
[-361.23156738 1663.64367676]
[-337.87817383 1672.56652832]
[-315.68887329 1661.04968262]
[-309.54418945 1636.81665039]
[-291.84140015 1619.16418457]
[-267.70248413 1625.66894531]
[-274.13858032 1601.51159668]
[-256.43579102 1583.85913086]
[-238.73300171 1566.20666504]
[-221.03021240 1548.55407715]
[-203.32742310 1530.90161133]
[-185.62461853 1513.24902344]
[-167.92182922 1495.59655762]
[-150.21903992 1477.94409180]
[-132.51625061 1460.29150391]
[-108.86118317 1452.20214844]
[-100.70455170 1428.57019043]
[-83.00175476 1410.91772461]
[-65.29896545 1393.26525879]
[-47.59616852 1375.61267090]
[-29.89337540 1357.96020508]
[-12.19058228 1340.30761719]
[5.51221132 1322.65515137]
[23.21500587 1305.00268555]
[40.91779709 1287.35009766]
[58.62059402 1269.69763184]
[76.32338715 1252.04516602]
[94.02617645 1234.39257812]
[117.68124390 1226.30322266]
[125.83787537 1202.67126465]
[143.54066467 1185.01879883]
[161.24345398 1167.36621094]
[178.94625854 1149.71374512]
[196.64904785 1132.06127930]
[214.35183716 1114.40869141]
[232.05464172 1096.75622559]
[249.75743103 1079.10375977]
[267.46023560 1061.45117188]
[291.11529541 1053.36181641]
[299.27191162 1029.72985840]
[316.97470093 1012.07739258]
[334.67749023 994.42486572]
[352.38031006 976.77233887]
[370.08309937 959.11981201]
[387.78588867 941.46734619]
[405.48867798 923.81481934]
[429.54336548 930.62457275]
[454.26980591 926.93640137]
[475.29025269 913.40344238]
[488.88296509 892.42156982]
[492.64141846 867.70574951]
[485.90014648 843.63177490]
[469.85269165 824.46203613]
[447.34027100 813.59045410]
[422.34866333 812.94195557]
[399.30267334 822.63122559]
[379.58135986 807.26666260]
[359.86001587 791.90216064]
[340.13867188 776.53759766]
[320.41732788 761.17309570]
[300.69601440 745.80853271]
[280.97467041 730.44403076]
[270.00000000 707.98168945]
[270.00000000 682.98168945]
[270.00000000 657.98168945]
[270.00000000 632.98168945]
[270.00000000 607.98168945]
[280.97467041 585.51934814]
[270.00000000 563.05700684]
[280.97467041 540.59466553]
[270.00000000 518.13232422]
[270.00000000 493.13232422]
[270.00000000 468.13232422]
[270.00000000 443.13232422]
[270.00000000 418.13232422]
[289.09863281 402.00027466]
[296.24267578 378.04275513]
[289.09863281 354.08526611]
[270.00000000 337.95321655]
[286.27539062 318.97662354]
[286.27539062 293.97662354]
[270.00000000 275.00000000]
[270.00000000 250.00000000]
[270.00000000 225.00000000]
[270.00000000 200.00000000]
[270.00000000 175.00000000]
[270.00000000 150.00000000]
[270.00000000 125.00000000]
[270.00000000 100.00000000]
[295.00000000 100.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[167.50000000 208.97147640 38.21401848 242.74528147 204.55896110 1.00000000]
[167.50000000 208.97147640 38.21401848 204.55896110 166.37264073 1.00000000]
[167.50000000 208.97147640 38.21401848 166.37264073 128.18632037 1.00000000]
[167.50000000 208.97147640 38.21401848 128.18632037 90.00000000 1.00000000]
[167.50000000 208.97147640 38.21401848 90.00000000 51.81367963 1.00000000]
[167.50000000 208.97147640 38.21401848 51.81367963 13.62735927 1.00000000]
[167.50000000 208.97147640 38.21401848 13.62735927 335.44103890 1.00000000]
[167.50000000 208.97147640 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[252.49999769 306.47660935 36.01426010 240.92732389 200.30910807 1.00000000]
[252.49999769 306.47660935 36.01426010 200.30910807 159.69089218 1.00000000]
[252.49999769 306.47660935 36.01426010 159.69089218 119.07267616 1.00000000]
[252.49999772 378.04276688 43.74267810 246.41763577 213.20881791 1.00000000]
[252.49999772 378.04276688 43.74267810 213.20881791 180.00000000 1.00000000]
[252.49999772 378.04276688 43.74267810 180.00000000 146.79118209 1.00000000]
[252.49999772 378.04276688 43.74267810 146.79118209 113.58236418 1.00000000]
[]
[]
[]
[]
[252.49999728 540.59465464 28.47466684 232.07849300 180.00000000 1.00000000]
[252.49999728 540.59465464 28.47466684 180.00000000 127.92150761 1.00000000]
[252.49999679 585.51933297 28.47466632 232.07849385 180.00000000 1.00000000]
[252.49999679 585.51933297 28.47466632 180.00000000 127.92150705 1.00000000]
[]
[]
[]
[]
[252.49999800 730.44401067 28.47466729 232.07849181 180.00000000 1.00000000]
[252.49999800 730.44401067 28.47466729 180.00000000 127.92150796 1.00000000]
[252.49999800 730.44401067 28.47466729 127.92150796 75.84301603 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[433.33765044 871.33133708 59.41448475 200.79149393 176.50149860 1.00000000]
[433.33765044 871.33133708 59.41448475 176.50149860 152.21150326 1.00000000]
[]
[]
[]
[]
[]
[]
[271.00931276 1033.19858536 28.47466729 277.15998116 225.08148924 1.00000000]
[271.00931276 1033.19858536 28.47466729 225.08148924 173.00299731 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[97.57526982 1206.13999373 28.47466729 277.15998112 225.08148919 1.00000000]
[97.57526982 1206.13999373 28.47466729 225.08148919 173.00299726 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-128.96715433 1432.03893079 28.47466729 277.15998107 225.08148914 1.00000000]
[-128.96715433 1432.03893079 28.47466729 225.08148914 173.00299722 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-339.61408406 1642.08752446 30.52836670 280.10520321 231.76396518 1.00000000]
[-339.61408406 1642.08752446 30.52836670 231.76396518 183.42272715 1.00000000]
[-339.61408406 1642.08752446 30.52836670 183.42272715 135.08148912 1.00000000]
[-339.61408406 1642.08752446 30.52836670 135.08148912 86.74025109 1.00000000]
[-339.61408406 1642.08752446 30.52836670 86.74025109 38.39901306 1.00000000]
[-339.61408406 1642.08752446 30.52836670 38.39901306 350.05777502 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-128.96715433 1432.03893079 28.47466729 97.15998102 45.08148910 1.00000000]
[-128.96715433 1432.03893079 28.47466729 45.08148910 353.00299726 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[97.57526982 1206.13999373 28.47466729 97.15998107 45.08148914 1.00000000]
[97.57526982 1206.13999373 28.47466729 45.08148914 353.00299731 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[271.00931276 1033.19858536 28.47466729 97.15998112 45.08148919 1.00000000]
[271.00931276 1033.19858536 28.47466729 45.08148919 353.00299736 1.00000000]
[]
[]
[]
[]
[]
[]
[433.33765044 871.33133708 59.41448475 117.95147526 93.66147993 1.00000000]
[433.33765044 871.33133708 59.41448475 93.66147993 69.37148459 1.00000000]
[433.33765044 871.33133708 59.41448475 69.37148459 45.08148926 1.00000000]
[433.33765044 871.33133708 59.41448475 45.08148926 20.79149393 1.00000000]
[433.33765044 871.33133708 59.41448475 20.79149393 356.50149860 1.00000000]
[433.33765044 871.33133708 59.41448475 356.50149860 332.21150326 1.00000000]
[433.33765044 871.33133708 59.41448475 332.21150326 307.92150793 1.00000000]
[433.33765044 871.33133708 59.41448475 307.92150793 283.63151260 1.00000000]
[433.33765044 871.33133708 59.41448475 283.63151260 259.34151727 1.00000000]
[433.33765044 871.33133708 59.41448475 259.34151727 235.05152193 1.00000000]
[]
[]
[]
[]
[]
[]
[252.49999800 730.44401067 28.47466729 360.00000000 307.92150800 1.00000000]
[]
[]
[]
[]
[252.49999679 585.51933297 28.47466632 52.07848969 360.00000000 1.00000000]
[252.49999679 585.51933297 28.47466632 360.00000000 307.92150888 1.00000000]
[252.49999728 540.59465464 28.47466684 52.07849063 360.00000000 1.00000000]
[252.49999728 540.59465464 28.47466684 360.00000000 307.92150841 1.00000000]
[]
[]
[]
[]
[252.49999772 378.04276688 43.74267810 66.41763582 33.20881791 1.00000000]
[252.49999772 378.04276688 43.74267810 33.20881791 360.00000000 1.00000000]
[252.49999772 378.04276688 43.74267810 360.00000000 326.79118209 1.00000000]
[252.49999772 378.04276688 43.74267810 326.79118209 293.58236413 1.00000000]
[252.49999769 306.47660935 36.01426010 60.92732360 20.30910779 1.00000000]
[252.49999769 306.47660935 36.01426010 20.30910779 339.69089197 1.00000000]
[252.49999769 306.47660935 36.01426010 339.69089197 299.07267620 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 14]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[29 179]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[39 169]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[48 162]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[65 138]
[66 137]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[75 128]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 105]
[98 104]
] def

init

% Start Annotations
107 148 12 1.00 0.60 0.67 omark 55 96 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
