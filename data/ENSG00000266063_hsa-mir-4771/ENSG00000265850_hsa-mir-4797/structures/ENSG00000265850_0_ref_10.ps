%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGUUGUCAAGACCCCUGYUCUCCUUUAAUCCAAUGGUCCACAGGUACCAACUCAGAAGACAGAGUGCCACUUACUGAAAGAAAAAAACAUUAAUCCAGGAUUUUUCUGCAAAUACUAUGGACACAAUGAACUGGUUUAGCUUAGGGC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[137.17903137 196.46212769]
[144.69174194 220.30661011]
[167.50000000 230.54298401]
[190.30825806 220.30661011]
[197.82096863 196.46212769]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[760.00000000 125.00000000]
[760.00000000 150.00000000]
[760.00000000 175.00000000]
[743.72460938 193.97660828]
[743.72460938 218.97660828]
[760.00000000 237.95321655]
[760.00000000 262.95321655]
[749.02532959 285.41555786]
[760.00000000 307.87789917]
[760.00000000 332.87789917]
[749.02532959 355.34024048]
[760.00000000 377.80258179]
[784.46429443 382.95010376]
[804.18566895 398.31463623]
[823.90698242 413.67916870]
[820.46160889 438.44061279]
[843.62835693 429.04370117]
[863.34967041 444.40823364]
[883.07098389 459.77276611]
[884.05914307 484.75323486]
[898.56750488 505.11270142]
[921.85705566 514.20092773]
[946.32055664 509.04934692]
[963.96716309 491.34069824]
[988.88262939 493.39468384]
[1006.45794678 511.17413330]
[1031.37341309 513.22814941]
[1051.62304688 498.56686401]
[1076.53857422 500.62084961]
[1101.45397949 502.67483521]
[1126.36950684 504.72882080]
[1151.28491211 506.78277588]
[1176.20043945 508.83676147]
[1182.02062988 533.14984131]
[1193.98156738 555.10284424]
[1211.25512695 573.17565918]
[1232.64501953 586.11682129]
[1256.67004395 593.03021240]
[1281.66674805 593.43701172]
[1305.90417480 587.30914307]
[1327.70385742 575.07092285]
[1345.55627441 557.56982422]
[1358.22534180 536.01763916]
[1382.65393066 541.33197021]
[1407.08251953 546.64630127]
[1431.51123047 551.96063232]
[1455.93981934 557.27496338]
[1480.36840820 562.58935547]
[1504.79711914 567.90368652]
[1519.88024902 587.84100342]
[1544.30883789 593.15533447]
[1566.31152344 581.28582764]
[1577.21069336 603.78485107]
[1598.26635742 617.26306152]
[1623.26171875 617.74096680]
[1644.81726074 605.07751465]
[1656.56848145 583.01153564]
[1655.04614258 558.05792236]
[1640.69946289 537.58410645]
[1617.76452637 527.63500977]
[1593.01257324 531.14794922]
[1573.75158691 547.08575439]
[1558.66833496 527.14843750]
[1534.23974609 521.83410645]
[1512.23718262 533.70355225]
[1487.80847168 528.38922119]
[1463.37988281 523.07489014]
[1438.95129395 517.76055908]
[1414.52258301 512.44622803]
[1390.09399414 507.13189697]
[1365.66540527 501.81756592]
[1363.09472656 476.95010376]
[1354.12609863 453.61416626]
[1339.38073730 433.42575073]
[1319.87951660 417.78277588]
[1296.97290039 407.76846313]
[1272.24707031 404.07626343]
[1247.41418457 406.96185303]
[1224.19372559 416.22543335]
[1204.19384766 431.22552490]
[1188.79919434 450.92340088]
[1179.07604980 473.95510864]
[1154.16052246 471.90112305]
[1129.24511719 469.84713745]
[1118.56616211 447.24270630]
[1104.32958984 467.79315186]
[1079.41406250 465.73916626]
[1054.49865723 463.68518066]
[1036.92333984 445.90573120]
[1012.00787354 443.85174561]
[991.75823975 458.51300049]
[966.84277344 456.45901489]
[952.33441162 436.09957886]
[929.04479980 427.01135254]
[904.58135986 432.16290283]
[884.85998535 416.79837036]
[865.13867188 401.43383789]
[845.41735840 386.06930542]
[825.69598389 370.70477295]
[805.97467041 355.34024048]
[795.00000000 332.87789917]
[795.00000000 307.87789917]
[805.97467041 285.41555786]
[795.00000000 262.95321655]
[795.00000000 237.95321655]
[811.27539062 218.97660828]
[811.27539062 193.97660828]
[795.00000000 175.00000000]
[795.00000000 150.00000000]
[795.00000000 125.00000000]
[795.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[167.50000000 200.01461919 30.52836670 235.02371410 186.68247606 1.00000000]
[167.50000000 200.01461919 30.52836670 186.68247606 138.34123803 1.00000000]
[167.50000000 200.01461919 30.52836670 138.34123803 90.00000000 1.00000000]
[167.50000000 200.01461919 30.52836670 90.00000000 41.65876197 1.00000000]
[167.50000000 200.01461919 30.52836670 41.65876197 353.31752394 1.00000000]
[167.50000000 200.01461919 30.52836670 353.31752394 304.97628590 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[777.49999981 206.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[777.49999981 206.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[777.49999981 206.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[777.49999957 285.41555773 28.47466706 232.07849242 180.00000000 1.00000000]
[777.49999957 285.41555773 28.47466706 180.00000000 127.92150782 1.00000000]
[]
[777.49999928 355.34023608 28.47466670 232.07849314 180.00000000 1.00000000]
[777.49999928 355.34023608 28.47466670 180.00000000 127.92150743 1.00000000]
[777.49999928 355.34023608 28.47466670 127.92150743 75.84301479 1.00000000]
[]
[]
[]
[]
[]
[]
[925.45095066 470.60613119 43.74267810 194.33914380 161.13032589 1.00000000]
[925.45095066 470.60613119 43.74267810 161.13032589 127.92150798 1.00000000]
[925.45095066 470.60613119 43.74267810 127.92150798 94.71269007 1.00000000]
[925.45095066 470.60613119 43.74267810 94.71269007 61.50387216 1.00000000]
[925.45095066 470.60613119 43.74267810 61.50387216 28.29505425 1.00000000]
[]
[1021.69063880 478.53993383 36.01426010 155.64001385 115.02179800 1.00000000]
[1021.69063880 478.53993383 36.01426010 115.02179800 74.40358214 1.00000000]
[1021.69063880 478.53993383 36.01426010 74.40358214 33.78536629 1.00000000]
[]
[]
[]
[]
[]
[1270.70101506 499.06783888 95.00415417 174.09805176 158.97703049 1.00000000]
[1270.70101506 499.06783888 95.00415417 158.97703049 143.85600921 1.00000000]
[1270.70101506 499.06783888 95.00415417 143.85600921 128.73498794 1.00000000]
[1270.70101506 499.06783888 95.00415417 128.73498794 113.61396666 1.00000000]
[1270.70101506 499.06783888 95.00415417 113.61396666 98.49294539 1.00000000]
[1270.70101506 499.06783888 95.00415417 98.49294539 83.37192411 1.00000000]
[1270.70101506 499.06783888 95.00415417 83.37192411 68.25090284 1.00000000]
[1270.70101506 499.06783888 95.00415417 68.25090284 53.12988156 1.00000000]
[1270.70101506 499.06783888 95.00415417 53.12988156 38.00886029 1.00000000]
[1270.70101506 499.06783888 95.00415417 38.00886029 22.88783902 1.00000000]
[]
[]
[]
[]
[]
[]
[1539.27431506 557.49470839 36.01426010 163.20052459 122.58230877 1.00000000]
[1539.27431506 557.49470839 36.01426010 122.58230877 81.96409289 1.00000000]
[1539.27431506 557.49470839 36.01426010 81.96409289 41.34587687 1.00000000]
[1611.61049243 573.23110656 46.00953986 169.91747092 138.38861692 1.00000000]
[1611.61049243 573.23110656 46.00953986 138.38861692 106.85976286 1.00000000]
[1611.61049243 573.23110656 46.00953986 106.85976286 75.33090881 1.00000000]
[1611.61049243 573.23110656 46.00953986 75.33090881 43.80205476 1.00000000]
[1611.61049243 573.23110656 46.00953986 43.80205476 12.27320071 1.00000000]
[1611.61049243 573.23110656 46.00953986 12.27320071 340.74434666 1.00000000]
[1611.61049243 573.23110656 46.00953986 340.74434666 309.21549260 1.00000000]
[1611.61049243 573.23110656 46.00953986 309.21549260 277.68663855 1.00000000]
[1611.61049243 573.23110656 46.00953986 277.68663855 246.15778450 1.00000000]
[1611.61049243 573.23110656 46.00953986 246.15778450 214.62893040 1.00000000]
[1539.27431506 557.49470839 36.01426010 343.20052430 302.58230849 1.00000000]
[1539.27431506 557.49470839 36.01426010 302.58230849 261.96409267 1.00000000]
[1539.27431506 557.49470839 36.01426010 261.96409267 221.34587691 1.00000000]
[]
[]
[]
[]
[]
[]
[1270.70101506 499.06783888 95.00415417 1.65856240 346.53754112 1.00000000]
[1270.70101506 499.06783888 95.00415417 346.53754112 331.41651985 1.00000000]
[1270.70101506 499.06783888 95.00415417 331.41651985 316.29549858 1.00000000]
[1270.70101506 499.06783888 95.00415417 316.29549858 301.17447730 1.00000000]
[1270.70101506 499.06783888 95.00415417 301.17447730 286.05345603 1.00000000]
[1270.70101506 499.06783888 95.00415417 286.05345603 270.93243475 1.00000000]
[1270.70101506 499.06783888 95.00415417 270.93243475 255.81141348 1.00000000]
[1270.70101506 499.06783888 95.00415417 255.81141348 240.69039220 1.00000000]
[1270.70101506 499.06783888 95.00415417 240.69039220 225.56937093 1.00000000]
[1270.70101506 499.06783888 95.00415417 225.56937093 210.44834965 1.00000000]
[1270.70101506 499.06783888 95.00415417 210.44834965 195.32732838 1.00000000]
[]
[]
[]
[]
[]
[]
[1021.69063880 478.53993383 36.01426010 335.64001385 295.02179800 1.00000000]
[1021.69063880 478.53993383 36.01426010 295.02179800 254.40358214 1.00000000]
[1021.69063880 478.53993383 36.01426010 254.40358214 213.78536629 1.00000000]
[]
[925.45095066 470.60613119 43.74267810 341.13032589 307.92150798 1.00000000]
[925.45095066 470.60613119 43.74267810 307.92150798 274.71269007 1.00000000]
[925.45095066 470.60613119 43.74267810 274.71269007 241.50387216 1.00000000]
[]
[]
[]
[]
[]
[777.49999928 355.34023608 28.47466670 360.00000000 307.92150863 1.00000000]
[]
[777.49999957 285.41555773 28.47466706 52.07849134 360.00000000 1.00000000]
[777.49999957 285.41555773 28.47466706 360.00000000 307.92150833 1.00000000]
[]
[777.49999981 206.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[777.49999981 206.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[777.49999981 206.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[6 12]
[38 149]
[39 148]
[40 147]
[41 146]
[44 143]
[45 142]
[47 140]
[48 139]
[51 138]
[52 137]
[53 136]
[55 135]
[56 134]
[57 133]
[62 130]
[63 129]
[66 126]
[67 125]
[68 124]
[69 122]
[70 121]
[71 120]
[81 109]
[82 108]
[83 107]
[84 106]
[85 105]
[86 104]
[87 103]
[90 100]
] def

init

% Start Annotations
92 101 12 1.00 0.60 0.67 omark 49 82 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
