%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUUUCUUCURUCAGGCAGGUAGAAUGCAAGCAGAUCUCCUCAGUUCUGCUCUAGGCUAAUUUUAGGUCUGGUCUGUUUCAGUUUUACCUUUACUCCUAGGGCUUGGUCMUGCUAUURUUUCACCUGAAUGGCUGGGAUGCUK\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[139.02532959 147.46234131]
[150.00000000 169.92468262]
[150.00000000 194.92468262]
[150.00000000 219.92468262]
[150.00000000 244.92468262]
[130.90136719 261.05670166]
[123.75732422 285.01422119]
[130.90136719 308.97174072]
[150.00000000 325.10375977]
[174.81481934 328.14096069]
[188.50712585 349.05795288]
[202.19941711 369.97497559]
[198.97546387 394.76620483]
[212.66777039 415.68322754]
[236.67840576 422.64666748]
[250.37069702 443.56365967]
[264.06298828 464.48065186]
[277.75531006 485.39767456]
[291.44760132 506.31466675]
[280.17910767 528.63104248]
[305.13989258 527.23168945]
[318.83218384 548.14868164]
[332.52450562 569.06567383]
[321.80737305 591.65203857]
[322.09411621 616.65039062]
[333.32647705 638.98492432]
[353.22384644 654.12084961]
[377.74612427 658.98480225]
[386.37371826 682.44891357]
[395.00134277 705.91302490]
[403.62893677 729.37713623]
[412.25656128 752.84118652]
[420.88415527 776.30529785]
[429.51174927 799.76940918]
[438.13937378 823.23352051]
[420.31134033 840.75958252]
[409.63491821 863.36517334]
[407.42456055 888.26727295]
[413.95233154 912.40002441]
[428.41464233 932.79223633]
[449.03088379 946.93328857]
[473.26287842 953.08227539]
[498.12728882 950.48211670]
[520.56292725 939.45288086]
[537.80755615 921.35253906]
[547.73809814 898.40948486]
[549.13189697 873.44836426]
[572.45159912 864.43774414]
[595.77130127 855.42712402]
[619.09106445 846.41650391]
[642.41076660 837.40582275]
[665.73046875 828.39520264]
[689.05017090 819.38458252]
[712.36987305 810.37396240]
[730.18542480 827.91265869]
[752.96282959 838.21746826]
[777.89776611 840.01983643]
[801.92034912 833.09777832]
[822.07305908 818.30358887]
[835.87469482 797.45855713]
[841.62609863 773.12915039]
[838.61914062 748.31060791]
[827.22412109 726.05859375]
[842.80780029 706.50994873]
[858.39147949 686.96130371]
[873.97515869 667.41271973]
[898.53057861 662.71923828]
[920.22528076 675.14257812]
[941.91998291 687.56597900]
[963.61468506 699.98931885]
[973.04791260 723.14135742]
[995.67718506 733.76751709]
[1019.51690674 726.23968506]
[1031.94030762 704.54498291]
[1026.36718750 680.17407227]
[1005.74951172 666.03509521]
[981.00744629 669.61676025]
[959.31274414 657.19335938]
[937.61804199 644.77001953]
[915.92333984 632.34667969]
[907.54345703 608.79296875]
[885.84875488 596.36956787]
[861.29327393 601.06304932]
[845.70959473 620.61163330]
[846.60705566 645.59552002]
[831.02337646 665.14416504]
[815.43969727 684.69281006]
[799.85601807 704.24145508]
[775.62402344 698.09246826]
[750.75958252 700.69262695]
[728.32397461 711.72186279]
[711.07934570 729.82220459]
[701.14880371 752.76525879]
[699.75494385 777.72637939]
[676.43524170 786.73699951]
[653.11553955 795.74761963]
[629.79583740 804.75823975]
[606.47613525 813.76892090]
[583.15643311 822.77954102]
[559.83673096 831.79016113]
[536.51702881 840.80078125]
[518.70147705 823.26214600]
[495.92407227 812.95727539]
[470.98910522 811.15490723]
[462.36151123 787.69079590]
[453.73391724 764.22668457]
[445.10629272 740.76257324]
[461.11300659 721.55877686]
[436.47869873 717.29846191]
[427.85110474 693.83435059]
[419.22348022 670.37023926]
[410.59588623 646.90612793]
[426.12622070 627.31512451]
[431.47903442 602.89489746]
[425.56747437 578.60388184]
[409.59185791 559.37420654]
[386.79592896 549.11041260]
[361.80828857 549.89642334]
[348.11599731 528.97943115]
[334.42370605 508.06243896]
[320.73138428 487.14544678]
[307.03909302 466.22845459]
[293.34680176 445.31143188]
[279.65451050 424.39443970]
[265.96218872 403.47744751]
[269.18615723 378.68618774]
[255.49385071 357.76919556]
[231.48323059 350.80575562]
[217.79092407 329.88873291]
[204.09863281 308.97174072]
[211.24267578 285.01422119]
[204.09863281 261.05670166]
[185.00000000 244.92468262]
[185.00000000 219.92468262]
[185.00000000 194.92468262]
[185.00000000 169.92468262]
[195.97467041 147.46234131]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[167.49999988 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[167.49999988 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[167.50000011 285.01422653 43.74267810 246.41763577 213.20881786 1.00000000]
[167.50000011 285.01422653 43.74267810 213.20881786 180.00000000 1.00000000]
[167.50000011 285.01422653 43.74267810 180.00000000 146.79118204 1.00000000]
[167.50000011 285.01422653 43.74267810 146.79118204 113.58236413 1.00000000]
[167.50000011 285.01422653 43.74267810 113.58236413 80.37354623 1.00000000]
[]
[]
[234.08081175 386.72620321 36.01426010 207.71850582 167.10028997 1.00000000]
[234.08081175 386.72620321 36.01426010 167.10028997 126.48207412 1.00000000]
[234.08081175 386.72620321 36.01426010 126.48207412 85.86385826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[376.00169662 603.53121622 55.48099457 218.40481038 192.36349099 1.00000000]
[376.00169662 603.53121622 55.48099457 192.36349099 166.32217159 1.00000000]
[376.00169662 603.53121622 55.48099457 166.32217159 140.28085219 1.00000000]
[376.00169662 603.53121622 55.48099457 140.28085219 114.23953280 1.00000000]
[376.00169662 603.53121622 55.48099457 114.23953280 88.19821340 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[478.39956977 882.01808411 71.24960467 235.59363700 215.38515827 1.00000000]
[478.39956977 882.01808411 71.24960467 215.38515827 195.17667953 1.00000000]
[478.39956977 882.01808411 71.24960467 195.17667953 174.96820079 1.00000000]
[478.39956977 882.01808411 71.24960467 174.96820079 154.75972206 1.00000000]
[478.39956977 882.01808411 71.24960467 154.75972206 134.55124332 1.00000000]
[478.39956977 882.01808411 71.24960467 134.55124332 114.34276458 1.00000000]
[478.39956977 882.01808411 71.24960467 114.34276458 94.13428585 1.00000000]
[478.39956977 882.01808411 71.24960467 94.13428585 73.92580711 1.00000000]
[478.39956977 882.01808411 71.24960467 73.92580711 53.71732837 1.00000000]
[478.39956977 882.01808411 71.24960467 53.71732837 33.50884964 1.00000000]
[478.39956977 882.01808411 71.24960467 33.50884964 13.30037090 1.00000000]
[478.39956977 882.01808411 71.24960467 13.30037090 353.09189216 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[770.48731882 769.15666343 71.24960467 144.65548269 124.44700395 1.00000000]
[770.48731882 769.15666343 71.24960467 124.44700395 104.23852522 1.00000000]
[770.48731882 769.15666343 71.24960467 104.23852522 84.03004648 1.00000000]
[770.48731882 769.15666343 71.24960467 84.03004648 63.82156774 1.00000000]
[770.48731882 769.15666343 71.24960467 63.82156774 43.61308901 1.00000000]
[770.48731882 769.15666343 71.24960467 43.61308901 23.40461027 1.00000000]
[770.48731882 769.15666343 71.24960467 23.40461027 3.19613153 1.00000000]
[770.48731882 769.15666343 71.24960467 3.19613153 342.98765280 1.00000000]
[770.48731882 769.15666343 71.24960467 342.98765280 322.77917406 1.00000000]
[]
[]
[]
[879.91193883 631.89113347 36.01426010 99.48829310 58.87007725 1.00000000]
[]
[]
[]
[997.96250044 699.49221657 34.35139098 179.17081234 136.49269482 1.00000000]
[997.96250044 699.49221657 34.35139098 136.49269482 93.81457730 1.00000000]
[997.96250044 699.49221657 34.35139098 93.81457730 51.13645979 1.00000000]
[997.96250044 699.49221657 34.35139098 51.13645979 8.45834227 1.00000000]
[997.96250044 699.49221657 34.35139098 8.45834227 325.78022475 1.00000000]
[997.96250044 699.49221657 34.35139098 325.78022475 283.10210724 1.00000000]
[997.96250044 699.49221657 34.35139098 283.10210724 240.42398972 1.00000000]
[]
[]
[]
[879.91193883 631.89113347 36.01426010 0.72472481 320.10650896 1.00000000]
[879.91193883 631.89113347 36.01426010 320.10650896 279.48829310 1.00000000]
[879.91193883 631.89113347 36.01426010 279.48829310 238.87007725 1.00000000]
[879.91193883 631.89113347 36.01426010 238.87007725 198.25186139 1.00000000]
[879.91193883 631.89113347 36.01426010 198.25186139 157.63364554 1.00000000]
[]
[]
[]
[770.48731882 769.15666343 71.24960467 294.34276458 274.13428585 1.00000000]
[770.48731882 769.15666343 71.24960467 274.13428585 253.92580711 1.00000000]
[770.48731882 769.15666343 71.24960467 253.92580711 233.71732837 1.00000000]
[770.48731882 769.15666343 71.24960467 233.71732837 213.50884964 1.00000000]
[770.48731882 769.15666343 71.24960467 213.50884964 193.30037090 1.00000000]
[770.48731882 769.15666343 71.24960467 193.30037090 173.09189216 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[478.39956977 882.01808411 71.24960467 324.65548269 304.44700395 1.00000000]
[478.39956977 882.01808411 71.24960467 304.44700395 284.23852522 1.00000000]
[478.39956977 882.01808411 71.24960467 284.23852522 264.03004648 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[376.00169662 603.53121622 55.48099457 51.42547008 25.38415068 1.00000000]
[376.00169662 603.53121622 55.48099457 25.38415068 359.34283129 1.00000000]
[376.00169662 603.53121622 55.48099457 359.34283129 333.30151189 1.00000000]
[376.00169662 603.53121622 55.48099457 333.30151189 307.26019250 1.00000000]
[376.00169662 603.53121622 55.48099457 307.26019250 281.21887310 1.00000000]
[376.00169662 603.53121622 55.48099457 281.21887310 255.17755370 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[234.08081175 386.72620321 36.01426010 27.71850582 347.10028997 1.00000000]
[234.08081175 386.72620321 36.01426010 347.10028997 306.48207412 1.00000000]
[234.08081175 386.72620321 36.01426010 306.48207412 265.86385826 1.00000000]
[]
[]
[167.50000011 285.01422653 43.74267810 33.20881786 360.00000000 1.00000000]
[167.50000011 285.01422653 43.74267810 360.00000000 326.79118204 1.00000000]
[167.50000011 285.01422653 43.74267810 326.79118204 293.58236413 1.00000000]
[]
[]
[]
[167.49999988 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[167.49999988 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
] def
/pairs [
[3 143]
[4 142]
[6 140]
[7 139]
[8 138]
[9 137]
[14 134]
[15 133]
[16 132]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[25 124]
[26 123]
[27 122]
[32 116]
[33 115]
[34 114]
[35 113]
[36 111]
[37 110]
[38 109]
[39 108]
[51 105]
[52 104]
[53 103]
[54 102]
[55 101]
[56 100]
[57 99]
[58 98]
[67 92]
[68 91]
[69 90]
[70 89]
[71 84]
[72 83]
[73 82]
[74 81]
] def

init

% Start Annotations
82 97 12 1.00 0.60 0.67 omark 49 90 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
