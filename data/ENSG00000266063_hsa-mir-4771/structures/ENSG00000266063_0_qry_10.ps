%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUUUCUUCUGUCAGGUGGGUAGAAAGCACGCAGAUCACCUCAGUUCUGCUCUAGGCUAAUUGUAGGUCUGGUCUGCUUGRAGUGAAACUGAAGCAGACCAGAUCUAAAAUUAGGCUARAGCARGCUUAGGGCUUGGCCAUGCUAUUAAUUCACCUGAGRAGCUGGGAUGCUG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[139.02532959 147.46234131]
[150.00000000 169.92468262]
[150.00000000 194.92468262]
[150.00000000 219.92468262]
[150.00000000 244.92468262]
[135.92854309 265.58850098]
[140.87762451 290.09375000]
[131.17533875 313.13427734]
[110.18733215 326.71746826]
[105.23824310 351.22271729]
[87.35457611 368.69195557]
[69.47091675 386.16119385]
[51.58725357 403.63043213]
[33.70359039 421.09970093]
[15.81992531 438.56893921]
[-2.06373811 456.03817749]
[-19.94740105 473.50744629]
[-37.83106613 490.97668457]
[-55.71472931 508.44592285]
[-79.45185089 516.29125977]
[-87.85144043 539.83795166]
[-105.73510742 557.30718994]
[-129.47222900 565.15252686]
[-137.87181091 588.69921875]
[-155.75547791 606.16845703]
[-173.63914490 623.63769531]
[-191.52281189 641.10693359]
[-216.13731384 645.48022461]
[-230.20878601 666.14404297]
[-253.47039795 675.30358887]
[-272.31143188 658.87139893]
[-296.04229736 651.00720215]
[-320.96780396 652.93548584]
[-343.20678711 664.35607910]
[-359.29626465 683.49053955]
[-366.73098755 707.35943604]
[-364.35324097 732.24609375]
[-385.35040283 745.81512451]
[-406.34756470 759.38421631]
[-431.17001343 762.35839844]
[-444.07922363 783.76757812]
[-465.07638550 797.33660889]
[-486.07354736 810.90563965]
[-511.06628418 810.30279541]
[-528.96173096 827.75994873]
[-528.97857666 852.75994873]
[-543.06396484 873.41430664]
[-557.14941406 894.06860352]
[-571.23480225 914.72296143]
[-592.95739746 927.09741211]
[-596.54608154 951.83850098]
[-610.63146973 972.49285889]
[-624.71685791 993.14721680]
[-646.43945312 1005.52166748]
[-650.02813721 1030.26281738]
[-664.11352539 1050.91711426]
[-678.19891357 1071.57141113]
[-692.28436279 1092.22583008]
[-706.36975098 1112.88012695]
[-720.45513916 1133.53442383]
[-742.17773438 1145.90893555]
[-745.76641846 1170.65002441]
[-759.85180664 1191.30432129]
[-773.93719482 1211.95874023]
[-788.02258301 1232.61303711]
[-802.10797119 1253.26733398]
[-816.19342041 1273.92175293]
[-830.27880859 1294.57604980]
[-844.36419678 1315.23034668]
[-858.44958496 1335.88464355]
[-872.53497314 1356.53906250]
[-886.62036133 1377.19335938]
[-900.70581055 1397.84765625]
[-914.79119873 1418.50207520]
[-928.87658691 1439.15637207]
[-942.96197510 1459.81066895]
[-957.04736328 1480.46508789]
[-980.31518555 1489.60888672]
[-990.03302002 1512.64282227]
[-980.34625244 1535.68994141]
[-985.31188965 1560.19177246]
[-990.27752686 1584.69372559]
[-998.65820312 1608.24707031]
[-980.72528076 1625.66577148]
[-957.42559814 1616.60339355]
[-955.97485352 1591.64550781]
[-951.00921631 1567.14367676]
[-946.04364014 1542.64172363]
[-928.14819336 1525.18457031]
[-928.13128662 1500.18457031]
[-914.04589844 1479.53027344]
[-899.96051025 1458.87597656]
[-885.87512207 1438.22155762]
[-871.78973389 1417.56726074]
[-857.70434570 1396.91296387]
[-843.61889648 1376.25854492]
[-829.53350830 1355.60424805]
[-815.44812012 1334.94995117]
[-801.36273193 1314.29553223]
[-787.27734375 1293.64123535]
[-773.19195557 1272.98693848]
[-759.10650635 1252.33251953]
[-745.02111816 1231.67822266]
[-730.93572998 1211.02392578]
[-716.85034180 1190.36962891]
[-695.12774658 1177.99511719]
[-691.53906250 1153.25402832]
[-677.45367432 1132.59960938]
[-663.36828613 1111.94531250]
[-649.28283691 1091.29101562]
[-635.19744873 1070.63671875]
[-621.11206055 1049.98229980]
[-599.38946533 1037.60778809]
[-595.80078125 1012.86676025]
[-581.71539307 992.21240234]
[-567.63000488 971.55810547]
[-545.90734863 959.18359375]
[-542.31872559 934.44250488]
[-528.23333740 913.78814697]
[-514.14794922 893.13385010]
[-500.06253052 872.47949219]
[-476.79470825 863.33569336]
[-467.07690430 840.30169678]
[-446.07971191 826.73266602]
[-425.08255005 813.16363525]
[-400.26010132 810.18939209]
[-387.35092163 788.78021240]
[-366.35372925 775.21118164]
[-345.35656738 761.64215088]
[-323.64379883 774.03393555]
[-298.82778931 777.06140137]
[-274.77270508 770.25311279]
[-255.22419739 754.66931152]
[-243.22624207 732.73645020]
[-240.64707947 707.86987305]
[-217.38545227 698.71032715]
[-193.00296021 704.23248291]
[-172.01495361 690.64929199]
[-167.06585693 666.14404297]
[-149.18220520 648.67480469]
[-131.29853821 631.20556641]
[-113.41487122 613.73632812]
[-89.67774963 605.89099121]
[-81.27816010 582.34429932]
[-63.39449692 564.87506104]
[-39.65737152 557.02972412]
[-31.25778198 533.48303223]
[-13.37411976 516.01379395]
[4.50954390 498.54455566]
[22.39320755 481.07531738]
[40.27687073 463.60607910]
[58.16053391 446.13681030]
[76.04419708 428.66757202]
[93.92786407 411.19833374]
[111.81152344 393.72909546]
[129.69519043 376.25982666]
[154.30970764 371.88653564]
[168.38116455 351.22271729]
[163.43206787 326.71746826]
[173.13435364 303.67694092]
[194.12237549 290.09375000]
[199.07145691 265.58850098]
[185.00000000 244.92468262]
[185.00000000 219.92468262]
[185.00000000 194.92468262]
[185.00000000 169.92468262]
[195.97467041 147.46234131]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[167.50000016 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[167.50000016 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[167.50000016 271.96470110 32.20889344 237.08950836 191.41790199 1.00000000]
[167.50000016 271.96470110 32.20889344 191.41790199 145.74629533 1.00000000]
[]
[136.80970169 344.84651720 32.20889362 259.92531096 214.25370467 1.00000000]
[136.80970169 344.84651720 32.20889362 214.25370467 168.58209838 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-59.55461194 536.66049731 28.47466729 277.75009815 225.67160622 1.00000000]
[-59.55461194 536.66049731 28.47466729 225.67160622 173.59311429 1.00000000]
[]
[-109.57498821 585.52175574 28.47466729 277.75009810 225.67160617 1.00000000]
[-109.57498821 585.52175574 28.47466729 225.67160617 173.59311425 1.00000000]
[]
[]
[]
[-198.63732130 672.52025525 32.20889362 282.76111401 237.08950772 1.00000000]
[-198.63732130 672.52025525 32.20889362 237.08950772 191.41790143 1.00000000]
[]
[-303.71445645 713.89554370 63.35458712 322.47249352 299.71400607 1.00000000]
[-303.71445645 713.89554370 63.35458712 299.71400607 276.95551861 1.00000000]
[-303.71445645 713.89554370 63.35458712 276.95551861 254.19703116 1.00000000]
[-303.71445645 713.89554370 63.35458712 254.19703116 231.43854370 1.00000000]
[-303.71445645 713.89554370 63.35458712 231.43854370 208.68005625 1.00000000]
[-303.71445645 713.89554370 63.35458712 208.68005625 185.92156879 1.00000000]
[-303.71445645 713.89554370 63.35458712 185.92156879 163.16308134 1.00000000]
[]
[]
[-415.71505806 786.27390718 28.47466729 289.20665747 237.12816554 1.00000000]
[-415.71505806 786.27390718 28.47466729 237.12816554 185.04967362 1.00000000]
[]
[]
[-499.28577604 840.27997257 32.20889362 294.21767338 248.54606709 1.00000000]
[-499.28577604 840.27997257 32.20889362 248.54606709 202.87446080 1.00000000]
[-499.28577604 840.27997257 32.20889362 202.87446080 157.20285451 1.00000000]
[]
[]
[]
[-569.43238921 943.14051289 28.47466729 266.37085428 214.29236235 1.00000000]
[-569.43238921 943.14051289 28.47466729 214.29236235 162.21387042 1.00000000]
[]
[]
[-622.91446437 1021.56475763 28.47466729 266.37085423 214.29236230 1.00000000]
[-622.91446437 1021.56475763 28.47466729 214.29236230 162.21387038 1.00000000]
[]
[]
[]
[]
[]
[-718.65273363 1161.95200795 28.47466729 266.37085418 214.29236225 1.00000000]
[-718.65273363 1161.95200795 28.47466729 214.29236225 162.21387033 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-957.82412301 1512.66457071 32.20889362 271.38187009 225.71026380 1.00000000]
[-957.82412301 1512.66457071 32.20889362 225.71026380 180.03865751 1.00000000]
[-957.82412301 1512.66457071 32.20889362 180.03865751 134.36705122 1.00000000]
[]
[]
[-976.13075383 1602.99504210 23.13159456 232.29635614 166.87645761 1.00000000]
[-976.13075383 1602.99504210 23.13159456 166.87645761 101.45655909 1.00000000]
[-976.13075383 1602.99504210 23.13159456 101.45655909 36.03666056 1.00000000]
[-976.13075383 1602.99504210 23.13159456 36.03666056 330.61676203 1.00000000]
[]
[]
[-957.82412301 1512.66457071 32.20889362 68.54606695 22.87446066 1.00000000]
[-957.82412301 1512.66457071 32.20889362 22.87446066 337.20285437 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-718.65273363 1161.95200795 28.47466729 86.37085413 34.29236221 1.00000000]
[-718.65273363 1161.95200795 28.47466729 34.29236221 342.21387038 1.00000000]
[]
[]
[]
[]
[]
[-622.91446437 1021.56475763 28.47466729 86.37085418 34.29236225 1.00000000]
[-622.91446437 1021.56475763 28.47466729 34.29236225 342.21387042 1.00000000]
[]
[]
[-569.43238921 943.14051289 28.47466729 86.37085423 34.29236230 1.00000000]
[-569.43238921 943.14051289 28.47466729 34.29236230 342.21387047 1.00000000]
[]
[]
[]
[-499.28577604 840.27997257 32.20889362 91.38187024 45.71026395 1.00000000]
[-499.28577604 840.27997257 32.20889362 45.71026395 0.03865766 1.00000000]
[]
[]
[-415.71505806 786.27390718 28.47466729 109.20665742 57.12816549 1.00000000]
[-415.71505806 786.27390718 28.47466729 57.12816549 5.04967366 1.00000000]
[]
[]
[-303.71445645 713.89554370 63.35458712 131.09324979 108.33476234 1.00000000]
[-303.71445645 713.89554370 63.35458712 108.33476234 85.57627488 1.00000000]
[-303.71445645 713.89554370 63.35458712 85.57627488 62.81778743 1.00000000]
[-303.71445645 713.89554370 63.35458712 62.81778743 40.05929997 1.00000000]
[-303.71445645 713.89554370 63.35458712 40.05929997 17.30081252 1.00000000]
[-303.71445645 713.89554370 63.35458712 17.30081252 354.54232507 1.00000000]
[]
[-198.63732130 672.52025525 32.20889362 125.59691715 79.92531087 1.00000000]
[-198.63732130 672.52025525 32.20889362 79.92531087 34.25370458 1.00000000]
[-198.63732130 672.52025525 32.20889362 34.25370458 348.58209829 1.00000000]
[]
[]
[]
[-109.57498821 585.52175574 28.47466729 97.75009805 45.67160612 1.00000000]
[-109.57498821 585.52175574 28.47466729 45.67160612 353.59311429 1.00000000]
[]
[-59.55461194 536.66049731 28.47466729 97.75009810 45.67160617 1.00000000]
[-59.55461194 536.66049731 28.47466729 45.67160617 353.59311434 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[136.80970169 344.84651720 32.20889362 102.76111410 57.08950781 1.00000000]
[136.80970169 344.84651720 32.20889362 57.08950781 11.41790153 1.00000000]
[136.80970169 344.84651720 32.20889362 11.41790153 325.74629524 1.00000000]
[]
[167.50000016 271.96470110 32.20889344 79.92531050 34.25370412 1.00000000]
[167.50000016 271.96470110 32.20889344 34.25370412 348.58209808 1.00000000]
[167.50000016 271.96470110 32.20889344 348.58209808 302.91049221 1.00000000]
[]
[]
[]
[167.50000016 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[167.50000016 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[6 170]
[7 169]
[8 168]
[9 167]
[11 164]
[12 163]
[14 160]
[15 159]
[16 158]
[17 157]
[18 156]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[25 149]
[26 148]
[28 146]
[29 145]
[30 144]
[31 143]
[33 140]
[34 139]
[41 133]
[42 132]
[43 131]
[45 129]
[46 128]
[47 127]
[50 125]
[51 124]
[52 123]
[53 122]
[55 120]
[56 119]
[57 118]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[84 92]
[85 91]
[86 90]
] def

init

% Start Annotations
85 126 12 1.00 0.60 0.67 omark 49 110 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
