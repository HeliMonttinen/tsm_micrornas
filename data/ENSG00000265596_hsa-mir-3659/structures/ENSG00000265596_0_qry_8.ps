%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCAUGCGUAUGUGUCCUUGUGUGUGGAUGCACACGUGCUGCUUGUGUCUCUGAAAGCAGAUACAAGGAUGYCCUUGUACACGACACAYGUGCUGCUUGUAUAGACACGAGUGUYGUCUAUGAGGGCAUCCUUGUGUCUCUGUGUGUGCCUGUGUUGGUCUGGGCAUGAGUGCAUAUGAGUCUAUGGUUUUAUAUGUG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[125.00000000 200.00000000]
[125.00000000 225.00000000]
[114.02532959 247.46234131]
[125.00000000 269.92468262]
[125.00000000 294.92468262]
[114.02532959 317.38702393]
[125.00000000 339.84936523]
[149.46432495 344.99688721]
[169.18565369 360.36141968]
[188.90699768 375.72595215]
[208.62832642 391.09048462]
[228.34967041 406.45501709]
[248.07099915 421.81954956]
[249.77566528 446.76138306]
[265.32214355 466.33959961]
[289.22900391 473.65133667]
[313.06716919 466.11856079]
[328.43170166 446.39724731]
[329.90536499 421.44070435]
[316.96856689 400.04821777]
[294.18258667 389.76232910]
[269.58135986 394.20968628]
[249.86001587 378.84515381]
[230.13867188 363.48062134]
[210.41734314 348.11608887]
[190.69599915 332.75155640]
[170.97467041 317.38702393]
[160.00000000 294.92468262]
[160.00000000 269.92468262]
[170.97467041 247.46234131]
[160.00000000 225.00000000]
[160.00000000 200.00000000]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[460.00000000 100.00000000]
[460.00000000 125.00000000]
[460.00000000 150.00000000]
[460.00000000 175.00000000]
[460.00000000 200.00000000]
[460.00000000 225.00000000]
[460.00000000 250.00000000]
[460.00000000 275.00000000]
[460.00000000 300.00000000]
[460.00000000 325.00000000]
[436.72644043 334.12915039]
[417.35971069 349.93829346]
[403.75549316 370.91271973]
[397.21731567 395.04260254]
[398.37167358 420.01596069]
[407.10791016 443.43981934]
[388.49182129 460.12637329]
[364.73278809 452.34762573]
[369.87570190 476.81289673]
[351.25961304 493.49945068]
[332.64349365 510.18597412]
[314.02740479 526.87249756]
[295.41128540 543.55908203]
[276.79519653 560.24560547]
[258.17907715 576.93212891]
[239.56298828 593.61871338]
[220.94688416 610.30523682]
[202.33078003 626.99176025]
[183.71467590 643.67834473]
[165.09857178 660.36486816]
[146.48246765 677.05139160]
[122.43083954 683.87194824]
[113.02956390 707.03692627]
[94.41345978 723.72344971]
[75.79735565 740.40997314]
[57.18124771 757.09649658]
[38.56514359 773.78308105]
[19.94903946 790.46960449]
[1.33293474 807.15612793]
[-22.71868515 813.97668457]
[-32.11996460 837.14166260]
[-50.73606873 853.82818604]
[-74.78768921 860.64874268]
[-84.18897247 883.81365967]
[-102.80507660 900.50024414]
[-121.42118073 917.18676758]
[-140.03727722 933.87329102]
[-165.03129578 934.42010498]
[-183.64739990 951.10662842]
[-186.91502380 975.89215088]
[-205.53112793 992.57873535]
[-224.14723206 1009.26525879]
[-242.76333618 1025.95178223]
[-261.37945557 1042.63830566]
[-279.99554443 1059.32482910]
[-304.93951416 1060.99792480]
[-322.14355469 1079.13684082]
[-322.49551392 1104.13427734]
[-305.80895996 1122.75048828]
[-280.92199707 1125.12500000]
[-261.01605225 1110.00048828]
[-256.63439941 1085.38745117]
[-238.01829529 1068.70092773]
[-219.40219116 1052.01428223]
[-195.64315796 1059.79309082]
[-200.78608704 1035.32775879]
[-182.16996765 1018.64123535]
[-163.55386353 1001.95471191]
[-138.55984497 1001.40795898]
[-119.94374847 984.72137451]
[-116.67612457 959.93585205]
[-98.06002045 943.24932861]
[-79.44391632 926.56280518]
[-60.82781219 909.87622070]
[-36.77619171 903.05572510]
[-27.37491226 879.89074707]
[-8.75880718 863.20416260]
[15.29281235 856.38366699]
[24.69409180 833.21868896]
[43.31019592 816.53216553]
[61.92630005 799.84558105]
[80.54240417 783.15905762]
[99.15850830 766.47253418]
[117.77461243 749.78601074]
[136.39071655 733.09942627]
[160.44233704 726.27893066]
[169.84361267 703.11395264]
[188.45971680 686.42742920]
[207.07582092 669.74084473]
[225.69192505 653.05432129]
[244.30802917 636.36779785]
[262.92413330 619.68121338]
[281.54025269 602.99468994]
[300.15634155 586.30816650]
[318.77246094 569.62164307]
[337.38854980 552.93505859]
[356.00466919 536.24853516]
[374.62075806 519.56201172]
[393.23687744 502.87545776]
[411.85296631 486.18890381]
[430.46908569 469.50238037]
[452.80123901 480.73953247]
[477.50000000 484.60885620]
[502.19876099 480.73953247]
[524.53094482 469.50238037]
[542.35668945 451.97406006]
[553.96801758 429.83410645]
[558.25238037 405.20394897]
[582.74609375 400.19833374]
[607.23986816 395.19271851]
[629.61627197 406.34152222]
[653.62438965 399.36932373]
[666.54821777 377.96896362]
[661.54260254 353.47521973]
[641.25878906 338.86126709]
[616.44018555 341.86743164]
[600.23199463 360.90148926]
[575.73828125 365.90710449]
[551.24450684 370.91271973]
[537.64031982 349.93829346]
[518.27355957 334.12915039]
[495.00000000 325.00000000]
[495.00000000 300.00000000]
[495.00000000 275.00000000]
[495.00000000 250.00000000]
[495.00000000 225.00000000]
[495.00000000 200.00000000]
[495.00000000 175.00000000]
[495.00000000 150.00000000]
[495.00000000 125.00000000]
[495.00000000 100.00000000]
[720.00000000 100.00000000]
[720.00000000 125.00000000]
[720.00000000 150.00000000]
[720.00000000 175.00000000]
[720.00000000 200.00000000]
[720.00000000 225.00000000]
[720.00000000 250.00000000]
[720.00000000 275.00000000]
[720.00000000 300.00000000]
[701.37219238 316.67349243]
[695.48242188 340.96981812]
[704.40728760 364.32247925]
[725.00000000 378.49780273]
[750.00000000 378.49780273]
[770.59271240 364.32247925]
[779.51757812 340.96981812]
[773.62780762 316.67349243]
[755.00000000 300.00000000]
[755.00000000 275.00000000]
[755.00000000 250.00000000]
[755.00000000 225.00000000]
[755.00000000 200.00000000]
[755.00000000 175.00000000]
[755.00000000 150.00000000]
[755.00000000 125.00000000]
[755.00000000 100.00000000]
[780.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[142.49999974 247.46233919 28.47466709 232.07849235 180.00000000 1.00000000]
[142.49999974 247.46233919 28.47466709 180.00000000 127.92150785 1.00000000]
[]
[142.49999948 317.38701752 28.47466677 232.07849300 180.00000000 1.00000000]
[142.49999948 317.38701752 28.47466677 180.00000000 127.92150749 1.00000000]
[142.49999948 317.38701752 28.47466677 127.92150749 75.84301493 1.00000000]
[]
[]
[]
[]
[]
[289.03409773 431.54906821 42.10271758 193.36124309 158.81907973 1.00000000]
[289.03409773 431.54906821 42.10271758 158.81907973 124.27691637 1.00000000]
[289.03409773 431.54906821 42.10271758 124.27691637 89.73475302 1.00000000]
[289.03409773 431.54906821 42.10271758 89.73475302 55.19258966 1.00000000]
[289.03409773 431.54906821 42.10271758 55.19258966 20.65042630 1.00000000]
[289.03409773 431.54906821 42.10271758 20.65042630 346.10826294 1.00000000]
[289.03409773 431.54906821 42.10271758 346.10826294 311.56609958 1.00000000]
[289.03409773 431.54906821 42.10271758 311.56609958 277.02393623 1.00000000]
[289.03409773 431.54906821 42.10271758 277.02393623 242.48177287 1.00000000]
[]
[]
[]
[]
[]
[142.49999948 317.38701752 28.47466677 360.00000000 307.92150857 1.00000000]
[]
[142.49999974 247.46233919 28.47466709 52.07849141 360.00000000 1.00000000]
[142.49999974 247.46233919 28.47466709 360.00000000 307.92150830 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.50000443 403.84504767 80.76380094 257.48581972 239.67863732 1.00000000]
[477.50000443 403.84504767 80.76380094 239.67863732 221.87145493 1.00000000]
[477.50000443 403.84504767 80.76380094 221.87145493 204.06427254 1.00000000]
[477.50000443 403.84504767 80.76380094 204.06427254 186.25709014 1.00000000]
[477.50000443 403.84504767 80.76380094 186.25709014 168.44990775 1.00000000]
[477.50000443 403.84504767 80.76380094 168.44990775 150.64272535 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[141.43658924 705.07542184 28.47466729 280.20703697 228.12854505 1.00000000]
[141.43658924 705.07542184 28.47466729 228.12854505 176.05005312 1.00000000]
[]
[]
[]
[]
[]
[]
[-3.71293617 835.18016977 28.47466729 280.20703693 228.12854500 1.00000000]
[-3.71293617 835.18016977 28.47466729 228.12854500 176.05005307 1.00000000]
[]
[-55.78194016 881.85221110 28.47466729 280.20703688 228.12854495 1.00000000]
[-55.78194016 881.85221110 28.47466729 228.12854495 176.05005303 1.00000000]
[]
[]
[]
[-151.79557634 967.91401488 36.01426010 289.05586871 248.43765286 1.00000000]
[-151.79557634 967.91401488 36.01426010 248.43765286 207.81943700 1.00000000]
[-151.79557634 967.91401488 36.01426010 207.81943700 167.20122115 1.00000000]
[]
[]
[]
[]
[]
[-290.32633117 1092.08602955 34.35139098 287.50195624 244.82383872 1.00000000]
[-290.32633117 1092.08602955 34.35139098 244.82383872 202.14572120 1.00000000]
[-290.32633117 1092.08602955 34.35139098 202.14572120 159.46760369 1.00000000]
[-290.32633117 1092.08602955 34.35139098 159.46760369 116.78948617 1.00000000]
[-290.32633117 1092.08602955 34.35139098 116.78948617 74.11136865 1.00000000]
[-290.32633117 1092.08602955 34.35139098 74.11136865 31.43325114 1.00000000]
[-290.32633117 1092.08602955 34.35139098 31.43325114 348.75513362 1.00000000]
[]
[]
[]
[]
[]
[]
[-151.79557634 967.91401488 36.01426010 109.05586871 68.43765286 1.00000000]
[-151.79557634 967.91401488 36.01426010 68.43765286 27.81943700 1.00000000]
[-151.79557634 967.91401488 36.01426010 27.81943700 347.20122115 1.00000000]
[]
[]
[]
[-55.78194016 881.85221110 28.47466729 100.20703683 48.12854491 1.00000000]
[-55.78194016 881.85221110 28.47466729 48.12854491 356.05005307 1.00000000]
[]
[-3.71293617 835.18016977 28.47466729 100.20703688 48.12854495 1.00000000]
[-3.71293617 835.18016977 28.47466729 48.12854495 356.05005312 1.00000000]
[]
[]
[]
[]
[]
[]
[141.43658924 705.07542184 28.47466729 100.20703693 48.12854500 1.00000000]
[141.43658924 705.07542184 28.47466729 48.12854500 356.05005317 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.50000443 403.84504767 80.76380094 125.61436479 107.80718239 1.00000000]
[477.50000443 403.84504767 80.76380094 107.80718239 90.00000000 1.00000000]
[477.50000443 403.84504767 80.76380094 90.00000000 72.19281761 1.00000000]
[477.50000443 403.84504767 80.76380094 72.19281761 54.38563521 1.00000000]
[477.50000443 403.84504767 80.76380094 54.38563521 36.57845282 1.00000000]
[477.50000443 403.84504767 80.76380094 36.57845282 18.77127042 1.00000000]
[477.50000443 403.84504767 80.76380094 18.77127042 0.96408803 1.00000000]
[]
[]
[632.69693107 372.12854978 34.35139098 137.82331906 95.14520154 1.00000000]
[632.69693107 372.12854978 34.35139098 95.14520154 52.46708402 1.00000000]
[632.69693107 372.12854978 34.35139098 52.46708402 9.78896651 1.00000000]
[632.69693107 372.12854978 34.35139098 9.78896651 327.11084899 1.00000000]
[632.69693107 372.12854978 34.35139098 327.11084899 284.43273147 1.00000000]
[632.69693107 372.12854978 34.35139098 284.43273147 241.75461396 1.00000000]
[632.69693107 372.12854978 34.35139098 241.75461396 199.07649644 1.00000000]
[]
[]
[477.50000443 403.84504767 80.76380094 335.93572746 318.12854507 1.00000000]
[477.50000443 403.84504767 80.76380094 318.12854507 300.32136268 1.00000000]
[477.50000443 403.84504767 80.76380094 300.32136268 282.51418028 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[737.49999786 338.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[737.49999786 338.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[737.49999786 338.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[737.49999786 338.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[737.49999786 338.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[737.49999786 338.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[737.49999786 338.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[737.49999786 338.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[737.49999786 338.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[9 34]
[10 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[57 142]
[58 141]
[60 140]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
[72 128]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[82 118]
[83 117]
[85 115]
[86 114]
[87 113]
[88 112]
[91 109]
[92 108]
[93 107]
[94 105]
[95 104]
[96 103]
[149 160]
[150 159]
[151 158]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% Start Annotations
60 87 12 1.00 0.60 0.67 omark 113 140 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
