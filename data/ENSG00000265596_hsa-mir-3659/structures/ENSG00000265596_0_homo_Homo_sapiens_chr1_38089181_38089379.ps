%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGUAUGCAUAUGUGUCCUUGUGUGUGGAUGCACACGUGCUGCUUGUGUCUCUACAAGCAGAUACAAGGAUGCCCUUGUACACAACACACGUGCUGCUUGUAUAGACAUGAGUGUUGUCUACGAGGGCAUCCUUGUGUCUGUGUGUGUGCCUGUGUUGGUCUGGGCAUGAGUGCAUAUGAGUCUAUGGUUUUAUAUGUG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[125.00000000 175.00000000]
[125.00000000 200.00000000]
[125.00000000 225.00000000]
[105.90137482 241.13203430]
[98.75732422 265.08953857]
[105.90137482 289.04705811]
[125.00000000 305.17910767]
[149.81481934 308.21627808]
[163.50712585 329.13327026]
[177.19941711 350.05029297]
[190.89172363 370.96728516]
[204.58403015 391.88427734]
[218.27632141 412.80130005]
[231.96862793 433.71829224]
[225.51507568 457.87097168]
[233.89410400 481.42498779]
[254.15141296 496.07562256]
[279.14462280 496.65737915]
[300.06164551 482.96505737]
[309.52746582 459.82638550]
[304.20462036 435.39962769]
[285.96984863 418.29718018]
[261.25241089 414.54907227]
[247.56011963 393.63208008]
[233.86782837 372.71505737]
[220.17552185 351.79806519]
[206.48323059 330.88107300]
[192.79092407 309.96405029]
[179.09863281 289.04705811]
[186.24267578 265.08953857]
[179.09863281 241.13203430]
[160.00000000 225.00000000]
[160.00000000 200.00000000]
[160.00000000 175.00000000]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[735.00000000 100.00000000]
[735.00000000 125.00000000]
[735.00000000 150.00000000]
[735.00000000 175.00000000]
[735.00000000 200.00000000]
[735.00000000 225.00000000]
[735.00000000 250.00000000]
[735.00000000 275.00000000]
[735.00000000 300.00000000]
[735.00000000 325.00000000]
[715.48327637 340.62359619]
[707.20434570 364.21298218]
[683.61492920 372.49191284]
[660.02557373 380.77087402]
[636.43615723 389.04980469]
[611.60693359 386.13293457]
[594.04632568 403.92694092]
[570.45697021 412.20587158]
[546.86755371 420.48480225]
[523.27819824 428.76376343]
[499.68878174 437.04269409]
[476.09939575 445.32162476]
[452.51000977 453.60055542]
[428.92062378 461.87948608]
[405.33123779 470.15844727]
[381.74185181 478.43737793]
[358.15246582 486.71630859]
[334.56307983 494.99523926]
[310.97369385 503.27416992]
[287.38430786 511.55313110]
[263.79492188 519.83203125]
[240.20552063 528.11096191]
[216.61613464 536.38995361]
[193.02674866 544.66888428]
[169.43736267 552.94781494]
[145.84797668 561.22674561]
[122.25858307 569.50567627]
[98.66919708 577.78460693]
[75.07981110 586.06353760]
[50.25055695 583.14666748]
[32.68998718 600.94067383]
[9.10059738 609.21960449]
[-14.48879051 617.49853516]
[-38.07817841 625.77746582]
[-61.66756439 634.05645752]
[-85.25695038 642.33538818]
[-108.84634399 650.61431885]
[-133.67559814 647.69744873]
[-151.23616028 665.49145508]
[-174.82556152 673.77038574]
[-198.41494751 682.04931641]
[-222.00433350 690.32824707]
[-245.59371948 698.60717773]
[-269.18310547 706.88610840]
[-292.77249146 715.16503906]
[-316.45339966 707.15167236]
[-339.29510498 717.31323242]
[-349.19937134 740.26763916]
[-340.92044067 763.85705566]
[-318.84323120 775.58721924]
[-294.66104126 769.24523926]
[-281.18197632 748.19018555]
[-257.59259033 739.91125488]
[-234.00320435 731.63232422]
[-215.03874207 747.92187500]
[-210.41381836 723.35339355]
[-186.82443237 715.07446289]
[-163.23504639 706.79553223]
[-139.64566040 698.51660156]
[-114.81639862 701.43347168]
[-97.25582886 683.63946533]
[-73.66644287 675.36053467]
[-50.07705307 667.08160400]
[-26.48766708 658.80261230]
[-2.89827895 650.52368164]
[20.69110870 642.24475098]
[44.28049469 633.96582031]
[69.10974884 636.88269043]
[86.67031860 619.08868408]
[110.25971222 610.80975342]
[133.84909058 602.53082275]
[157.43849182 594.25189209]
[181.02787781 585.97296143]
[204.61726379 577.69403076]
[228.20664978 569.41503906]
[251.79603577 561.13610840]
[275.38543701 552.85717773]
[298.97482300 544.57824707]
[322.56420898 536.29931641]
[346.15359497 528.02038574]
[369.74298096 519.74145508]
[393.33236694 511.46252441]
[416.92175293 503.18356323]
[440.51113892 494.90463257]
[464.10052490 486.62570190]
[487.68991089 478.34677124]
[511.27929688 470.06784058]
[534.86871338 461.78887939]
[558.45806885 453.50994873]
[582.04748535 445.23101807]
[605.63684082 436.95208740]
[630.46612549 439.86892700]
[648.02667236 422.07495117]
[671.61608887 413.79602051]
[695.20544434 405.51705933]
[718.79486084 397.23812866]
[740.00000000 410.47976685]
[765.00000000 410.47976685]
[780.62359619 429.99652100]
[796.24719238 449.51324463]
[796.52807617 474.51165771]
[813.68048096 492.69946289]
[838.61956787 494.44338989]
[858.13629150 478.81976318]
[861.89361572 454.10372925]
[847.90136719 433.38616943]
[823.57061768 427.64019775]
[807.94702148 408.12347412]
[792.32342529 388.60671997]
[797.79565430 364.21298218]
[789.51672363 340.62359619]
[770.00000000 325.00000000]
[770.00000000 300.00000000]
[770.00000000 275.00000000]
[770.00000000 250.00000000]
[770.00000000 225.00000000]
[770.00000000 200.00000000]
[770.00000000 175.00000000]
[770.00000000 150.00000000]
[770.00000000 125.00000000]
[770.00000000 100.00000000]
[845.00000000 100.00000000]
[845.00000000 125.00000000]
[845.00000000 150.00000000]
[845.00000000 175.00000000]
[845.00000000 200.00000000]
[845.00000000 225.00000000]
[845.00000000 250.00000000]
[845.00000000 275.00000000]
[845.00000000 300.00000000]
[826.37219238 316.67349243]
[820.48242188 340.96981812]
[829.40728760 364.32247925]
[850.00000000 378.49780273]
[875.00000000 378.49780273]
[895.59271240 364.32247925]
[904.51757812 340.96981812]
[898.62780762 316.67349243]
[880.00000000 300.00000000]
[880.00000000 275.00000000]
[880.00000000 250.00000000]
[880.00000000 225.00000000]
[880.00000000 200.00000000]
[880.00000000 175.00000000]
[880.00000000 150.00000000]
[880.00000000 125.00000000]
[880.00000000 100.00000000]
[905.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[142.50000000 265.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[142.50000000 265.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[142.50000000 265.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[142.50000000 265.08954835 43.74267810 146.79118209 113.58236418 1.00000000]
[142.50000000 265.08954835 43.74267810 113.58236418 80.37354627 1.00000000]
[]
[]
[]
[]
[]
[]
[267.58354397 456.17304851 42.10271758 212.23091720 177.68875384 1.00000000]
[267.58354397 456.17304851 42.10271758 177.68875384 143.14659049 1.00000000]
[267.58354397 456.17304851 42.10271758 143.14659049 108.60442713 1.00000000]
[267.58354397 456.17304851 42.10271758 108.60442713 74.06226377 1.00000000]
[267.58354397 456.17304851 42.10271758 74.06226377 39.52010041 1.00000000]
[267.58354397 456.17304851 42.10271758 39.52010041 4.97793705 1.00000000]
[267.58354397 456.17304851 42.10271758 4.97793705 330.43577370 1.00000000]
[267.58354397 456.17304851 42.10271758 330.43577370 295.89361034 1.00000000]
[267.58354397 456.17304851 42.10271758 295.89361034 261.35144698 1.00000000]
[]
[]
[]
[]
[]
[]
[142.50000000 265.08954835 43.74267810 33.20881791 360.00000000 1.00000000]
[142.50000000 265.08954835 43.74267810 360.00000000 326.79118209 1.00000000]
[142.50000000 265.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[752.50000287 366.86248746 45.37309618 247.31334785 215.33047826 1.00000000]
[752.50000287 366.86248746 45.37309618 215.33047826 183.34760868 1.00000000]
[]
[]
[]
[621.03650892 413.00094271 28.47466729 302.73944843 250.66095650 1.00000000]
[621.03650892 413.00094271 28.47466729 250.66095650 198.58246458 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[59.68015383 610.01468667 28.47466729 302.73944838 250.66095646 1.00000000]
[59.68015383 610.01468667 28.47466729 250.66095646 198.58246453 1.00000000]
[]
[]
[]
[]
[]
[]
[-124.24599823 674.56544770 28.47466729 302.73944834 250.66095641 1.00000000]
[-124.24599823 674.56544770 28.47466729 250.66095641 198.58246448 1.00000000]
[]
[]
[]
[]
[]
[]
[-314.86892164 741.46650918 34.35139098 310.03436770 267.35625018 1.00000000]
[-314.86892164 741.46650918 34.35139098 267.35625018 224.67813266 1.00000000]
[-314.86892164 741.46650918 34.35139098 224.67813266 182.00001514 1.00000000]
[-314.86892164 741.46650918 34.35139098 182.00001514 139.32189763 1.00000000]
[-314.86892164 741.46650918 34.35139098 139.32189763 96.64378011 1.00000000]
[-314.86892164 741.46650918 34.35139098 96.64378011 53.96566259 1.00000000]
[-314.86892164 741.46650918 34.35139098 53.96566259 11.28754508 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[-124.24599823 674.56544770 28.47466729 122.73944829 70.66095636 1.00000000]
[-124.24599823 674.56544770 28.47466729 70.66095636 18.58246453 1.00000000]
[]
[]
[]
[]
[]
[]
[59.68015383 610.01468667 28.47466729 122.73944834 70.66095641 1.00000000]
[59.68015383 610.01468667 28.47466729 70.66095641 18.58246458 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[621.03650892 413.00094271 28.47466729 122.73944838 70.66095646 1.00000000]
[621.03650892 413.00094271 28.47466729 70.66095646 18.58246463 1.00000000]
[]
[]
[]
[752.50000287 366.86248746 45.37309618 137.97430438 105.99143479 1.00000000]
[752.50000287 366.86248746 45.37309618 105.99143479 74.00856521 1.00000000]
[]
[]
[828.38200384 461.65298008 34.35139098 200.69532437 158.01720685 1.00000000]
[828.38200384 461.65298008 34.35139098 158.01720685 115.33908933 1.00000000]
[828.38200384 461.65298008 34.35139098 115.33908933 72.66097182 1.00000000]
[828.38200384 461.65298008 34.35139098 72.66097182 29.98285430 1.00000000]
[828.38200384 461.65298008 34.35139098 29.98285430 347.30473678 1.00000000]
[828.38200384 461.65298008 34.35139098 347.30473678 304.62661926 1.00000000]
[828.38200384 461.65298008 34.35139098 304.62661926 261.94850175 1.00000000]
[]
[]
[752.50000287 366.86248746 45.37309618 28.63526091 356.65239132 1.00000000]
[752.50000287 366.86248746 45.37309618 356.65239132 324.66952174 1.00000000]
[752.50000287 366.86248746 45.37309618 324.66952174 292.68665215 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[862.49999887 338.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[862.49999887 338.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[862.49999887 338.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[862.49999887 338.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[862.49999887 338.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[862.49999887 338.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[862.49999887 338.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[862.49999887 338.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[862.49999887 338.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[53 147]
[54 146]
[55 145]
[56 144]
[58 142]
[59 141]
[60 140]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
[90 110]
[91 109]
[92 108]
[93 107]
[94 105]
[95 104]
[96 103]
[149 160]
[150 159]
[151 158]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% Start Annotations
60 87 12 1.00 0.60 0.67 omark 113 140 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
