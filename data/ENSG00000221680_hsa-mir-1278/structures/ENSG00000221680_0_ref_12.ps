%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUAGGUGAUAUUCUAAGUACUUUAUGUGUAUUAACUCAUGUAAUCGUCACUACCAGUCCUCMUGAAGUUGGUAGUACUAUGCAUGUCAUCUAUGAGUAAACAGGCUCAGAMAGAAUAAGUGACUUGCUGAGGUUUGCAGAACCAGRAUUGGAACCWAGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[164.02532959 147.46234131]
[175.00000000 169.92468262]
[175.00000000 194.92468262]
[175.00000000 219.92468262]
[155.83044434 235.97235107]
[148.49523926 259.87203979]
[155.36169434 283.91058350]
[174.21379089 300.33004761]
[198.96739197 303.83135986]
[221.63377380 293.28454590]
[244.27058411 303.89468384]
[266.90740967 314.50479126]
[289.54421997 325.11489868]
[312.18103027 335.72503662]
[307.75100708 360.32940674]
[308.71127319 385.31094360]
[315.01699829 409.50262451]
[326.37356567 431.77432251]
[342.25048828 451.08554077]
[361.90603638 466.53414917]
[352.03344727 489.50222778]
[342.16082764 512.47027588]
[332.28823853 535.43835449]
[322.41561890 558.40637207]
[312.54302979 581.37445068]
[302.67041016 604.34252930]
[278.97222900 612.30462646]
[263.96643066 632.30029297]
[262.94381714 657.27935791]
[276.26492310 678.43469238]
[299.23297119 688.30731201]
[323.74984741 683.41625977]
[341.17138672 665.48614502]
[345.35501099 640.83868408]
[334.82568359 618.16412354]
[344.69830322 595.19610596]
[354.57089233 572.22802734]
[364.44351196 549.25994873]
[374.31610107 526.29193115]
[384.18872070 503.32385254]
[394.06130981 480.35580444]
[418.79608154 483.98794556]
[443.73348999 482.22036743]
[467.70864868 475.13571167]
[480.72219849 496.48159790]
[468.74288940 518.42462158]
[493.73574829 517.82751465]
[506.74932861 539.17340088]
[519.76287842 560.51928711]
[532.77642822 581.86517334]
[545.78997803 603.21112061]
[558.80352783 624.55700684]
[571.81707764 645.90289307]
[584.83068848 667.24877930]
[572.85137939 689.19183350]
[597.84423828 688.59466553]
[590.61840820 712.52764893]
[598.23675537 736.33862305]
[618.01318359 751.63220215]
[642.97479248 753.01623535]
[664.32073975 740.00262451]
[674.52465820 717.17987061]
[669.98895264 692.59478760]
[652.31280518 674.91558838]
[627.72845459 670.37573242]
[614.71490479 649.02978516]
[601.70135498 627.68389893]
[588.68780518 606.33801270]
[575.67425537 584.99212646]
[562.66070557 563.64624023]
[549.64715576 542.30035400]
[536.63354492 520.95440674]
[523.61999512 499.60852051]
[510.60644531 478.26263428]
[497.59289551 456.91674805]
[514.87292480 438.85015869]
[527.86724854 417.49255371]
[535.96887207 393.84167480]
[538.79931641 369.00241089]
[563.53076172 365.34802246]
[588.26220703 361.69360352]
[612.08752441 369.26693726]
[632.70434570 355.12670898]
[657.43579102 351.47229004]
[682.16729736 347.81790161]
[706.89874268 344.16348267]
[726.79071045 359.30642700]
[729.85198975 384.11831665]
[732.91326904 408.93017578]
[719.08410645 429.75689697]
[722.14538574 454.56878662]
[708.31616211 475.39550781]
[694.48699951 496.22225952]
[680.65777588 517.04901123]
[666.82855225 537.87573242]
[643.10406494 545.75909424]
[631.00640869 567.63708496]
[636.94317627 591.92199707]
[657.76989746 605.75115967]
[682.45568848 601.80004883]
[697.92565918 582.16125488]
[695.98602295 557.23663330]
[709.81524658 536.40991211]
[723.64440918 515.58312988]
[737.47363281 494.75640869]
[751.30279541 473.92965698]
[775.35858154 467.12384033]
[789.18780518 446.29708862]
[786.12652588 421.48522949]
[767.64990234 404.64437866]
[764.58862305 379.83251953]
[761.52734375 355.02066040]
[777.14215088 335.49688721]
[778.05981445 310.51373291]
[763.91937256 289.89703369]
[740.28228760 281.75527954]
[716.44494629 289.29064941]
[701.78259277 309.53945923]
[677.05108643 313.19384766]
[652.31964111 316.84823608]
[627.58819580 320.50265503]
[603.76287842 312.92932129]
[583.14605713 327.06954956]
[558.41461182 330.72396851]
[533.68310547 334.37835693]
[523.78985596 311.41918945]
[509.19433594 291.12213135]
[490.57843018 274.43536377]
[468.81182861 262.13842773]
[475.09576416 237.94105530]
[481.37969971 213.74369812]
[487.66366577 189.54634094]
[493.94760132 165.34898376]
[503.59030151 142.28346252]
[486.62597656 123.92012787]
[462.87014771 131.70863342]
[460.07128906 156.55146790]
[453.78735352 180.74882507]
[447.50341797 204.94618225]
[441.21948242 229.14353943]
[434.93554688 253.34089661]
[409.93600464 253.49288940]
[385.55307007 259.01306152]
[362.92581177 269.64355469]
[343.11129761 284.88775635]
[327.03518677 304.03347778]
[304.39837646 293.42337036]
[281.76156616 282.81326294]
[259.12475586 272.20312500]
[236.48793030 261.59301758]
[210.00000000 219.92468262]
[210.00000000 194.92468262]
[210.00000000 169.92468262]
[220.97467041 147.46234131]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[192.49999945 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[192.49999945 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[192.49999967 260.30232241 44.00686485 246.56769836 213.56396384 1.00000000]
[192.49999967 260.30232241 44.00686485 213.56396384 180.56022932 1.00000000]
[192.49999967 260.30232241 44.00686485 180.56022932 147.55649480 1.00000000]
[192.49999967 260.30232241 44.00686485 147.55649480 114.55276028 1.00000000]
[192.49999967 260.30232241 44.00686485 114.55276028 81.54902576 1.00000000]
[192.49999967 260.30232241 44.00686485 81.54902576 48.54529124 1.00000000]
[]
[]
[]
[]
[423.13484582 368.40334691 115.66599416 196.41085143 184.00273244 1.00000000]
[423.13484582 368.40334691 115.66599416 184.00273244 171.59461345 1.00000000]
[423.13484582 368.40334691 115.66599416 171.59461345 159.18649445 1.00000000]
[423.13484582 368.40334691 115.66599416 159.18649445 146.77837546 1.00000000]
[423.13484582 368.40334691 115.66599416 146.77837546 134.37025647 1.00000000]
[423.13484582 368.40334691 115.66599416 134.37025647 121.96213747 1.00000000]
[]
[]
[]
[]
[]
[]
[303.62580516 646.43437816 42.10271758 268.69973437 234.15757101 1.00000000]
[303.62580516 646.43437816 42.10271758 234.15757101 199.61540765 1.00000000]
[303.62580516 646.43437816 42.10271758 199.61540765 165.07324430 1.00000000]
[303.62580516 646.43437816 42.10271758 165.07324430 130.53108094 1.00000000]
[303.62580516 646.43437816 42.10271758 130.53108094 95.98891758 1.00000000]
[303.62580516 646.43437816 42.10271758 95.98891758 61.44675422 1.00000000]
[303.62580516 646.43437816 42.10271758 61.44675422 26.90459086 1.00000000]
[303.62580516 646.43437816 42.10271758 26.90459086 352.36242750 1.00000000]
[303.62580516 646.43437816 42.10271758 352.36242750 317.82026415 1.00000000]
[]
[]
[]
[]
[]
[]
[423.13484582 368.40334691 115.66599416 104.55786104 92.14974205 1.00000000]
[423.13484582 368.40334691 115.66599416 92.14974205 79.74162306 1.00000000]
[423.13484582 368.40334691 115.66599416 79.74162306 67.33350406 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[632.71971077 712.18152523 42.10271758 214.07110096 179.52893760 1.00000000]
[632.71971077 712.18152523 42.10271758 179.52893760 144.98677424 1.00000000]
[632.71971077 712.18152523 42.10271758 144.98677424 110.44461089 1.00000000]
[632.71971077 712.18152523 42.10271758 110.44461089 75.90244753 1.00000000]
[632.71971077 712.18152523 42.10271758 75.90244753 41.36028417 1.00000000]
[632.71971077 712.18152523 42.10271758 41.36028417 6.81812081 1.00000000]
[632.71971077 712.18152523 42.10271758 6.81812081 332.27595745 1.00000000]
[632.71971077 712.18152523 42.10271758 332.27595745 297.73379409 1.00000000]
[632.71971077 712.18152523 42.10271758 297.73379409 263.19163074 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[423.13484582 368.40334691 115.66599416 49.92922763 37.52110864 1.00000000]
[423.13484582 368.40334691 115.66599416 37.52110864 25.11298965 1.00000000]
[423.13484582 368.40334691 115.66599416 25.11298965 12.70487065 1.00000000]
[423.13484582 368.40334691 115.66599416 12.70487065 0.29675166 1.00000000]
[]
[]
[607.92519979 341.09812973 28.47466729 133.67310535 81.59461342 1.00000000]
[607.92519979 341.09812973 28.47466729 81.59461342 29.51612150 1.00000000]
[]
[]
[]
[739.77316365 321.61585031 39.86382195 145.55486727 109.00615077 1.00000000]
[]
[]
[754.13594750 438.02700214 36.01426010 233.89372842 193.27551257 1.00000000]
[754.13594750 438.02700214 36.01426010 193.27551257 152.65729671 1.00000000]
[]
[]
[]
[]
[665.05589477 572.18137070 34.35139098 272.95803180 230.27991429 1.00000000]
[665.05589477 572.18137070 34.35139098 230.27991429 187.60179677 1.00000000]
[665.05589477 572.18137070 34.35139098 187.60179677 144.92367925 1.00000000]
[665.05589477 572.18137070 34.35139098 144.92367925 102.24556174 1.00000000]
[665.05589477 572.18137070 34.35139098 102.24556174 59.56744422 1.00000000]
[665.05589477 572.18137070 34.35139098 59.56744422 16.88932670 1.00000000]
[665.05589477 572.18137070 34.35139098 16.88932670 334.21120919 1.00000000]
[]
[]
[]
[]
[754.13594750 438.02700214 36.01426010 94.51194427 53.89372842 1.00000000]
[754.13594750 438.02700214 36.01426010 53.89372842 13.27551257 1.00000000]
[754.13594750 438.02700214 36.01426010 13.27551257 332.65729671 1.00000000]
[754.13594750 438.02700214 36.01426010 332.65729671 292.03908086 1.00000000]
[]
[]
[739.77316365 321.61585031 39.86382195 56.92665851 20.37794201 1.00000000]
[739.77316365 321.61585031 39.86382195 20.37794201 343.82922552 1.00000000]
[739.77316365 321.61585031 39.86382195 343.82922552 307.28050902 1.00000000]
[739.77316365 321.61585031 39.86382195 307.28050902 270.73179252 1.00000000]
[739.77316365 321.61585031 39.86382195 270.73179252 234.18307603 1.00000000]
[739.77316365 321.61585031 39.86382195 234.18307603 197.63435953 1.00000000]
[]
[]
[]
[607.92519979 341.09812973 28.47466729 313.67310530 261.59461337 1.00000000]
[607.92519979 341.09812973 28.47466729 261.59461337 209.51612154 1.00000000]
[]
[]
[423.13484582 368.40334691 115.66599416 342.89247523 330.48435624 1.00000000]
[423.13484582 368.40334691 115.66599416 330.48435624 318.07623724 1.00000000]
[423.13484582 368.40334691 115.66599416 318.07623724 305.66811825 1.00000000]
[423.13484582 368.40334691 115.66599416 305.66811825 293.25999926 1.00000000]
[]
[]
[]
[]
[480.81168046 146.30906859 23.13159456 55.39765810 349.97775957 1.00000000]
[480.81168046 146.30906859 23.13159456 349.97775957 284.55786104 1.00000000]
[480.81168046 146.30906859 23.13159456 284.55786104 219.13796252 1.00000000]
[480.81168046 146.30906859 23.13159456 219.13796252 153.71806399 1.00000000]
[]
[]
[]
[]
[423.13484582 368.40334691 115.66599416 275.85572283 263.44760383 1.00000000]
[423.13484582 368.40334691 115.66599416 263.44760383 251.03948484 1.00000000]
[423.13484582 368.40334691 115.66599416 251.03948484 238.63136585 1.00000000]
[423.13484582 368.40334691 115.66599416 238.63136585 226.22324686 1.00000000]
[423.13484582 368.40334691 115.66599416 226.22324686 213.81512786 1.00000000]
[]
[]
[]
[]
[192.49999967 260.30232241 44.00686485 1.68068805 293.43230155 1.00000000]
[]
[]
[192.49999945 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[192.49999945 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[7 158]
[8 157]
[9 156]
[15 155]
[16 154]
[17 153]
[18 152]
[19 151]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[49 80]
[50 79]
[52 78]
[53 77]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[61 70]
[84 130]
[85 129]
[86 128]
[88 126]
[89 125]
[90 124]
[91 123]
[92 117]
[93 116]
[94 115]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
] def

init

% Start Annotations
51 58 12 1.00 0.60 0.67 omark 72 87 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
