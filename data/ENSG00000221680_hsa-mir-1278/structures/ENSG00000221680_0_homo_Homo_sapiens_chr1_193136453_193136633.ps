%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUAUGUGUUAUUCUAAGUACUUUAUAUGUAUUAACUCAUGUAAUCGUAUUUGCUCAUAGAUGAUAUGCAUAGUACUCCCAGAACUCAUUAAGUUGGUAGUACUGUGCAUAUCAUCUAUGAGCGAAUAGGCUCAGACAGAGUGAGUUCCUGAGGUUUGAAGAACCAGUUGGAACCUUGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[525.00000000 125.00000000]
[525.00000000 150.00000000]
[525.00000000 175.00000000]
[525.00000000 200.00000000]
[525.00000000 225.00000000]
[510.92852783 245.66383362]
[515.87762451 270.16906738]
[506.17535400 293.20959473]
[496.47305298 316.25012207]
[486.77075195 339.29061890]
[477.06848145 362.33114624]
[467.36618042 385.37167358]
[457.66390991 408.41220093]
[434.02529907 416.54956055]
[419.16796875 436.65576172]
[418.33029175 461.64172363]
[431.80767822 482.69784546]
[454.84817505 492.40014648]
[479.32818604 487.32772827]
[496.61648560 469.26907349]
[500.61752319 444.59133911]
[489.92062378 421.99539185]
[499.62292480 398.95486450]
[509.32519531 375.91436768]
[519.02746582 352.87384033]
[528.72979736 329.83331299]
[538.43206787 306.79278564]
[548.13433838 283.75225830]
[569.12237549 270.16906738]
[574.07147217 245.66383362]
[560.00000000 225.00000000]
[560.00000000 200.00000000]
[560.00000000 175.00000000]
[560.00000000 150.00000000]
[560.00000000 125.00000000]
[560.00000000 100.00000000]
[610.00000000 100.00000000]
[610.00000000 125.00000000]
[610.00000000 150.00000000]
[610.00000000 175.00000000]
[610.00000000 200.00000000]
[610.00000000 225.00000000]
[610.00000000 250.00000000]
[610.00000000 275.00000000]
[610.00000000 300.00000000]
[610.00000000 325.00000000]
[610.00000000 350.00000000]
[610.00000000 375.00000000]
[610.00000000 400.00000000]
[610.00000000 425.00000000]
[610.00000000 450.00000000]
[610.00000000 475.00000000]
[610.00000000 500.00000000]
[610.00000000 525.00000000]
[610.00000000 550.00000000]
[610.00000000 575.00000000]
[610.00000000 600.00000000]
[610.00000000 625.00000000]
[610.00000000 650.00000000]
[610.00000000 675.00000000]
[610.00000000 700.00000000]
[599.02532959 722.46234131]
[610.00000000 744.92468262]
[610.00000000 769.92468262]
[610.00000000 794.92468262]
[599.02532959 817.38702393]
[610.00000000 839.84936523]
[634.46429443 844.99688721]
[654.18566895 860.36145020]
[673.90698242 875.72595215]
[682.95794678 899.03002930]
[706.38488770 907.75799561]
[728.47741699 896.05670166]
[734.41998291 871.77325439]
[720.22735596 851.19244385]
[695.41735840 848.11608887]
[675.69598389 832.75152588]
[655.97467041 817.38702393]
[645.00000000 794.92468262]
[645.00000000 769.92468262]
[645.00000000 744.92468262]
[655.97467041 722.46234131]
[645.00000000 700.00000000]
[645.00000000 675.00000000]
[645.00000000 650.00000000]
[645.00000000 625.00000000]
[645.00000000 600.00000000]
[645.00000000 575.00000000]
[645.00000000 550.00000000]
[645.00000000 525.00000000]
[645.00000000 500.00000000]
[645.00000000 475.00000000]
[645.00000000 450.00000000]
[645.00000000 425.00000000]
[645.00000000 400.00000000]
[645.00000000 375.00000000]
[645.00000000 350.00000000]
[645.00000000 325.00000000]
[645.00000000 300.00000000]
[645.00000000 275.00000000]
[645.00000000 250.00000000]
[645.00000000 225.00000000]
[645.00000000 200.00000000]
[645.00000000 175.00000000]
[645.00000000 150.00000000]
[645.00000000 125.00000000]
[645.00000000 100.00000000]
[695.00000000 100.00000000]
[695.00000000 125.00000000]
[695.00000000 150.00000000]
[695.00000000 175.00000000]
[678.72460938 193.97660828]
[678.72460938 218.97660828]
[695.00000000 237.95321655]
[695.00000000 262.95321655]
[695.00000000 287.95321655]
[695.00000000 312.95321655]
[682.17901611 334.41534424]
[689.69177246 358.25982666]
[712.50000000 368.49621582]
[735.30822754 358.25982666]
[742.82098389 334.41534424]
[730.00000000 312.95321655]
[730.00000000 287.95321655]
[730.00000000 262.95321655]
[730.00000000 237.95321655]
[746.27539062 218.97660828]
[746.27539062 193.97660828]
[730.00000000 175.00000000]
[730.00000000 150.00000000]
[730.00000000 125.00000000]
[730.00000000 100.00000000]
[780.00000000 100.00000000]
[780.00000000 125.00000000]
[780.00000000 150.00000000]
[780.00000000 175.00000000]
[780.00000000 200.00000000]
[780.00000000 225.00000000]
[780.00000000 250.00000000]
[780.00000000 275.00000000]
[780.00000000 300.00000000]
[769.02532959 322.46234131]
[780.00000000 344.92468262]
[780.00000000 369.92468262]
[762.74304199 388.01327515]
[760.36175537 412.89962769]
[773.87530518 433.93255615]
[797.50000000 442.11016846]
[821.12469482 433.93255615]
[834.63824463 412.89962769]
[832.25695801 388.01327515]
[815.00000000 369.92468262]
[815.00000000 344.92468262]
[825.97467041 322.46234131]
[815.00000000 300.00000000]
[815.00000000 275.00000000]
[815.00000000 250.00000000]
[815.00000000 225.00000000]
[815.00000000 200.00000000]
[815.00000000 175.00000000]
[815.00000000 150.00000000]
[815.00000000 125.00000000]
[815.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[542.50000000 252.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[542.50000000 252.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[]
[]
[]
[]
[]
[]
[458.93089251 450.49584055 42.10271758 268.27553826 233.73337490 1.00000000]
[458.93089251 450.49584055 42.10271758 233.73337490 199.19121154 1.00000000]
[458.93089251 450.49584055 42.10271758 199.19121154 164.64904818 1.00000000]
[458.93089251 450.49584055 42.10271758 164.64904818 130.10688482 1.00000000]
[458.93089251 450.49584055 42.10271758 130.10688482 95.56472147 1.00000000]
[458.93089251 450.49584055 42.10271758 95.56472147 61.02255811 1.00000000]
[458.93089251 450.49584055 42.10271758 61.02255811 26.48039475 1.00000000]
[458.93089251 450.49584055 42.10271758 26.48039475 351.93823139 1.00000000]
[458.93089251 450.49584055 42.10271758 351.93823139 317.39606803 1.00000000]
[]
[]
[]
[]
[]
[]
[542.50000000 252.04002271 32.20889362 79.92531101 34.25370472 1.00000000]
[542.50000000 252.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[542.50000000 252.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[627.49999933 722.46233938 28.47466669 232.07849321 180.00000000 1.00000000]
[627.49999933 722.46233938 28.47466669 180.00000000 127.92150746 1.00000000]
[]
[]
[627.49999865 817.38701792 28.47466594 232.07849481 180.00000000 1.00000000]
[627.49999865 817.38701792 28.47466594 180.00000000 127.92150668 1.00000000]
[627.49999865 817.38701792 28.47466594 127.92150668 75.84301312 1.00000000]
[]
[]
[704.39503345 877.29453955 30.52836670 182.94522207 134.60398404 1.00000000]
[704.39503345 877.29453955 30.52836670 134.60398404 86.26274601 1.00000000]
[704.39503345 877.29453955 30.52836670 86.26274601 37.92150798 1.00000000]
[704.39503345 877.29453955 30.52836670 37.92150798 349.58026995 1.00000000]
[704.39503345 877.29453955 30.52836670 349.58026995 301.23903192 1.00000000]
[704.39503345 877.29453955 30.52836670 301.23903192 252.89779388 1.00000000]
[]
[]
[627.49999865 817.38701792 28.47466594 360.00000000 307.92150938 1.00000000]
[]
[]
[627.49999933 722.46233938 28.47466669 52.07849055 360.00000000 1.00000000]
[627.49999933 722.46233938 28.47466669 360.00000000 307.92150868 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[712.49999814 206.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[712.49999814 206.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[712.49999814 206.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[]
[712.49999814 337.96783772 30.52836670 235.02371410 186.68247606 1.00000000]
[712.49999814 337.96783772 30.52836670 186.68247606 138.34123803 1.00000000]
[712.49999814 337.96783772 30.52836670 138.34123803 90.00000000 1.00000000]
[712.49999814 337.96783772 30.52836670 90.00000000 41.65876197 1.00000000]
[712.49999814 337.96783772 30.52836670 41.65876197 353.31752394 1.00000000]
[712.49999814 337.96783772 30.52836670 353.31752394 304.97628590 1.00000000]
[]
[]
[]
[712.49999814 206.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[712.49999814 206.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[712.49999814 206.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[797.49999826 322.46233922 28.47466702 232.07849249 180.00000000 1.00000000]
[797.49999826 322.46233922 28.47466702 180.00000000 127.92150779 1.00000000]
[]
[797.49999859 403.89615457 38.21401848 242.74528142 204.55896105 1.00000000]
[797.49999859 403.89615457 38.21401848 204.55896105 166.37264069 1.00000000]
[797.49999859 403.89615457 38.21401848 166.37264069 128.18632032 1.00000000]
[797.49999859 403.89615457 38.21401848 128.18632032 89.99999995 1.00000000]
[797.49999859 403.89615457 38.21401848 89.99999995 51.81367959 1.00000000]
[797.49999859 403.89615457 38.21401848 51.81367959 13.62735922 1.00000000]
[797.49999859 403.89615457 38.21401848 13.62735922 335.44103885 1.00000000]
[797.49999859 403.89615457 38.21401848 335.44103885 297.25471849 1.00000000]
[]
[797.49999826 322.46233922 28.47466702 52.07849127 360.00000000 1.00000000]
[797.49999826 322.46233922 28.47466702 360.00000000 307.92150836 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[23 49]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[31 40]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[62 118]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[72 108]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[81 99]
[82 98]
[83 97]
[86 96]
[87 95]
[88 94]
[126 150]
[127 149]
[128 148]
[129 147]
[132 144]
[133 143]
[134 142]
[135 141]
[151 181]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[161 171]
[162 170]
] def

init

% Start Annotations
68 83 12 1.00 0.60 0.67 omark 97 112 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
