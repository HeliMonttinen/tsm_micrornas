%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGGCUUUAUAUAGAUGAUCUCAUGUAUUCCUUACAACUUCCUUGUGAAGUUUUUGGAAGAGGUAUUGCCACCCUUUCUAGACUAAUAGGGACUAGAAAGGGUGGCAAUAUCUCUUCCAAAAACUGAGACUUGUUGAUAUUAAGUGAGUUGCCUCAGCAGUCAAUGGCACUUUAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[225.00000000 125.00000000]
[225.00000000 150.00000000]
[225.00000000 175.00000000]
[214.02532959 197.46234131]
[225.00000000 219.92468262]
[225.00000000 244.92468262]
[225.00000000 269.92468262]
[225.00000000 294.92468262]
[214.02532959 317.38702393]
[225.00000000 339.84936523]
[225.00000000 364.84936523]
[225.00000000 389.84936523]
[225.00000000 414.84936523]
[225.00000000 439.84936523]
[225.00000000 464.84936523]
[225.00000000 489.84936523]
[225.00000000 514.84936523]
[225.00000000 539.84936523]
[202.43107605 550.60314941]
[185.26618958 568.77911377]
[175.82032776 591.92596436]
[175.36744690 616.92187500]
[183.96862793 640.39562988]
[200.46385193 659.18151855]
[222.62841797 670.74578857]
[247.47302246 673.52880859]
[271.64694214 667.15521240]
[291.88983154 652.48468018]
[313.84127808 664.44860840]
[335.79272461 676.41247559]
[357.74414062 688.37634277]
[379.69558716 700.34020996]
[401.64703369 712.30407715]
[414.35647583 733.83245850]
[438.88854980 738.64672852]
[458.79168701 723.51843262]
[460.71856689 698.59283447]
[443.37698364 680.58532715]
[418.39645386 681.57208252]
[396.44500732 669.60821533]
[374.49359131 657.64434814]
[352.54214478 645.68041992]
[330.59069824 633.71655273]
[308.63928223 621.75268555]
[309.77697754 595.24591064]
[332.67279053 585.20697021]
[355.56863403 575.16796875]
[378.46447754 565.12902832]
[401.36029053 555.09002686]
[424.25613403 545.05108643]
[447.15194702 535.01208496]
[470.04779053 524.97314453]
[492.94360352 514.93414307]
[515.83941650 504.89517212]
[538.73529053 494.85620117]
[561.63110352 484.81723022]
[584.52691650 474.77825928]
[607.42272949 464.73928833]
[630.31860352 454.70031738]
[653.21441650 444.66134644]
[676.11022949 434.62234497]
[699.00610352 424.58337402]
[721.90191650 414.54440308]
[744.79772949 404.50543213]
[767.69354248 394.46646118]
[790.58941650 384.42749023]
[813.48522949 374.38851929]
[836.38104248 364.34954834]
[859.27685547 354.31057739]
[882.17272949 344.27160645]
[905.06854248 334.23263550]
[927.96435547 324.19366455]
[950.86022949 314.15469360]
[973.75604248 304.11569214]
[996.65185547 294.07672119]
[1019.54766846 284.03775024]
[1042.44348145 273.99877930]
[1067.42224121 275.02978516]
[1083.58703613 255.95887756]
[1106.48291016 245.91990662]
[1131.28698730 249.04347229]
[1150.10778809 232.58810425]
[1150.32373047 207.58905029]
[1131.79003906 190.81100464]
[1106.93566895 193.50556946]
[1092.42834473 213.86575317]
[1069.53247070 223.90472412]
[1044.55371094 222.87370300]
[1028.38891602 241.94462585]
[1005.49310303 251.98359680]
[982.59729004 262.02258301]
[959.70147705 272.06155396]
[936.80566406 282.10052490]
[913.90979004 292.13949585]
[891.01397705 302.17846680]
[868.11816406 312.21743774]
[845.22235107 322.25640869]
[822.32647705 332.29537964]
[799.43066406 342.33435059]
[776.53485107 352.37332153]
[753.63897705 362.41229248]
[730.74316406 372.45126343]
[707.84735107 382.49026489]
[684.95153809 392.52923584]
[662.05566406 402.56820679]
[639.15985107 412.60717773]
[616.26403809 422.64614868]
[593.36822510 432.68511963]
[570.47235107 442.72409058]
[547.57653809 452.76306152]
[524.68072510 462.80203247]
[501.78488159 472.84100342]
[478.88903809 482.87997437]
[455.99322510 492.91894531]
[433.09738159 502.95791626]
[410.20156860 512.99688721]
[387.30572510 523.03588867]
[364.40991211 533.07482910]
[341.51406860 543.11383057]
[318.61825562 553.15277100]
[295.72241211 563.19177246]
[260.00000000 539.84936523]
[260.00000000 514.84936523]
[260.00000000 489.84936523]
[260.00000000 464.84936523]
[281.65063477 452.34936523]
[260.00000000 439.84936523]
[260.00000000 414.84936523]
[260.00000000 389.84936523]
[260.00000000 364.84936523]
[260.00000000 339.84936523]
[270.97467041 317.38702393]
[260.00000000 294.92468262]
[260.00000000 269.92468262]
[260.00000000 244.92468262]
[260.00000000 219.92468262]
[270.97467041 197.46234131]
[260.00000000 175.00000000]
[260.00000000 150.00000000]
[260.00000000 125.00000000]
[260.00000000 100.00000000]
[335.00000000 100.00000000]
[335.00000000 125.00000000]
[335.00000000 150.00000000]
[335.00000000 175.00000000]
[313.34936523 187.50000000]
[335.00000000 200.00000000]
[335.00000000 225.00000000]
[335.00000000 250.00000000]
[313.37457275 262.54357910]
[299.06958008 283.04641724]
[294.76141357 307.67242432]
[301.25622559 331.81402588]
[317.33877563 350.95434570]
[340.00000000 361.51220703]
[365.00000000 361.51220703]
[387.66125488 350.95434570]
[403.74377441 331.81402588]
[410.23858643 307.67242432]
[405.93041992 283.04641724]
[391.62542725 262.54357910]
[370.00000000 250.00000000]
[370.00000000 225.00000000]
[370.00000000 200.00000000]
[370.00000000 175.00000000]
[370.00000000 150.00000000]
[370.00000000 125.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[242.49999909 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[242.49999909 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[]
[]
[242.49999882 317.38701752 28.47466677 232.07849300 180.00000000 1.00000000]
[242.49999882 317.38701752 28.47466677 180.00000000 127.92150749 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[242.49999982 605.63611013 68.07456920 255.10366144 233.94203664 1.00000000]
[242.49999982 605.63611013 68.07456920 233.94203664 212.78041183 1.00000000]
[242.49999982 605.63611013 68.07456920 212.78041183 191.61878703 1.00000000]
[242.49999982 605.63611013 68.07456920 191.61878703 170.45716223 1.00000000]
[242.49999982 605.63611013 68.07456920 170.45716223 149.29553742 1.00000000]
[242.49999982 605.63611013 68.07456920 149.29553742 128.13391262 1.00000000]
[242.49999982 605.63611013 68.07456920 128.13391262 106.97228782 1.00000000]
[242.49999982 605.63611013 68.07456920 106.97228782 85.81066302 1.00000000]
[242.49999982 605.63611013 68.07456920 85.81066302 64.64903821 1.00000000]
[242.49999982 605.63611013 68.07456920 64.64903821 43.48741341 1.00000000]
[]
[]
[]
[]
[]
[431.98602063 708.90895500 30.52836670 173.61478904 125.27355101 1.00000000]
[431.98602063 708.90895500 30.52836670 125.27355101 76.93231297 1.00000000]
[431.98602063 708.90895500 30.52836670 76.93231297 28.59107494 1.00000000]
[431.98602063 708.90895500 30.52836670 28.59107494 340.24983691 1.00000000]
[431.98602063 708.90895500 30.52836670 340.24983691 291.90859888 1.00000000]
[431.98602063 708.90895500 30.52836670 291.90859888 243.56736085 1.00000000]
[]
[]
[]
[]
[]
[242.49999982 605.63611013 68.07456920 13.69473648 351.22066738 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1055.98799625 248.95175297 28.47466729 118.40282082 66.32432889 1.00000000]
[1055.98799625 248.95175297 28.47466729 66.32432889 14.24583697 1.00000000]
[]
[1122.36479982 219.84798295 30.52836670 121.34804296 73.00680493 1.00000000]
[1122.36479982 219.84798295 30.52836670 73.00680493 24.66556690 1.00000000]
[1122.36479982 219.84798295 30.52836670 24.66556690 336.32432887 1.00000000]
[1122.36479982 219.84798295 30.52836670 336.32432887 287.98309084 1.00000000]
[1122.36479982 219.84798295 30.52836670 287.98309084 239.64185280 1.00000000]
[1122.36479982 219.84798295 30.52836670 239.64185280 191.30061477 1.00000000]
[]
[1055.98799625 248.95175297 28.47466729 298.40282077 246.32432884 1.00000000]
[1055.98799625 248.95175297 28.47466729 246.32432884 194.24583701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[242.49999982 605.63611013 68.07456920 321.42799045 284.89633837 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[242.49999882 317.38701752 28.47466677 52.07849066 360.00000000 1.00000000]
[242.49999882 317.38701752 28.47466677 360.00000000 307.92150857 1.00000000]
[]
[]
[]
[242.49999909 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[242.49999909 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[352.50000054 305.08353160 57.79658687 252.37498341 227.39421673 1.00000000]
[352.50000054 305.08353160 57.79658687 227.39421673 202.41345005 1.00000000]
[352.50000054 305.08353160 57.79658687 202.41345005 177.43268337 1.00000000]
[352.50000054 305.08353160 57.79658687 177.43268337 152.45191670 1.00000000]
[352.50000054 305.08353160 57.79658687 152.45191670 127.47115002 1.00000000]
[352.50000054 305.08353160 57.79658687 127.47115002 102.49038334 1.00000000]
[352.50000054 305.08353160 57.79658687 102.49038334 77.50961666 1.00000000]
[352.50000054 305.08353160 57.79658687 77.50961666 52.52884998 1.00000000]
[352.50000054 305.08353160 57.79658687 52.52884998 27.54808330 1.00000000]
[352.50000054 305.08353160 57.79658687 27.54808330 2.56731663 1.00000000]
[352.50000054 305.08353160 57.79658687 2.56731663 337.58654995 1.00000000]
[352.50000054 305.08353160 57.79658687 337.58654995 312.60578327 1.00000000]
[352.50000054 305.08353160 57.79658687 312.60578327 287.62501659 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 147]
[7 146]
[8 145]
[9 144]
[11 142]
[12 141]
[13 140]
[14 139]
[16 137]
[17 136]
[18 135]
[19 134]
[20 133]
[21 131]
[22 130]
[23 129]
[24 128]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[85 93]
[86 92]
[148 174]
[149 173]
[150 172]
[151 171]
[153 170]
[154 169]
[155 168]
] def

init

% Start Annotations
66 127 12 1.00 0.60 0.67 omark 51 112 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
