%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:52 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUUUUGCGUUUCCGGGCCAGGGCAAAAUUCUGCUUUAAUCACUGAGCUGGCAUUAGUGGGACUUUUAACAUUAAAAAAAAAAAAAAAAAAAGUCCCACUAAUGCCAGUGAUUGCCCUAUUCCUAAAGCCUUUAGCCAAACAUUGUAAGGACAGCCUGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[500.00000000 125.00000000]
[500.00000000 150.00000000]
[500.00000000 175.00000000]
[500.00000000 200.00000000]
[500.00000000 225.00000000]
[461.69430542 242.50410461]
[435.42959595 275.42648315]
[411.17468262 269.36843872]
[386.91979980 263.31039429]
[362.66488647 257.25231934]
[338.41000366 251.19427490]
[314.15512085 245.13623047]
[289.90020752 239.07817078]
[288.97848511 214.09516907]
[282.27960205 190.00938416]
[270.16989136 168.13804626]
[253.31167603 149.67727661]
[232.62687683 135.63667297]
[209.24670410 126.78408813]
[184.44982910 123.60367584]
[159.59236145 126.26936340]
[136.03370667 134.63537598]
[115.06228638 148.24415588]
[97.82498169 166.35150146]
[85.26450348 187.96710205]
[78.06774902 211.90882874]
[76.62831879 236.86735535]
[81.02492523 261.47772217]
[91.01712799 284.39401245]
[106.05845642 304.36294556]
[125.32632446 320.29244995]
[147.76698303 331.31137085]
[172.15319824 336.81707764]
[197.15129089 336.50848389]
[204.39538574 360.43594360]
[211.63948059 384.36340332]
[218.88357544 408.29086304]
[226.12767029 432.21832275]
[233.37176514 456.14575195]
[240.61585999 480.07321167]
[247.85995483 504.00067139]
[255.10404968 527.92810059]
[262.34814453 551.85559082]
[269.59225464 575.78302002]
[276.83633423 599.71051025]
[284.08044434 623.63793945]
[291.32452393 647.56542969]
[298.56863403 671.49285889]
[305.81271362 695.42028809]
[313.05682373 719.34777832]
[320.30090332 743.27520752]
[327.54501343 767.20269775]
[334.78909302 791.13012695]
[342.03320312 815.05755615]
[321.63824463 829.51599121]
[305.80899048 848.86633301]
[295.67944336 871.72222900]
[291.97531128 896.44628906]
[294.96197510 921.26721191]
[304.42547607 944.40686035]
[319.68780518 964.20739746]
[339.65554810 979.25030518]
[362.89819336 988.45788574]
[387.75057983 991.17047119]
[412.43228149 987.19372559]
[435.17501831 976.81262207]
[454.34945679 960.77075195]
[468.58193970 940.21752930]
[476.85281372 916.62530518]
[478.56954956 891.68432617]
[473.60913086 867.18139648]
[462.32693481 844.87188721]
[445.53128052 826.35418701]
[424.42538452 812.95489502]
[400.52133179 805.63397217]
[375.53164673 804.91583252]
[368.28753662 780.98840332]
[361.04345703 757.06091309]
[353.79934692 733.13348389]
[346.55526733 709.20605469]
[339.31115723 685.27856445]
[332.06704712 661.35113525]
[324.82296753 637.42364502]
[317.57885742 613.49621582]
[310.33477783 589.56878662]
[303.09066772 565.64129639]
[295.84658813 541.71386719]
[288.60247803 517.78637695]
[281.35839844 493.85894775]
[274.11428833 469.93148804]
[266.87020874 446.00402832]
[259.62609863 422.07656860]
[252.38201904 398.14910889]
[245.13792419 374.22167969]
[237.89382935 350.29421997]
[230.64973450 326.36676025]
[251.62115479 312.75796509]
[268.85845947 294.65063477]
[281.41894531 273.03503418]
[305.67382812 279.09307861]
[329.92874146 285.15112305]
[354.18362427 291.20919800]
[378.43853760 297.26724243]
[402.69342041 303.32528687]
[426.94830322 309.38333130]
[429.19766235 334.53607178]
[438.29714966 358.09280396]
[453.54086304 378.22607422]
[473.74630737 393.37402344]
[497.34594727 402.36154175]
[522.50909424 404.49142456]
[547.28363037 399.59841919]
[569.74768066 388.06213379]
[588.15856934 370.77749634]
[601.08801270 349.08535767]
[607.53308105 324.66854858]
[632.46118164 322.77346802]
[657.38922119 320.87841797]
[682.31732178 318.98333740]
[702.47302246 333.77340698]
[727.40112305 331.87835693]
[745.08941650 314.21130371]
[763.12695312 331.52160645]
[787.79980469 335.55270386]
[810.40875244 324.88336182]
[822.98229980 303.27532959]
[821.08728027 278.34725952]
[805.39172363 258.88833618]
[781.42974854 251.75935364]
[757.64978027 259.47393799]
[742.43627930 279.31201172]
[722.28057861 264.52191162]
[697.35247803 266.41699219]
[679.66418457 284.08404541]
[654.73614502 285.97909546]
[629.80804443 287.87417603]
[604.88000488 289.76925659]
[594.95111084 266.82546997]
[579.13372803 247.46543884]
[558.63043213 233.16110229]
[535.00000000 225.00000000]
[535.00000000 200.00000000]
[535.00000000 175.00000000]
[535.00000000 150.00000000]
[535.00000000 125.00000000]
[535.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[517.50000000 313.96249784 90.66739228 258.87131868 232.01181672 1.00000000]
[517.50000000 313.96249784 90.66739228 232.01181672 205.15231475 1.00000000]
[]
[]
[]
[]
[]
[]
[183.34171956 230.50106369 106.90312956 4.60193327 351.17221663 1.00000000]
[183.34171956 230.50106369 106.90312956 351.17221663 337.74249999 1.00000000]
[183.34171956 230.50106369 106.90312956 337.74249999 324.31278335 1.00000000]
[183.34171956 230.50106369 106.90312956 324.31278335 310.88306671 1.00000000]
[183.34171956 230.50106369 106.90312956 310.88306671 297.45335007 1.00000000]
[183.34171956 230.50106369 106.90312956 297.45335007 284.02363343 1.00000000]
[183.34171956 230.50106369 106.90312956 284.02363343 270.59391679 1.00000000]
[183.34171956 230.50106369 106.90312956 270.59391679 257.16420016 1.00000000]
[183.34171956 230.50106369 106.90312956 257.16420016 243.73448352 1.00000000]
[183.34171956 230.50106369 106.90312956 243.73448352 230.30476688 1.00000000]
[183.34171956 230.50106369 106.90312956 230.30476688 216.87505024 1.00000000]
[183.34171956 230.50106369 106.90312956 216.87505024 203.44533360 1.00000000]
[183.34171956 230.50106369 106.90312956 203.44533360 190.01561696 1.00000000]
[183.34171956 230.50106369 106.90312956 190.01561696 176.58590032 1.00000000]
[183.34171956 230.50106369 106.90312956 176.58590032 163.15618368 1.00000000]
[183.34171956 230.50106369 106.90312956 163.15618368 149.72646704 1.00000000]
[183.34171956 230.50106369 106.90312956 149.72646704 136.29675041 1.00000000]
[183.34171956 230.50106369 106.90312956 136.29675041 122.86703377 1.00000000]
[183.34171956 230.50106369 106.90312956 122.86703377 109.43731713 1.00000000]
[183.34171956 230.50106369 106.90312956 109.43731713 96.00760049 1.00000000]
[183.34171956 230.50106369 106.90312956 96.00760049 82.57788385 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[385.36770229 897.79868056 93.40218624 242.35732303 226.97540127 1.00000000]
[385.36770229 897.79868056 93.40218624 226.97540127 211.59347951 1.00000000]
[385.36770229 897.79868056 93.40218624 211.59347951 196.21155776 1.00000000]
[385.36770229 897.79868056 93.40218624 196.21155776 180.82963600 1.00000000]
[385.36770229 897.79868056 93.40218624 180.82963600 165.44771424 1.00000000]
[385.36770229 897.79868056 93.40218624 165.44771424 150.06579248 1.00000000]
[385.36770229 897.79868056 93.40218624 150.06579248 134.68387072 1.00000000]
[385.36770229 897.79868056 93.40218624 134.68387072 119.30194896 1.00000000]
[385.36770229 897.79868056 93.40218624 119.30194896 103.92002720 1.00000000]
[385.36770229 897.79868056 93.40218624 103.92002720 88.53810544 1.00000000]
[385.36770229 897.79868056 93.40218624 88.53810544 73.15618368 1.00000000]
[385.36770229 897.79868056 93.40218624 73.15618368 57.77426192 1.00000000]
[385.36770229 897.79868056 93.40218624 57.77426192 42.39234017 1.00000000]
[385.36770229 897.79868056 93.40218624 42.39234017 27.01041841 1.00000000]
[385.36770229 897.79868056 93.40218624 27.01041841 11.62849665 1.00000000]
[385.36770229 897.79868056 93.40218624 11.62849665 356.24657489 1.00000000]
[385.36770229 897.79868056 93.40218624 356.24657489 340.86465313 1.00000000]
[385.36770229 897.79868056 93.40218624 340.86465313 325.48273137 1.00000000]
[385.36770229 897.79868056 93.40218624 325.48273137 310.10080961 1.00000000]
[385.36770229 897.79868056 93.40218624 310.10080961 294.71888785 1.00000000]
[385.36770229 897.79868056 93.40218624 294.71888785 279.33696609 1.00000000]
[385.36770229 897.79868056 93.40218624 279.33696609 263.95504434 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[183.34171956 230.50106369 106.90312956 63.73448352 50.30476688 1.00000000]
[183.34171956 230.50106369 106.90312956 50.30476688 36.87505024 1.00000000]
[183.34171956 230.50106369 106.90312956 36.87505024 23.44533360 1.00000000]
[]
[]
[]
[]
[]
[]
[517.50000000 313.96249784 90.66739228 182.89495212 166.88462307 1.00000000]
[517.50000000 313.96249784 90.66739228 166.88462307 150.87429401 1.00000000]
[517.50000000 313.96249784 90.66739228 150.87429401 134.86396496 1.00000000]
[517.50000000 313.96249784 90.66739228 134.86396496 118.85363591 1.00000000]
[517.50000000 313.96249784 90.66739228 118.85363591 102.84330686 1.00000000]
[517.50000000 313.96249784 90.66739228 102.84330686 86.83297781 1.00000000]
[517.50000000 313.96249784 90.66739228 86.83297781 70.82264875 1.00000000]
[517.50000000 313.96249784 90.66739228 70.82264875 54.81231970 1.00000000]
[517.50000000 313.96249784 90.66739228 54.81231970 38.80199065 1.00000000]
[517.50000000 313.96249784 90.66739228 38.80199065 22.79166160 1.00000000]
[517.50000000 313.96249784 90.66739228 22.79166160 6.78133255 1.00000000]
[]
[]
[]
[712.37679590 299.14767279 36.01426010 146.57997512 105.96175930 1.00000000]
[712.37679590 299.14767279 36.01426010 105.96175930 65.34354341 1.00000000]
[712.37679590 299.14767279 36.01426010 65.34354341 24.72532740 1.00000000]
[781.94612153 293.85890873 42.10271758 151.09238629 116.55022298 1.00000000]
[781.94612153 293.85890873 42.10271758 116.55022298 82.00805963 1.00000000]
[781.94612153 293.85890873 42.10271758 82.00805963 47.46589627 1.00000000]
[781.94612153 293.85890873 42.10271758 47.46589627 12.92373291 1.00000000]
[781.94612153 293.85890873 42.10271758 12.92373291 338.38156955 1.00000000]
[781.94612153 293.85890873 42.10271758 338.38156955 303.83940619 1.00000000]
[781.94612153 293.85890873 42.10271758 303.83940619 269.29724284 1.00000000]
[781.94612153 293.85890873 42.10271758 269.29724284 234.75507948 1.00000000]
[781.94612153 293.85890873 42.10271758 234.75507948 200.21291606 1.00000000]
[712.37679590 299.14767279 36.01426010 326.57997483 285.96175902 1.00000000]
[712.37679590 299.14767279 36.01426010 285.96175902 245.34354320 1.00000000]
[712.37679590 299.14767279 36.01426010 245.34354320 204.72532743 1.00000000]
[]
[]
[]
[517.50000000 313.96249784 90.66739228 344.52396992 328.67514777 1.00000000]
[517.50000000 313.96249784 90.66739228 328.67514777 312.82632562 1.00000000]
[517.50000000 313.96249784 90.66739228 312.82632562 296.97750347 1.00000000]
[517.50000000 313.96249784 90.66739228 296.97750347 281.12868132 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[17 163]
[18 162]
[19 161]
[20 160]
[21 159]
[22 158]
[24 122]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[61 103]
[62 102]
[63 101]
[64 100]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[133 154]
[134 153]
[135 152]
[136 151]
[139 148]
] def

init

% Start Annotations
87 112 12 1.00 0.60 0.67 omark 52 85 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
