%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUAGGUGAGAUUCGUGGUAAGAUUUAUUGAGCAUUUAUUGUGUGCUAAGUGCUUUACAUGAAUGGUCCCAUUGAAUCCCAACAGCUUUGCGAAGUGUUGUUGGGAUUCAGCAGGACCAUUCGUGUAAAGUAAUAUUCCCAUUUUACAGAUGAAGAAACUGAAGGAUGGGGAGGGGGUCAAGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[100.00000000 275.00000000]
[77.32287598 285.52368164]
[59.82356262 303.37792969]
[49.75725937 326.26174927]
[48.42126465 351.22604370]
[55.98775101 375.05349731]
[71.48159027 394.67343140]
[92.90602875 407.55728149]
[117.50000000 412.04464722]
[142.09396362 407.55728149]
[163.51840210 394.67343140]
[179.01225281 375.05349731]
[186.57873535 351.22604370]
[185.24273682 326.26174927]
[175.17643738 303.37792969]
[157.67712402 285.52368164]
[135.00000000 275.00000000]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[185.00000000 100.00000000]
[185.00000000 125.00000000]
[185.00000000 150.00000000]
[185.00000000 175.00000000]
[185.00000000 200.00000000]
[167.74304199 218.08860779]
[165.36175537 242.97492981]
[178.87530518 264.00787354]
[202.50000000 272.18548584]
[226.12469482 264.00787354]
[239.63824463 242.97492981]
[237.25695801 218.08860779]
[220.00000000 200.00000000]
[220.00000000 175.00000000]
[220.00000000 150.00000000]
[220.00000000 125.00000000]
[220.00000000 100.00000000]
[245.00000000 100.00000000]
[270.00000000 100.00000000]
[295.00000000 100.00000000]
[320.00000000 100.00000000]
[320.00000000 125.00000000]
[320.00000000 150.00000000]
[320.00000000 175.00000000]
[320.00000000 200.00000000]
[320.00000000 225.00000000]
[320.00000000 250.00000000]
[320.00000000 275.00000000]
[320.00000000 300.00000000]
[320.00000000 325.00000000]
[320.00000000 350.00000000]
[320.00000000 375.00000000]
[320.00000000 400.00000000]
[320.00000000 425.00000000]
[320.00000000 450.00000000]
[320.00000000 475.00000000]
[320.00000000 500.00000000]
[320.00000000 525.00000000]
[320.00000000 550.00000000]
[303.72460938 568.97662354]
[303.72460938 593.97662354]
[320.00000000 612.95324707]
[320.00000000 637.95324707]
[320.00000000 662.95324707]
[320.00000000 687.95324707]
[320.00000000 712.95324707]
[320.00000000 737.95324707]
[320.00000000 762.95324707]
[320.00000000 787.95324707]
[320.00000000 812.95324707]
[320.00000000 837.95324707]
[320.00000000 862.95324707]
[320.00000000 887.95324707]
[320.00000000 912.95324707]
[320.00000000 937.95324707]
[320.00000000 962.95324707]
[299.52520752 977.29833984]
[288.57092285 999.77062988]
[289.88348389 1024.73608398]
[303.13381958 1045.93591309]
[325.00000000 1058.05493164]
[350.00000000 1058.05493164]
[371.86618042 1045.93591309]
[385.11651611 1024.73608398]
[386.42907715 999.77062988]
[375.47479248 977.29833984]
[355.00000000 962.95324707]
[355.00000000 937.95324707]
[355.00000000 912.95324707]
[355.00000000 887.95324707]
[355.00000000 862.95324707]
[355.00000000 837.95324707]
[355.00000000 812.95324707]
[355.00000000 787.95324707]
[355.00000000 762.95324707]
[355.00000000 737.95324707]
[355.00000000 712.95324707]
[355.00000000 687.95324707]
[355.00000000 662.95324707]
[355.00000000 637.95324707]
[355.00000000 612.95324707]
[371.27539062 593.97662354]
[371.27539062 568.97662354]
[355.00000000 550.00000000]
[355.00000000 525.00000000]
[355.00000000 500.00000000]
[355.00000000 475.00000000]
[355.00000000 450.00000000]
[355.00000000 425.00000000]
[355.00000000 400.00000000]
[355.00000000 375.00000000]
[355.00000000 350.00000000]
[355.00000000 325.00000000]
[355.00000000 300.00000000]
[355.00000000 275.00000000]
[355.00000000 250.00000000]
[355.00000000 225.00000000]
[355.00000000 200.00000000]
[355.00000000 175.00000000]
[355.00000000 150.00000000]
[355.00000000 125.00000000]
[355.00000000 100.00000000]
[380.00000000 100.00000000]
[405.00000000 100.00000000]
[430.00000000 100.00000000]
[455.00000000 100.00000000]
[455.00000000 125.00000000]
[455.00000000 150.00000000]
[455.00000000 175.00000000]
[455.00000000 200.00000000]
[455.00000000 225.00000000]
[455.00000000 250.00000000]
[455.00000000 275.00000000]
[455.00000000 300.00000000]
[455.00000000 325.00000000]
[444.02532959 347.46234131]
[455.00000000 369.92468262]
[455.00000000 394.92468262]
[455.00000000 419.92468262]
[435.33206177 435.35748291]
[426.63778687 458.79699707]
[431.48419189 483.32275391]
[448.44033813 501.69363403]
[472.50000000 508.48568726]
[496.55966187 501.69363403]
[513.51580811 483.32275391]
[518.36218262 458.79699707]
[509.66793823 435.35748291]
[490.00000000 419.92468262]
[490.00000000 394.92468262]
[490.00000000 369.92468262]
[500.97467041 347.46234131]
[490.00000000 325.00000000]
[490.00000000 300.00000000]
[490.00000000 275.00000000]
[490.00000000 250.00000000]
[490.00000000 225.00000000]
[490.00000000 200.00000000]
[490.00000000 175.00000000]
[490.00000000 150.00000000]
[490.00000000 125.00000000]
[490.00000000 100.00000000]
[515.00000000 100.00000000]
[540.00000000 100.00000000]
[565.00000000 100.00000000]
[590.00000000 100.00000000]
[615.00000000 100.00000000]
[640.00000000 100.00000000]
[665.00000000 100.00000000]
[690.00000000 100.00000000]
[715.00000000 100.00000000]
[740.00000000 100.00000000]
[765.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[117.50000000 342.40498929 69.63966242 255.44592728 234.76518637 1.00000000]
[117.50000000 342.40498929 69.63966242 234.76518637 214.08444546 1.00000000]
[117.50000000 342.40498929 69.63966242 214.08444546 193.40370455 1.00000000]
[117.50000000 342.40498929 69.63966242 193.40370455 172.72296364 1.00000000]
[117.50000000 342.40498929 69.63966242 172.72296364 152.04222273 1.00000000]
[117.50000000 342.40498929 69.63966242 152.04222273 131.36148182 1.00000000]
[117.50000000 342.40498929 69.63966242 131.36148182 110.68074091 1.00000000]
[117.50000000 342.40498929 69.63966242 110.68074091 90.00000000 1.00000000]
[117.50000000 342.40498929 69.63966242 90.00000000 69.31925909 1.00000000]
[117.50000000 342.40498929 69.63966242 69.31925909 48.63851818 1.00000000]
[117.50000000 342.40498929 69.63966242 48.63851818 27.95777727 1.00000000]
[117.50000000 342.40498929 69.63966242 27.95777727 7.27703636 1.00000000]
[117.50000000 342.40498929 69.63966242 7.27703636 346.59629545 1.00000000]
[117.50000000 342.40498929 69.63966242 346.59629545 325.91555454 1.00000000]
[117.50000000 342.40498929 69.63966242 325.91555454 305.23481363 1.00000000]
[117.50000000 342.40498929 69.63966242 305.23481363 284.55407272 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[202.50000000 233.97147640 38.21401848 242.74528147 204.55896110 1.00000000]
[202.50000000 233.97147640 38.21401848 204.55896110 166.37264073 1.00000000]
[202.50000000 233.97147640 38.21401848 166.37264073 128.18632037 1.00000000]
[202.50000000 233.97147640 38.21401848 128.18632037 90.00000000 1.00000000]
[202.50000000 233.97147640 38.21401848 90.00000000 51.81367963 1.00000000]
[202.50000000 233.97147640 38.21401848 51.81367963 13.62735927 1.00000000]
[202.50000000 233.97147640 38.21401848 13.62735927 335.44103890 1.00000000]
[202.50000000 233.97147640 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[337.50000000 581.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[337.50000000 581.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[337.50000000 581.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[337.50000000 1009.71542563 49.92949042 249.48245051 220.48564133 1.00000000]
[337.50000000 1009.71542563 49.92949042 220.48564133 191.48883214 1.00000000]
[337.50000000 1009.71542563 49.92949042 191.48883214 162.49202296 1.00000000]
[337.50000000 1009.71542563 49.92949042 162.49202296 133.49521378 1.00000000]
[337.50000000 1009.71542563 49.92949042 133.49521378 104.49840459 1.00000000]
[337.50000000 1009.71542563 49.92949042 104.49840459 75.50159541 1.00000000]
[337.50000000 1009.71542563 49.92949042 75.50159541 46.50478622 1.00000000]
[337.50000000 1009.71542563 49.92949042 46.50478622 17.50797704 1.00000000]
[337.50000000 1009.71542563 49.92949042 17.50797704 348.51116786 1.00000000]
[337.50000000 1009.71542563 49.92949042 348.51116786 319.51435867 1.00000000]
[337.50000000 1009.71542563 49.92949042 319.51435867 290.51754949 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[337.50000000 581.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[337.50000000 581.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[337.50000000 581.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[472.49999971 347.46233923 28.47466700 232.07849253 180.00000000 1.00000000]
[472.49999971 347.46233923 28.47466700 180.00000000 127.92150777 1.00000000]
[]
[]
[472.50000009 462.47615004 46.00953986 247.64427021 216.11541616 1.00000000]
[472.50000009 462.47615004 46.00953986 216.11541616 184.58656211 1.00000000]
[472.50000009 462.47615004 46.00953986 184.58656211 153.05770806 1.00000000]
[472.50000009 462.47615004 46.00953986 153.05770806 121.52885400 1.00000000]
[472.50000009 462.47615004 46.00953986 121.52885400 89.99999995 1.00000000]
[472.50000009 462.47615004 46.00953986 89.99999995 58.47114590 1.00000000]
[472.50000009 462.47615004 46.00953986 58.47114590 26.94229185 1.00000000]
[472.50000009 462.47615004 46.00953986 26.94229185 355.41343780 1.00000000]
[472.50000009 462.47615004 46.00953986 355.41343780 323.88458374 1.00000000]
[472.50000009 462.47615004 46.00953986 323.88458374 292.35572969 1.00000000]
[]
[]
[472.49999971 347.46233923 28.47466700 52.07849123 360.00000000 1.00000000]
[472.49999971 347.46233923 28.47466700 360.00000000 307.92150838 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 27]
[6 26]
[7 25]
[8 24]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[73 112]
[74 111]
[75 110]
[76 109]
[77 108]
[78 107]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[137 173]
[138 172]
[139 171]
[140 170]
[141 169]
[142 168]
[143 167]
[144 166]
[145 165]
[146 164]
[148 162]
[149 161]
[150 160]
] def

init

% Start Annotations
105 131 12 1.00 0.60 0.67 omark 54 78 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
