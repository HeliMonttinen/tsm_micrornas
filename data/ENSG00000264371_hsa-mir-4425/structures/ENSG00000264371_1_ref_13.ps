%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GURGGUGGGACUAUGCUAACAUUUUUGUGCUAAGUGCUUUACAUGAAUGGUCCCAUUUAAUCCUCCCAACAGCUCUGUGAAGCAGUCACUAGUAAUAUUCCCAUUUUACAGAUGAAGAAACUGAGGCAUGGGGAGGGGGUCAAGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[175.00000000 200.00000000]
[175.00000000 225.00000000]
[175.00000000 250.00000000]
[175.00000000 275.00000000]
[175.00000000 300.00000000]
[175.00000000 325.00000000]
[175.00000000 350.00000000]
[151.72644043 359.12915039]
[132.35971069 374.93829346]
[118.75549316 395.91271973]
[112.21732330 420.04260254]
[113.37166595 445.01596069]
[90.54444885 455.20996094]
[67.71723175 465.40399170]
[42.74543762 466.59118652]
[29.64320946 487.88278198]
[39.83723831 510.70999146]
[64.43712616 515.16479492]
[81.98887634 497.36209106]
[104.81608582 487.16809082]
[127.64330292 476.97406006]
[145.46907043 494.50238037]
[135.66056824 517.49786377]
[115.44713593 532.20898438]
[113.00233459 557.08917236]
[129.96568298 575.45336914]
[154.96131897 574.98632812]
[171.22680664 556.00128174]
[167.85427856 531.22979736]
[177.66278076 508.23428345]
[202.65200806 508.96826172]
[226.66848755 502.02499390]
[247.41101074 488.06979370]
[262.89208984 468.43981934]
[271.62832642 445.01596069]
[272.78268433 420.04260254]
[266.24450684 395.91271973]
[252.64028931 374.93829346]
[233.27355957 359.12915039]
[210.00000000 350.00000000]
[210.00000000 325.00000000]
[210.00000000 300.00000000]
[210.00000000 275.00000000]
[210.00000000 250.00000000]
[210.00000000 225.00000000]
[210.00000000 200.00000000]
[210.00000000 175.00000000]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[310.00000000 125.00000000]
[310.00000000 150.00000000]
[310.00000000 175.00000000]
[310.00000000 200.00000000]
[310.00000000 225.00000000]
[310.00000000 250.00000000]
[288.19293213 262.22503662]
[273.34518433 282.33831787]
[268.08551025 306.77877808]
[273.34518433 331.21923828]
[288.19293213 351.33251953]
[310.00000000 363.55758667]
[310.00000000 388.55758667]
[310.00000000 413.55758667]
[299.02532959 436.01992798]
[310.00000000 458.48226929]
[310.00000000 483.48226929]
[287.80746460 494.99273682]
[271.79556274 514.19219971]
[264.45751953 538.09100342]
[266.93600464 562.96783447]
[278.84509277 584.94903564]
[298.33032227 600.61193848]
[322.35766602 607.51751709]
[347.18572998 604.59051514]
[361.21533203 625.28277588]
[375.24493408 645.97503662]
[389.27453613 666.66735840]
[403.30416870 687.35961914]
[392.39892578 709.85571289]
[417.33377075 708.05187988]
[431.36337280 728.74414062]
[445.39297485 749.43640137]
[459.42257690 770.12872314]
[450.52600098 793.49212646]
[454.07034302 818.23962402]
[469.16702271 838.16674805]
[492.03115845 848.27770996]
[516.93060303 846.03759766]
[537.62286377 832.00799561]
[548.92028809 809.70623779]
[547.99053955 784.72351074]
[535.06665039 763.32318115]
[513.38879395 750.87042236]
[488.39175415 750.48724365]
[474.36215210 729.79498291]
[460.33255005 709.10272217]
[446.30294800 688.41040039]
[432.27334595 667.71813965]
[418.24374390 647.02587891]
[429.14895630 624.52972412]
[404.21414185 626.33361816]
[390.18450928 605.64135742]
[376.15490723 584.94903564]
[388.06399536 562.96783447]
[390.54248047 538.09100342]
[383.20443726 514.19219971]
[367.19253540 494.99273682]
[345.00000000 483.48226929]
[345.00000000 458.48226929]
[355.97467041 436.01992798]
[345.00000000 413.55758667]
[345.00000000 388.55758667]
[345.00000000 363.55758667]
[366.80706787 351.33251953]
[381.65481567 331.21923828]
[386.91448975 306.77877808]
[381.65481567 282.33831787]
[366.80706787 262.22503662]
[345.00000000 250.00000000]
[345.00000000 225.00000000]
[345.00000000 200.00000000]
[345.00000000 175.00000000]
[345.00000000 150.00000000]
[345.00000000 125.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[192.50000000 428.84504767 80.76380094 257.48581972 239.67863732 1.00000000]
[192.50000000 428.84504767 80.76380094 239.67863732 221.87145493 1.00000000]
[192.50000000 428.84504767 80.76380094 221.87145493 204.06427254 1.00000000]
[192.50000000 428.84504767 80.76380094 204.06427254 186.25709014 1.00000000]
[192.50000000 428.84504767 80.76380094 186.25709014 168.44990775 1.00000000]
[]
[]
[56.35548715 489.64357809 26.77024824 295.11376046 239.44254726 1.00000000]
[56.35548715 489.64357809 26.77024824 239.44254726 183.77133406 1.00000000]
[56.35548715 489.64357809 26.77024824 183.77133406 128.10012087 1.00000000]
[56.35548715 489.64357809 26.77024824 128.10012087 72.42890767 1.00000000]
[56.35548715 489.64357809 26.77024824 72.42890767 16.75769447 1.00000000]
[]
[]
[192.50000000 428.84504767 80.76380094 143.42154718 125.61436479 1.00000000]
[]
[141.94318817 547.37277659 30.52836670 258.12389860 209.78266057 1.00000000]
[141.94318817 547.37277659 30.52836670 209.78266057 161.44142254 1.00000000]
[141.94318817 547.37277659 30.52836670 161.44142254 113.10018450 1.00000000]
[141.94318817 547.37277659 30.52836670 113.10018450 64.75894647 1.00000000]
[141.94318817 547.37277659 30.52836670 64.75894647 16.41770844 1.00000000]
[141.94318817 547.37277659 30.52836670 16.41770844 328.07647041 1.00000000]
[]
[192.50000000 428.84504767 80.76380094 100.58600422 82.77882183 1.00000000]
[192.50000000 428.84504767 80.76380094 82.77882183 64.97163943 1.00000000]
[192.50000000 428.84504767 80.76380094 64.97163943 47.16445704 1.00000000]
[192.50000000 428.84504767 80.76380094 47.16445704 29.35727465 1.00000000]
[192.50000000 428.84504767 80.76380094 29.35727465 11.55009225 1.00000000]
[192.50000000 428.84504767 80.76380094 11.55009225 353.74290986 1.00000000]
[192.50000000 428.84504767 80.76380094 353.74290986 335.93572746 1.00000000]
[192.50000000 428.84504767 80.76380094 335.93572746 318.12854507 1.00000000]
[192.50000000 428.84504767 80.76380094 318.12854507 300.32136268 1.00000000]
[192.50000000 428.84504767 80.76380094 300.32136268 282.51418028 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[327.49999989 306.77879003 59.41448475 252.86998600 228.57999066 1.00000000]
[327.49999989 306.77879003 59.41448475 228.57999066 204.28999533 1.00000000]
[327.49999989 306.77879003 59.41448475 204.28999533 180.00000000 1.00000000]
[327.49999989 306.77879003 59.41448475 180.00000000 155.71000467 1.00000000]
[327.49999989 306.77879003 59.41448475 155.71000467 131.42000934 1.00000000]
[327.49999989 306.77879003 59.41448475 131.42000934 107.13001400 1.00000000]
[]
[]
[327.49999953 436.01991933 28.47466693 232.07849269 180.00000000 1.00000000]
[327.49999953 436.01991933 28.47466693 180.00000000 127.92150770 1.00000000]
[]
[327.49999998 544.37194299 63.35458712 253.96508418 231.20659673 1.00000000]
[327.49999998 544.37194299 63.35458712 231.20659673 208.44810927 1.00000000]
[327.49999998 544.37194299 63.35458712 208.44810927 185.68962182 1.00000000]
[327.49999998 544.37194299 63.35458712 185.68962182 162.93113436 1.00000000]
[327.49999998 544.37194299 63.35458712 162.93113436 140.17264691 1.00000000]
[327.49999998 544.37194299 63.35458712 140.17264691 117.41415945 1.00000000]
[327.49999998 544.37194299 63.35458712 117.41415945 94.65567200 1.00000000]
[327.49999998 544.37194299 63.35458712 94.65567200 71.89718454 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[500.14937433 799.01263122 49.92949042 215.34471928 186.34791010 1.00000000]
[500.14937433 799.01263122 49.92949042 186.34791010 157.35110092 1.00000000]
[500.14937433 799.01263122 49.92949042 157.35110092 128.35429173 1.00000000]
[500.14937433 799.01263122 49.92949042 128.35429173 99.35748255 1.00000000]
[500.14937433 799.01263122 49.92949042 99.35748255 70.36067336 1.00000000]
[500.14937433 799.01263122 49.92949042 70.36067336 41.36386418 1.00000000]
[500.14937433 799.01263122 49.92949042 41.36386418 12.36705499 1.00000000]
[500.14937433 799.01263122 49.92949042 12.36705499 343.37024581 1.00000000]
[500.14937433 799.01263122 49.92949042 343.37024581 314.37343663 1.00000000]
[500.14937433 799.01263122 49.92949042 314.37343663 285.37662744 1.00000000]
[500.14937433 799.01263122 49.92949042 285.37662744 256.37981826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[327.49999998 544.37194299 63.35458712 39.82735300 17.06886554 1.00000000]
[327.49999998 544.37194299 63.35458712 17.06886554 354.31037809 1.00000000]
[327.49999998 544.37194299 63.35458712 354.31037809 331.55189063 1.00000000]
[327.49999998 544.37194299 63.35458712 331.55189063 308.79340318 1.00000000]
[327.49999998 544.37194299 63.35458712 308.79340318 286.03491573 1.00000000]
[]
[327.49999953 436.01991933 28.47466693 52.07849107 360.00000000 1.00000000]
[327.49999953 436.01991933 28.47466693 360.00000000 307.92150845 1.00000000]
[]
[]
[327.49999989 306.77879003 59.41448475 72.86998600 48.57999066 1.00000000]
[327.49999989 306.77879003 59.41448475 48.57999066 24.28999533 1.00000000]
[327.49999989 306.77879003 59.41448475 24.28999533 360.00000000 1.00000000]
[327.49999989 306.77879003 59.41448475 360.00000000 335.71000467 1.00000000]
[327.49999989 306.77879003 59.41448475 335.71000467 311.42000934 1.00000000]
[327.49999989 306.77879003 59.41448475 311.42000934 287.13001400 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 57]
[5 56]
[6 55]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[19 28]
[20 27]
[21 26]
[29 37]
[30 36]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[73 125]
[74 124]
[75 123]
[77 121]
[78 120]
[86 115]
[87 114]
[88 113]
[89 111]
[90 110]
[92 109]
[93 108]
[94 107]
[95 106]
] def

init

% Start Annotations
83 92 12 1.00 0.60 0.67 omark 37 63 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
