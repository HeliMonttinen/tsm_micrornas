%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUAGGUGGGACUCGUGCUAAGAUUUAUUGAGUGCUUAUUGUGUGCUAAGUGCUUUACAUGAAUGGUCCCAUUGAAUCCCAACAGCUCUGUGAAGUGUUGGGAUUCAGCAGGACCAUUCACGUAAAGUAAUAUUCCCAUUUUACAGAUGAAGAAACUGAGGGAUGGGGAGGGGGUCAAGU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[100.00000000 275.00000000]
[85.92854309 295.66384888]
[90.87763214 320.16906738]
[111.86563873 333.75225830]
[136.24812317 328.23010254]
[159.50975037 337.38961792]
[182.77137756 346.54916382]
[206.03300476 355.70867920]
[229.29461670 364.86819458]
[232.19166565 389.69976807]
[244.69787598 411.34680176]
[264.76272583 426.25997925]
[289.09625244 431.99404907]
[313.70861816 427.60882568]
[334.56433105 413.82336426]
[348.24377441 392.89794922]
[352.50399780 368.26361084]
[346.64648438 343.95950317]
[331.63165283 323.97064209]
[309.92141724 311.57446289]
[285.07543945 308.80349731]
[261.16763306 316.11212158]
[242.11795044 332.30191040]
[218.85633850 323.14239502]
[195.59471130 313.98287964]
[172.33308411 304.82336426]
[149.07145691 295.66384888]
[135.00000000 275.00000000]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[385.00000000 125.00000000]
[385.00000000 150.00000000]
[385.00000000 175.00000000]
[385.00000000 200.00000000]
[385.00000000 225.00000000]
[385.00000000 250.00000000]
[385.00000000 275.00000000]
[374.02532959 297.46234131]
[385.00000000 319.92468262]
[385.00000000 344.92468262]
[385.00000000 369.92468262]
[385.00000000 394.92468262]
[385.00000000 419.92468262]
[385.00000000 444.92468262]
[385.00000000 469.92468262]
[385.00000000 494.92468262]
[385.00000000 519.92468262]
[385.00000000 544.92468262]
[368.72460938 563.90130615]
[368.72460938 588.90130615]
[385.00000000 607.87786865]
[385.00000000 632.87786865]
[385.00000000 657.87786865]
[385.00000000 682.87786865]
[385.00000000 707.87786865]
[385.00000000 732.87786865]
[385.00000000 757.87786865]
[385.00000000 782.87786865]
[385.00000000 807.87786865]
[385.00000000 832.87786865]
[385.00000000 857.87786865]
[385.00000000 882.87786865]
[385.00000000 907.87786865]
[368.72460938 926.85449219]
[368.72460938 951.85449219]
[385.00000000 970.83111572]
[385.00000000 995.83111572]
[381.46456909 1020.57989502]
[402.50000000 1034.08947754]
[423.53543091 1020.57989502]
[420.00000000 995.83111572]
[420.00000000 970.83111572]
[436.27539062 951.85449219]
[436.27539062 926.85449219]
[420.00000000 907.87786865]
[420.00000000 882.87786865]
[420.00000000 857.87786865]
[420.00000000 832.87786865]
[420.00000000 807.87786865]
[420.00000000 782.87786865]
[420.00000000 757.87786865]
[420.00000000 732.87786865]
[420.00000000 707.87786865]
[420.00000000 682.87786865]
[420.00000000 657.87786865]
[420.00000000 632.87786865]
[420.00000000 607.87786865]
[436.27539062 588.90130615]
[436.27539062 563.90130615]
[420.00000000 544.92468262]
[420.00000000 519.92468262]
[420.00000000 494.92468262]
[420.00000000 469.92468262]
[420.00000000 444.92468262]
[420.00000000 419.92468262]
[420.00000000 394.92468262]
[420.00000000 369.92468262]
[420.00000000 344.92468262]
[420.00000000 319.92468262]
[430.97467041 297.46234131]
[420.00000000 275.00000000]
[420.00000000 250.00000000]
[420.00000000 225.00000000]
[420.00000000 200.00000000]
[420.00000000 175.00000000]
[420.00000000 150.00000000]
[420.00000000 125.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[520.00000000 125.00000000]
[520.00000000 150.00000000]
[520.00000000 175.00000000]
[520.00000000 200.00000000]
[520.00000000 225.00000000]
[520.00000000 250.00000000]
[520.00000000 275.00000000]
[520.00000000 300.00000000]
[520.00000000 325.00000000]
[509.02532959 347.46234131]
[520.00000000 369.92468262]
[520.00000000 394.92468262]
[520.00000000 419.92468262]
[500.33206177 435.35748291]
[491.63778687 458.79699707]
[496.48419189 483.32275391]
[513.44030762 501.69363403]
[537.50000000 508.48568726]
[561.55969238 501.69363403]
[578.51580811 483.32275391]
[583.36218262 458.79699707]
[574.66796875 435.35748291]
[555.00000000 419.92468262]
[555.00000000 394.92468262]
[555.00000000 369.92468262]
[565.97467041 347.46234131]
[555.00000000 325.00000000]
[555.00000000 300.00000000]
[555.00000000 275.00000000]
[555.00000000 250.00000000]
[555.00000000 225.00000000]
[555.00000000 200.00000000]
[555.00000000 175.00000000]
[555.00000000 150.00000000]
[555.00000000 125.00000000]
[555.00000000 100.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
[630.00000000 100.00000000]
[655.00000000 100.00000000]
[680.00000000 100.00000000]
[705.00000000 100.00000000]
[730.00000000 100.00000000]
[755.00000000 100.00000000]
[780.00000000 100.00000000]
[805.00000000 100.00000000]
[830.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[117.50000000 302.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[117.50000000 302.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[117.50000000 302.04002271 32.20889362 145.74629528 100.07468899 1.00000000]
[117.50000000 302.04002271 32.20889362 100.07468899 54.40308270 1.00000000]
[]
[]
[]
[]
[290.79702231 370.27764855 61.73983513 185.02652190 161.66453171 1.00000000]
[290.79702231 370.27764855 61.73983513 161.66453171 138.30254152 1.00000000]
[290.79702231 370.27764855 61.73983513 138.30254152 114.94055133 1.00000000]
[290.79702231 370.27764855 61.73983513 114.94055133 91.57856114 1.00000000]
[290.79702231 370.27764855 61.73983513 91.57856114 68.21657095 1.00000000]
[290.79702231 370.27764855 61.73983513 68.21657095 44.85458076 1.00000000]
[290.79702231 370.27764855 61.73983513 44.85458076 21.49259057 1.00000000]
[290.79702231 370.27764855 61.73983513 21.49259057 358.13060037 1.00000000]
[290.79702231 370.27764855 61.73983513 358.13060037 334.76861018 1.00000000]
[290.79702231 370.27764855 61.73983513 334.76861018 311.40661999 1.00000000]
[290.79702231 370.27764855 61.73983513 311.40661999 288.04462980 1.00000000]
[290.79702231 370.27764855 61.73983513 288.04462980 264.68263961 1.00000000]
[290.79702231 370.27764855 61.73983513 264.68263961 241.32064942 1.00000000]
[290.79702231 370.27764855 61.73983513 241.32064942 217.95865923 1.00000000]
[]
[]
[]
[]
[117.50000000 302.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[402.49999975 297.46233921 28.47466705 232.07849244 180.00000000 1.00000000]
[402.49999975 297.46233921 28.47466705 180.00000000 127.92150781 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[402.50000023 576.40128744 36.01426010 240.92732373 200.30910788 1.00000000]
[402.50000023 576.40128744 36.01426010 200.30910788 159.69089203 1.00000000]
[402.50000023 576.40128744 36.01426010 159.69089203 119.07267617 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[402.50000053 939.35450597 36.01426010 240.92732373 200.30910788 1.00000000]
[402.50000053 939.35450597 36.01426010 200.30910788 159.69089203 1.00000000]
[402.50000053 939.35450597 36.01426010 159.69089203 119.07267617 1.00000000]
[]
[402.49999975 1010.95793598 23.13159326 220.83980080 155.41990055 1.00000000]
[402.49999975 1010.95793598 23.13159326 155.41990055 89.99999789 1.00000000]
[402.49999975 1010.95793598 23.13159326 89.99999789 24.58009764 1.00000000]
[402.49999975 1010.95793598 23.13159326 24.58009764 319.16020181 1.00000000]
[]
[402.50000053 939.35450597 36.01426010 60.92732373 20.30910788 1.00000000]
[402.50000053 939.35450597 36.01426010 20.30910788 339.69089203 1.00000000]
[402.50000053 939.35450597 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[402.50000023 576.40128744 36.01426010 60.92732373 20.30910788 1.00000000]
[402.50000023 576.40128744 36.01426010 20.30910788 339.69089203 1.00000000]
[402.50000023 576.40128744 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[402.49999975 297.46233921 28.47466705 52.07849132 360.00000000 1.00000000]
[402.49999975 297.46233921 28.47466705 360.00000000 307.92150834 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[537.49999980 347.46233923 28.47466700 232.07849253 180.00000000 1.00000000]
[537.49999980 347.46233923 28.47466700 180.00000000 127.92150777 1.00000000]
[]
[]
[537.50000018 462.47615004 46.00953986 247.64427021 216.11541616 1.00000000]
[537.50000018 462.47615004 46.00953986 216.11541616 184.58656211 1.00000000]
[537.50000018 462.47615004 46.00953986 184.58656211 153.05770806 1.00000000]
[537.50000018 462.47615004 46.00953986 153.05770806 121.52885400 1.00000000]
[537.50000018 462.47615004 46.00953986 121.52885400 89.99999995 1.00000000]
[537.50000018 462.47615004 46.00953986 89.99999995 58.47114590 1.00000000]
[537.50000018 462.47615004 46.00953986 58.47114590 26.94229185 1.00000000]
[537.50000018 462.47615004 46.00953986 26.94229185 355.41343780 1.00000000]
[537.50000018 462.47615004 46.00953986 355.41343780 323.88458374 1.00000000]
[537.50000018 462.47615004 46.00953986 323.88458374 292.35572969 1.00000000]
[]
[]
[537.49999980 347.46233923 28.47466700 52.07849123 360.00000000 1.00000000]
[537.49999980 347.46233923 28.47466700 360.00000000 307.92150838 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 42]
[2 41]
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[8 35]
[12 34]
[13 33]
[14 32]
[15 31]
[16 30]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[57 125]
[58 124]
[59 123]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[73 109]
[74 108]
[75 107]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[88 94]
[89 93]
[134 170]
[135 169]
[136 168]
[137 167]
[138 166]
[139 165]
[140 164]
[141 163]
[142 162]
[143 161]
[145 159]
[146 158]
[147 157]
] def

init

% Start Annotations
102 128 12 1.00 0.60 0.67 omark 54 78 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
