%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUAUGAAAUAUUACAAGGUUUUGUGAGGAUUAAUGUGGGAUGACAUAUGUAAAAACAUAGGACUAUGCUUGGCACAUAGUAAAAAGUYUCUAUAUUAUUAUUAGCAACUUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[125.00000000 150.00000000]
[114.02532959 172.46234131]
[125.00000000 194.92468262]
[125.00000000 219.92468262]
[125.00000000 244.92468262]
[125.00000000 269.92468262]
[101.79722595 279.23226929]
[82.65426636 295.31167603]
[69.48048401 316.55905151]
[63.58986664 340.85516357]
[65.56996918 365.77661133]
[75.22328186 388.83770752]
[91.58696747 407.73822021]
[113.02885437 420.59301758]
[137.41027832 426.11987305]
[141.35803223 450.80621338]
[134.06809998 474.71975708]
[148.45210266 495.16723633]
[152.39987183 519.85357666]
[156.34762573 544.53991699]
[160.29539490 569.22625732]
[164.24314880 593.91259766]
[168.19090271 618.59893799]
[172.13867188 643.28527832]
[176.08642578 667.97161865]
[180.03419495 692.65795898]
[158.85844421 705.94659424]
[143.20893860 725.44256592]
[134.81515503 748.99133301]
[134.60469055 773.99041748]
[142.60083008 797.67718506]
[157.91989136 817.43383789]
[178.86891174 831.07708740]
[203.13276672 837.09918213]
[207.08053589 861.78552246]
[211.02828979 886.47186279]
[214.97604370 911.15820312]
[218.92381287 935.84454346]
[206.82315063 957.72082520]
[212.75656128 982.00653076]
[233.58140564 995.83862305]
[258.26773071 991.89080811]
[273.74038696 972.25421143]
[271.80419922 947.32928467]
[253.48468018 930.31762695]
[249.53692627 905.63134766]
[245.58915710 880.94500732]
[241.64140320 856.25866699]
[237.69363403 831.57232666]
[258.86938477 818.28369141]
[274.51889038 798.78771973]
[282.91268921 775.23895264]
[283.12313843 750.23980713]
[275.12698364 726.55310059]
[259.80792236 706.79638672]
[238.85891724 693.15313721]
[214.59506226 687.13104248]
[210.64729309 662.44470215]
[206.69953918 637.75842285]
[202.75178528 613.07208252]
[198.80401611 588.38574219]
[194.85626221 563.69940186]
[190.90849304 539.01306152]
[186.96073914 514.32672119]
[183.01298523 489.64038086]
[190.30291748 465.72683716]
[175.91889954 445.27935791]
[171.97114563 420.59301758]
[193.41304016 407.73822021]
[209.77671814 388.83770752]
[219.43003845 365.77661133]
[221.41012573 340.85516357]
[215.51951599 316.55905151]
[202.34573364 295.31167603]
[183.20277405 279.23226929]
[160.00000000 269.92468262]
[160.00000000 244.92468262]
[160.00000000 219.92468262]
[160.00000000 194.92468262]
[170.97467041 172.46234131]
[160.00000000 150.00000000]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[285.00000000 100.00000000]
[285.00000000 125.00000000]
[285.00000000 150.00000000]
[285.00000000 175.00000000]
[285.00000000 200.00000000]
[268.72460938 218.97660828]
[268.72460938 243.97660828]
[285.00000000 262.95321655]
[285.00000000 287.95321655]
[285.00000000 312.95321655]
[265.33206177 328.38604736]
[256.63778687 351.82553101]
[261.48419189 376.35128784]
[278.44033813 394.72216797]
[302.50000000 401.51422119]
[326.55966187 394.72216797]
[343.51580811 376.35128784]
[348.36221313 351.82553101]
[339.66793823 328.38604736]
[320.00000000 312.95321655]
[320.00000000 287.95321655]
[320.00000000 262.95321655]
[336.27539062 243.97660828]
[336.27539062 218.97660828]
[320.00000000 200.00000000]
[320.00000000 175.00000000]
[320.00000000 150.00000000]
[320.00000000 125.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[142.49999959 172.46233916 28.47466715 232.07849221 180.00000000 1.00000000]
[142.49999959 172.46233916 28.47466715 180.00000000 127.92150791 1.00000000]
[]
[]
[]
[142.49999988 347.12486074 79.15881624 257.22784540 239.05658765 1.00000000]
[142.49999988 347.12486074 79.15881624 239.05658765 220.88532989 1.00000000]
[142.49999988 347.12486074 79.15881624 220.88532989 202.71407214 1.00000000]
[142.49999988 347.12486074 79.15881624 202.71407214 184.54281439 1.00000000]
[142.49999988 347.12486074 79.15881624 184.54281439 166.37155664 1.00000000]
[142.49999988 347.12486074 79.15881624 166.37155664 148.20029889 1.00000000]
[142.49999988 347.12486074 79.15881624 148.20029889 130.02904114 1.00000000]
[142.49999988 347.12486074 79.15881624 130.02904114 111.85778338 1.00000000]
[142.49999988 347.12486074 79.15881624 111.85778338 93.68652563 1.00000000]
[]
[162.18550811 470.22329725 28.47466729 222.99286298 170.91437105 1.00000000]
[162.18550811 470.22329725 28.47466729 170.91437105 118.83587913 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[208.86391522 762.11512121 75.20275385 247.45803666 228.32212025 1.00000000]
[208.86391522 762.11512121 75.20275385 228.32212025 209.18620384 1.00000000]
[208.86391522 762.11512121 75.20275385 209.18620384 190.05028744 1.00000000]
[208.86391522 762.11512121 75.20275385 190.05028744 170.91437103 1.00000000]
[208.86391522 762.11512121 75.20275385 170.91437103 151.77845462 1.00000000]
[208.86391522 762.11512121 75.20275385 151.77845462 132.64253821 1.00000000]
[208.86391522 762.11512121 75.20275385 132.64253821 113.50662181 1.00000000]
[208.86391522 762.11512121 75.20275385 113.50662181 94.37070540 1.00000000]
[]
[]
[]
[]
[240.87200883 962.26978383 34.35139098 230.28778234 187.60966482 1.00000000]
[240.87200883 962.26978383 34.35139098 187.60966482 144.93154730 1.00000000]
[240.87200883 962.26978383 34.35139098 144.93154730 102.25342979 1.00000000]
[240.87200883 962.26978383 34.35139098 102.25342979 59.57531227 1.00000000]
[240.87200883 962.26978383 34.35139098 59.57531227 16.89719475 1.00000000]
[240.87200883 962.26978383 34.35139098 16.89719475 334.21907724 1.00000000]
[240.87200883 962.26978383 34.35139098 334.21907724 291.54095972 1.00000000]
[]
[]
[]
[]
[208.86391522 762.11512121 75.20275385 67.45803666 48.32212025 1.00000000]
[208.86391522 762.11512121 75.20275385 48.32212025 29.18620384 1.00000000]
[208.86391522 762.11512121 75.20275385 29.18620384 10.05028744 1.00000000]
[208.86391522 762.11512121 75.20275385 10.05028744 350.91437103 1.00000000]
[208.86391522 762.11512121 75.20275385 350.91437103 331.77845462 1.00000000]
[208.86391522 762.11512121 75.20275385 331.77845462 312.64253821 1.00000000]
[208.86391522 762.11512121 75.20275385 312.64253821 293.50662181 1.00000000]
[208.86391522 762.11512121 75.20275385 293.50662181 274.37070540 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[162.18550811 470.22329725 28.47466729 42.99286293 350.91437101 1.00000000]
[162.18550811 470.22329725 28.47466729 350.91437101 298.83587917 1.00000000]
[]
[142.49999988 347.12486074 79.15881624 68.14221652 49.97095877 1.00000000]
[142.49999988 347.12486074 79.15881624 49.97095877 31.79970102 1.00000000]
[142.49999988 347.12486074 79.15881624 31.79970102 13.62844327 1.00000000]
[142.49999988 347.12486074 79.15881624 13.62844327 355.45718551 1.00000000]
[142.49999988 347.12486074 79.15881624 355.45718551 337.28592776 1.00000000]
[142.49999988 347.12486074 79.15881624 337.28592776 319.11467001 1.00000000]
[142.49999988 347.12486074 79.15881624 319.11467001 300.94341226 1.00000000]
[142.49999988 347.12486074 79.15881624 300.94341226 282.77215451 1.00000000]
[]
[]
[]
[142.49999959 172.46233916 28.47466715 52.07849154 360.00000000 1.00000000]
[142.49999959 172.46233916 28.47466715 360.00000000 307.92150824 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[302.49999970 231.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[302.49999970 231.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[302.49999970 231.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[302.49999970 355.50469039 46.00953986 247.64427026 216.11541621 1.00000000]
[302.49999970 355.50469039 46.00953986 216.11541621 184.58656216 1.00000000]
[302.49999970 355.50469039 46.00953986 184.58656216 153.05770810 1.00000000]
[302.49999970 355.50469039 46.00953986 153.05770810 121.52885405 1.00000000]
[302.49999970 355.50469039 46.00953986 121.52885405 90.00000000 1.00000000]
[302.49999970 355.50469039 46.00953986 90.00000000 58.47114595 1.00000000]
[302.49999970 355.50469039 46.00953986 58.47114595 26.94229190 1.00000000]
[302.49999970 355.50469039 46.00953986 26.94229190 355.41343784 1.00000000]
[302.49999970 355.50469039 46.00953986 355.41343784 323.88458379 1.00000000]
[302.49999970 355.50469039 46.00953986 323.88458379 292.35572974 1.00000000]
[]
[]
[302.49999970 231.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[302.49999970 231.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[302.49999970 231.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 86]
[3 85]
[4 84]
[6 82]
[7 81]
[8 80]
[9 79]
[18 71]
[19 70]
[21 68]
[22 67]
[23 66]
[24 65]
[25 64]
[26 63]
[27 62]
[28 61]
[29 60]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
[94 108]
[95 107]
[96 106]
] def

init

% Start Annotations
85 96 12 1.00 0.60 0.67 omark 44 93 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
