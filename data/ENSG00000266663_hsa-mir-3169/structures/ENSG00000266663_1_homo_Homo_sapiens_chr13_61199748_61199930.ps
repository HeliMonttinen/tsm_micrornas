%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUAUGAAAUAUUACAAGGUUUUGUGAGGAUUCAUGUGGGAUGACAUAUGUAAAAACACAGGACUAUGCUUGGCACACAGUACCAUAAGACUUUGUGCUAUGUGCCAAGCACAGUCCUAUGUUUUCACAUAUGUUAGUAGCAUAAGUCACAGUACAAAGUAUUAUUAGCAACCUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[174.99998474 100.00000000]
[174.99998474 125.00000000]
[174.99998474 150.00000000]
[154.24337769 163.93423462]
[142.48233032 185.99501038]
[142.48233032 210.99501038]
[154.24337769 233.05578613]
[174.99998474 246.99002075]
[174.99998474 271.99002075]
[174.99998474 296.99002075]
[174.99998474 321.99002075]
[164.02532959 344.45236206]
[174.99998474 366.91470337]
[174.99998474 391.91470337]
[174.99998474 416.91470337]
[155.90136719 433.04672241]
[148.75730896 457.00424194]
[155.90136719 480.96176147]
[174.99998474 497.09381104]
[174.99998474 522.09381104]
[164.02532959 544.55615234]
[174.99998474 567.01849365]
[174.99998474 592.01849365]
[174.99998474 617.01849365]
[174.99998474 642.01849365]
[174.99998474 667.01849365]
[174.99998474 692.01849365]
[153.66282654 705.04632568]
[140.21133423 726.11901855]
[137.37677002 750.95776367]
[145.73468018 774.51928711]
[163.58804321 792.01953125]
[187.31182861 799.90509033]
[212.08903503 796.57495117]
[227.84304810 815.98657227]
[243.59706116 835.39819336]
[259.35107422 854.80981445]
[253.22837830 879.04846191]
[260.22222900 903.05023193]
[278.40679932 920.20605469]
[302.77481079 925.79180908]
[326.61624146 918.26940918]
[346.91143799 932.86755371]
[367.20663452 947.46563721]
[387.50183105 962.06378174]
[407.79702759 976.66186523]
[428.09222412 991.26000977]
[448.38742065 1005.85809326]
[468.68261719 1020.45623779]
[488.97781372 1035.05432129]
[509.27301025 1049.65246582]
[521.09973145 1071.67810059]
[545.74322510 1075.88513184]
[566.03845215 1090.48315430]
[586.33361816 1105.08129883]
[606.62884521 1119.67944336]
[626.92401123 1134.27758789]
[647.21923828 1148.87561035]
[659.04595947 1170.90124512]
[683.68945312 1175.10827637]
[703.98461914 1189.70642090]
[724.27984619 1204.30444336]
[744.57501221 1218.90258789]
[764.87023926 1233.50073242]
[785.16540527 1248.09887695]
[796.99212646 1270.12451172]
[821.63562012 1274.33142090]
[841.93084717 1288.92956543]
[862.22601318 1303.52770996]
[882.52124023 1318.12585449]
[902.81640625 1332.72387695]
[923.11163330 1347.32202148]
[943.40679932 1361.92016602]
[963.70202637 1376.51831055]
[983.99719238 1391.11633301]
[1004.29241943 1405.71447754]
[1024.58764648 1420.31262207]
[1036.41430664 1442.33825684]
[1061.05786133 1446.54528809]
[1081.35302734 1461.14331055]
[1101.64819336 1475.74145508]
[1121.94335938 1490.33959961]
[1142.23864746 1504.93774414]
[1140.77929688 1529.89501953]
[1150.74548340 1552.82275391]
[1169.98974609 1568.78063965]
[1194.36584473 1574.33081055]
[1218.62194824 1568.27709961]
[1237.53161621 1551.92407227]
[1247.02099609 1528.79504395]
[1245.04516602 1503.87329102]
[1232.03015137 1482.52832031]
[1210.78002930 1469.35900879]
[1185.87316895 1467.20288086]
[1162.67602539 1476.52441406]
[1142.38073730 1461.92626953]
[1122.08557129 1447.32824707]
[1101.79040527 1432.73010254]
[1081.49511719 1418.13195801]
[1069.66845703 1396.10632324]
[1045.02502441 1391.89929199]
[1024.72973633 1377.30126953]
[1004.43457031 1362.70312500]
[984.13934326 1348.10498047]
[963.84417725 1333.50683594]
[943.54895020 1318.90881348]
[923.25378418 1304.31066895]
[902.95855713 1289.71252441]
[882.66339111 1275.11437988]
[862.36816406 1260.51635742]
[842.07299805 1245.91821289]
[830.24627686 1223.89257812]
[805.60278320 1219.68554688]
[785.30755615 1205.08740234]
[765.01239014 1190.48937988]
[744.71716309 1175.89123535]
[724.42199707 1161.29309082]
[704.12677002 1146.69494629]
[692.30004883 1124.66931152]
[667.65655518 1120.46240234]
[647.36138916 1105.86425781]
[627.06616211 1091.26611328]
[606.77099609 1076.66809082]
[586.47576904 1062.06994629]
[566.18060303 1047.47180176]
[554.35388184 1025.44616699]
[529.71038818 1021.23919678]
[509.41519165 1006.64105225]
[489.11999512 992.04296875]
[468.82479858 977.44482422]
[448.52960205 962.84674072]
[428.23440552 948.24859619]
[407.93920898 933.65051270]
[387.64398193 919.05236816]
[367.34878540 904.45428467]
[347.05358887 889.85614014]
[346.60220337 864.86022949]
[333.55593872 843.53430176]
[311.50720215 831.75073242]
[286.52734375 832.75415039]
[270.77334595 813.34252930]
[255.01931763 793.93090820]
[239.26528931 774.51928711]
[247.62321472 750.95776367]
[244.78865051 726.11901855]
[231.33715820 705.04632568]
[209.99998474 692.01849365]
[209.99998474 667.01849365]
[209.99998474 642.01849365]
[209.99998474 617.01849365]
[209.99998474 592.01849365]
[209.99998474 567.01849365]
[220.97465515 544.55615234]
[209.99998474 522.09381104]
[209.99998474 497.09381104]
[229.09861755 480.96176147]
[236.24267578 457.00424194]
[229.09861755 433.04672241]
[209.99998474 416.91470337]
[209.99998474 391.91470337]
[209.99998474 366.91470337]
[220.97465515 344.45236206]
[209.99998474 321.99002075]
[209.99998474 296.99002075]
[209.99998474 271.99002075]
[209.99998474 246.99002075]
[230.75660706 233.05578613]
[242.51765442 210.99501038]
[242.51765442 185.99501038]
[230.75660706 163.93423462]
[209.99998474 150.00000000]
[209.99998474 125.00000000]
[209.99998474 100.00000000]
[234.99998474 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[192.49999094 198.49501102 51.55595110 250.15742011 222.09445206 1.00000000]
[192.49999094 198.49501102 51.55595110 222.09445206 194.03148402 1.00000000]
[192.49999094 198.49501102 51.55595110 194.03148402 165.96851598 1.00000000]
[192.49999094 198.49501102 51.55595110 165.96851598 137.90554794 1.00000000]
[192.49999094 198.49501102 51.55595110 137.90554794 109.84257989 1.00000000]
[]
[]
[]
[192.49999066 344.45236127 28.47466701 232.07849253 180.00000000 1.00000000]
[192.49999066 344.45236127 28.47466701 180.00000000 127.92150777 1.00000000]
[]
[]
[192.49999104 457.00424857 43.74267810 246.41763577 213.20881786 1.00000000]
[192.49999104 457.00424857 43.74267810 213.20881786 180.00000000 1.00000000]
[192.49999104 457.00424857 43.74267810 180.00000000 146.79118204 1.00000000]
[192.49999104 457.00424857 43.74267810 146.79118204 113.58236413 1.00000000]
[]
[192.49999021 544.55613645 28.47466639 232.07849383 180.00000000 1.00000000]
[192.49999021 544.55613645 28.47466639 180.00000000 127.92150712 1.00000000]
[]
[]
[]
[]
[]
[192.49999144 744.66722397 55.48099457 251.61362824 225.57230885 1.00000000]
[192.49999144 744.66722397 55.48099457 225.57230885 199.53098945 1.00000000]
[192.49999144 744.66722397 55.48099457 199.53098945 173.48967006 1.00000000]
[192.49999144 744.66722397 55.48099457 173.48967006 147.44835066 1.00000000]
[192.49999144 744.66722397 55.48099457 147.44835066 121.40703126 1.00000000]
[192.49999144 744.66722397 55.48099457 121.40703126 95.36571187 1.00000000]
[192.49999144 744.66722397 55.48099457 95.36571187 69.32439247 1.00000000]
[]
[]
[]
[300.86254339 878.18824837 47.64193249 209.38737761 178.96544125 1.00000000]
[300.86254339 878.18824837 47.64193249 178.96544125 148.54350490 1.00000000]
[300.86254339 878.18824837 47.64193249 148.54350490 118.12156855 1.00000000]
[300.86254339 878.18824837 47.64193249 118.12156855 87.69963219 1.00000000]
[300.86254339 878.18824837 47.64193249 87.69963219 57.27769584 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[537.72680622 1048.56212921 28.47466729 177.80554454 125.72705261 1.00000000]
[537.72680622 1048.56212921 28.47466729 125.72705261 73.64856068 1.00000000]
[]
[]
[]
[]
[]
[675.67300466 1147.78532504 28.47466729 177.80554449 125.72705256 1.00000000]
[675.67300466 1147.78532504 28.47466729 125.72705256 73.64856064 1.00000000]
[]
[]
[]
[]
[]
[813.61920318 1247.00852075 28.47466729 177.80554444 125.72705252 1.00000000]
[813.61920318 1247.00852075 28.47466729 125.72705252 73.64856059 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1053.04139109 1419.22228830 28.47466729 177.80554439 125.72705247 1.00000000]
[1053.04139109 1419.22228830 28.47466729 125.72705247 73.64856054 1.00000000]
[]
[]
[]
[]
[1193.80828684 1520.47438040 53.85926493 196.76627057 169.92640089 1.00000000]
[1193.80828684 1520.47438040 53.85926493 169.92640089 143.08653120 1.00000000]
[1193.80828684 1520.47438040 53.85926493 143.08653120 116.24666151 1.00000000]
[1193.80828684 1520.47438040 53.85926493 116.24666151 89.40679182 1.00000000]
[1193.80828684 1520.47438040 53.85926493 89.40679182 62.56692213 1.00000000]
[1193.80828684 1520.47438040 53.85926493 62.56692213 35.72705244 1.00000000]
[1193.80828684 1520.47438040 53.85926493 35.72705244 8.88718276 1.00000000]
[1193.80828684 1520.47438040 53.85926493 8.88718276 342.04731307 1.00000000]
[1193.80828684 1520.47438040 53.85926493 342.04731307 315.20744338 1.00000000]
[1193.80828684 1520.47438040 53.85926493 315.20744338 288.36757369 1.00000000]
[1193.80828684 1520.47438040 53.85926493 288.36757369 261.52770400 1.00000000]
[1193.80828684 1520.47438040 53.85926493 261.52770400 234.68783432 1.00000000]
[]
[]
[]
[]
[1053.04139109 1419.22228830 28.47466729 357.80554435 305.72705242 1.00000000]
[1053.04139109 1419.22228830 28.47466729 305.72705242 253.64856059 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[813.61920318 1247.00852075 28.47466729 357.80554439 305.72705247 1.00000000]
[813.61920318 1247.00852075 28.47466729 305.72705247 253.64856064 1.00000000]
[]
[]
[]
[]
[]
[675.67300466 1147.78532504 28.47466729 357.80554444 305.72705252 1.00000000]
[675.67300466 1147.78532504 28.47466729 305.72705252 253.64856068 1.00000000]
[]
[]
[]
[]
[]
[537.72680622 1048.56212921 28.47466729 357.80554449 305.72705256 1.00000000]
[537.72680622 1048.56212921 28.47466729 305.72705256 253.64856073 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[300.86254339 878.18824837 47.64193249 14.17640943 343.75447308 1.00000000]
[300.86254339 878.18824837 47.64193249 343.75447308 313.33253672 1.00000000]
[300.86254339 878.18824837 47.64193249 313.33253672 282.91060037 1.00000000]
[300.86254339 878.18824837 47.64193249 282.91060037 252.48866401 1.00000000]
[]
[]
[]
[192.49999144 744.66722397 55.48099457 32.55164915 6.51032975 1.00000000]
[192.49999144 744.66722397 55.48099457 6.51032975 340.46901036 1.00000000]
[192.49999144 744.66722397 55.48099457 340.46901036 314.42769096 1.00000000]
[192.49999144 744.66722397 55.48099457 314.42769096 288.38637157 1.00000000]
[]
[]
[]
[]
[]
[192.49999021 544.55613645 28.47466639 52.07848984 360.00000000 1.00000000]
[192.49999021 544.55613645 28.47466639 360.00000000 307.92150893 1.00000000]
[]
[192.49999104 457.00424857 43.74267810 66.41763577 33.20881786 1.00000000]
[192.49999104 457.00424857 43.74267810 33.20881786 360.00000000 1.00000000]
[192.49999104 457.00424857 43.74267810 360.00000000 326.79118204 1.00000000]
[192.49999104 457.00424857 43.74267810 326.79118204 293.58236413 1.00000000]
[]
[]
[192.49999066 344.45236127 28.47466701 52.07849123 360.00000000 1.00000000]
[192.49999066 344.45236127 28.47466701 360.00000000 307.92150838 1.00000000]
[]
[]
[]
[192.49999094 198.49501102 51.55595110 70.15742011 42.09445206 1.00000000]
[192.49999094 198.49501102 51.55595110 42.09445206 14.03148402 1.00000000]
[192.49999094 198.49501102 51.55595110 14.03148402 345.96851598 1.00000000]
[192.49999094 198.49501102 51.55595110 345.96851598 317.90554794 1.00000000]
[192.49999094 198.49501102 51.55595110 317.90554794 289.84257989 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 176]
[5 175]
[6 174]
[11 169]
[12 168]
[13 167]
[14 166]
[16 164]
[17 163]
[18 162]
[22 158]
[23 157]
[25 155]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[37 146]
[38 145]
[39 144]
[40 143]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[53 131]
[54 130]
[56 128]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[70 114]
[71 113]
[72 112]
[73 111]
[74 110]
[75 109]
[76 108]
[77 107]
[78 106]
[79 105]
[80 104]
[82 102]
[83 101]
[84 100]
[85 99]
[86 98]
] def

init

% Start Annotations
91 140 12 1.00 0.60 0.67 omark 44 127 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
