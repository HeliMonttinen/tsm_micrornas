%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUCCGUCCUUGGGAAUCGGAGCCUACCCUGGGGACUCCUCUGCUCCUGUGGCUUCCACGACCUACUCCUUAACUCCAGGGACUCGCAGGAGCCUCGCCUCCGCGGCCGGGGAAGCGGCGCCUGGGCGCCCUCCUCUACAAGUGGGACUGCGGGACAAAGUGCAAAC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[140.90147400 223.28555298]
[155.00000000 243.93092346]
[180.00000000 243.93092346]
[194.09852600 223.28555298]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[285.00000000 125.00000000]
[285.00000000 150.00000000]
[285.00000000 175.00000000]
[285.00000000 200.00000000]
[285.00000000 225.00000000]
[285.00000000 250.00000000]
[269.59664917 269.69104004]
[271.62066650 294.60897827]
[290.00000000 311.55593872]
[315.00000000 311.55593872]
[333.37933350 294.60897827]
[335.40335083 269.69104004]
[320.00000000 250.00000000]
[320.00000000 225.00000000]
[320.00000000 200.00000000]
[341.65063477 187.50000000]
[320.00000000 175.00000000]
[320.00000000 150.00000000]
[320.00000000 125.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[420.00000000 125.00000000]
[420.00000000 150.00000000]
[420.00000000 175.00000000]
[420.00000000 200.00000000]
[420.00000000 225.00000000]
[420.00000000 250.00000000]
[420.00000000 275.00000000]
[420.00000000 300.00000000]
[420.00000000 325.00000000]
[409.02532959 347.46234131]
[420.00000000 369.92468262]
[420.00000000 394.92468262]
[420.00000000 419.92468262]
[420.00000000 444.92468262]
[403.72460938 463.90127563]
[403.72460938 488.90127563]
[420.00000000 507.87789917]
[420.00000000 532.87786865]
[397.95651245 544.67132568]
[382.39672852 564.23895264]
[375.87191772 588.37249756]
[379.45190430 613.11480713]
[392.54971313 634.40911865]
[413.01776123 648.76391602]
[437.50000000 653.82550049]
[461.98223877 648.76391602]
[482.45028687 634.40911865]
[495.54809570 613.11480713]
[499.12808228 588.37249756]
[492.60327148 564.23895264]
[477.04348755 544.67132568]
[455.00000000 532.87786865]
[455.00000000 507.87789917]
[471.27539062 488.90127563]
[471.27539062 463.90127563]
[455.00000000 444.92468262]
[455.00000000 419.92468262]
[455.00000000 394.92468262]
[455.00000000 369.92468262]
[465.97467041 347.46234131]
[455.00000000 325.00000000]
[455.00000000 300.00000000]
[455.00000000 275.00000000]
[455.00000000 250.00000000]
[455.00000000 225.00000000]
[455.00000000 200.00000000]
[455.00000000 175.00000000]
[455.00000000 150.00000000]
[455.00000000 125.00000000]
[455.00000000 100.00000000]
[905.00000000 100.00000000]
[905.00000000 125.00000000]
[905.00000000 150.00000000]
[905.00000000 175.00000000]
[905.00000000 200.00000000]
[888.72460938 218.97660828]
[888.72460938 243.97660828]
[872.44921875 262.95321655]
[856.17382812 281.92984009]
[839.89843750 300.90643311]
[823.62304688 319.88305664]
[798.94543457 315.88119507]
[775.01623535 323.11956787]
[756.69421387 340.12847900]
[747.69946289 363.45431519]
[749.85839844 388.36093140]
[729.72601318 403.18273926]
[709.59362793 418.00454712]
[689.46118164 432.82638550]
[669.32879639 447.64819336]
[646.42651367 437.62393188]
[649.19641113 462.47000122]
[626.29412842 452.44573975]
[629.06396484 477.29180908]
[608.93157959 492.11364746]
[588.79913330 506.93545532]
[568.66674805 521.75726318]
[548.53436279 536.57910156]
[524.38830566 543.05743408]
[516.12127686 566.65100098]
[530.94311523 586.78338623]
[555.92736816 585.89685059]
[569.28491211 564.76446533]
[589.41729736 549.94262695]
[609.54968262 535.12084961]
[629.68212891 520.29901123]
[649.81451416 505.47720337]
[669.94689941 490.65536499]
[690.07934570 475.83355713]
[710.21173096 461.01174927]
[730.34411621 446.18991089]
[750.47656250 431.36810303]
[770.60894775 416.54629517]
[793.75048828 426.00518799]
[818.69525146 424.34420776]
[840.37835693 411.90063477]
[854.39715576 391.20104980]
[857.90527344 366.44839478]
[850.19030762 342.66857910]
[866.46569824 323.69198608]
[882.74108887 304.71536255]
[899.01647949 285.73876953]
[915.29187012 266.76214600]
[940.00000000 262.95321655]
[956.27539062 243.97660828]
[956.27539062 218.97660828]
[940.00000000 200.00000000]
[940.00000000 175.00000000]
[940.00000000 150.00000000]
[940.00000000 125.00000000]
[940.00000000 100.00000000]
[965.00000000 100.00000000]
[990.00000000 100.00000000]
[1015.00000000 100.00000000]
[1040.00000000 100.00000000]
[1065.00000000 100.00000000]
[1090.00000000 100.00000000]
[1115.00000000 100.00000000]
[1140.00000000 100.00000000]
[1165.00000000 100.00000000]
[1190.00000000 100.00000000]
[1215.00000000 100.00000000]
[1240.00000000 100.00000000]
[1265.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[167.50000000 220.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[167.50000000 220.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[167.50000000 220.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[167.50000000 220.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[167.50000000 220.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[302.50000000 279.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[302.50000000 279.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[302.50000000 279.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[302.50000000 279.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[302.50000000 279.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[302.50000000 279.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[302.50000000 279.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[437.49999971 347.46233923 28.47466700 232.07849253 180.00000000 1.00000000]
[437.49999971 347.46233923 28.47466700 180.00000000 127.92150777 1.00000000]
[]
[]
[]
[437.50000011 476.40128744 36.01426010 240.92732373 200.30910788 1.00000000]
[437.50000011 476.40128744 36.01426010 200.30910788 159.69089203 1.00000000]
[437.50000011 476.40128744 36.01426010 159.69089203 119.07267617 1.00000000]
[]
[437.50000020 592.08564317 61.73983513 253.53393129 230.17194110 1.00000000]
[437.50000020 592.08564317 61.73983513 230.17194110 206.80995091 1.00000000]
[437.50000020 592.08564317 61.73983513 206.80995091 183.44796072 1.00000000]
[437.50000020 592.08564317 61.73983513 183.44796072 160.08597052 1.00000000]
[437.50000020 592.08564317 61.73983513 160.08597052 136.72398033 1.00000000]
[437.50000020 592.08564317 61.73983513 136.72398033 113.36199014 1.00000000]
[437.50000020 592.08564317 61.73983513 113.36199014 89.99999995 1.00000000]
[437.50000020 592.08564317 61.73983513 89.99999995 66.63800976 1.00000000]
[437.50000020 592.08564317 61.73983513 66.63800976 43.27601957 1.00000000]
[437.50000020 592.08564317 61.73983513 43.27601957 19.91402938 1.00000000]
[437.50000020 592.08564317 61.73983513 19.91402938 356.55203919 1.00000000]
[437.50000020 592.08564317 61.73983513 356.55203919 333.19004900 1.00000000]
[437.50000020 592.08564317 61.73983513 333.19004900 309.82805881 1.00000000]
[437.50000020 592.08564317 61.73983513 309.82805881 286.46606862 1.00000000]
[]
[437.50000011 476.40128744 36.01426010 60.92732373 20.30910788 1.00000000]
[437.50000011 476.40128744 36.01426010 20.30910788 339.69089203 1.00000000]
[437.50000011 476.40128744 36.01426010 339.69089203 299.07267617 1.00000000]
[]
[]
[]
[437.49999971 347.46233923 28.47466700 52.07849123 360.00000000 1.00000000]
[437.49999971 347.46233923 28.47466700 360.00000000 307.92150838 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[922.49999981 231.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[922.49999981 231.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[]
[]
[]
[]
[802.63152355 371.23960833 55.48099457 292.23184419 266.19052480 1.00000000]
[802.63152355 371.23960833 55.48099457 266.19052480 240.14920540 1.00000000]
[802.63152355 371.23960833 55.48099457 240.14920540 214.10788600 1.00000000]
[802.63152355 371.23960833 55.48099457 214.10788600 188.06656661 1.00000000]
[802.63152355 371.23960833 55.48099457 188.06656661 162.02524721 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[542.59573806 562.68232087 26.77024824 282.81690855 227.14569535 1.00000000]
[542.59573806 562.68232087 26.77024824 227.14569535 171.47448215 1.00000000]
[542.59573806 562.68232087 26.77024824 171.47448215 115.80326895 1.00000000]
[542.59573806 562.68232087 26.77024824 115.80326895 60.13205576 1.00000000]
[542.59573806 562.68232087 26.77024824 60.13205576 4.46084256 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[802.63152355 371.23960833 55.48099457 125.25250389 99.21118449 1.00000000]
[802.63152355 371.23960833 55.48099457 99.21118449 73.16986510 1.00000000]
[802.63152355 371.23960833 55.48099457 73.16986510 47.12854570 1.00000000]
[802.63152355 371.23960833 55.48099457 47.12854570 21.08722631 1.00000000]
[802.63152355 371.23960833 55.48099457 21.08722631 355.04590691 1.00000000]
[802.63152355 371.23960833 55.48099457 355.04590691 329.00458751 1.00000000]
[]
[]
[]
[]
[922.49999981 231.47660926 36.01426010 101.54553963 60.92732378 1.00000000]
[922.49999981 231.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[922.49999981 231.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[922.49999981 231.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[20 40]
[21 39]
[22 38]
[23 37]
[24 35]
[25 34]
[26 33]
[44 94]
[45 93]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[51 87]
[52 86]
[53 85]
[55 83]
[56 82]
[57 81]
[58 80]
[61 77]
[62 76]
[95 155]
[96 154]
[97 153]
[98 152]
[99 151]
[101 147]
[102 146]
[103 145]
[104 144]
[105 143]
[110 137]
[111 136]
[112 135]
[113 134]
[114 133]
[116 132]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
] def

init

% Start Annotations
96 122 12 1.00 0.60 0.67 omark 44 71 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
