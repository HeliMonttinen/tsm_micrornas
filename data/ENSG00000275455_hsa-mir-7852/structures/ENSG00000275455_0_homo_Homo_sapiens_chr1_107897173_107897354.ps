%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGUUGCCUAGAGACACAGCAGUAAAUAUAUAUUGAACAACUAAAUUAAUAAAUGCCUUUGACUACUACAUACAUAUGCCUACUACUACUUUCAUAUGUAGGCAUAUGUAUGUAGUAGUCAAAGGCAUUUACAUACUUCAUACAAAAAGACCACUGUGUCUUAAAAGAUCAGCUUUUCUCU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[160.92854309 195.66383362]
[165.87762451 220.16906738]
[156.17533875 243.20959473]
[133.81094360 254.38249207]
[124.10865021 277.42300415]
[101.74425507 288.59591675]
[79.37985229 299.76879883]
[57.01545334 310.94171143]
[34.65105438 322.11459351]
[12.28665352 333.28747559]
[-10.07774544 344.46038818]
[-32.44214630 355.63327026]
[-54.80654526 366.80618286]
[-69.69468689 346.72277832]
[-52.50299835 328.57214355]
[-35.31130981 310.42147827]
[-18.11961937 292.27084351]
[-0.92793036 274.12020874]
[23.79618263 270.41638184]
[39.46195602 250.93347168]
[37.77196503 225.99066162]
[19.62132454 208.79898071]
[-5.37643242 208.46403503]
[-23.98116875 225.16325378]
[-26.33883095 250.05183411]
[-43.53051758 268.20248413]
[-60.72220612 286.35311890]
[-77.91389465 304.50375366]
[-95.10558319 322.65441895]
[-115.96678162 308.87722778]
[-138.60433960 298.26870728]
[-162.54029846 291.05279541]
[-187.26931763 287.38183594]
[-212.26927185 287.33340454]
[-237.01232910 290.90844727]
[-260.97610474 298.03152466]
[-283.65460205 308.55221558]
[-304.56903076 322.24844360]
[-323.27783203 338.83099365]
[-339.38598633 357.94973755]
[-352.55340576 379.20108032]
[-362.50207520 402.13629150]
[-369.02197266 426.27114868]
[-371.97540283 451.09606934]
[-396.93594360 452.50012207]
[-421.89648438 453.90417480]
[-446.85702515 455.30822754]
[-471.81756592 456.71228027]
[-496.77810669 458.11630249]
[-521.73864746 459.52035522]
[-546.69915771 460.92440796]
[-571.65972900 462.32846069]
[-596.62023926 463.73251343]
[-621.58081055 465.13653564]
[-646.54138184 466.54058838]
[-671.50189209 467.94464111]
[-696.46246338 469.34869385]
[-721.42297363 470.75274658]
[-746.38354492 472.15676880]
[-771.34405518 473.56082153]
[-796.30462646 474.96487427]
[-821.26513672 476.36892700]
[-846.22570801 477.77297974]
[-871.18621826 479.17700195]
[-896.14678955 480.58105469]
[-921.10729980 481.98510742]
[-946.06787109 483.38916016]
[-971.02838135 484.79321289]
[-995.98895264 486.19723511]
[-1020.94946289 487.60128784]
[-1045.91003418 489.00534058]
[-1070.87060547 490.40939331]
[-1095.83105469 491.81344604]
[-1120.79162598 493.21746826]
[-1145.75219727 494.62152100]
[-1170.71276855 496.02557373]
[-1195.67321777 497.42962646]
[-1208.03710938 475.70092773]
[-1227.62414551 460.16546631]
[-1251.59704590 453.07351685]
[-1276.48364258 455.45227051]
[-1298.67907715 466.95721436]
[-1314.96838379 485.92187500]
[-1322.99206543 509.59927368]
[-1321.58801270 534.55981445]
[-1310.95959473 557.18804932]
[-1292.64624023 574.20629883]
[-1269.30053711 583.14953613]
[-1244.30419922 582.72235107]
[-1221.27783203 572.98663330]
[-1203.55664062 555.35253906]
[-1193.70764160 532.37438965]
[-1168.74707031 530.97033691]
[-1143.78649902 529.56628418]
[-1118.82592773 528.16223145]
[-1093.86547852 526.75817871]
[-1068.90490723 525.35412598]
[-1043.94433594 523.95007324]
[-1018.98382568 522.54602051]
[-994.02325439 521.14202881]
[-969.06274414 519.73797607]
[-944.10217285 518.33392334]
[-919.14166260 516.92987061]
[-894.18109131 515.52581787]
[-869.22058105 514.12176514]
[-844.26000977 512.71771240]
[-819.29949951 511.31369019]
[-794.33892822 509.90963745]
[-769.37841797 508.50558472]
[-744.41784668 507.10153198]
[-719.45733643 505.69747925]
[-694.49676514 504.29345703]
[-669.53625488 502.88940430]
[-644.57568359 501.48535156]
[-619.61517334 500.08129883]
[-594.65460205 498.67724609]
[-569.69403076 497.27322388]
[-544.73352051 495.86917114]
[-519.77294922 494.46511841]
[-494.81243896 493.06106567]
[-469.85189819 491.65701294]
[-444.89135742 490.25299072]
[-419.93081665 488.84893799]
[-394.97027588 487.44488525]
[-370.00973511 486.04083252]
[-364.29089355 510.37796021]
[-355.10552979 533.62939453]
[-342.64749146 555.30419922]
[-327.17990112 574.94476318]
[-309.02923584 592.13647461]
[-288.57879639 606.51629639]
[-266.26031494 617.78063965]
[-242.54499817 625.69165039]
[-217.93357849 630.08233643]
[-192.94567871 630.85998535]
[-168.10887146 628.00817871]
[-143.94754028 621.58715820]
[-120.97180176 611.73242188]
[-99.66675568 598.65209961]
[-80.48222351 582.62231445]
[-63.82324982 563.98150635]
[-50.04156113 543.12329102]
[-39.42813110 520.48803711]
[-32.20704269 496.55364990]
[-28.53076172 471.82540894]
[-28.47690010 446.82546997]
[-32.04660034 422.08163452]
[-39.16448975 398.11633301]
[-16.80009079 386.94345093]
[5.56430960 375.77053833]
[27.92870903 364.59765625]
[50.29310989 353.42474365]
[72.65750885 342.25186157]
[95.02191162 331.07894897]
[117.38630676 319.90606689]
[139.75070190 308.73315430]
[164.00045776 314.81179810]
[186.36485291 303.63888550]
[196.06713867 280.59835815]
[188.43206787 256.79278564]
[198.13435364 233.75227356]
[219.12237549 220.16906738]
[224.07145691 195.66383362]
[210.00000000 175.00000000]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[192.50000000 202.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[192.50000000 202.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[]
[160.08789942 279.01068953 36.01426010 263.76312692 223.14491107 1.00000000]
[160.08789942 279.01068953 36.01426010 223.14491107 182.52669522 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-200.10188124 458.95574903 172.05312439 327.61621102 319.28356609 1.00000000]
[]
[]
[]
[]
[6.69377561 240.62501278 34.35139098 102.81916942 60.14105191 1.00000000]
[6.69377561 240.62501278 34.35139098 60.14105191 17.46293439 1.00000000]
[6.69377561 240.62501278 34.35139098 17.46293439 334.78481687 1.00000000]
[6.69377561 240.62501278 34.35139098 334.78481687 292.10669936 1.00000000]
[6.69377561 240.62501278 34.35139098 292.10669936 249.42858184 1.00000000]
[6.69377561 240.62501278 34.35139098 249.42858184 206.75046432 1.00000000]
[6.69377561 240.62501278 34.35139098 206.75046432 164.07234680 1.00000000]
[]
[]
[]
[]
[-200.10188124 458.95574903 172.05312439 307.60795014 299.27530521 1.00000000]
[-200.10188124 458.95574903 172.05312439 299.27530521 290.94266028 1.00000000]
[-200.10188124 458.95574903 172.05312439 290.94266028 282.61001536 1.00000000]
[-200.10188124 458.95574903 172.05312439 282.61001536 274.27737043 1.00000000]
[-200.10188124 458.95574903 172.05312439 274.27737043 265.94472550 1.00000000]
[-200.10188124 458.95574903 172.05312439 265.94472550 257.61208058 1.00000000]
[-200.10188124 458.95574903 172.05312439 257.61208058 249.27943565 1.00000000]
[-200.10188124 458.95574903 172.05312439 249.27943565 240.94679072 1.00000000]
[-200.10188124 458.95574903 172.05312439 240.94679072 232.61414580 1.00000000]
[-200.10188124 458.95574903 172.05312439 232.61414580 224.28150087 1.00000000]
[-200.10188124 458.95574903 172.05312439 224.28150087 215.94885595 1.00000000]
[-200.10188124 458.95574903 172.05312439 215.94885595 207.61621102 1.00000000]
[-200.10188124 458.95574903 172.05312439 207.61621102 199.28356609 1.00000000]
[-200.10188124 458.95574903 172.05312439 199.28356609 190.95092117 1.00000000]
[-200.10188124 458.95574903 172.05312439 190.95092117 182.61827624 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-1257.90433439 518.45781934 65.68782325 341.32961935 319.38973254 1.00000000]
[-1257.90433439 518.45781934 65.68782325 319.38973254 297.44984573 1.00000000]
[-1257.90433439 518.45781934 65.68782325 297.44984573 275.50995892 1.00000000]
[-1257.90433439 518.45781934 65.68782325 275.50995892 253.57007210 1.00000000]
[-1257.90433439 518.45781934 65.68782325 253.57007210 231.63018529 1.00000000]
[-1257.90433439 518.45781934 65.68782325 231.63018529 209.69029848 1.00000000]
[-1257.90433439 518.45781934 65.68782325 209.69029848 187.75041167 1.00000000]
[-1257.90433439 518.45781934 65.68782325 187.75041167 165.81052486 1.00000000]
[-1257.90433439 518.45781934 65.68782325 165.81052486 143.87063804 1.00000000]
[-1257.90433439 518.45781934 65.68782325 143.87063804 121.93075123 1.00000000]
[-1257.90433439 518.45781934 65.68782325 121.93075123 99.99086442 1.00000000]
[-1257.90433439 518.45781934 65.68782325 99.99086442 78.05097761 1.00000000]
[-1257.90433439 518.45781934 65.68782325 78.05097761 56.11109080 1.00000000]
[-1257.90433439 518.45781934 65.68782325 56.11109080 34.17120398 1.00000000]
[-1257.90433439 518.45781934 65.68782325 34.17120398 12.23131717 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-200.10188124 458.95574903 172.05312439 170.94266028 162.61001536 1.00000000]
[-200.10188124 458.95574903 172.05312439 162.61001536 154.27737043 1.00000000]
[-200.10188124 458.95574903 172.05312439 154.27737043 145.94472550 1.00000000]
[-200.10188124 458.95574903 172.05312439 145.94472550 137.61208058 1.00000000]
[-200.10188124 458.95574903 172.05312439 137.61208058 129.27943565 1.00000000]
[-200.10188124 458.95574903 172.05312439 129.27943565 120.94679072 1.00000000]
[-200.10188124 458.95574903 172.05312439 120.94679072 112.61414580 1.00000000]
[-200.10188124 458.95574903 172.05312439 112.61414580 104.28150087 1.00000000]
[-200.10188124 458.95574903 172.05312439 104.28150087 95.94885595 1.00000000]
[-200.10188124 458.95574903 172.05312439 95.94885595 87.61621102 1.00000000]
[-200.10188124 458.95574903 172.05312439 87.61621102 79.28356609 1.00000000]
[-200.10188124 458.95574903 172.05312439 79.28356609 70.95092117 1.00000000]
[-200.10188124 458.95574903 172.05312439 70.95092117 62.61827624 1.00000000]
[-200.10188124 458.95574903 172.05312439 62.61827624 54.28563131 1.00000000]
[-200.10188124 458.95574903 172.05312439 54.28563131 45.95298639 1.00000000]
[-200.10188124 458.95574903 172.05312439 45.95298639 37.62034146 1.00000000]
[-200.10188124 458.95574903 172.05312439 37.62034146 29.28769654 1.00000000]
[-200.10188124 458.95574903 172.05312439 29.28769654 20.95505161 1.00000000]
[-200.10188124 458.95574903 172.05312439 20.95505161 12.62240668 1.00000000]
[-200.10188124 458.95574903 172.05312439 12.62240668 4.28976176 1.00000000]
[-200.10188124 458.95574903 172.05312439 4.28976176 355.95711683 1.00000000]
[-200.10188124 458.95574903 172.05312439 355.95711683 347.62447190 1.00000000]
[-200.10188124 458.95574903 172.05312439 347.62447190 339.29182698 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[160.08789942 279.01068953 36.01426010 124.38134278 83.76312692 1.00000000]
[160.08789942 279.01068953 36.01426010 83.76312692 43.14491107 1.00000000]
[160.08789942 279.01068953 36.01426010 43.14491107 2.52669522 1.00000000]
[160.08789942 279.01068953 36.01426010 2.52669522 321.90847936 1.00000000]
[]
[192.50000000 202.04002271 32.20889362 79.92531101 34.25370472 1.00000000]
[192.50000000 202.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[192.50000000 202.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[6 172]
[7 171]
[9 168]
[10 167]
[12 163]
[13 162]
[14 161]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
[73 110]
[74 109]
[75 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[84 99]
] def

init

% Start Annotations
112 132 12 1.00 0.60 0.67 omark 51 79 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
