%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUGUUGCCUAGAGAUACAGCAGUAAAUAUAUAUUGAAUGAACAACUAAAUUAAUAAAUGCCUUUGACUACUACAUACAUWUACCUACUACUACUUUCAYAUGUAGGUAUAUGUAUGUAGUAGUCAAAGGCAUKUACAUACUUCAUACAAAAAGAYGACUGUGUCUUAAAAGAUCAGCUUUUCUCU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[175.00000000 125.00000000]
[175.00000000 150.00000000]
[175.00000000 175.00000000]
[160.92854309 195.66383362]
[165.87762451 220.16906738]
[156.17533875 243.20959473]
[133.81094360 254.38249207]
[124.10865021 277.42300415]
[101.74425507 288.59591675]
[79.37985229 299.76879883]
[57.01545334 310.94171143]
[34.65105438 322.11459351]
[12.28665447 333.28747559]
[-10.07774448 344.46038818]
[-32.44214630 355.63327026]
[-54.80654526 366.80618286]
[-69.02725983 346.24478149]
[-50.68139267 329.26156616]
[-32.33552551 312.27838135]
[-13.98966026 295.29516602]
[4.35620499 278.31195068]
[29.27009583 276.23880005]
[46.18077469 257.82604980]
[46.13144684 232.82609558]
[29.14824295 214.48023987]
[4.22636414 212.50540161]
[-15.43424225 227.94757080]
[-19.42028046 252.62774658]
[-37.76614761 269.61096191]
[-56.11201096 286.59414673]
[-74.45787811 303.57736206]
[-92.80374146 320.56057739]
[-112.20868683 304.79833984]
[-133.33566284 291.43228149]
[-155.89031982 280.64862061]
[-179.55847168 272.59762573]
[-204.01036072 267.39138794]
[-228.90536499 265.10247803]
[-253.89663696 265.76278687]
[-278.63604736 269.36309814]
[-302.77890015 275.85324097]
[-325.98889160 285.14282227]
[-347.94265747 297.10244751]
[-368.33435059 311.56546021]
[-386.87988281 328.33038330]
[-403.32089233 347.16369629]
[-417.42837524 367.80294800]
[-429.00573730 389.96069336]
[-437.89169312 413.32815552]
[-443.96249390 437.57986450]
[-447.13351440 462.37796021]
[-447.36062622 487.37692261]
[-444.64065552 512.22851562]
[-439.01144409 536.58648682]
[-462.32974243 545.60083008]
[-485.64801025 554.61511230]
[-508.96630859 563.62939453]
[-532.28460693 572.64373779]
[-555.60284424 581.65802002]
[-578.92114258 590.67236328]
[-602.23944092 599.68664551]
[-625.55773926 608.70092773]
[-648.87597656 617.71527100]
[-672.19427490 626.72955322]
[-695.51257324 635.74383545]
[-718.83087158 644.75817871]
[-742.14910889 653.77246094]
[-765.46740723 662.78674316]
[-788.78570557 671.80108643]
[-812.10400391 680.81536865]
[-835.42224121 689.82965088]
[-858.74053955 698.84399414]
[-882.05883789 707.85827637]
[-905.37713623 716.87255859]
[-928.69537354 725.88690186]
[-952.01367188 734.90118408]
[-976.92218018 732.76403809]
[-993.91632080 751.09979248]
[-1017.23461914 760.11407471]
[-1040.55285645 769.12835693]
[-1063.87121582 778.14270020]
[-1087.18945312 787.15698242]
[-1110.50769043 796.17126465]
[-1133.82604980 805.18560791]
[-1152.27453613 788.31390381]
[-1175.69067383 779.55706787]
[-1200.68286133 780.18353271]
[-1223.63085938 790.10253906]
[-1241.21093750 807.87738037]
[-1250.87646484 830.93328857]
[-1251.22753906 855.93084717]
[-1242.21313477 879.24914551]
[-1225.13928223 897.51055908]
[-1202.47875977 908.07006836]
[-1177.51403809 909.39807129]
[-1153.86120605 901.30224609]
[-1134.94628906 884.95526123]
[-1123.50891113 862.72491455]
[-1121.20605469 837.83117676]
[-1097.88769531 828.81689453]
[-1074.56945801 819.80261230]
[-1051.25122070 810.78826904]
[-1027.93286133 801.77398682]
[-1004.61462402 792.75964355]
[-981.29632568 783.74536133]
[-956.38781738 785.88250732]
[-939.39367676 767.54675293]
[-916.07537842 758.53247070]
[-892.75708008 749.51818848]
[-869.43878174 740.50384521]
[-846.12054443 731.48956299]
[-822.80224609 722.47528076]
[-799.48394775 713.46093750]
[-776.16564941 704.44665527]
[-752.84741211 695.43237305]
[-729.52911377 686.41802979]
[-706.21081543 677.40374756]
[-682.89251709 668.38946533]
[-659.57427979 659.37512207]
[-636.25598145 650.36083984]
[-612.93768311 641.34655762]
[-589.61938477 632.33221436]
[-566.30114746 623.31793213]
[-542.98284912 614.30364990]
[-519.66455078 605.28930664]
[-496.34628296 596.27502441]
[-473.02798462 587.26074219]
[-449.70971680 578.24639893]
[-426.39141846 569.23211670]
[-414.17288208 591.04284668]
[-399.46957397 611.26196289]
[-382.48635864 629.60778809]
[-363.45986938 645.82482910]
[-342.65509033 659.68707275]
[-320.36193848 671.00146484]
[-296.89093018 679.61029053]
[-272.56909180 685.39367676]
[-247.73522949 688.27105713]
[-222.73532104 688.20233154]
[-197.91764832 685.18847656]
[-173.62797546 679.27148438]
[-150.20465088 670.53369141]
[-127.97402954 659.09698486]
[-107.24578857 645.12054443]
[-88.30871582 628.79919434]
[-71.42662811 610.36022949]
[-56.83471298 590.06054688]
[-44.73625183 568.18304443]
[-35.29980087 545.03234863]
[-28.65681458 520.93109131]
[-24.89984512 496.21499634]
[-24.08122826 471.22839355]
[-26.21236992 446.31939697]
[-31.26358032 421.83502197]
[-39.16448975 398.11633301]
[-16.80008888 386.94345093]
[5.56431055 375.77053833]
[27.92871094 364.59765625]
[50.29310989 353.42474365]
[72.65750885 342.25186157]
[95.02191162 331.07894897]
[117.38630676 319.90606689]
[139.75070190 308.73315430]
[164.00045776 314.81179810]
[186.36485291 303.63888550]
[196.06715393 280.59835815]
[188.43206787 256.79278564]
[198.13435364 233.75227356]
[219.12237549 220.16906738]
[224.07145691 195.66383362]
[210.00000000 175.00000000]
[210.00000000 150.00000000]
[210.00000000 125.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[192.50000102 202.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[192.50000102 202.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[]
[160.08790044 279.01068953 36.01426010 263.76312692 223.14491107 1.00000000]
[160.08790044 279.01068953 36.01426010 223.14491107 182.52669522 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[-235.81647831 476.79819160 211.80849536 328.71473585 321.94811746 1.00000000]
[]
[]
[]
[]
[14.15979644 245.38920693 34.35139098 106.58224563 63.90412811 1.00000000]
[14.15979644 245.38920693 34.35139098 63.90412811 21.22601059 1.00000000]
[14.15979644 245.38920693 34.35139098 21.22601059 338.54789308 1.00000000]
[14.15979644 245.38920693 34.35139098 338.54789308 295.86977556 1.00000000]
[14.15979644 245.38920693 34.35139098 295.86977556 253.19165804 1.00000000]
[14.15979644 245.38920693 34.35139098 253.19165804 210.51354053 1.00000000]
[14.15979644 245.38920693 34.35139098 210.51354053 167.83542301 1.00000000]
[]
[]
[]
[]
[-235.81647831 476.79819160 211.80849536 312.46955118 305.70293278 1.00000000]
[-235.81647831 476.79819160 211.80849536 305.70293278 298.93631439 1.00000000]
[-235.81647831 476.79819160 211.80849536 298.93631439 292.16969600 1.00000000]
[-235.81647831 476.79819160 211.80849536 292.16969600 285.40307761 1.00000000]
[-235.81647831 476.79819160 211.80849536 285.40307761 278.63645922 1.00000000]
[-235.81647831 476.79819160 211.80849536 278.63645922 271.86984083 1.00000000]
[-235.81647831 476.79819160 211.80849536 271.86984083 265.10322244 1.00000000]
[-235.81647831 476.79819160 211.80849536 265.10322244 258.33660405 1.00000000]
[-235.81647831 476.79819160 211.80849536 258.33660405 251.56998566 1.00000000]
[-235.81647831 476.79819160 211.80849536 251.56998566 244.80336727 1.00000000]
[-235.81647831 476.79819160 211.80849536 244.80336727 238.03674888 1.00000000]
[-235.81647831 476.79819160 211.80849536 238.03674888 231.27013049 1.00000000]
[-235.81647831 476.79819160 211.80849536 231.27013049 224.50351210 1.00000000]
[-235.81647831 476.79819160 211.80849536 224.50351210 217.73689371 1.00000000]
[-235.81647831 476.79819160 211.80849536 217.73689371 210.97027532 1.00000000]
[-235.81647831 476.79819160 211.80849536 210.97027532 204.20365693 1.00000000]
[-235.81647831 476.79819160 211.80849536 204.20365693 197.43703854 1.00000000]
[-235.81647831 476.79819160 211.80849536 197.43703854 190.67042015 1.00000000]
[-235.81647831 476.79819160 211.80849536 190.67042015 183.90380176 1.00000000]
[-235.81647831 476.79819160 211.80849536 183.90380176 177.13718336 1.00000000]
[-235.81647831 476.79819160 211.80849536 177.13718336 170.37056497 1.00000000]
[-235.81647831 476.79819160 211.80849536 170.37056497 163.60394658 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-966.65499510 759.32327722 28.47466729 300.94315534 248.86466342 1.00000000]
[-966.65499510 759.32327722 28.47466729 248.86466342 196.78617149 1.00000000]
[]
[]
[]
[]
[]
[]
[-1186.57080859 844.33758990 65.68782325 323.41381448 301.47392767 1.00000000]
[-1186.57080859 844.33758990 65.68782325 301.47392767 279.53404086 1.00000000]
[-1186.57080859 844.33758990 65.68782325 279.53404086 257.59415405 1.00000000]
[-1186.57080859 844.33758990 65.68782325 257.59415405 235.65426723 1.00000000]
[-1186.57080859 844.33758990 65.68782325 235.65426723 213.71438042 1.00000000]
[-1186.57080859 844.33758990 65.68782325 213.71438042 191.77449361 1.00000000]
[-1186.57080859 844.33758990 65.68782325 191.77449361 169.83460680 1.00000000]
[-1186.57080859 844.33758990 65.68782325 169.83460680 147.89471999 1.00000000]
[-1186.57080859 844.33758990 65.68782325 147.89471999 125.95483317 1.00000000]
[-1186.57080859 844.33758990 65.68782325 125.95483317 104.01494636 1.00000000]
[-1186.57080859 844.33758990 65.68782325 104.01494636 82.07505955 1.00000000]
[-1186.57080859 844.33758990 65.68782325 82.07505955 60.13517274 1.00000000]
[-1186.57080859 844.33758990 65.68782325 60.13517274 38.19528593 1.00000000]
[-1186.57080859 844.33758990 65.68782325 38.19528593 16.25539911 1.00000000]
[-1186.57080859 844.33758990 65.68782325 16.25539911 354.31551230 1.00000000]
[]
[]
[]
[]
[]
[]
[-966.65499510 759.32327722 28.47466729 120.94315530 68.86466337 1.00000000]
[-966.65499510 759.32327722 28.47466729 68.86466337 16.78617154 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-235.81647831 476.79819160 211.80849536 154.12538030 147.35876191 1.00000000]
[-235.81647831 476.79819160 211.80849536 147.35876191 140.59214351 1.00000000]
[-235.81647831 476.79819160 211.80849536 140.59214351 133.82552512 1.00000000]
[-235.81647831 476.79819160 211.80849536 133.82552512 127.05890673 1.00000000]
[-235.81647831 476.79819160 211.80849536 127.05890673 120.29228834 1.00000000]
[-235.81647831 476.79819160 211.80849536 120.29228834 113.52566995 1.00000000]
[-235.81647831 476.79819160 211.80849536 113.52566995 106.75905156 1.00000000]
[-235.81647831 476.79819160 211.80849536 106.75905156 99.99243317 1.00000000]
[-235.81647831 476.79819160 211.80849536 99.99243317 93.22581478 1.00000000]
[-235.81647831 476.79819160 211.80849536 93.22581478 86.45919639 1.00000000]
[-235.81647831 476.79819160 211.80849536 86.45919639 79.69257800 1.00000000]
[-235.81647831 476.79819160 211.80849536 79.69257800 72.92595961 1.00000000]
[-235.81647831 476.79819160 211.80849536 72.92595961 66.15934122 1.00000000]
[-235.81647831 476.79819160 211.80849536 66.15934122 59.39272283 1.00000000]
[-235.81647831 476.79819160 211.80849536 59.39272283 52.62610444 1.00000000]
[-235.81647831 476.79819160 211.80849536 52.62610444 45.85948605 1.00000000]
[-235.81647831 476.79819160 211.80849536 45.85948605 39.09286766 1.00000000]
[-235.81647831 476.79819160 211.80849536 39.09286766 32.32624927 1.00000000]
[-235.81647831 476.79819160 211.80849536 32.32624927 25.55963088 1.00000000]
[-235.81647831 476.79819160 211.80849536 25.55963088 18.79301249 1.00000000]
[-235.81647831 476.79819160 211.80849536 18.79301249 12.02639409 1.00000000]
[-235.81647831 476.79819160 211.80849536 12.02639409 5.25977570 1.00000000]
[-235.81647831 476.79819160 211.80849536 5.25977570 358.49315731 1.00000000]
[-235.81647831 476.79819160 211.80849536 358.49315731 351.72653892 1.00000000]
[-235.81647831 476.79819160 211.80849536 351.72653892 344.95992053 1.00000000]
[-235.81647831 476.79819160 211.80849536 344.95992053 338.19330214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[160.08790044 279.01068953 36.01426010 124.38134278 83.76312692 1.00000000]
[160.08790044 279.01068953 36.01426010 83.76312692 43.14491107 1.00000000]
[160.08790044 279.01068953 36.01426010 43.14491107 2.52669522 1.00000000]
[160.08790044 279.01068953 36.01426010 2.52669522 321.90847936 1.00000000]
[]
[192.50000102 202.04002271 32.20889362 79.92531101 34.25370472 1.00000000]
[192.50000102 202.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[192.50000102 202.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[6 176]
[7 175]
[9 172]
[10 171]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 160]
[20 159]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
[82 109]
[83 108]
[84 107]
[85 106]
[86 105]
[87 104]
[88 103]
] def

init

% Start Annotations
116 136 12 1.00 0.60 0.67 omark 55 83 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
