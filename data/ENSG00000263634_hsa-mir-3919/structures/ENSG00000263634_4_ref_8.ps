%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUAGUGAGAAACAAUAGUCUUAUUUUAUUCCAAGUAGUUAACCCUUUACCUGAGCACCAUUUACUGACCAGUCCUUUGUUCUCUACUAGUUUGUGAYRUGAUCUUUACCACAUGUUAAAAAUCUAUCCAUUAGAAUCUCUUUCUGAACU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[200.00000000 125.00000000]
[200.00000000 150.00000000]
[200.00000000 175.00000000]
[200.00000000 200.00000000]
[200.00000000 225.00000000]
[200.00000000 250.00000000]
[181.37222290 266.67349243]
[175.48243713 290.96981812]
[184.40727234 314.32247925]
[205.00000000 328.49780273]
[230.00000000 328.49780273]
[250.59272766 314.32247925]
[259.51757812 290.96981812]
[253.62777710 266.67349243]
[235.00000000 250.00000000]
[235.00000000 225.00000000]
[235.00000000 200.00000000]
[235.00000000 175.00000000]
[235.00000000 150.00000000]
[235.00000000 125.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[460.00000000 125.00000000]
[460.00000000 150.00000000]
[460.00000000 175.00000000]
[460.00000000 200.00000000]
[443.72460938 218.97660828]
[443.72460938 243.97660828]
[460.00000000 262.95321655]
[460.00000000 287.95321655]
[460.00000000 312.95321655]
[437.21896362 323.25000000]
[419.39715576 340.78234863]
[408.72875977 363.39175415]
[406.52719116 388.29464722]
[413.06353760 412.42501831]
[427.53308105 432.81210327]
[448.15432739 446.94589233]
[472.38851929 453.08627319]
[476.77450562 477.69854736]
[481.16049194 502.31079102]
[468.46676636 523.84844971]
[472.85278320 548.46069336]
[492.20498657 564.28759766]
[496.59097290 588.89984131]
[481.17727661 608.58282471]
[479.64138794 633.53558350]
[492.52478027 654.96032715]
[515.28503418 665.30297852]
[539.89727783 660.91699219]
[557.68371582 643.34875488]
[562.37316895 618.79248047]
[552.31219482 595.90631104]
[531.04809570 582.75946045]
[526.66210938 558.14721680]
[539.35583496 536.60961914]
[534.96984863 511.99734497]
[515.61767578 496.17041016]
[511.23165894 471.55813599]
[506.84567261 446.94589233]
[527.46691895 432.81210327]
[541.93646240 412.42501831]
[548.47277832 388.29464722]
[546.27124023 363.39175415]
[535.60284424 340.78234863]
[517.78106689 323.25000000]
[495.00000000 312.95321655]
[495.00000000 287.95321655]
[495.00000000 262.95321655]
[511.27539062 243.97660828]
[511.27539062 218.97660828]
[495.00000000 200.00000000]
[495.00000000 175.00000000]
[495.00000000 150.00000000]
[495.00000000 125.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[620.00000000 125.00000000]
[620.00000000 150.00000000]
[620.00000000 175.00000000]
[597.95648193 186.79341125]
[582.39672852 206.36106873]
[575.87194824 230.49459839]
[579.45190430 255.23693848]
[592.54968262 276.53125000]
[613.01776123 290.88601685]
[637.50000000 295.94757080]
[661.98223877 290.88601685]
[682.45031738 276.53125000]
[695.54809570 255.23693848]
[699.12805176 230.49459839]
[692.60327148 206.36106873]
[677.04351807 186.79341125]
[655.00000000 175.00000000]
[655.00000000 150.00000000]
[655.00000000 125.00000000]
[655.00000000 100.00000000]
[680.00000000 100.00000000]
[705.00000000 100.00000000]
[730.00000000 100.00000000]
[755.00000000 100.00000000]
[780.00000000 100.00000000]
[805.00000000 100.00000000]
[830.00000000 100.00000000]
[855.00000000 100.00000000]
[880.00000000 100.00000000]
[905.00000000 100.00000000]
[930.00000000 100.00000000]
[955.00000000 100.00000000]
[980.00000000 100.00000000]
[1005.00000000 100.00000000]
[1030.00000000 100.00000000]
[1055.00000000 100.00000000]
[1080.00000000 100.00000000]
[1105.00000000 100.00000000]
[1105.00000000 125.00000000]
[1105.00000000 150.00000000]
[1105.00000000 175.00000000]
[1105.00000000 200.00000000]
[1105.00000000 225.00000000]
[1092.17907715 246.46212769]
[1099.69177246 270.30661011]
[1122.50000000 280.54299927]
[1145.30822754 270.30661011]
[1152.82092285 246.46212769]
[1140.00000000 225.00000000]
[1140.00000000 200.00000000]
[1140.00000000 175.00000000]
[1140.00000000 150.00000000]
[1140.00000000 125.00000000]
[1140.00000000 100.00000000]
[1165.00000000 100.00000000]
[1190.00000000 100.00000000]
[1215.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[217.50000000 288.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[217.50000000 288.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[217.50000000 288.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[217.50000000 288.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[217.50000000 288.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[217.50000000 288.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[217.50000000 288.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[217.50000000 288.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[217.50000000 288.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[477.50000000 231.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[477.50000000 231.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[477.50000000 231.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[477.50000000 382.02025962 71.24960467 255.78179526 235.57331653 1.00000000]
[477.50000000 382.02025962 71.24960467 235.57331653 215.36483779 1.00000000]
[477.50000000 382.02025962 71.24960467 215.36483779 195.15635905 1.00000000]
[477.50000000 382.02025962 71.24960467 195.15635905 174.94788032 1.00000000]
[477.50000000 382.02025962 71.24960467 174.94788032 154.73940158 1.00000000]
[477.50000000 382.02025962 71.24960467 154.73940158 134.53092284 1.00000000]
[477.50000000 382.02025962 71.24960467 134.53092284 114.32244411 1.00000000]
[477.50000000 382.02025962 71.24960467 114.32244411 94.11396537 1.00000000]
[]
[]
[503.91131327 530.22900833 36.01426010 230.82308441 190.20486856 1.00000000]
[503.91131327 530.22900833 36.01426010 190.20486856 149.58665270 1.00000000]
[503.91131327 530.22900833 36.01426010 149.58665270 108.96843685 1.00000000]
[]
[520.53773289 623.52920970 42.10271758 235.33549574 200.79333239 1.00000000]
[520.53773289 623.52920970 42.10271758 200.79333239 166.25116903 1.00000000]
[520.53773289 623.52920970 42.10271758 166.25116903 131.70900567 1.00000000]
[520.53773289 623.52920970 42.10271758 131.70900567 97.16684231 1.00000000]
[520.53773289 623.52920970 42.10271758 97.16684231 62.62467895 1.00000000]
[520.53773289 623.52920970 42.10271758 62.62467895 28.08251559 1.00000000]
[520.53773289 623.52920970 42.10271758 28.08251559 353.54035224 1.00000000]
[520.53773289 623.52920970 42.10271758 353.54035224 318.99818888 1.00000000]
[520.53773289 623.52920970 42.10271758 318.99818888 284.45602552 1.00000000]
[]
[503.91131327 530.22900833 36.01426010 50.82308441 10.20486856 1.00000000]
[503.91131327 530.22900833 36.01426010 10.20486856 329.58665270 1.00000000]
[503.91131327 530.22900833 36.01426010 329.58665270 288.96843685 1.00000000]
[]
[]
[477.50000000 382.02025962 71.24960467 65.67755589 45.46907716 1.00000000]
[477.50000000 382.02025962 71.24960467 45.46907716 25.26059842 1.00000000]
[477.50000000 382.02025962 71.24960467 25.26059842 5.05211968 1.00000000]
[477.50000000 382.02025962 71.24960467 5.05211968 344.84364095 1.00000000]
[477.50000000 382.02025962 71.24960467 344.84364095 324.63516221 1.00000000]
[477.50000000 382.02025962 71.24960467 324.63516221 304.42668347 1.00000000]
[477.50000000 382.02025962 71.24960467 304.42668347 284.21820474 1.00000000]
[]
[]
[477.50000000 231.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[477.50000000 231.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[477.50000000 231.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[637.50000000 234.20774647 61.73983513 253.53393134 230.17194114 1.00000000]
[637.50000000 234.20774647 61.73983513 230.17194114 206.80995095 1.00000000]
[637.50000000 234.20774647 61.73983513 206.80995095 183.44796076 1.00000000]
[637.50000000 234.20774647 61.73983513 183.44796076 160.08597057 1.00000000]
[637.50000000 234.20774647 61.73983513 160.08597057 136.72398038 1.00000000]
[637.50000000 234.20774647 61.73983513 136.72398038 113.36199019 1.00000000]
[637.50000000 234.20774647 61.73983513 113.36199019 90.00000000 1.00000000]
[637.50000000 234.20774647 61.73983513 90.00000000 66.63800981 1.00000000]
[637.50000000 234.20774647 61.73983513 66.63800981 43.27601962 1.00000000]
[637.50000000 234.20774647 61.73983513 43.27601962 19.91402943 1.00000000]
[637.50000000 234.20774647 61.73983513 19.91402943 356.55203924 1.00000000]
[637.50000000 234.20774647 61.73983513 356.55203924 333.19004905 1.00000000]
[637.50000000 234.20774647 61.73983513 333.19004905 309.82805886 1.00000000]
[637.50000000 234.20774647 61.73983513 309.82805886 286.46606866 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1122.50000000 250.01461919 30.52836670 235.02371410 186.68247606 1.00000000]
[1122.50000000 250.01461919 30.52836670 186.68247606 138.34123803 1.00000000]
[1122.50000000 250.01461919 30.52836670 138.34123803 90.00000000 1.00000000]
[1122.50000000 250.01461919 30.52836670 90.00000000 41.65876197 1.00000000]
[1122.50000000 250.01461919 30.52836670 41.65876197 353.31752394 1.00000000]
[1122.50000000 250.01461919 30.52836670 353.31752394 304.97628590 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[42 82]
[43 81]
[44 80]
[52 73]
[53 72]
[54 71]
[57 68]
[58 67]
[94 114]
[95 113]
[96 112]
[97 111]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
] def

init

% Start Annotations
97 97 12 1.00 0.60 0.67 omark 51 69 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
