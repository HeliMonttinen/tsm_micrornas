%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGGUUUCUAGAAGGAGGGAUUUCUUGACACCUUGAGCCGAUCUUUUCUCUUCCCCAUGGGUGUGAAAGGAGUUAACUGACUGGUGACAGUUAUCUGACUGGUGACAGAUAACUCCUUCCACAUCCAUGGGGAAGAGAAAGGUGAGUUUCAGAGGCAACCAAGUUGAUGUGGCCUAGCCUCUUCCU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[200.00000000 125.00000000]
[200.00000000 150.00000000]
[189.02532959 172.46234131]
[200.00000000 194.92468262]
[200.00000000 219.92468262]
[189.02532959 242.38702393]
[200.00000000 264.84936523]
[200.00000000 289.84936523]
[200.00000000 314.84936523]
[200.00000000 339.84936523]
[200.00000000 364.84936523]
[184.59664917 384.54040527]
[186.62066650 409.45831299]
[205.00000000 426.40530396]
[230.00000000 426.40530396]
[248.37933350 409.45831299]
[250.40335083 384.54040527]
[235.00000000 364.84936523]
[235.00000000 339.84936523]
[235.00000000 314.84936523]
[235.00000000 289.84936523]
[235.00000000 264.84936523]
[245.97467041 242.38702393]
[235.00000000 219.92468262]
[235.00000000 194.92468262]
[245.97467041 172.46234131]
[235.00000000 150.00000000]
[235.00000000 125.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[310.00000000 125.00000000]
[310.00000000 150.00000000]
[299.02532959 172.46234131]
[310.00000000 194.92468262]
[290.90136719 211.05671692]
[283.75732422 235.01422119]
[290.90136719 258.97174072]
[310.00000000 275.10375977]
[310.00000000 300.10375977]
[310.00000000 325.10375977]
[310.00000000 350.10375977]
[310.00000000 375.10375977]
[310.00000000 400.10375977]
[310.00000000 425.10375977]
[310.00000000 450.10375977]
[310.00000000 475.10375977]
[310.00000000 500.10375977]
[310.00000000 525.10375977]
[310.00000000 550.10375977]
[310.00000000 575.10375977]
[310.00000000 600.10375977]
[310.00000000 625.10375977]
[310.00000000 650.10375977]
[310.00000000 675.10375977]
[310.00000000 700.10375977]
[310.00000000 725.10375977]
[310.00000000 750.10375977]
[310.00000000 775.10375977]
[310.00000000 800.10375977]
[310.00000000 825.10375977]
[299.02532959 847.56610107]
[310.00000000 870.02844238]
[310.00000000 895.02844238]
[310.00000000 920.02844238]
[310.00000000 945.02844238]
[310.00000000 970.02844238]
[310.00000000 995.02844238]
[310.00000000 1020.02844238]
[310.00000000 1045.02844238]
[310.00000000 1070.02844238]
[299.02532959 1092.49084473]
[310.00000000 1114.95312500]
[310.00000000 1139.95312500]
[310.00000000 1164.95312500]
[299.02532959 1187.41552734]
[279.30398560 1202.78002930]
[259.58267212 1218.14453125]
[239.86132812 1233.50903320]
[220.13998413 1248.87365723]
[200.41865540 1264.23815918]
[175.95433044 1269.38562012]
[164.97966003 1291.84802246]
[175.95433044 1314.31030273]
[175.95433044 1339.31030273]
[175.95433044 1364.31030273]
[166.85580444 1387.59594727]
[180.95433044 1408.24133301]
[205.95433044 1408.24133301]
[220.05285645 1387.59594727]
[210.95433044 1364.31030273]
[210.95433044 1339.31030273]
[210.95433044 1314.31030273]
[221.92900085 1291.84802246]
[241.65032959 1276.48352051]
[261.37167358 1261.11889648]
[281.09301758 1245.75439453]
[300.81433105 1230.38989258]
[320.53567505 1215.02539062]
[345.00000000 1209.87780762]
[355.97467041 1187.41552734]
[345.00000000 1164.95312500]
[345.00000000 1139.95312500]
[345.00000000 1114.95312500]
[355.97467041 1092.49084473]
[345.00000000 1070.02844238]
[345.00000000 1045.02844238]
[345.00000000 1020.02844238]
[345.00000000 995.02844238]
[345.00000000 970.02844238]
[345.00000000 945.02844238]
[345.00000000 920.02844238]
[345.00000000 895.02844238]
[345.00000000 870.02844238]
[355.97467041 847.56610107]
[345.00000000 825.10375977]
[345.00000000 800.10375977]
[345.00000000 775.10375977]
[345.00000000 750.10375977]
[345.00000000 725.10375977]
[345.00000000 700.10375977]
[345.00000000 675.10375977]
[345.00000000 650.10375977]
[345.00000000 625.10375977]
[345.00000000 600.10375977]
[345.00000000 575.10375977]
[345.00000000 550.10375977]
[345.00000000 525.10375977]
[345.00000000 500.10375977]
[345.00000000 475.10375977]
[345.00000000 450.10375977]
[345.00000000 425.10375977]
[345.00000000 400.10375977]
[345.00000000 375.10375977]
[345.00000000 350.10375977]
[345.00000000 325.10375977]
[345.00000000 300.10375977]
[345.00000000 275.10375977]
[364.09863281 258.97174072]
[371.24267578 235.01422119]
[364.09863281 211.05671692]
[345.00000000 194.92468262]
[355.97467041 172.46234131]
[345.00000000 150.00000000]
[345.00000000 125.00000000]
[345.00000000 100.00000000]
[470.00000000 100.00000000]
[470.00000000 125.00000000]
[470.00000000 150.00000000]
[470.00000000 175.00000000]
[470.00000000 200.00000000]
[470.00000000 225.00000000]
[450.90136719 241.13203430]
[443.75732422 265.08953857]
[450.90136719 289.04705811]
[437.20907593 309.96405029]
[423.51678467 330.88107300]
[398.79934692 334.62918091]
[380.56457520 351.73159790]
[375.24172974 376.15838623]
[384.70755005 399.29705811]
[405.62454224 412.98934937]
[430.61779785 412.40762329]
[450.87509155 397.75698853]
[459.25411987 374.20297241]
[452.80056763 350.05029297]
[466.49285889 329.13327026]
[480.18518066 308.21627808]
[505.00000000 305.17910767]
[524.09863281 289.04705811]
[531.24267578 265.08953857]
[524.09863281 241.13203430]
[505.00000000 225.00000000]
[505.00000000 200.00000000]
[505.00000000 175.00000000]
[505.00000000 150.00000000]
[505.00000000 125.00000000]
[505.00000000 100.00000000]
[530.00000000 100.00000000]
[555.00000000 100.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[217.49999980 172.46233916 28.47466715 232.07849221 180.00000000 1.00000000]
[217.49999980 172.46233916 28.47466715 180.00000000 127.92150791 1.00000000]
[]
[217.49999960 242.38701746 28.47466689 232.07849273 180.00000000 1.00000000]
[217.49999960 242.38701746 28.47466689 180.00000000 127.92150761 1.00000000]
[]
[]
[]
[]
[217.50000025 394.40892439 34.35139098 239.37341121 196.69529370 1.00000000]
[217.50000025 394.40892439 34.35139098 196.69529370 154.01717618 1.00000000]
[217.50000025 394.40892439 34.35139098 154.01717618 111.33905866 1.00000000]
[217.50000025 394.40892439 34.35139098 111.33905866 68.66094115 1.00000000]
[217.50000025 394.40892439 34.35139098 68.66094115 25.98282363 1.00000000]
[217.50000025 394.40892439 34.35139098 25.98282363 343.30470611 1.00000000]
[217.50000025 394.40892439 34.35139098 343.30470611 300.62658860 1.00000000]
[]
[]
[]
[]
[217.49999960 242.38701746 28.47466689 52.07849093 360.00000000 1.00000000]
[217.49999960 242.38701746 28.47466689 360.00000000 307.92150844 1.00000000]
[]
[217.49999980 172.46233916 28.47466715 52.07849154 360.00000000 1.00000000]
[217.49999980 172.46233916 28.47466715 360.00000000 307.92150824 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[327.49999680 172.46233926 28.47466715 232.07849234 180.00000000 1.00000000]
[327.49999680 172.46233926 28.47466715 180.00000000 127.92150791 1.00000000]
[327.49999700 235.01422653 43.74267810 246.41763572 213.20881786 1.00000000]
[327.49999700 235.01422653 43.74267810 213.20881786 180.00000000 1.00000000]
[327.49999700 235.01422653 43.74267810 180.00000000 146.79118204 1.00000000]
[327.49999700 235.01422653 43.74267810 146.79118204 113.58236413 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[327.49999610 847.56611466 28.47466589 232.07849492 180.00000000 1.00000000]
[327.49999610 847.56611466 28.47466589 180.00000000 127.92150663 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[327.49999791 1092.49079215 28.47466729 232.07849181 180.00000000 1.00000000]
[327.49999791 1092.49079215 28.47466729 180.00000000 127.92150796 1.00000000]
[]
[]
[327.49999814 1187.41547033 28.47466729 232.07849176 180.00000000 1.00000000]
[]
[]
[]
[]
[]
[193.45433246 1291.84801202 28.47466729 284.15698364 232.07849171 1.00000000]
[193.45433246 1291.84801202 28.47466729 232.07849171 180.00000000 1.00000000]
[193.45433246 1291.84801202 28.47466729 180.00000000 127.92150786 1.00000000]
[]
[]
[193.45433284 1384.56858872 26.77024824 229.17803276 173.50681956 1.00000000]
[193.45433284 1384.56858872 26.77024824 173.50681956 117.83560636 1.00000000]
[193.45433284 1384.56858872 26.77024824 117.83560636 62.16439316 1.00000000]
[193.45433284 1384.56858872 26.77024824 62.16439316 6.49317997 1.00000000]
[193.45433284 1384.56858872 26.77024824 6.49317997 310.82196677 1.00000000]
[]
[]
[193.45433246 1291.84801202 28.47466729 52.07849167 360.00000000 1.00000000]
[]
[]
[]
[]
[]
[327.49999814 1187.41547033 28.47466729 104.15698364 52.07849171 1.00000000]
[327.49999814 1187.41547033 28.47466729 52.07849171 360.00000000 1.00000000]
[327.49999814 1187.41547033 28.47466729 360.00000000 307.92150796 1.00000000]
[]
[]
[327.49999791 1092.49079215 28.47466729 52.07849176 360.00000000 1.00000000]
[327.49999791 1092.49079215 28.47466729 360.00000000 307.92150800 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[327.49999610 847.56611466 28.47466589 52.07848874 360.00000000 1.00000000]
[327.49999610 847.56611466 28.47466589 360.00000000 307.92150943 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[327.49999700 235.01422653 43.74267810 66.41763577 33.20881786 1.00000000]
[327.49999700 235.01422653 43.74267810 33.20881786 360.00000000 1.00000000]
[327.49999700 235.01422653 43.74267810 360.00000000 326.79118204 1.00000000]
[327.49999700 235.01422653 43.74267810 326.79118204 293.58236408 1.00000000]
[327.49999680 172.46233926 28.47466715 52.07849130 360.00000000 1.00000000]
[327.49999680 172.46233926 28.47466715 360.00000000 307.92150811 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[487.49999480 265.08954835 43.74267810 246.41763582 213.20881791 1.00000000]
[487.49999480 265.08954835 43.74267810 213.20881791 180.00000000 1.00000000]
[487.49999480 265.08954835 43.74267810 180.00000000 146.79118209 1.00000000]
[]
[]
[417.18565046 372.50504523 42.10271758 278.64855302 244.10638966 1.00000000]
[417.18565046 372.50504523 42.10271758 244.10638966 209.56422630 1.00000000]
[417.18565046 372.50504523 42.10271758 209.56422630 175.02206295 1.00000000]
[417.18565046 372.50504523 42.10271758 175.02206295 140.47989959 1.00000000]
[417.18565046 372.50504523 42.10271758 140.47989959 105.93773623 1.00000000]
[417.18565046 372.50504523 42.10271758 105.93773623 71.39557287 1.00000000]
[417.18565046 372.50504523 42.10271758 71.39557287 36.85340951 1.00000000]
[417.18565046 372.50504523 42.10271758 36.85340951 2.31124616 1.00000000]
[417.18565046 372.50504523 42.10271758 2.31124616 327.76908280 1.00000000]
[]
[]
[487.49999480 265.08954835 43.74267810 99.62645373 66.41763582 1.00000000]
[487.49999480 265.08954835 43.74267810 66.41763582 33.20881791 1.00000000]
[487.49999480 265.08954835 43.74267810 33.20881791 0.00000000 1.00000000]
[487.49999480 265.08954835 43.74267810 0.00000000 326.79118209 1.00000000]
[487.49999480 265.08954835 43.74267810 326.79118209 293.58236418 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 34]
[6 33]
[7 32]
[9 30]
[10 29]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[37 152]
[38 151]
[39 150]
[41 148]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[51 138]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[69 120]
[70 119]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
[79 110]
[80 109]
[81 108]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[90 99]
[91 98]
[92 97]
[153 184]
[154 183]
[155 182]
[156 181]
[157 180]
[158 179]
[161 174]
[162 173]
[163 172]
] def

init

% Start Annotations
108 144 12 1.00 0.60 0.67 omark 45 99 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
