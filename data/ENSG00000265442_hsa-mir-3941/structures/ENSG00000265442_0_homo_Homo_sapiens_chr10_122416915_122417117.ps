%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAAUGAUGGUGAGGGCAGGGGUUUCUUACUGUACAAUGUCUGCAGGUAGAGUCAGAAUUCUCAUCAGGCUGUGAUGCUCAGUUGUGUGUAGAUUGAAAGCCCUAAUUUUACACACAACUGAGGAUCAUAGCCUGAUGGUUCCUUUUUGUUUUACUCUUAAGUCCAAAAUACCAGUCAGAGAUAUUUAAGUGCUUCUGCAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[500.00000000 125.00000000]
[500.00000000 150.00000000]
[500.00000000 175.00000000]
[500.00000000 200.00000000]
[500.00000000 225.00000000]
[500.00000000 250.00000000]
[500.00000000 275.00000000]
[485.92852783 295.66384888]
[490.87762451 320.16906738]
[511.86563110 333.75225830]
[521.56793213 356.79278564]
[531.27020264 379.83331299]
[540.97253418 402.87384033]
[536.02343750 427.37905884]
[550.09484863 448.04290771]
[574.70941162 452.41619873]
[592.59307861 469.88543701]
[610.47674561 487.35470581]
[615.42578125 511.85992432]
[636.41381836 525.44311523]
[660.79632568 519.92095947]
[673.88378906 498.62030029]
[698.87060547 499.43185425]
[714.86724854 480.21966553]
[737.67401123 469.97994995]
[760.48077393 459.74020386]
[783.28747559 449.50048828]
[806.09423828 439.26077271]
[831.08105469 440.07229614]
[847.07769775 420.86010742]
[869.88446045 410.62039185]
[892.69122314 400.38067627]
[911.82965088 416.46542358]
[905.66766357 440.69415283]
[899.50567627 464.92285156]
[893.34368896 489.15155029]
[887.18176270 513.38024902]
[859.09216309 537.66790771]
[834.22760010 540.26635742]
[809.36297607 542.86480713]
[784.49841309 545.46325684]
[759.63378906 548.06170654]
[739.10711670 524.17675781]
[708.91107178 515.23052979]
[678.68634033 524.07934570]
[658.08276367 547.89801025]
[633.22662354 545.21942139]
[608.37054443 542.54083252]
[583.51446533 539.86224365]
[558.65838623 537.18359375]
[533.80230713 534.50500488]
[508.94619751 531.82641602]
[484.09011841 529.14782715]
[459.23403931 526.46923828]
[434.37796021 523.79064941]
[409.52185059 521.11199951]
[384.66577148 518.43341064]
[359.80969238 515.75482178]
[334.95358276 513.07623291]
[310.09750366 510.39761353]
[288.94033813 497.07943726]
[265.43142700 505.58419800]
[240.57534790 502.90560913]
[215.71926880 500.22702026]
[190.86317444 497.54840088]
[166.00709534 494.86981201]
[141.15100098 492.19122314]
[116.29491425 489.51260376]
[91.43882751 486.83401489]
[66.58273315 484.15542603]
[41.72665024 481.47680664]
[16.87056160 478.79821777]
[-7.98552704 476.11959839]
[-32.84161377 473.44100952]
[-57.69770432 470.76242065]
[-82.55378723 468.08380127]
[-107.40988159 465.40521240]
[-116.07102966 441.95346069]
[-132.86726379 423.43627930]
[-155.36570740 412.53579712]
[-180.30751038 410.83096313]
[-204.07992554 418.56866455]
[-223.23957825 434.62817383]
[-235.01124573 456.68328857]
[-237.68984985 481.53936768]
[-230.88739014 505.59609985]
[-215.58917236 525.36895752]
[-194.01112366 537.99383545]
[-169.27876282 541.64208984]
[-144.97448730 535.78527832]
[-124.61870575 521.27172852]
[-111.15991974 500.20373535]
[-86.30383301 502.88232422]
[-61.44774246 505.56094360]
[-36.59165573 508.23953247]
[-11.73556614 510.91812134]
[13.12052155 513.59674072]
[37.97660828 516.27532959]
[62.83269501 518.95391846]
[87.68878174 521.63250732]
[112.54487610 524.31115723]
[137.40095520 526.98974609]
[162.25704956 529.66833496]
[187.11312866 532.34692383]
[211.96922302 535.02551270]
[236.82531738 537.70416260]
[261.68139648 540.38275146]
[282.83856201 553.70092773]
[306.34747314 545.19616699]
[331.20355225 547.87475586]
[356.05963135 550.55334473]
[380.91574097 553.23193359]
[405.77182007 555.91052246]
[430.62789917 558.58917236]
[455.48400879 561.26776123]
[480.34008789 563.94635010]
[505.19616699 566.62493896]
[530.05224609 569.30352783]
[554.90832520 571.98211670]
[579.76446533 574.66076660]
[604.62054443 577.33935547]
[629.47662354 580.01794434]
[654.33270264 582.69653320]
[664.94091797 605.33422852]
[684.37725830 621.05773926]
[708.73138428 626.70373535]
[733.10357666 621.13629150]
[752.59045410 605.47552490]
[763.27166748 582.87213135]
[788.13623047 580.27368164]
[813.00085449 577.67523193]
[837.86541748 575.07678223]
[862.73004150 572.47833252]
[883.46038818 588.51098633]
[909.65734863 587.79516602]
[929.48132324 570.65441895]
[933.97277832 544.83538818]
[921.10192871 522.00701904]
[927.26391602 497.77832031]
[933.42590332 473.54962158]
[939.58782959 449.32092285]
[945.74981689 425.09222412]
[970.24737549 420.10519409]
[991.23443604 406.52047729]
[1005.81488037 386.21261597]
[1011.97686768 361.98391724]
[1008.87005615 337.17770386]
[996.92315674 315.21704102]
[977.78466797 299.13226318]
[954.09564209 291.14294434]
[929.12487793 292.35153198]
[906.31811523 302.59127808]
[888.82250977 320.44912720]
[879.05224609 343.46090698]
[878.35559082 368.45120239]
[855.54882812 378.69094849]
[832.74206543 388.93066406]
[807.75524902 388.11911011]
[791.75866699 407.33129883]
[771.48742676 392.69995117]
[768.95190430 417.57104492]
[746.14514160 427.81076050]
[723.33837891 438.05047607]
[700.53161621 448.29019165]
[675.54479980 447.47866821]
[659.54815674 466.69085693]
[634.93365479 462.31756592]
[617.04998779 444.84832764]
[599.16632080 427.37905884]
[594.21722412 402.87384033]
[573.22924805 389.29061890]
[563.52691650 366.25012207]
[553.82464600 343.20959473]
[544.12237549 320.16906738]
[549.07147217 295.66384888]
[535.00000000 275.00000000]
[535.00000000 250.00000000]
[535.00000000 225.00000000]
[535.00000000 200.00000000]
[535.00000000 175.00000000]
[535.00000000 150.00000000]
[535.00000000 125.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[517.49999936 302.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[517.49999936 302.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[517.49999936 302.04002271 32.20889362 145.74629528 100.07468899 1.00000000]
[]
[]
[]
[567.59487648 421.00287999 32.20889362 214.25370472 168.58209843 1.00000000]
[567.59487648 421.00287999 32.20889362 168.58209843 122.91049214 1.00000000]
[567.59487648 421.00287999 32.20889362 122.91049214 77.23888585 1.00000000]
[]
[]
[642.04817648 493.73087995 32.20889358 191.41790166 145.74629535 1.00000000]
[642.04817648 493.73087995 32.20889358 145.74629535 100.07468899 1.00000000]
[642.04817648 493.73087995 32.20889358 100.07468899 54.40308264 1.00000000]
[642.04817648 493.73087995 32.20889358 54.40308264 8.73147622 1.00000000]
[687.20770535 473.45525964 28.47466729 117.89947605 65.82098425 1.00000000]
[687.20770535 473.45525964 28.47466729 65.82098425 13.74249233 1.00000000]
[]
[]
[]
[]
[819.41816858 414.09571318 28.47466729 117.89947613 65.82098420 1.00000000]
[819.41816858 414.09571318 28.47466729 65.82098420 13.74249228 1.00000000]
[]
[]
[944.80716973 357.79885078 67.29996112 140.74914977 119.34110246 1.00000000]
[]
[]
[]
[]
[895.55605874 551.45257510 38.98245367 257.59485980 200.70841755 1.00000000]
[]
[]
[]
[]
[708.82121709 570.96713940 55.73667969 335.73498043 302.91366889 1.00000000]
[708.82121709 570.96713940 55.73667969 302.91366889 270.09235735 1.00000000]
[708.82121709 570.96713940 55.73667969 270.09235735 237.27104581 1.00000000]
[708.82121709 570.96713940 55.73667969 237.27104581 204.44973427 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[285.88945448 525.39017744 28.47466729 328.22919732 276.15070540 1.00000000]
[285.88945448 525.39017744 28.47466729 276.15070540 224.07221347 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-172.23425545 476.02077891 65.68782325 350.69985646 328.75996965 1.00000000]
[-172.23425545 476.02077891 65.68782325 328.75996965 306.82008284 1.00000000]
[-172.23425545 476.02077891 65.68782325 306.82008284 284.88019603 1.00000000]
[-172.23425545 476.02077891 65.68782325 284.88019603 262.94030921 1.00000000]
[-172.23425545 476.02077891 65.68782325 262.94030921 241.00042240 1.00000000]
[-172.23425545 476.02077891 65.68782325 241.00042240 219.06053559 1.00000000]
[-172.23425545 476.02077891 65.68782325 219.06053559 197.12064878 1.00000000]
[-172.23425545 476.02077891 65.68782325 197.12064878 175.18076197 1.00000000]
[-172.23425545 476.02077891 65.68782325 175.18076197 153.24087515 1.00000000]
[-172.23425545 476.02077891 65.68782325 153.24087515 131.30098834 1.00000000]
[-172.23425545 476.02077891 65.68782325 131.30098834 109.36110153 1.00000000]
[-172.23425545 476.02077891 65.68782325 109.36110153 87.42121472 1.00000000]
[-172.23425545 476.02077891 65.68782325 87.42121472 65.48132791 1.00000000]
[-172.23425545 476.02077891 65.68782325 65.48132791 43.54144109 1.00000000]
[-172.23425545 476.02077891 65.68782325 43.54144109 21.60155428 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[285.88945448 525.39017744 28.47466729 148.22919727 96.15070535 1.00000000]
[285.88945448 525.39017744 28.47466729 96.15070535 44.07221352 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[708.82121709 570.96713940 55.73667969 167.85167656 141.93190349 1.00000000]
[708.82121709 570.96713940 55.73667969 141.93190349 116.01213042 1.00000000]
[708.82121709 570.96713940 55.73667969 116.01213042 90.09235735 1.00000000]
[708.82121709 570.96713940 55.73667969 90.09235735 64.17258428 1.00000000]
[708.82121709 570.96713940 55.73667969 64.17258428 38.25281121 1.00000000]
[708.82121709 570.96713940 55.73667969 38.25281121 12.33303814 1.00000000]
[]
[]
[]
[]
[895.55605874 551.45257510 38.98245367 147.35960103 108.07641609 1.00000000]
[895.55605874 551.45257510 38.98245367 108.07641609 68.79323114 1.00000000]
[895.55605874 551.45257510 38.98245367 68.79323114 29.51004620 1.00000000]
[895.55605874 551.45257510 38.98245367 29.51004620 350.22686125 1.00000000]
[895.55605874 551.45257510 38.98245367 350.22686125 310.94367631 1.00000000]
[]
[]
[]
[]
[944.80716973 357.79885078 67.29996112 89.19743365 67.78938633 1.00000000]
[944.80716973 357.79885078 67.29996112 67.78938633 46.38133902 1.00000000]
[944.80716973 357.79885078 67.29996112 46.38133902 24.97329171 1.00000000]
[944.80716973 357.79885078 67.29996112 24.97329171 3.56524440 1.00000000]
[944.80716973 357.79885078 67.29996112 3.56524440 342.15719709 1.00000000]
[944.80716973 357.79885078 67.29996112 342.15719709 320.74914977 1.00000000]
[944.80716973 357.79885078 67.29996112 320.74914977 299.34110246 1.00000000]
[944.80716973 357.79885078 67.29996112 299.34110246 277.93305515 1.00000000]
[944.80716973 357.79885078 67.29996112 277.93305515 256.52500784 1.00000000]
[944.80716973 357.79885078 67.29996112 256.52500784 235.11696053 1.00000000]
[944.80716973 357.79885078 67.29996112 235.11696053 213.70891321 1.00000000]
[944.80716973 357.79885078 67.29996112 213.70891321 192.30086590 1.00000000]
[944.80716973 357.79885078 67.29996112 192.30086590 170.89281859 1.00000000]
[]
[]
[819.41816858 414.09571318 28.47466729 297.89947608 245.82098416 1.00000000]
[819.41816858 414.09571318 28.47466729 245.82098416 193.74249233 1.00000000]
[]
[]
[]
[]
[]
[687.20770535 473.45525964 28.47466729 297.89947613 245.82098420 1.00000000]
[687.20770535 473.45525964 28.47466729 245.82098420 193.74249225 1.00000000]
[642.04817648 493.73087995 32.20889358 302.91049201 257.23888588 1.00000000]
[]
[]
[567.59487648 421.00287999 32.20889362 11.41790157 325.74629528 1.00000000]
[567.59487648 421.00287999 32.20889362 325.74629528 280.07468899 1.00000000]
[]
[]
[]
[517.49999936 302.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[517.49999936 302.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[27 191]
[28 190]
[29 189]
[30 188]
[33 186]
[34 185]
[35 184]
[39 183]
[41 181]
[42 180]
[43 179]
[44 178]
[45 176]
[47 174]
[48 173]
[49 172]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[63 140]
[64 139]
[65 138]
[66 137]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[79 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
] def

init

% Start Annotations
103 139 12 1.00 0.60 0.67 omark 64 94 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
