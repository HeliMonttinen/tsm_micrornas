%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCAAAAAAAAAAAAAAAGCAGUUCUCAGAUCUUCACUCCAUAUGUCAUCUGGUAACACUGGGGUUCUGAGACAGACAGUGUUAGCUCCAGAAGCAUUGCCUGUCUUAGAACCCCUAUGUUACCAGACGACAUAAGGAGUGAAUAAAAUCUUCAAAAGGCUUUGAUGGACCGUAGG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[575.00000000 125.00000000]
[564.02532959 147.46234131]
[575.00000000 169.92468262]
[575.00000000 194.92468262]
[575.00000000 219.92468262]
[575.00000000 244.92468262]
[575.00000000 269.92468262]
[575.00000000 294.92468262]
[575.00000000 319.92468262]
[575.00000000 344.92468262]
[575.00000000 369.92468262]
[575.00000000 394.92468262]
[575.00000000 419.92468262]
[575.00000000 444.92468262]
[519.65252686 486.78179932]
[495.59738159 479.97375488]
[471.54220581 473.16571045]
[447.48706055 466.35769653]
[423.43188477 459.54965210]
[399.37673950 452.74163818]
[375.32156372 445.93359375]
[356.69680786 429.25671387]
[332.09475708 433.69964600]
[308.03961182 426.89160156]
[283.98443604 420.08358765]
[259.92929077 413.27554321]
[235.87411499 406.46752930]
[211.81896973 399.65948486]
[193.19419861 382.98260498]
[168.59214783 387.42553711]
[144.53698730 380.61749268]
[120.48183441 373.80947876]
[96.42667389 367.00143433]
[72.37151337 360.19342041]
[48.31635284 353.38537598]
[24.26119423 346.57733154]
[0.20603485 339.76931763]
[-23.84912491 332.96127319]
[-47.90428543 326.15322876]
[-61.73156357 305.32522583]
[-85.78672028 298.51718140]
[-108.47827148 309.00973511]
[-132.53343201 302.20172119]
[-156.58859253 295.39367676]
[-180.64375305 288.58563232]
[-204.69891357 281.77761841]
[-228.75407410 274.96957397]
[-252.80923462 268.16156006]
[-276.86437988 261.35351562]
[-300.91955566 254.54548645]
[-324.97470093 247.73744202]
[-349.02987671 240.92941284]
[-373.08502197 234.12138367]
[-397.14019775 227.31335449]
[-421.19534302 220.50532532]
[-445.25051880 213.69728088]
[-463.87527466 197.02041626]
[-488.47732544 201.46333313]
[-512.53247070 194.65530396]
[-536.58764648 187.84727478]
[-560.64282227 181.03924561]
[-584.69793701 174.23121643]
[-608.75311279 167.42317200]
[-632.80828857 160.61514282]
[-642.30181885 137.48783875]
[-662.48785400 122.73909760]
[-687.40643311 120.72343445]
[-709.70050049 132.03596497]
[-722.78784180 153.33670044]
[-722.80444336 178.33670044]
[-709.74542236 199.65480042]
[-687.46630859 210.99690247]
[-662.54504395 209.01431274]
[-642.33953857 194.29237366]
[-618.28436279 201.10040283]
[-594.22918701 207.90843201]
[-570.17401123 214.71646118]
[-546.11889648 221.52449036]
[-522.06372070 228.33253479]
[-498.00857544 235.14056396]
[-479.38378906 251.81742859]
[-454.78173828 247.37451172]
[-430.72659302 254.18254089]
[-406.67141724 260.99057007]
[-382.61627197 267.79861450]
[-358.56112671 274.60662842]
[-334.50595093 281.41467285]
[-310.45080566 288.22271729]
[-286.39562988 295.03073120]
[-262.34048462 301.83877563]
[-238.28530884 308.64678955]
[-214.23014832 315.45483398]
[-190.17500305 322.26287842]
[-166.11984253 329.07089233]
[-142.06468201 335.87893677]
[-118.00952148 342.68695068]
[-104.18223572 363.51498413]
[-80.12708282 370.32302856]
[-57.43552780 359.83047485]
[-33.38037109 366.63848877]
[-9.32521057 373.44653320]
[14.72994900 380.25457764]
[38.78510666 387.06259155]
[62.84026718 393.87063599]
[86.89542389 400.67864990]
[110.95058441 407.48669434]
[135.00575256 414.29473877]
[159.06089783 421.10275269]
[177.68566895 437.77963257]
[202.28771973 433.33670044]
[226.34288025 440.14474487]
[250.39804077 446.95275879]
[274.45318604 453.76080322]
[298.50836182 460.56884766]
[322.56350708 467.37686157]
[341.18829346 484.05374146]
[365.79031372 479.61080933]
[389.84548950 486.41885376]
[413.90063477 493.22686768]
[437.95581055 500.03491211]
[462.01095581 506.84295654]
[486.06613159 513.65100098]
[510.12127686 520.45898438]
[512.36499023 545.35809326]
[521.96051025 568.44329834]
[538.02752686 587.59667969]
[559.09197998 601.06109619]
[583.22131348 607.60119629]
[608.20196533 606.61706543]
[631.74206543 598.19897461]
[651.68194580 583.11920166]
[666.19238281 562.76123047]
[673.94207764 538.99267578]
[674.22003174 513.99426270]
[667.00085449 490.05926514]
[652.94671631 469.38363647]
[633.34704590 453.86416626]
[610.00000000 444.92468262]
[610.00000000 419.92468262]
[610.00000000 394.92468262]
[631.65063477 382.42468262]
[610.00000000 369.92468262]
[610.00000000 344.92468262]
[610.00000000 319.92468262]
[610.00000000 294.92468262]
[610.00000000 269.92468262]
[631.65063477 257.42468262]
[610.00000000 244.92468262]
[610.00000000 219.92468262]
[610.00000000 194.92468262]
[610.00000000 169.92468262]
[620.97467041 147.46234131]
[610.00000000 125.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[592.50000131 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[592.50000131 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[592.50000175 525.58626941 82.53812635 257.75905496 208.04338969 1.00000000]
[]
[]
[]
[]
[]
[]
[348.94254232 456.65523096 28.47466729 337.88093660 285.80244467 1.00000000]
[348.94254232 456.65523096 28.47466729 285.80244467 233.72395275 1.00000000]
[]
[]
[]
[]
[]
[185.43993367 410.38112137 28.47466729 337.88093655 285.80244462 1.00000000]
[185.43993367 410.38112137 28.47466729 285.80244462 233.72395270 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-82.95690079 334.42010403 36.01426010 346.72976838 306.11155253 1.00000000]
[-82.95690079 334.42010403 36.01426010 306.11155253 265.49333667 1.00000000]
[-82.95690079 334.42010403 36.01426010 265.49333667 224.87512082 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-471.62953219 224.41892404 28.47466729 337.88093650 285.80244458 1.00000000]
[-471.62953219 224.41892404 28.47466729 285.80244458 233.72395265 1.00000000]
[]
[]
[]
[]
[]
[]
[-678.51719195 165.86608346 46.00953986 353.44671481 321.91786076 1.00000000]
[-678.51719195 165.86608346 46.00953986 321.91786076 290.38900671 1.00000000]
[-678.51719195 165.86608346 46.00953986 290.38900671 258.86015266 1.00000000]
[-678.51719195 165.86608346 46.00953986 258.86015266 227.33129861 1.00000000]
[-678.51719195 165.86608346 46.00953986 227.33129861 195.80244455 1.00000000]
[-678.51719195 165.86608346 46.00953986 195.80244455 164.27359050 1.00000000]
[-678.51719195 165.86608346 46.00953986 164.27359050 132.74473645 1.00000000]
[-678.51719195 165.86608346 46.00953986 132.74473645 101.21588240 1.00000000]
[-678.51719195 165.86608346 46.00953986 101.21588240 69.68702835 1.00000000]
[-678.51719195 165.86608346 46.00953986 69.68702835 38.15817429 1.00000000]
[]
[]
[]
[]
[]
[]
[-471.62953219 224.41892404 28.47466729 157.88093646 105.80244453 1.00000000]
[-471.62953219 224.41892404 28.47466729 105.80244453 53.72395270 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-82.95690079 334.42010403 36.01426010 166.72976838 126.11155253 1.00000000]
[-82.95690079 334.42010403 36.01426010 126.11155253 85.49333667 1.00000000]
[-82.95690079 334.42010403 36.01426010 85.49333667 44.87512082 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[185.43993367 410.38112137 28.47466729 157.88093650 105.80244458 1.00000000]
[185.43993367 410.38112137 28.47466729 105.80244458 53.72395275 1.00000000]
[]
[]
[]
[]
[]
[348.94254232 456.65523096 28.47466729 157.88093655 105.80244462 1.00000000]
[348.94254232 456.65523096 28.47466729 105.80244462 53.72395279 1.00000000]
[]
[]
[]
[]
[]
[]
[592.50000175 525.58626941 82.53812635 183.56149970 166.14012938 1.00000000]
[592.50000175 525.58626941 82.53812635 166.14012938 148.71875907 1.00000000]
[592.50000175 525.58626941 82.53812635 148.71875907 131.29738875 1.00000000]
[592.50000175 525.58626941 82.53812635 131.29738875 113.87601843 1.00000000]
[592.50000175 525.58626941 82.53812635 113.87601843 96.45464812 1.00000000]
[592.50000175 525.58626941 82.53812635 96.45464812 79.03327780 1.00000000]
[592.50000175 525.58626941 82.53812635 79.03327780 61.61190748 1.00000000]
[592.50000175 525.58626941 82.53812635 61.61190748 44.19053717 1.00000000]
[592.50000175 525.58626941 82.53812635 44.19053717 26.76916685 1.00000000]
[592.50000175 525.58626941 82.53812635 26.76916685 9.34779653 1.00000000]
[592.50000175 525.58626941 82.53812635 9.34779653 351.92642621 1.00000000]
[592.50000175 525.58626941 82.53812635 351.92642621 334.50505590 1.00000000]
[592.50000175 525.58626941 82.53812635 334.50505590 317.08368558 1.00000000]
[592.50000175 525.58626941 82.53812635 317.08368558 299.66231526 1.00000000]
[592.50000175 525.58626941 82.53812635 299.66231526 282.24094495 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[592.50000131 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[592.50000131 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
] def
/pairs [
[20 174]
[21 173]
[23 171]
[24 170]
[25 169]
[26 168]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[32 160]
[33 159]
[34 158]
[35 143]
[36 142]
[37 141]
[38 140]
[39 139]
[40 138]
[41 137]
[43 135]
[44 134]
[45 133]
[46 132]
[47 131]
[48 130]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[72 106]
[73 105]
[74 104]
[75 103]
[76 102]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
] def

init

% Start Annotations
43 75 12 1.00 0.60 0.67 omark 103 136 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
