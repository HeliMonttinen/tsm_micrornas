%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCAACUCAAAAUGAAGGAGUAUAACUUUGGGUUUUGGUAAAAGUUAGUGACCAGCUCUGUUGGGACAAGAGRACGGUCUUCUUUUGGAAGGAAGACCGUCRUCUUGUCCCAAGAGAGCUGGUAGCAUGUUUCAGAAAUCUUCAGGUUUCACAGUUAAUUUAGUGUUCCUAGAAGUAG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[225.00000000 125.00000000]
[203.34936523 137.50000000]
[225.00000000 150.00000000]
[225.00000000 175.00000000]
[225.00000000 200.00000000]
[225.00000000 225.00000000]
[225.00000000 250.00000000]
[225.00000000 275.00000000]
[207.11198425 292.46478271]
[203.14201355 317.14755249]
[214.65147400 339.34063721]
[237.11372375 350.31549072]
[244.95291138 374.05462646]
[252.79209900 397.79379272]
[260.63128662 421.53292847]
[268.47045898 445.27209473]
[272.87374878 469.88125610]
[297.08447266 476.11352539]
[312.82281494 456.68920898]
[301.70529175 434.29721069]
[293.86608887 410.55807495]
[286.02688599 386.81890869]
[278.18771362 363.07977295]
[270.34851074 339.34063721]
[281.85800171 317.14755249]
[277.88803101 292.46478271]
[260.00000000 275.00000000]
[260.00000000 250.00000000]
[260.00000000 225.00000000]
[260.00000000 200.00000000]
[260.00000000 175.00000000]
[260.00000000 150.00000000]
[260.00000000 125.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[485.00000000 125.00000000]
[474.02532959 147.46234131]
[485.00000000 169.92468262]
[485.00000000 194.92468262]
[485.00000000 219.92468262]
[485.00000000 244.92468262]
[485.00000000 269.92468262]
[485.00000000 294.92468262]
[485.00000000 319.92468262]
[485.00000000 344.92468262]
[485.00000000 369.92468262]
[474.02532959 392.38702393]
[485.00000000 414.84936523]
[485.00000000 439.84936523]
[485.00000000 464.84936523]
[485.00000000 489.84936523]
[485.00000000 514.84936523]
[485.00000000 539.84936523]
[485.00000000 564.84936523]
[485.00000000 589.84936523]
[485.00000000 614.84936523]
[485.00000000 639.84936523]
[485.00000000 664.84936523]
[468.72460938 683.82598877]
[468.72460938 708.82598877]
[485.00000000 727.80255127]
[485.00000000 752.80255127]
[485.00000000 777.80255127]
[485.00000000 802.80255127]
[485.00000000 827.80255127]
[485.00000000 852.80255127]
[485.00000000 877.80255127]
[485.00000000 902.80255127]
[485.00000000 927.80255127]
[485.00000000 952.80255127]
[485.00000000 977.80255127]
[485.00000000 1002.80255127]
[481.46456909 1027.55126953]
[502.50000000 1041.06103516]
[523.53540039 1027.55126953]
[520.00000000 1002.80255127]
[520.00000000 977.80255127]
[520.00000000 952.80255127]
[520.00000000 927.80255127]
[520.00000000 902.80255127]
[520.00000000 877.80255127]
[520.00000000 852.80255127]
[520.00000000 827.80255127]
[520.00000000 802.80255127]
[520.00000000 777.80255127]
[520.00000000 752.80255127]
[520.00000000 727.80255127]
[536.27539062 708.82598877]
[536.27539062 683.82598877]
[520.00000000 664.84936523]
[520.00000000 639.84936523]
[520.00000000 614.84936523]
[520.00000000 589.84936523]
[520.00000000 564.84936523]
[520.00000000 539.84936523]
[520.00000000 514.84936523]
[520.00000000 489.84936523]
[520.00000000 464.84936523]
[520.00000000 439.84936523]
[520.00000000 414.84936523]
[530.97467041 392.38702393]
[520.00000000 369.92468262]
[520.00000000 344.92468262]
[520.00000000 319.92468262]
[520.00000000 294.92468262]
[520.00000000 269.92468262]
[520.00000000 244.92468262]
[520.00000000 219.92468262]
[520.00000000 194.92468262]
[520.00000000 169.92468262]
[530.97467041 147.46234131]
[520.00000000 125.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[870.00000000 125.00000000]
[870.00000000 150.00000000]
[870.00000000 175.00000000]
[870.00000000 200.00000000]
[870.00000000 225.00000000]
[870.00000000 250.00000000]
[852.11199951 267.46478271]
[848.14202881 292.14755249]
[859.65148926 314.34063721]
[882.11370850 325.31549072]
[889.95288086 349.05462646]
[897.79211426 372.79379272]
[882.84808350 392.83566284]
[879.49285889 417.60946655]
[888.56762695 440.90429688]
[907.79724121 456.87997437]
[932.36071777 461.53125000]
[956.09985352 453.69207764]
[973.06311035 435.32772827]
[978.99761963 411.04232788]
[972.41564941 386.92434692]
[954.96722412 369.02032471]
[931.02691650 361.81890869]
[923.18768311 338.07977295]
[915.34851074 314.34063721]
[926.85797119 292.14755249]
[922.88800049 267.46478271]
[905.00000000 250.00000000]
[905.00000000 225.00000000]
[905.00000000 200.00000000]
[926.65063477 187.50000000]
[905.00000000 175.00000000]
[905.00000000 150.00000000]
[905.00000000 125.00000000]
[905.00000000 100.00000000]
[930.00000000 100.00000000]
[955.00000000 100.00000000]
[980.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[242.50000000 310.81723469 39.86382195 243.96025387 207.41153737 1.00000000]
[242.50000000 310.81723469 39.86382195 207.41153737 170.86282088 1.00000000]
[242.50000000 310.81723469 39.86382195 170.86282088 134.31410438 1.00000000]
[242.50000000 310.81723469 39.86382195 134.31410438 97.76538788 1.00000000]
[]
[]
[]
[]
[289.83115352 454.14856200 23.13159456 202.56543881 137.14554028 1.00000000]
[289.83115352 454.14856200 23.13159456 137.14554028 71.72564175 1.00000000]
[289.83115352 454.14856200 23.13159456 71.72564175 6.30574322 1.00000000]
[289.83115352 454.14856200 23.13159456 6.30574322 300.88584470 1.00000000]
[]
[]
[]
[]
[242.50000000 310.81723469 39.86382195 45.68589562 9.13717912 1.00000000]
[242.50000000 310.81723469 39.86382195 9.13717912 332.58846263 1.00000000]
[242.50000000 310.81723469 39.86382195 332.58846263 296.03974613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[502.49999968 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[502.49999968 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[502.49999935 392.38701758 28.47466664 232.07849328 180.00000000 1.00000000]
[502.49999935 392.38701758 28.47466664 180.00000000 127.92150737 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[502.50000050 696.32596562 36.01426010 240.92732369 200.30910783 1.00000000]
[502.50000050 696.32596562 36.01426010 200.30910783 159.69089198 1.00000000]
[502.50000050 696.32596562 36.01426010 159.69089198 119.07267613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[502.49999935 1017.92939695 23.13159194 220.83980459 155.41990260 1.00000000]
[502.49999935 1017.92939695 23.13159194 155.41990260 89.99999574 1.00000000]
[502.49999935 1017.92939695 23.13159194 89.99999574 24.58009375 1.00000000]
[502.49999935 1017.92939695 23.13159194 24.58009375 319.16020067 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[502.50000050 696.32596562 36.01426010 60.92732369 20.30910783 1.00000000]
[502.50000050 696.32596562 36.01426010 20.30910783 339.69089198 1.00000000]
[502.50000050 696.32596562 36.01426010 339.69089198 299.07267613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[502.49999935 392.38701758 28.47466664 52.07849039 360.00000000 1.00000000]
[502.49999935 392.38701758 28.47466664 360.00000000 307.92150869 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[502.49999968 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[502.49999968 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[887.50000005 285.81723469 39.86382195 243.96025387 207.41153737 1.00000000]
[887.50000005 285.81723469 39.86382195 207.41153737 170.86282088 1.00000000]
[887.50000005 285.81723469 39.86382195 170.86282088 134.31410438 1.00000000]
[887.50000005 285.81723469 39.86382195 134.31410438 97.76538788 1.00000000]
[]
[]
[929.07260752 411.71015226 49.92949042 231.20809226 202.21128308 1.00000000]
[929.07260752 411.71015226 49.92949042 202.21128308 173.21447390 1.00000000]
[929.07260752 411.71015226 49.92949042 173.21447390 144.21766471 1.00000000]
[929.07260752 411.71015226 49.92949042 144.21766471 115.22085553 1.00000000]
[929.07260752 411.71015226 49.92949042 115.22085553 86.22404634 1.00000000]
[929.07260752 411.71015226 49.92949042 86.22404634 57.22723716 1.00000000]
[929.07260752 411.71015226 49.92949042 57.22723716 28.23042798 1.00000000]
[929.07260752 411.71015226 49.92949042 28.23042798 359.23361879 1.00000000]
[929.07260752 411.71015226 49.92949042 359.23361879 330.23680961 1.00000000]
[929.07260752 411.71015226 49.92949042 330.23680961 301.24000042 1.00000000]
[929.07260752 411.71015226 49.92949042 301.24000042 272.24319124 1.00000000]
[]
[]
[887.50000005 285.81723469 39.86382195 45.68589562 9.13717912 1.00000000]
[887.50000005 285.81723469 39.86382195 9.13717912 332.58846263 1.00000000]
[887.50000005 285.81723469 39.86382195 332.58846263 296.03974613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 40]
[7 39]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[49 127]
[50 126]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
[62 114]
[63 113]
[64 112]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[70 106]
[71 105]
[72 104]
[75 101]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[141 176]
[142 175]
[143 174]
[144 173]
[145 171]
[146 170]
[147 169]
[151 166]
[152 165]
[153 164]
] def

init

% Start Annotations
52 98 12 1.00 0.60 0.67 omark 78 124 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
