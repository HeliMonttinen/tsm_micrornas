%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGACAGGCUGUGGGGCCAGAAGGGCCCACUUCAGAACUUUUCUCGUGGGCAGUGUUUAGGCCACAGCCACCCAUGUGUAGGGGUGGCUACACAUGGGUGGCUGUGGCCUAAACACUGCCCAAACACGUUAUAUUUUUUAUAACAUGGAACUAGAUGGCAGAAGUUUAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[125.00000000 125.00000000]
[109.59665680 144.69104004]
[111.62065887 169.60896301]
[130.00000000 186.55593872]
[155.00000000 186.55593872]
[173.37933350 169.60896301]
[175.40335083 144.69104004]
[160.00000000 125.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[210.00000000 125.00000000]
[210.00000000 150.00000000]
[210.00000000 175.00000000]
[210.00000000 200.00000000]
[199.02532959 222.46234131]
[210.00000000 244.92468262]
[210.00000000 269.92468262]
[200.90147400 293.21023560]
[215.00000000 313.85559082]
[240.00000000 313.85559082]
[254.09852600 293.21023560]
[245.00000000 269.92468262]
[245.00000000 244.92468262]
[255.97467041 222.46234131]
[245.00000000 200.00000000]
[245.00000000 175.00000000]
[245.00000000 150.00000000]
[245.00000000 125.00000000]
[245.00000000 100.00000000]
[270.00000000 100.00000000]
[295.00000000 100.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[370.00000000 125.00000000]
[370.00000000 150.00000000]
[370.00000000 175.00000000]
[370.00000000 200.00000000]
[370.00000000 225.00000000]
[370.00000000 250.00000000]
[370.00000000 275.00000000]
[359.02532959 297.46234131]
[370.00000000 319.92468262]
[370.00000000 344.92468262]
[370.00000000 369.92468262]
[370.00000000 394.92468262]
[323.16857910 429.79098511]
[299.21850586 422.62197876]
[275.26846313 415.45294189]
[251.31840515 408.28393555]
[227.36834717 401.11489868]
[203.41828918 393.94586182]
[179.46824646 386.77685547]
[155.51818848 379.60781860]
[131.56813049 372.43881226]
[107.61808014 365.26977539]
[83.66802216 358.10076904]
[59.71797180 350.93173218]
[35.76791763 343.76269531]
[11.81786251 336.59368896]
[-12.13219166 329.42465210]
[-36.08224487 322.25564575]
[-60.03229904 315.08660889]
[-83.98235321 307.91760254]
[-107.93241119 300.74856567]
[-131.88246155 293.57952881]
[-155.83251953 286.41052246]
[-179.78257751 279.24148560]
[-203.73262024 272.07247925]
[-227.68267822 264.90344238]
[-251.63273621 257.73443604]
[-275.58279419 250.56539917]
[-299.53283691 243.39637756]
[-323.48291016 236.22735596]
[-347.43295288 229.05833435]
[-371.38299561 221.88929749]
[-395.33306885 214.72027588]
[-419.28311157 207.55125427]
[-443.23315430 200.38223267]
[-467.18322754 193.21321106]
[-481.63018799 172.81015015]
[-506.08203125 167.60366821]
[-527.58776855 180.35137939]
[-534.75677490 204.30143738]
[-523.79199219 226.76861572]
[-500.50097656 235.85310364]
[-477.21984863 226.74328613]
[-453.26980591 233.91230774]
[-429.31973267 241.08132935]
[-405.36968994 248.25035095]
[-381.41964722 255.41937256]
[-357.46957397 262.58840942]
[-333.51953125 269.75741577]
[-309.56948853 276.92645264]
[-285.61941528 284.09548950]
[-261.66937256 291.26449585]
[-237.71931458 298.43353271]
[-213.76925659 305.60253906]
[-189.81919861 312.77157593]
[-165.86915588 319.94058228]
[-141.91909790 327.10961914]
[-117.96903992 334.27865601]
[-94.01898956 341.44766235]
[-70.06893158 348.61669922]
[-46.11887741 355.78570557]
[-22.16882515 362.95474243]
[1.78122914 370.12374878]
[25.73128319 377.29278564]
[49.68133926 384.46182251]
[73.63139343 391.63082886]
[97.58144379 398.79986572]
[121.53150177 405.96887207]
[145.48155212 413.13790894]
[169.43161011 420.30691528]
[193.38166809 427.47595215]
[217.33171082 434.64498901]
[241.28176880 441.81399536]
[265.23181152 448.98303223]
[289.18188477 456.15203857]
[313.13192749 463.32107544]
[316.03753662 488.28302002]
[327.07995605 510.85745239]
[345.00192261 528.47406006]
[367.76278687 539.12689209]
[366.98724365 564.11486816]
[355.32104492 586.22595215]
[365.59362793 609.01794434]
[364.81808472 634.00592041]
[364.04257202 658.99389648]
[363.26702881 683.98181152]
[362.49148560 708.96978760]
[361.71594238 733.95776367]
[348.23538208 755.01184082]
[355.00479126 779.07788086]
[377.48452759 790.01690674]
[400.59933472 780.49298096]
[408.84811401 756.89306641]
[396.69909668 735.04351807]
[397.47463989 710.05554199]
[398.25018311 685.06756592]
[399.02572632 660.07958984]
[399.80123901 635.09167480]
[400.57678223 610.10369873]
[412.24298096 587.99261475]
[401.97039795 565.20062256]
[402.74594116 540.21264648]
[426.01037598 531.06030273]
[444.93539429 514.72491455]
[457.38842773 493.04724121]
[461.96624756 468.46994019]
[458.15304565 443.76248169]
[446.37847900 421.70892334]
[427.96932983 404.79431152]
[405.00000000 394.92468262]
[405.00000000 369.92468262]
[405.00000000 344.92468262]
[405.00000000 319.92468262]
[415.97467041 297.46234131]
[405.00000000 275.00000000]
[405.00000000 250.00000000]
[405.00000000 225.00000000]
[405.00000000 200.00000000]
[405.00000000 175.00000000]
[405.00000000 150.00000000]
[405.00000000 125.00000000]
[405.00000000 100.00000000]
[430.00000000 100.00000000]
[455.00000000 100.00000000]
[480.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[142.50000000 154.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[142.50000000 154.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[142.50000000 154.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[142.50000000 154.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[142.50000000 154.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[142.50000000 154.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[142.50000000 154.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[227.49999982 222.46233918 28.47466711 232.07849231 180.00000000 1.00000000]
[227.49999982 222.46233918 28.47466711 180.00000000 127.92150787 1.00000000]
[]
[227.49999982 290.18291595 26.77024798 229.17803356 173.50682004 1.00000000]
[227.49999982 290.18291595 26.77024798 173.50682004 117.83560626 1.00000000]
[227.49999982 290.18291595 26.77024798 117.83560626 62.16439274 1.00000000]
[227.49999982 290.18291595 26.77024798 62.16439274 6.49317975 1.00000000]
[227.49999982 290.18291595 26.77024798 6.49317975 310.82196712 1.00000000]
[]
[227.49999982 222.46233918 28.47466711 52.07849145 360.00000000 1.00000000]
[227.49999982 222.46233918 28.47466711 360.00000000 307.92150828 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[387.49999969 297.46233921 28.47466705 232.07849244 180.00000000 1.00000000]
[387.49999969 297.46233921 28.47466705 180.00000000 127.92150781 1.00000000]
[]
[]
[]
[387.50000007 467.31464924 74.47521675 256.40970367 210.25443427 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-500.51966903 201.50171630 34.35139098 346.03754929 303.35943178 1.00000000]
[-500.51966903 201.50171630 34.35139098 303.35943178 260.68131426 1.00000000]
[-500.51966903 201.50171630 34.35139098 260.68131426 218.00319674 1.00000000]
[-500.51966903 201.50171630 34.35139098 218.00319674 175.32507923 1.00000000]
[-500.51966903 201.50171630 34.35139098 175.32507923 132.64696171 1.00000000]
[-500.51966903 201.50171630 34.35139098 132.64696171 89.96884419 1.00000000]
[-500.51966903 201.50171630 34.35139098 89.96884419 47.29072668 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[387.50000007 467.31464924 74.47521675 183.07384170 163.64737511 1.00000000]
[387.50000007 467.31464924 74.47521675 163.64737511 144.22090852 1.00000000]
[387.50000007 467.31464924 74.47521675 144.22090852 124.79444193 1.00000000]
[387.50000007 467.31464924 74.47521675 124.79444193 105.36797534 1.00000000]
[]
[383.78201662 587.10927702 28.47466729 233.85617096 181.77767903 1.00000000]
[383.78201662 587.10927702 28.47466729 181.77767903 129.69918710 1.00000000]
[]
[]
[]
[]
[]
[378.43154438 759.50322583 30.52836670 236.80139310 188.46015507 1.00000000]
[378.43154438 759.50322583 30.52836670 188.46015507 140.11891704 1.00000000]
[378.43154438 759.50322583 30.52836670 140.11891704 91.77767901 1.00000000]
[378.43154438 759.50322583 30.52836670 91.77767901 43.43644097 1.00000000]
[378.43154438 759.50322583 30.52836670 43.43644097 355.09520294 1.00000000]
[378.43154438 759.50322583 30.52836670 355.09520294 306.75396491 1.00000000]
[]
[]
[]
[]
[]
[383.78201662 587.10927702 28.47466729 53.85617091 1.77767898 1.00000000]
[383.78201662 587.10927702 28.47466729 1.77767898 309.69918715 1.00000000]
[]
[387.50000007 467.31464924 74.47521675 78.18738277 58.86274695 1.00000000]
[387.50000007 467.31464924 74.47521675 58.86274695 39.53811113 1.00000000]
[387.50000007 467.31464924 74.47521675 39.53811113 20.21347532 1.00000000]
[387.50000007 467.31464924 74.47521675 20.21347532 0.88883950 1.00000000]
[387.50000007 467.31464924 74.47521675 0.88883950 341.56420369 1.00000000]
[387.50000007 467.31464924 74.47521675 341.56420369 322.23956787 1.00000000]
[387.50000007 467.31464924 74.47521675 322.23956787 302.91493206 1.00000000]
[387.50000007 467.31464924 74.47521675 302.91493206 283.59029624 1.00000000]
[]
[]
[]
[387.49999969 297.46233921 28.47466705 52.07849132 360.00000000 1.00000000]
[387.49999969 297.46233921 28.47466705 360.00000000 307.92150834 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[19 26]
[20 25]
[37 169]
[38 168]
[39 167]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[46 160]
[47 159]
[48 158]
[49 157]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[127 149]
[128 148]
[130 146]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
] def

init

% Start Annotations
105 130 12 1.00 0.60 0.67 omark 45 114 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
