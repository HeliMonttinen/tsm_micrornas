%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCUGACAAGYUGUGRGRCCAGAAAGGCCCACUSUCAGAUGUUUUCUCUUGGGCAGUGUUUAGGCCACAACWSUCCCUAACUUAUUUUUUAUAAYAUGGAACUAAAUGAUARUUUGAAGAAUUUUAAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[375.00000000 125.00000000]
[375.00000000 150.00000000]
[375.00000000 175.00000000]
[353.34936523 187.50000000]
[375.00000000 200.00000000]
[353.34936523 212.50000000]
[375.00000000 225.00000000]
[375.00000000 250.00000000]
[375.00000000 275.00000000]
[375.00000000 300.00000000]
[375.00000000 325.00000000]
[354.97167969 339.96218872]
[345.27719116 363.00598145]
[348.58596802 387.78604126]
[363.98693848 407.47894287]
[357.42758179 431.60308838]
[350.86822510 455.72726440]
[344.30886841 479.85140991]
[337.74954224 503.97558594]
[314.49719238 513.15863037]
[299.09625244 532.85156250]
[295.78744507 557.63165283]
[305.48196411 580.67541504]
[325.51028442 595.63757324]
[350.35739136 598.39819336]
[363.01651001 619.95617676]
[375.67559814 641.51416016]
[375.48745728 666.51342773]
[394.03982544 683.27087402]
[418.89114380 680.54858398]
[433.37582397 660.17230225]
[427.78021240 635.80657959]
[405.85678101 623.79144287]
[393.19769287 602.23339844]
[380.53860474 580.67541504]
[390.23309326 557.63165283]
[386.92431641 532.85156250]
[371.52334595 513.15863037]
[378.08270264 489.03451538]
[384.64205933 464.91033936]
[391.20138550 440.78619385]
[397.76074219 416.66201782]
[421.01306152 407.47894287]
[436.41403198 387.78604126]
[439.72280884 363.00598145]
[430.02832031 339.96218872]
[410.00000000 325.00000000]
[410.00000000 300.00000000]
[410.00000000 275.00000000]
[431.65063477 262.50000000]
[410.00000000 250.00000000]
[410.00000000 225.00000000]
[410.00000000 200.00000000]
[410.00000000 175.00000000]
[410.00000000 150.00000000]
[410.00000000 125.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[785.00000000 125.00000000]
[785.00000000 150.00000000]
[785.00000000 175.00000000]
[785.00000000 200.00000000]
[785.00000000 225.00000000]
[785.00000000 250.00000000]
[785.00000000 275.00000000]
[761.09625244 282.32186890]
[739.71246338 295.27307129]
[722.15014648 313.06536865]
[709.47821045 334.61584473]
[702.46795654 358.61285400]
[701.54602051 383.59582520]
[706.76855469 408.04425049]
[717.81762695 430.47009277]
[734.02075195 449.50842285]
[754.39184570 464.00048828]
[777.69091797 473.06427002]
[802.50000000 476.14807129]
[827.30908203 473.06427002]
[850.60815430 464.00048828]
[870.97924805 449.50842285]
[887.18237305 430.47009277]
[898.23144531 408.04425049]
[903.45397949 383.59582520]
[902.53204346 358.61285400]
[895.52178955 334.61584473]
[882.84985352 313.06536865]
[865.28753662 295.27307129]
[843.90374756 282.32186890]
[820.00000000 275.00000000]
[820.00000000 250.00000000]
[820.00000000 225.00000000]
[820.00000000 200.00000000]
[820.00000000 175.00000000]
[820.00000000 150.00000000]
[820.00000000 125.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[392.50000000 369.31144019 47.64193249 248.44935680 218.02742044 1.00000000]
[392.50000000 369.31144019 47.64193249 218.02742044 187.60548409 1.00000000]
[392.50000000 369.31144019 47.64193249 187.60548409 157.18354773 1.00000000]
[392.50000000 369.31144019 47.64193249 157.18354773 126.76161138 1.00000000]
[]
[]
[]
[]
[343.01027779 551.32616047 47.64193249 263.66032498 233.23838862 1.00000000]
[343.01027779 551.32616047 47.64193249 233.23838862 202.81645227 1.00000000]
[343.01027779 551.32616047 47.64193249 202.81645227 172.39451591 1.00000000]
[343.01027779 551.32616047 47.64193249 172.39451591 141.97257956 1.00000000]
[343.01027779 551.32616047 47.64193249 141.97257956 111.55064320 1.00000000]
[343.01027779 551.32616047 47.64193249 111.55064320 81.12870685 1.00000000]
[]
[]
[403.43269260 654.22339190 30.52836670 204.60177774 156.26053971 1.00000000]
[403.43269260 654.22339190 30.52836670 156.26053971 107.91930168 1.00000000]
[403.43269260 654.22339190 30.52836670 107.91930168 59.57806365 1.00000000]
[403.43269260 654.22339190 30.52836670 59.57806365 11.23682561 1.00000000]
[403.43269260 654.22339190 30.52836670 11.23682561 322.89558758 1.00000000]
[403.43269260 654.22339190 30.52836670 322.89558758 274.55434955 1.00000000]
[]
[]
[343.01027779 551.32616047 47.64193249 38.02742044 7.60548409 1.00000000]
[343.01027779 551.32616047 47.64193249 7.60548409 337.18354773 1.00000000]
[343.01027779 551.32616047 47.64193249 337.18354773 306.76161138 1.00000000]
[]
[]
[]
[]
[392.50000000 369.31144019 47.64193249 83.66032498 53.23838862 1.00000000]
[392.50000000 369.31144019 47.64193249 53.23838862 22.81645227 1.00000000]
[392.50000000 369.31144019 47.64193249 22.81645227 352.39451591 1.00000000]
[392.50000000 369.31144019 47.64193249 352.39451591 321.97257956 1.00000000]
[392.50000000 369.31144019 47.64193249 321.97257956 291.55064320 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[802.50000000 374.81278745 101.33529759 260.05550778 245.88421547 1.00000000]
[802.50000000 374.81278745 101.33529759 245.88421547 231.71292315 1.00000000]
[802.50000000 374.81278745 101.33529759 231.71292315 217.54163084 1.00000000]
[802.50000000 374.81278745 101.33529759 217.54163084 203.37033852 1.00000000]
[802.50000000 374.81278745 101.33529759 203.37033852 189.19904621 1.00000000]
[802.50000000 374.81278745 101.33529759 189.19904621 175.02775389 1.00000000]
[802.50000000 374.81278745 101.33529759 175.02775389 160.85646158 1.00000000]
[802.50000000 374.81278745 101.33529759 160.85646158 146.68516926 1.00000000]
[802.50000000 374.81278745 101.33529759 146.68516926 132.51387695 1.00000000]
[802.50000000 374.81278745 101.33529759 132.51387695 118.34258463 1.00000000]
[802.50000000 374.81278745 101.33529759 118.34258463 104.17129232 1.00000000]
[802.50000000 374.81278745 101.33529759 104.17129232 90.00000000 1.00000000]
[802.50000000 374.81278745 101.33529759 90.00000000 75.82870768 1.00000000]
[802.50000000 374.81278745 101.33529759 75.82870768 61.65741537 1.00000000]
[802.50000000 374.81278745 101.33529759 61.65741537 47.48612305 1.00000000]
[802.50000000 374.81278745 101.33529759 47.48612305 33.31483074 1.00000000]
[802.50000000 374.81278745 101.33529759 33.31483074 19.14353842 1.00000000]
[802.50000000 374.81278745 101.33529759 19.14353842 4.97224611 1.00000000]
[802.50000000 374.81278745 101.33529759 4.97224611 350.80095379 1.00000000]
[802.50000000 374.81278745 101.33529759 350.80095379 336.62966148 1.00000000]
[802.50000000 374.81278745 101.33529759 336.62966148 322.45836916 1.00000000]
[802.50000000 374.81278745 101.33529759 322.45836916 308.28707685 1.00000000]
[802.50000000 374.81278745 101.33529759 308.28707685 294.11578453 1.00000000]
[802.50000000 374.81278745 101.33529759 294.11578453 279.94449222 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 69]
[13 68]
[14 67]
[15 66]
[17 65]
[19 64]
[20 63]
[21 61]
[22 60]
[23 59]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[37 47]
[38 46]
[39 45]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% Start Annotations
69 81 12 1.00 0.60 0.67 omark 46 69 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
