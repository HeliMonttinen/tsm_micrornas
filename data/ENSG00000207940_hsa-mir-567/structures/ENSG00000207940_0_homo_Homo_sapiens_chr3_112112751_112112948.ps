%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAGGAGGUUAGGAUCACCUCAACUUUUUGUGAUGAAUCUAUGGAAGAGGAUUCUUAUAGGACAGUAUGUUCUUCCAGGACAGAACAUUCUUUGCUAUUUUGUACUGGAAGAACAUGCAAAACUAAAAAAAAAAAAAGUUAUUGCUUAAAUUCAUUUCUUGAGUUGCAGUAUGAUGCUGUUUAUGUUUUAAUGUCU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[83.72460938 193.97660828]
[83.72460938 218.97660828]
[100.00000000 237.95321655]
[100.00000000 262.95321655]
[100.00000000 287.95321655]
[100.00000000 312.95321655]
[100.00000000 337.95321655]
[82.74304962 356.04180908]
[80.36176300 380.92816162]
[93.87529755 401.96109009]
[117.50000000 410.13870239]
[141.12469482 401.96109009]
[154.63824463 380.92816162]
[152.25695801 356.04180908]
[135.00000000 337.95321655]
[135.00000000 312.95321655]
[135.00000000 287.95321655]
[135.00000000 262.95321655]
[135.00000000 237.95321655]
[151.27539062 218.97660828]
[151.27539062 193.97660828]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[185.00000000 100.00000000]
[235.00000000 100.00000000]
[235.00000000 125.00000000]
[235.00000000 150.00000000]
[235.00000000 175.00000000]
[235.00000000 200.00000000]
[213.34936523 212.50000000]
[235.00000000 225.00000000]
[235.00000000 250.00000000]
[235.00000000 275.00000000]
[235.00000000 300.00000000]
[235.00000000 325.00000000]
[235.00000000 350.00000000]
[216.37222290 366.67349243]
[210.48243713 390.96981812]
[219.40727234 414.32247925]
[240.00000000 428.49780273]
[265.00000000 428.49780273]
[285.59274292 414.32247925]
[294.51757812 390.96981812]
[288.62777710 366.67349243]
[270.00000000 350.00000000]
[270.00000000 325.00000000]
[270.00000000 300.00000000]
[270.00000000 275.00000000]
[270.00000000 250.00000000]
[270.00000000 225.00000000]
[270.00000000 200.00000000]
[270.00000000 175.00000000]
[270.00000000 150.00000000]
[270.00000000 125.00000000]
[270.00000000 100.00000000]
[1070.00000000 100.00000000]
[1070.00000000 125.00000000]
[1070.00000000 150.00000000]
[1070.00000000 175.00000000]
[1070.00000000 200.00000000]
[896.44647217 331.75183105]
[872.36657715 325.03192139]
[848.28662109 318.31201172]
[824.20672607 311.59210205]
[800.12677002 304.87219238]
[776.04687500 298.15228271]
[751.96691895 291.43237305]
[727.88702393 284.71246338]
[703.80706787 277.99255371]
[679.72717285 271.27264404]
[655.64721680 264.55273438]
[631.56732178 257.83282471]
[607.48736572 251.11291504]
[583.40747070 244.39300537]
[564.72174072 227.78445435]
[540.13610840 232.31741333]
[516.05621338 225.59751892]
[491.97628784 218.87760925]
[467.89636230 212.15769958]
[443.81643677 205.43778992]
[419.73651123 198.71788025]
[369.05642700 170.52049255]
[350.65066528 153.60220337]
[343.52597046 129.63893127]
[320.88684082 119.03371429]
[297.91546631 128.89855957]
[290.01672363 152.61796570]
[302.48767090 174.28535461]
[326.96508789 179.37025452]
[345.37081909 196.28854370]
[346.98437500 221.23641968]
[363.66058350 239.86177063]
[388.27917480 244.21203613]
[410.32864380 232.42977905]
[434.40856934 239.14968872]
[458.48849487 245.86958313]
[482.56842041 252.58949280]
[506.64834595 259.30941772]
[530.72827148 266.02932739]
[549.41400146 282.63787842]
[573.99957275 278.10491943]
[598.07952881 284.82482910]
[622.15942383 291.54470825]
[646.23937988 298.26461792]
[670.31927490 304.98452759]
[694.39923096 311.70443726]
[718.47912598 318.42434692]
[742.55908203 325.14425659]
[766.63897705 331.86416626]
[790.71893311 338.58407593]
[814.79882812 345.30398560]
[838.87878418 352.02389526]
[862.95867920 358.74380493]
[887.03863525 365.46371460]
[883.90783691 390.51577759]
[883.89569092 415.76272583]
[887.00238037 440.81777954]
[893.18029785 465.29718018]
[902.33477783 488.82595825]
[914.32562256 511.04367065]
[928.96917725 531.60998535]
[946.04113770 550.20989990]
[965.27990723 566.55853271]
[986.39093018 580.40533447]
[1009.05065918 591.53826904]
[1032.91210938 599.78680420]
[1057.60974121 605.02465820]
[1082.76525879 607.17144775]
[1107.99328613 606.19439697]
[1132.90734863 602.10839844]
[1157.12597656 594.97613525]
[1180.27795410 584.90679932]
[1193.51660156 606.11389160]
[1206.75512695 627.32092285]
[1219.99377441 648.52801514]
[1224.60632324 673.09881592]
[1247.49841309 683.14617920]
[1268.70556641 669.90759277]
[1269.73242188 644.92864990]
[1249.68359375 629.99401855]
[1236.44506836 608.78692627]
[1223.20642090 587.57983398]
[1209.96789551 566.37280273]
[1229.00378418 550.16674805]
[1245.91418457 531.75384521]
[1266.60839844 545.78063965]
[1287.30261230 559.80743408]
[1307.99670410 573.83428955]
[1328.69091797 587.86108398]
[1349.38513184 601.88787842]
[1359.95727539 624.54248047]
[1383.91003418 631.70214844]
[1405.18054199 618.56561279]
[1409.50427246 593.94232178]
[1393.98168945 574.34509277]
[1369.02258301 572.91601562]
[1348.32849121 558.88922119]
[1327.63427734 544.86242676]
[1306.94006348 530.83563232]
[1286.24597168 516.80883789]
[1265.55175781 502.78201294]
[1286.97595215 445.90948486]
[1311.78137207 449.02264404]
[1336.58679199 452.13583374]
[1361.39221191 455.24902344]
[1386.19763184 458.36218262]
[1411.00305176 461.47537231]
[1435.11889648 468.06515503]
[1451.14282227 448.87579346]
[1440.35791016 426.32177734]
[1415.36145020 426.74780273]
[1390.55603027 423.63461304]
[1365.75061035 420.52145386]
[1340.94531250 417.40826416]
[1316.13989258 414.29510498]
[1291.33447266 411.18191528]
[1290.69934082 385.30288696]
[1286.79174805 359.71267700]
[1279.67480469 334.82339478]
[1269.46301270 311.03588867]
[1256.32067871 288.73318481]
[1240.45971680 268.27453613]
[1222.13549805 249.98934937]
[1201.64294434 234.17213440]
[1179.31225586 221.07759094]
[1155.50292969 210.91661072]
[1130.59851074 203.85282898]
[1105.00000000 200.00000000]
[1105.00000000 175.00000000]
[1105.00000000 150.00000000]
[1105.00000000 125.00000000]
[1105.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[117.50000000 206.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[117.50000000 206.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[117.50000000 206.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[]
[]
[117.50000000 371.92469492 38.21401848 242.74528147 204.55896110 1.00000000]
[117.50000000 371.92469492 38.21401848 204.55896110 166.37264073 1.00000000]
[117.50000000 371.92469492 38.21401848 166.37264073 128.18632037 1.00000000]
[117.50000000 371.92469492 38.21401848 128.18632037 90.00000000 1.00000000]
[117.50000000 371.92469492 38.21401848 90.00000000 51.81367963 1.00000000]
[117.50000000 371.92469492 38.21401848 51.81367963 13.62735927 1.00000000]
[117.50000000 371.92469492 38.21401848 13.62735927 335.44103890 1.00000000]
[117.50000000 371.92469492 38.21401848 335.44103890 297.25471853 1.00000000]
[]
[]
[]
[]
[117.50000000 206.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[117.50000000 206.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[117.50000000 206.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[252.50000000 388.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[252.50000000 388.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[252.50000000 388.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[252.50000000 388.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[252.50000000 388.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[252.50000000 388.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[252.50000000 388.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[252.50000000 388.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[252.50000000 388.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1087.50000180 403.23718135 203.98922002 265.07861182 200.51404310 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[557.06785748 255.21116306 28.47466729 337.67114682 285.59265490 1.00000000]
[557.06785748 255.21116306 28.47466729 285.59265490 233.51416297 1.00000000]
[]
[]
[]
[]
[]
[382.26209740 206.42867348 38.25947821 348.37300067 249.80839064 1.00000000]
[]
[320.39136006 149.55805749 30.52836670 7.61245054 319.27121250 1.00000000]
[320.39136006 149.55805749 30.52836670 319.27121250 270.92997447 1.00000000]
[320.39136006 149.55805749 30.52836670 270.92997447 222.58873644 1.00000000]
[320.39136006 149.55805749 30.52836670 222.58873644 174.24749841 1.00000000]
[320.39136006 149.55805749 30.52836670 174.24749841 125.90626038 1.00000000]
[320.39136006 149.55805749 30.52836670 125.90626038 77.56502235 1.00000000]
[]
[382.26209740 206.42867348 38.25947821 195.36908224 157.22988895 1.00000000]
[382.26209740 206.42867348 38.25947821 157.22988895 119.09069566 1.00000000]
[382.26209740 206.42867348 38.25947821 119.09069566 80.95150237 1.00000000]
[382.26209740 206.42867348 38.25947821 80.95150237 42.81230908 1.00000000]
[]
[]
[]
[]
[]
[557.06785748 255.21116306 28.47466729 157.67114678 105.59265485 1.00000000]
[557.06785748 255.21116306 28.47466729 105.59265485 53.51416302 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1087.50000180 403.23718135 203.98922002 190.67126674 183.57546181 1.00000000]
[1087.50000180 403.23718135 203.98922002 183.57546181 176.47965688 1.00000000]
[1087.50000180 403.23718135 203.98922002 176.47965688 169.38385195 1.00000000]
[1087.50000180 403.23718135 203.98922002 169.38385195 162.28804702 1.00000000]
[1087.50000180 403.23718135 203.98922002 162.28804702 155.19224209 1.00000000]
[1087.50000180 403.23718135 203.98922002 155.19224209 148.09643716 1.00000000]
[1087.50000180 403.23718135 203.98922002 148.09643716 141.00063223 1.00000000]
[1087.50000180 403.23718135 203.98922002 141.00063223 133.90482730 1.00000000]
[1087.50000180 403.23718135 203.98922002 133.90482730 126.80902237 1.00000000]
[1087.50000180 403.23718135 203.98922002 126.80902237 119.71321744 1.00000000]
[1087.50000180 403.23718135 203.98922002 119.71321744 112.61741251 1.00000000]
[1087.50000180 403.23718135 203.98922002 112.61741251 105.52160758 1.00000000]
[1087.50000180 403.23718135 203.98922002 105.52160758 98.42580265 1.00000000]
[1087.50000180 403.23718135 203.98922002 98.42580265 91.32999772 1.00000000]
[1087.50000180 403.23718135 203.98922002 91.32999772 84.23419279 1.00000000]
[1087.50000180 403.23718135 203.98922002 84.23419279 77.13838786 1.00000000]
[1087.50000180 403.23718135 203.98922002 77.13838786 70.04258293 1.00000000]
[1087.50000180 403.23718135 203.98922002 70.04258293 62.94677800 1.00000000]
[]
[]
[]
[1245.56628431 656.44572283 26.77024824 197.20342281 141.53220962 1.00000000]
[1245.56628431 656.44572283 26.77024824 141.53220962 85.86099642 1.00000000]
[1245.56628431 656.44572283 26.77024824 85.86099642 30.18978322 1.00000000]
[1245.56628431 656.44572283 26.77024824 30.18978322 334.51857002 1.00000000]
[1245.56628431 656.44572283 26.77024824 334.51857002 278.84735683 1.00000000]
[]
[]
[]
[1087.50000180 403.23718135 203.98922002 53.10400164 46.07768703 1.00000000]
[1087.50000180 403.23718135 203.98922002 46.07768703 39.05137242 1.00000000]
[]
[]
[]
[]
[]
[1379.91012337 601.43696790 30.52836670 179.15369833 130.81246030 1.00000000]
[1379.91012337 601.43696790 30.52836670 130.81246030 82.47122227 1.00000000]
[1379.91012337 601.43696790 30.52836670 82.47122227 34.12998424 1.00000000]
[1379.91012337 601.43696790 30.52836670 34.12998424 345.78874620 1.00000000]
[1379.91012337 601.43696790 30.52836670 345.78874620 297.44750817 1.00000000]
[1379.91012337 601.43696790 30.52836670 297.44750817 249.10627014 1.00000000]
[]
[]
[]
[]
[]
[1087.50000180 403.23718135 203.98922002 29.20859606 12.07483019 1.00000000]
[]
[]
[]
[]
[]
[1428.19133218 445.99527360 23.13159456 137.99323907 72.57334054 1.00000000]
[1428.19133218 445.99527360 23.13159456 72.57334054 7.15344201 1.00000000]
[1428.19133218 445.99527360 23.13159456 7.15344201 301.73354349 1.00000000]
[1428.19133218 445.99527360 23.13159456 301.73354349 236.31364496 1.00000000]
[]
[]
[]
[]
[]
[1087.50000180 403.23718135 203.98922002 2.23205383 354.95616503 1.00000000]
[1087.50000180 403.23718135 203.98922002 354.95616503 347.68027623 1.00000000]
[1087.50000180 403.23718135 203.98922002 347.68027623 340.40438742 1.00000000]
[1087.50000180 403.23718135 203.98922002 340.40438742 333.12849862 1.00000000]
[1087.50000180 403.23718135 203.98922002 333.12849862 325.85260981 1.00000000]
[1087.50000180 403.23718135 203.98922002 325.85260981 318.57672101 1.00000000]
[1087.50000180 403.23718135 203.98922002 318.57672101 311.30083220 1.00000000]
[1087.50000180 403.23718135 203.98922002 311.30083220 304.02494340 1.00000000]
[1087.50000180 403.23718135 203.98922002 304.02494340 296.74905459 1.00000000]
[1087.50000180 403.23718135 203.98922002 296.74905459 289.47316579 1.00000000]
[1087.50000180 403.23718135 203.98922002 289.47316579 282.19727698 1.00000000]
[1087.50000180 403.23718135 203.98922002 282.19727698 274.92138818 1.00000000]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[31 61]
[32 60]
[33 59]
[34 58]
[35 57]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[62 198]
[63 197]
[64 196]
[65 195]
[66 194]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 96]
[89 95]
[138 149]
[139 148]
[140 147]
[141 146]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
] def

init

% Start Annotations
69 87 12 1.00 0.60 0.67 omark 100 118 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
