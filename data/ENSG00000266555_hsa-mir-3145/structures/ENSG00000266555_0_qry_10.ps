%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUUAGUAAUUUAGAAGAUGGGAGGUUGACUGGUAUUGGUGUAUCAGUUUAUACAAGUUCAAUUCCAAACACUCAAAAUACCUCAUUCCAUUCAACAAUGGGUUUUGAAUGUUUGGARUUGAACUCAUAYAAACAAAUACAUUUUUUUCUUUCAAAAUUGUACUAGUAUUUGCAUGGMG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[250.00000000 125.00000000]
[250.00000000 150.00000000]
[250.00000000 175.00000000]
[235.92854309 195.66383362]
[240.87762451 220.16906738]
[261.86563110 233.75227356]
[271.56793213 256.79278564]
[263.93286133 280.59835815]
[273.63513184 303.63888550]
[295.99954224 314.81179810]
[305.70181274 337.85232544]
[290.59930420 357.77499390]
[315.40411377 360.89282227]
[325.10641479 383.93334961]
[323.70938110 408.89428711]
[342.54129028 425.33688354]
[352.24359131 448.37738037]
[344.60852051 472.18298340]
[354.31079102 495.22348022]
[376.67520142 506.39639282]
[386.37747192 529.43688965]
[396.07977295 552.47741699]
[405.78207397 575.51794434]
[398.14700317 599.32354736]
[407.84927368 622.36407471]
[430.21368408 633.53692627]
[439.91595459 656.57745361]
[426.19400024 677.47503662]
[423.91638184 702.37103271]
[433.61865234 725.41156006]
[453.01950073 741.17889404]
[477.55697632 745.96551514]
[487.25927734 769.00598145]
[496.96154785 792.04650879]
[506.66384888 815.08703613]
[516.36614990 838.12756348]
[526.06842041 861.16809082]
[535.77069092 884.20861816]
[528.13562012 908.01422119]
[537.83795166 931.05468750]
[560.20233154 942.22760010]
[569.90460205 965.26812744]
[579.60693359 988.30865479]
[589.30920410 1011.34918213]
[587.91217041 1036.31005859]
[606.74407959 1052.75268555]
[616.44635010 1075.79321289]
[608.81127930 1099.59875488]
[618.51361084 1122.63928223]
[640.87799072 1133.81225586]
[650.58026123 1156.85278320]
[660.28259277 1179.89318848]
[669.98486328 1202.93371582]
[679.68713379 1225.97424316]
[689.38940430 1249.01477051]
[699.09173584 1272.05529785]
[697.69470215 1297.01623535]
[716.52661133 1313.45886230]
[726.22888184 1336.49938965]
[735.93121338 1359.53991699]
[745.63348389 1382.58044434]
[755.33575439 1405.62097168]
[765.03802490 1428.66149902]
[774.74035645 1451.70202637]
[784.44262695 1474.74243164]
[783.04559326 1499.70336914]
[801.87750244 1516.14599609]
[811.57983398 1539.18652344]
[821.28210449 1562.22705078]
[830.98437500 1585.26757812]
[840.68670654 1608.30810547]
[850.38897705 1631.34863281]
[860.09124756 1654.38916016]
[846.36926270 1675.28662109]
[844.09167480 1700.18273926]
[853.79394531 1723.22326660]
[873.19476318 1738.99060059]
[897.73223877 1743.77709961]
[921.63671875 1736.45751953]
[939.28735352 1718.75280762]
[946.53375244 1694.82604980]
[941.67205811 1670.30334473]
[959.32263184 1652.59863281]
[976.97326660 1634.89392090]
[994.62384033 1617.18933105]
[1012.27447510 1599.48461914]
[1035.15808105 1589.41784668]
[1039.74975586 1564.84313965]
[1022.04510498 1547.19250488]
[997.48455811 1551.85937500]
[987.48785400 1574.77368164]
[969.83728027 1592.47839355]
[952.18664551 1610.18310547]
[934.53607178 1627.88781738]
[916.88549805 1645.59252930]
[892.34796143 1640.80590820]
[882.64569092 1617.76538086]
[872.94342041 1594.72485352]
[863.24108887 1571.68432617]
[853.53881836 1548.64379883]
[843.83654785 1525.60327148]
[834.13427734 1502.56286621]
[835.53131104 1477.60192871]
[816.69934082 1461.15930176]
[806.99707031 1438.11877441]
[797.29479980 1415.07824707]
[787.59246826 1392.03771973]
[777.89019775 1368.99719238]
[768.18792725 1345.95666504]
[758.48565674 1322.91613770]
[748.78332520 1299.87561035]
[750.18035889 1274.91467285]
[731.34844971 1258.47216797]
[721.64617920 1235.43164062]
[711.94384766 1212.39111328]
[702.24157715 1189.35058594]
[692.53930664 1166.31005859]
[682.83697510 1143.26953125]
[673.13470459 1120.22900391]
[680.76977539 1096.42346191]
[671.06750488 1073.38293457]
[648.70312500 1062.20996094]
[639.00079346 1039.16943359]
[640.39782715 1014.20855713]
[621.56591797 997.76599121]
[611.86364746 974.72546387]
[602.16131592 951.68493652]
[592.45904541 928.64440918]
[600.09411621 904.83880615]
[590.39184570 881.79827881]
[568.02746582 870.62542725]
[558.32513428 847.58489990]
[548.62286377 824.54437256]
[538.92059326 801.50384521]
[529.21826172 778.46331787]
[519.51599121 755.42279053]
[509.81372070 732.38226318]
[523.53570557 711.48474121]
[525.81329346 686.58868408]
[516.11102295 663.54815674]
[496.71017456 647.78088379]
[472.17269897 642.99426270]
[462.47039795 619.95373535]
[470.10546875 596.14813232]
[460.40319824 573.10766602]
[438.03878784 561.93475342]
[428.33651733 538.89422607]
[418.63421631 515.85369873]
[408.93191528 492.81317139]
[416.56701660 469.00759888]
[406.86471558 445.96707153]
[384.50030518 434.79418945]
[374.79803467 411.75366211]
[376.19506836 386.79272461]
[357.36312866 370.35015869]
[347.66085815 347.30963135]
[337.95855713 324.26910400]
[328.25625610 301.22857666]
[335.89135742 277.42300415]
[326.18905640 254.38249207]
[303.82464600 243.20959473]
[294.12237549 220.16906738]
[299.07144165 195.66383362]
[285.00000000 175.00000000]
[285.00000000 150.00000000]
[285.00000000 125.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[267.49999538 202.04002271 32.20889362 237.08950786 191.41790157 1.00000000]
[267.49999538 202.04002271 32.20889362 191.41790157 145.74629528 1.00000000]
[267.49999538 202.04002271 32.20889362 145.74629528 100.07468899 1.00000000]
[]
[299.91209596 279.01068953 36.01426010 218.09152064 177.47330478 1.00000000]
[299.91209596 279.01068953 36.01426010 177.47330478 136.85508893 1.00000000]
[299.91209596 279.01068953 36.01426010 136.85508893 96.23687308 1.00000000]
[]
[]
[]
[]
[349.95221450 397.84350882 28.47466729 209.24268876 157.16419683 1.00000000]
[349.95221450 397.84350882 28.47466729 157.16419683 105.08570491 1.00000000]
[]
[380.58775473 470.59528709 36.01426010 218.09152059 177.47330473 1.00000000]
[380.58775473 470.59528709 36.01426010 177.47330473 136.85508888 1.00000000]
[380.58775473 470.59528709 36.01426010 136.85508888 96.23687303 1.00000000]
[]
[]
[]
[434.12623561 597.73584540 36.01426010 218.09152059 177.47330473 1.00000000]
[434.12623561 597.73584540 36.01426010 177.47330473 136.85508888 1.00000000]
[434.12623561 597.73584540 36.01426010 136.85508888 96.23687303 1.00000000]
[]
[474.86483631 694.47987610 51.55595110 227.32161692 199.25864887 1.00000000]
[474.86483631 694.47987610 51.55595110 199.25864887 171.19568083 1.00000000]
[474.86483631 694.47987610 51.55595110 171.19568083 143.13271279 1.00000000]
[474.86483631 694.47987610 51.55595110 143.13271279 115.06974474 1.00000000]
[474.86483631 694.47987610 51.55595110 115.06974474 87.00677670 1.00000000]
[]
[]
[]
[]
[]
[]
[564.11488300 906.42650925 36.01426010 218.09152059 177.47330473 1.00000000]
[564.11488300 906.42650925 36.01426010 177.47330473 136.85508888 1.00000000]
[564.11488300 906.42650925 36.01426010 136.85508888 96.23687303 1.00000000]
[]
[]
[]
[614.15500163 1025.25932849 28.47466729 209.24268871 157.16419678 1.00000000]
[614.15500163 1025.25932849 28.47466729 157.16419678 105.08570486 1.00000000]
[]
[644.79054192 1098.01110674 36.01426010 218.09152054 177.47330469 1.00000000]
[644.79054192 1098.01110674 36.01426010 177.47330469 136.85508883 1.00000000]
[644.79054192 1098.01110674 36.01426010 136.85508883 96.23687298 1.00000000]
[]
[]
[]
[]
[]
[]
[723.93752830 1285.96548738 28.47466729 209.24268866 157.16419674 1.00000000]
[723.93752830 1285.96548738 28.47466729 157.16419674 105.08570481 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[809.28844181 1488.65264936 28.47466729 209.24268862 157.16419669 1.00000000]
[809.28844181 1488.65264936 28.47466729 157.16419669 105.08570476 1.00000000]
[]
[]
[]
[]
[]
[]
[895.04012676 1692.29154323 51.55595110 227.32161677 199.25864873 1.00000000]
[895.04012676 1692.29154323 51.55595110 199.25864873 171.19568069 1.00000000]
[895.04012676 1692.29154323 51.55595110 171.19568069 143.13271264 1.00000000]
[895.04012676 1692.29154323 51.55595110 143.13271264 115.06974460 1.00000000]
[895.04012676 1692.29154323 51.55595110 115.06974460 87.00677656 1.00000000]
[895.04012676 1692.29154323 51.55595110 87.00677656 58.94380852 1.00000000]
[895.04012676 1692.29154323 51.55595110 58.94380852 30.88084047 1.00000000]
[895.04012676 1692.29154323 51.55595110 30.88084047 2.81787243 1.00000000]
[895.04012676 1692.29154323 51.55595110 2.81787243 334.75490439 1.00000000]
[]
[]
[]
[]
[1014.18395693 1572.78251991 26.77024824 94.09035749 38.41914429 1.00000000]
[1014.18395693 1572.78251991 26.77024824 38.41914429 342.74793109 1.00000000]
[1014.18395693 1572.78251991 26.77024824 342.74793109 287.07671789 1.00000000]
[1014.18395693 1572.78251991 26.77024824 287.07671789 231.40550470 1.00000000]
[1014.18395693 1572.78251991 26.77024824 231.40550470 175.73429150 1.00000000]
[]
[]
[]
[]
[895.04012676 1692.29154323 51.55595110 295.06974460 267.00677656 1.00000000]
[]
[]
[]
[]
[]
[]
[809.28844181 1488.65264936 28.47466729 29.24268857 337.16419664 1.00000000]
[809.28844181 1488.65264936 28.47466729 337.16419664 285.08570481 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[723.93752830 1285.96548738 28.47466729 29.24268862 337.16419669 1.00000000]
[723.93752830 1285.96548738 28.47466729 337.16419669 285.08570486 1.00000000]
[]
[]
[]
[]
[]
[]
[644.79054192 1098.01110674 36.01426010 38.09152054 357.47330469 1.00000000]
[644.79054192 1098.01110674 36.01426010 357.47330469 316.85508883 1.00000000]
[644.79054192 1098.01110674 36.01426010 316.85508883 276.23687298 1.00000000]
[]
[614.15500163 1025.25932849 28.47466729 29.24268866 337.16419674 1.00000000]
[614.15500163 1025.25932849 28.47466729 337.16419674 285.08570491 1.00000000]
[]
[]
[]
[564.11488300 906.42650925 36.01426010 38.09152059 357.47330473 1.00000000]
[564.11488300 906.42650925 36.01426010 357.47330473 316.85508888 1.00000000]
[564.11488300 906.42650925 36.01426010 316.85508888 276.23687303 1.00000000]
[]
[]
[]
[]
[]
[]
[474.86483631 694.47987610 51.55595110 47.32161692 19.25864887 1.00000000]
[474.86483631 694.47987610 51.55595110 19.25864887 351.19568083 1.00000000]
[474.86483631 694.47987610 51.55595110 351.19568083 323.13271279 1.00000000]
[474.86483631 694.47987610 51.55595110 323.13271279 295.06974474 1.00000000]
[474.86483631 694.47987610 51.55595110 295.06974474 267.00677670 1.00000000]
[]
[434.12623561 597.73584540 36.01426010 38.09152059 357.47330473 1.00000000]
[434.12623561 597.73584540 36.01426010 357.47330473 316.85508888 1.00000000]
[434.12623561 597.73584540 36.01426010 316.85508888 276.23687303 1.00000000]
[]
[]
[]
[380.58775473 470.59528709 36.01426010 38.09152059 357.47330473 1.00000000]
[380.58775473 470.59528709 36.01426010 357.47330473 316.85508888 1.00000000]
[380.58775473 470.59528709 36.01426010 316.85508888 276.23687303 1.00000000]
[]
[349.95221450 397.84350882 28.47466729 29.24268871 337.16419678 1.00000000]
[349.95221450 397.84350882 28.47466729 337.16419678 285.08570495 1.00000000]
[]
[]
[]
[299.91209596 279.01068953 36.01426010 38.09152064 357.47330478 1.00000000]
[299.91209596 279.01068953 36.01426010 357.47330478 316.85508893 1.00000000]
[299.91209596 279.01068953 36.01426010 316.85508893 276.23687308 1.00000000]
[]
[267.49999538 202.04002271 32.20889362 34.25370472 348.58209843 1.00000000]
[267.49999538 202.04002271 32.20889362 348.58209843 302.91049214 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 174]
[8 173]
[9 172]
[10 171]
[13 169]
[14 168]
[17 165]
[18 164]
[20 163]
[21 162]
[23 160]
[24 159]
[27 156]
[28 155]
[29 154]
[30 153]
[33 150]
[34 149]
[39 144]
[40 143]
[41 142]
[42 141]
[43 140]
[44 139]
[45 138]
[48 135]
[49 134]
[50 133]
[51 132]
[53 130]
[54 129]
[57 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
[74 109]
[75 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
] def

init

% Start Annotations
104 142 12 1.00 0.60 0.67 omark 41 79 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
