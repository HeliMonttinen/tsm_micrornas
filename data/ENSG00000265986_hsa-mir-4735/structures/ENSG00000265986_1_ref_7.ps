%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAAAUAAAUUGCAACUUCUGGUCAUGUGUAACUAAURACAUGACWAAAAUGCAAUGUCUAAUWUGAGCACCUUUGGUAUUAAAUCAAAAGAGVUACUGCCUUCUUAUGCAAACAGGGAAAAUGAAUUUGCAAAAGUGAAGCUGAGAUUUW\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[300.00000000 125.00000000]
[300.00000000 150.00000000]
[300.00000000 175.00000000]
[300.00000000 200.00000000]
[289.02532959 222.46234131]
[300.00000000 244.92468262]
[300.00000000 269.92468262]
[289.02532959 292.38702393]
[300.00000000 314.84936523]
[300.00000000 339.84936523]
[300.00000000 364.84936523]
[300.00000000 389.84936523]
[275.96981812 396.74505615]
[254.17602539 408.99371338]
[235.79217529 425.93582153]
[214.43655396 412.93823242]
[193.08091736 399.94064331]
[171.72529602 386.94305420]
[150.36967468 373.94546509]
[129.01403809 360.94787598]
[107.65841675 347.95031738]
[106.04938507 323.00213623]
[92.54815674 301.96130371]
[70.53957367 290.10287476]
[45.54133606 290.39984131]
[23.82066917 302.77774048]
[10.82308292 324.13336182]
[9.80716133 349.11273193]
[21.02759933 371.45330811]
[41.67136383 385.55419922]
[66.56291962 387.88018799]
[89.46179962 377.84817505]
[110.81742859 390.84576416]
[132.17304993 403.84335327]
[153.52867126 416.84094238]
[174.88430786 429.83853149]
[196.23992920 442.83612061]
[217.59555054 455.83367920]
[210.99266052 479.94595337]
[210.12512207 504.93090820]
[215.03964233 529.44311523]
[225.47160339 552.16253662]
[240.85925293 571.86590576]
[260.37393188 587.49200439]
[250.73666382 610.55981445]
[241.09939575 633.62762451]
[218.76658630 644.86352539]
[209.12931824 667.93133545]
[216.83149719 691.71527100]
[238.16166687 704.75457764]
[262.84143066 700.76599121]
[284.17160034 713.80529785]
[292.93817139 737.21783447]
[315.25399780 748.48748779]
[339.29943848 741.64514160]
[352.33874512 720.31500244]
[347.46563721 695.79455566]
[327.26113892 681.07110596]
[302.42663574 683.94305420]
[281.09646606 670.90374756]
[273.39428711 647.11981201]
[283.03158569 624.05200195]
[292.66885376 600.98419189]
[317.50000000 603.88488770]
[342.33114624 600.98419189]
[365.82516479 592.43835449]
[386.71688843 578.70751953]
[403.88131714 560.53112793]
[416.39416504 538.88787842]
[440.64916992 544.94555664]
[464.90417480 551.00317383]
[489.15917969 557.06085205]
[508.29290771 573.15124512]
[532.74505615 567.94635010]
[557.00006104 574.00402832]
[571.46759033 594.39251709]
[595.72253418 600.45019531]
[618.07727051 589.25793457]
[642.33227539 595.31561279]
[662.71929932 609.78521729]
[686.16558838 601.10931396]
[692.22326660 576.85437012]
[675.60925293 558.17346191]
[650.81298828 561.35864258]
[626.55798340 555.30096436]
[612.09051514 534.91241455]
[587.83551025 528.85479736]
[565.48077393 540.04699707]
[541.22576904 533.98937988]
[522.09204102 517.89898682]
[497.63986206 523.10388184]
[473.38488770 517.04620361]
[449.12988281 510.98855591]
[424.87487793 504.93090820]
[424.00735474 479.94595337]
[417.40444946 455.83367920]
[405.42175293 433.89251709]
[423.20660400 416.32269287]
[440.99145508 398.75283813]
[464.68395996 390.77377319]
[472.95059204 367.18008423]
[490.73544312 349.61026001]
[508.52029419 332.04043579]
[526.30517578 314.47058105]
[544.09002686 296.90075684]
[561.87487793 279.33093262]
[585.56738281 271.35183716]
[610.35760498 274.58340454]
[626.06378174 294.03375244]
[650.43353271 299.61190796]
[673.03680420 288.93051147]
[684.19958496 266.56106567]
[679.14434814 242.07749939]
[660.03466797 225.95857239]
[635.04931641 225.10302734]
[614.88177490 239.87702942]
[590.09155273 236.64549255]
[569.23626709 222.85935974]
[545.54376221 230.83843994]
[537.27709961 254.43212891]
[519.49224854 272.00195312]
[501.70739746 289.57180786]
[483.92254639 307.14163208]
[466.13769531 324.71145630]
[448.35284424 342.28131104]
[424.66033936 350.26037598]
[416.39367676 373.85406494]
[398.60882568 391.42388916]
[380.82397461 408.99371338]
[359.03018188 396.74505615]
[335.00000000 389.84936523]
[335.00000000 364.84936523]
[335.00000000 339.84936523]
[335.00000000 314.84936523]
[345.97467041 292.38702393]
[335.00000000 269.92468262]
[335.00000000 244.92468262]
[345.97467041 222.46234131]
[335.00000000 200.00000000]
[335.00000000 175.00000000]
[335.00000000 150.00000000]
[335.00000000 125.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[317.49999874 222.46233918 28.47466711 232.07849231 180.00000000 1.00000000]
[317.49999874 222.46233918 28.47466711 180.00000000 127.92150787 1.00000000]
[]
[317.49999850 292.38701750 28.47466681 232.07849291 180.00000000 1.00000000]
[317.49999850 292.38701750 28.47466681 180.00000000 127.92150753 1.00000000]
[]
[]
[]
[317.49999932 496.15170917 107.73318994 260.65154557 247.32577274 1.00000000]
[317.49999932 496.15170917 107.73318994 247.32577274 233.99999991 1.00000000]
[317.49999932 496.15170917 107.73318994 233.99999991 220.67422708 1.00000000]
[]
[]
[]
[]
[]
[]
[58.61465923 338.58741065 49.92949042 10.80822325 341.81141406 1.00000000]
[58.61465923 338.58741065 49.92949042 341.81141406 312.81460488 1.00000000]
[58.61465923 338.58741065 49.92949042 312.81460488 283.81779570 1.00000000]
[58.61465923 338.58741065 49.92949042 283.81779570 254.82098651 1.00000000]
[58.61465923 338.58741065 49.92949042 254.82098651 225.82417733 1.00000000]
[58.61465923 338.58741065 49.92949042 225.82417733 196.82736814 1.00000000]
[58.61465923 338.58741065 49.92949042 196.82736814 167.83055896 1.00000000]
[58.61465923 338.58741065 49.92949042 167.83055896 138.83374977 1.00000000]
[58.61465923 338.58741065 49.92949042 138.83374977 109.83694059 1.00000000]
[58.61465923 338.58741065 49.92949042 109.83694059 80.84013141 1.00000000]
[58.61465923 338.58741065 49.92949042 80.84013141 51.84332222 1.00000000]
[]
[]
[]
[]
[]
[]
[317.49999932 496.15170917 107.73318994 201.97731840 188.65154557 1.00000000]
[317.49999932 496.15170917 107.73318994 188.65154557 175.32577274 1.00000000]
[317.49999932 496.15170917 107.73318994 175.32577274 161.99999991 1.00000000]
[317.49999932 496.15170917 107.73318994 161.99999991 148.67422708 1.00000000]
[317.49999932 496.15170917 107.73318994 148.67422708 135.34845424 1.00000000]
[317.49999932 496.15170917 107.73318994 135.34845424 122.02268141 1.00000000]
[]
[]
[245.11289475 669.41753296 36.01426010 263.60155086 222.98333500 1.00000000]
[245.11289475 669.41753296 36.01426010 222.98333500 182.36511915 1.00000000]
[245.11289475 669.41753296 36.01426010 182.36511915 141.74690330 1.00000000]
[245.11289475 669.41753296 36.01426010 141.74690330 101.12868744 1.00000000]
[245.11289475 669.41753296 36.01426010 101.12868744 60.51047159 1.00000000]
[]
[318.51955708 714.29164275 34.35139098 180.81120668 138.13308916 1.00000000]
[318.51955708 714.29164275 34.35139098 138.13308916 95.45497164 1.00000000]
[318.51955708 714.29164275 34.35139098 95.45497164 52.77685413 1.00000000]
[318.51955708 714.29164275 34.35139098 52.77685413 10.09873661 1.00000000]
[318.51955708 714.29164275 34.35139098 10.09873661 327.42061909 1.00000000]
[318.51955708 714.29164275 34.35139098 327.42061909 284.74250158 1.00000000]
[318.51955708 714.29164275 34.35139098 284.74250158 242.06438406 1.00000000]
[]
[245.11289475 669.41753296 36.01426010 2.36511915 321.74690330 1.00000000]
[]
[]
[317.49999932 496.15170917 107.73318994 103.32577274 89.99999991 1.00000000]
[317.49999932 496.15170917 107.73318994 89.99999991 76.67422708 1.00000000]
[317.49999932 496.15170917 107.73318994 76.67422708 63.34845424 1.00000000]
[317.49999932 496.15170917 107.73318994 63.34845424 50.02268141 1.00000000]
[317.49999932 496.15170917 107.73318994 50.02268141 36.69690858 1.00000000]
[317.49999932 496.15170917 107.73318994 36.69690858 23.37113575 1.00000000]
[]
[]
[]
[515.19247931 545.52511317 28.47466729 156.10117332 104.02268139 1.00000000]
[515.19247931 545.52511317 28.47466729 104.02268139 51.94418946 1.00000000]
[]
[591.77903768 564.65249259 36.01426010 164.95000515 124.33178929 1.00000000]
[591.77903768 564.65249259 36.01426010 124.33178929 83.71357344 1.00000000]
[591.77903768 564.65249259 36.01426010 83.71357344 43.09535759 1.00000000]
[]
[666.22717706 583.24580504 26.77024824 153.20071436 97.52950116 1.00000000]
[666.22717706 583.24580504 26.77024824 97.52950116 41.85828797 1.00000000]
[666.22717706 583.24580504 26.77024824 41.85828797 346.18707477 1.00000000]
[666.22717706 583.24580504 26.77024824 346.18707477 290.51586157 1.00000000]
[666.22717706 583.24580504 26.77024824 290.51586157 234.84464837 1.00000000]
[]
[591.77903768 564.65249259 36.01426010 344.95000515 304.33178929 1.00000000]
[591.77903768 564.65249259 36.01426010 304.33178929 263.71357344 1.00000000]
[591.77903768 564.65249259 36.01426010 263.71357344 223.09535759 1.00000000]
[]
[515.19247931 545.52511317 28.47466729 336.10117327 284.02268134 1.00000000]
[515.19247931 545.52511317 28.47466729 284.02268134 231.94418951 1.00000000]
[]
[]
[]
[317.49999932 496.15170917 107.73318994 4.67422708 351.34845424 1.00000000]
[317.49999932 496.15170917 107.73318994 351.34845424 338.02268141 1.00000000]
[317.49999932 496.15170917 107.73318994 338.02268141 324.69690858 1.00000000]
[]
[]
[444.67214120 370.51707461 28.47466729 97.42694615 45.34845422 1.00000000]
[444.67214120 370.51707461 28.47466729 45.34845422 353.26996229 1.00000000]
[]
[]
[]
[]
[]
[565.55554963 251.09514271 28.47466729 97.42694610 45.34845417 1.00000000]
[]
[646.30617453 261.62143755 38.21401848 160.17222754 121.98590718 1.00000000]
[646.30617453 261.62143755 38.21401848 121.98590718 83.79958681 1.00000000]
[646.30617453 261.62143755 38.21401848 83.79958681 45.61326644 1.00000000]
[646.30617453 261.62143755 38.21401848 45.61326644 7.42694608 1.00000000]
[646.30617453 261.62143755 38.21401848 7.42694608 329.24062571 1.00000000]
[646.30617453 261.62143755 38.21401848 329.24062571 291.05430534 1.00000000]
[646.30617453 261.62143755 38.21401848 291.05430534 252.86798498 1.00000000]
[646.30617453 261.62143755 38.21401848 252.86798498 214.68166461 1.00000000]
[]
[565.55554963 251.09514271 28.47466729 329.50543798 277.42694605 1.00000000]
[565.55554963 251.09514271 28.47466729 277.42694605 225.34845413 1.00000000]
[565.55554963 251.09514271 28.47466729 225.34845413 173.26996229 1.00000000]
[]
[]
[]
[]
[]
[444.67214120 370.51707461 28.47466729 277.42694610 225.34845417 1.00000000]
[444.67214120 370.51707461 28.47466729 225.34845417 173.26996234 1.00000000]
[]
[]
[317.49999932 496.15170917 107.73318994 305.99999991 292.67422708 1.00000000]
[317.49999932 496.15170917 107.73318994 292.67422708 279.34845424 1.00000000]
[]
[]
[]
[317.49999850 292.38701750 28.47466681 52.07849075 360.00000000 1.00000000]
[317.49999850 292.38701750 28.47466681 360.00000000 307.92150852 1.00000000]
[]
[317.49999874 222.46233918 28.47466711 52.07849145 360.00000000 1.00000000]
[317.49999874 222.46233918 28.47466711 360.00000000 307.92150828 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[9 152]
[10 151]
[11 150]
[12 149]
[13 148]
[15 146]
[16 145]
[18 143]
[19 142]
[20 141]
[21 140]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[53 72]
[54 71]
[55 70]
[60 69]
[61 68]
[78 103]
[79 102]
[80 101]
[81 100]
[83 98]
[84 97]
[87 94]
[88 93]
[106 138]
[107 137]
[108 136]
[110 134]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 126]
[117 125]
] def

init

% Start Annotations
82 108 12 1.00 0.60 0.67 omark 48 92 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
