%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAAUGCCCACUCGCUAGGCAGAAUGCAGCUGCUGCCCACACGUUAGUACCCAGUGGUAAGGUGGAUACAAUGUGACCUCAGAGGACCAAGAGUUGAGGUCACAUUGCAUCCACCUUGCCACCGGGUACCAAAAAUUUGACAAUCUGCAAAACAAGUGUCUCUGGCCAGUCACAG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[225.00000000 125.00000000]
[225.00000000 150.00000000]
[199.76281738 185.19429016]
[176.08435059 193.21490479]
[152.40588379 201.23550415]
[128.72741699 209.25611877]
[111.20822144 191.42138672]
[88.38796234 181.21179199]
[63.41561508 180.03619385]
[39.73714828 188.05680847]
[20.61996651 204.16685486]
[8.70207214 226.14328003]
[5.62802362 250.95356750]
[-18.05044556 258.97418213]
[-41.72891235 266.99478149]
[-65.40737915 275.01538086]
[-89.08584595 283.03601074]
[-103.63990784 262.70919800]
[-122.69469452 246.52539062]
[-145.10932922 235.45361328]
[-141.02737427 210.78910828]
[-136.94541931 186.12461853]
[-132.86344910 161.46011353]
[-125.33454132 137.62074280]
[-143.88183594 120.85774994]
[-166.84080505 130.75148010]
[-167.39375305 155.74537659]
[-171.47570801 180.40986633]
[-175.55767822 205.07437134]
[-179.63963318 229.73887634]
[-204.42616272 232.99890137]
[-227.67895508 242.18081665]
[-248.00576782 256.73486328]
[-264.18954468 275.78967285]
[-275.26135254 298.20428467]
[-280.55819702 322.63671875]
[-279.76300049 347.62405396]
[-272.92330933 371.67025757]
[-260.44873047 393.33554077]
[-243.08609009 411.32272339]
[-221.87500000 424.55484009]
[-228.37379456 448.69540405]
[-234.87257385 472.83593750]
[-241.37136841 496.97647095]
[-247.87016296 521.11700439]
[-254.36895752 545.25756836]
[-270.80545044 564.09478760]
[-266.04721069 588.63781738]
[-272.54598999 612.77832031]
[-279.04479980 636.91888428]
[-285.54357910 661.05944824]
[-292.04235840 685.19995117]
[-298.54116821 709.34051514]
[-305.03994751 733.48101807]
[-311.53875732 757.62158203]
[-318.03753662 781.76214600]
[-324.53634644 805.90264893]
[-331.03512573 830.04321289]
[-337.53390503 854.18371582]
[-344.03271484 878.32427979]
[-350.53149414 902.46484375]
[-366.96801758 921.30206299]
[-362.20974731 945.84509277]
[-368.70855713 969.98559570]
[-375.20733643 994.12615967]
[-381.70611572 1018.26666260]
[-388.20492554 1042.40722656]
[-394.70370483 1066.54772949]
[-401.20251465 1090.68835449]
[-407.70129395 1114.82885742]
[-414.20010376 1138.96936035]
[-420.69888306 1163.10998535]
[-427.19766235 1187.25048828]
[-433.69647217 1211.39099121]
[-440.19525146 1235.53149414]
[-446.69406128 1259.67211914]
[-470.56130981 1267.11206055]
[-488.49826050 1284.52661133]
[-496.64022827 1308.16369629]
[-493.23303223 1332.93041992]
[-479.01071167 1353.49072266]
[-457.03762817 1365.41467285]
[-432.04794312 1366.13342285]
[-409.42590332 1355.49182129]
[-394.04553223 1335.78283691]
[-389.22064209 1311.25280762]
[-395.99078369 1287.18701172]
[-412.89730835 1268.77038574]
[-406.39849854 1244.62988281]
[-399.89971924 1220.48937988]
[-393.40090942 1196.34875488]
[-386.90213013 1172.20825195]
[-380.40332031 1148.06774902]
[-373.90454102 1123.92712402]
[-367.40576172 1099.78662109]
[-360.90695190 1075.64611816]
[-354.40817261 1051.50549316]
[-347.90936279 1027.36499023]
[-341.41058350 1003.22442627]
[-334.91177368 979.08392334]
[-328.41299438 954.94335938]
[-311.97650146 936.10614014]
[-316.73474121 911.56311035]
[-310.23596191 887.42260742]
[-303.73715210 863.28204346]
[-297.23837280 839.14154053]
[-290.73956299 815.00097656]
[-284.24078369 790.86041260]
[-277.74200439 766.71990967]
[-271.24319458 742.57934570]
[-264.74441528 718.43878174]
[-258.24560547 694.29827881]
[-251.74682617 670.15771484]
[-245.24803162 646.01721191]
[-238.74923706 621.87664795]
[-232.25044250 597.73608398]
[-215.81394958 578.89886475]
[-220.57220459 554.35589600]
[-214.07341003 530.21533203]
[-207.57461548 506.07479858]
[-201.07582092 481.93423462]
[-194.57702637 457.79370117]
[-188.07823181 433.65316772]
[-163.09088135 432.85794067]
[-155.07028198 456.53640747]
[-147.04966736 480.21490479]
[-148.19667053 505.18856812]
[-128.21987915 520.21942139]
[-104.54140472 512.19885254]
[-97.81168365 488.12167358]
[-113.89981842 468.98605347]
[-121.92042542 445.30758667]
[-129.94104004 421.62908936]
[-109.61421967 407.07504272]
[-93.43042755 388.02026367]
[-82.35865021 365.60562134]
[-77.06179047 341.17321777]
[-77.85700226 316.18585205]
[-54.17853165 308.16525269]
[-30.50006294 300.14465332]
[-6.82159472 292.12402344]
[16.85687447 284.10342407]
[34.37606812 301.93817139]
[57.19633484 312.14773560]
[82.16867828 313.32333374]
[105.84714508 305.30273438]
[124.96432495 289.19268799]
[136.88221741 267.21624756]
[139.95626831 242.40597534]
[163.63473511 234.38536072]
[187.31320190 226.36476135]
[210.99166870 218.34414673]
[232.57736206 230.95597839]
[257.52899170 229.40158081]
[277.38250732 214.20823669]
[285.40322876 190.52980042]
[278.87036133 166.39845276]
[260.00000000 150.00000000]
[260.00000000 125.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[242.50000177 189.19463090 42.92399202 245.93972900 185.34748921 1.00000000]
[]
[]
[]
[72.79214628 246.67977065 67.29996112 326.21538381 304.80733650 1.00000000]
[72.79214628 246.67977065 67.29996112 304.80733650 283.39928919 1.00000000]
[72.79214628 246.67977065 67.29996112 283.39928919 261.99124187 1.00000000]
[72.79214628 246.67977065 67.29996112 261.99124187 240.58319456 1.00000000]
[72.79214628 246.67977065 67.29996112 240.58319456 219.17514725 1.00000000]
[72.79214628 246.67977065 67.29996112 219.17514725 197.76709994 1.00000000]
[72.79214628 246.67977065 67.29996112 197.76709994 176.35905263 1.00000000]
[]
[]
[]
[]
[-178.80999337 331.90496024 102.16945350 331.42473213 317.36972657 1.00000000]
[-178.80999337 331.90496024 102.16945350 317.36972657 303.31472100 1.00000000]
[-178.80999337 331.90496024 102.16945350 303.31472100 289.25971543 1.00000000]
[]
[]
[]
[-147.65872620 143.67892183 23.13159456 50.23702640 344.81712788 1.00000000]
[-147.65872620 143.67892183 23.13159456 344.81712788 279.39722935 1.00000000]
[-147.65872620 143.67892183 23.13159456 279.39722935 213.97733082 1.00000000]
[-147.65872620 143.67892183 23.13159456 213.97733082 148.55743229 1.00000000]
[]
[]
[]
[-178.80999337 331.90496024 102.16945350 269.53474326 255.47973770 1.00000000]
[-178.80999337 331.90496024 102.16945350 255.47973770 241.42473213 1.00000000]
[-178.80999337 331.90496024 102.16945350 241.42473213 227.36972657 1.00000000]
[-178.80999337 331.90496024 102.16945350 227.36972657 213.31472100 1.00000000]
[-178.80999337 331.90496024 102.16945350 213.31472100 199.25971543 1.00000000]
[-178.80999337 331.90496024 102.16945350 199.25971543 185.20470987 1.00000000]
[-178.80999337 331.90496024 102.16945350 185.20470987 171.14970430 1.00000000]
[-178.80999337 331.90496024 102.16945350 171.14970430 157.09469874 1.00000000]
[-178.80999337 331.90496024 102.16945350 157.09469874 143.03969317 1.00000000]
[-178.80999337 331.90496024 102.16945350 143.03969317 128.98468761 1.00000000]
[-178.80999337 331.90496024 102.16945350 128.98468761 114.92968204 1.00000000]
[]
[]
[]
[]
[]
[-243.30970203 571.49683178 28.47466729 247.14568786 195.06719593 1.00000000]
[-243.30970203 571.49683178 28.47466729 195.06719593 142.98870401 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-339.47224909 928.70409943 28.47466729 247.14568781 195.06719588 1.00000000]
[-339.47224909 928.70409943 28.47466729 195.06719588 142.98870396 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-443.03681293 1313.40704386 53.85926493 266.10641399 239.26654430 1.00000000]
[-443.03681293 1313.40704386 53.85926493 239.26654430 212.42667461 1.00000000]
[-443.03681293 1313.40704386 53.85926493 212.42667461 185.58680493 1.00000000]
[-443.03681293 1313.40704386 53.85926493 185.58680493 158.74693524 1.00000000]
[-443.03681293 1313.40704386 53.85926493 158.74693524 131.90706555 1.00000000]
[-443.03681293 1313.40704386 53.85926493 131.90706555 105.06719586 1.00000000]
[-443.03681293 1313.40704386 53.85926493 105.06719586 78.22732617 1.00000000]
[-443.03681293 1313.40704386 53.85926493 78.22732617 51.38745648 1.00000000]
[-443.03681293 1313.40704386 53.85926493 51.38745648 24.54758680 1.00000000]
[-443.03681293 1313.40704386 53.85926493 24.54758680 357.70771711 1.00000000]
[-443.03681293 1313.40704386 53.85926493 357.70771711 330.86784742 1.00000000]
[-443.03681293 1313.40704386 53.85926493 330.86784742 304.02797773 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-339.47224909 928.70409943 28.47466729 67.14568776 15.06719584 1.00000000]
[-339.47224909 928.70409943 28.47466729 15.06719584 322.98870401 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-243.30970203 571.49683178 28.47466729 67.14568781 15.06719588 1.00000000]
[-243.30970203 571.49683178 28.47466729 15.06719588 322.98870405 1.00000000]
[]
[]
[]
[]
[]
[-178.80999337 331.90496024 102.16945350 95.20470987 81.14970430 1.00000000]
[]
[]
[-123.97541193 493.78782707 26.77024824 210.46525121 154.79403801 1.00000000]
[-123.97541193 493.78782707 26.77024824 154.79403801 99.12282482 1.00000000]
[-123.97541193 493.78782707 26.77024824 99.12282482 43.45161162 1.00000000]
[-123.97541193 493.78782707 26.77024824 43.45161162 347.78039842 1.00000000]
[-123.97541193 493.78782707 26.77024824 347.78039842 292.10918522 1.00000000]
[]
[]
[-178.80999337 331.90496024 102.16945350 61.42473213 47.36972657 1.00000000]
[-178.80999337 331.90496024 102.16945350 47.36972657 33.31472100 1.00000000]
[-178.80999337 331.90496024 102.16945350 33.31472100 19.25971543 1.00000000]
[-178.80999337 331.90496024 102.16945350 19.25971543 5.20470987 1.00000000]
[-178.80999337 331.90496024 102.16945350 5.20470987 351.14970430 1.00000000]
[]
[]
[]
[]
[72.79214628 246.67977065 67.29996112 146.21538381 124.80733650 1.00000000]
[72.79214628 246.67977065 67.29996112 124.80733650 103.39928919 1.00000000]
[72.79214628 246.67977065 67.29996112 103.39928919 81.99124187 1.00000000]
[72.79214628 246.67977065 67.29996112 81.99124187 60.58319456 1.00000000]
[72.79214628 246.67977065 67.29996112 60.58319456 39.17514725 1.00000000]
[72.79214628 246.67977065 67.29996112 39.17514725 17.76709994 1.00000000]
[72.79214628 246.67977065 67.29996112 17.76709994 356.35905263 1.00000000]
[]
[]
[]
[242.50000177 189.19463090 42.92399202 137.22694722 103.36583452 1.00000000]
[242.50000177 189.19463090 42.92399202 103.36583452 69.50472181 1.00000000]
[242.50000177 189.19463090 42.92399202 69.50472181 35.64360911 1.00000000]
[242.50000177 189.19463090 42.92399202 35.64360911 1.78249640 1.00000000]
[242.50000177 189.19463090 42.92399202 1.78249640 327.92138370 1.00000000]
[242.50000177 189.19463090 42.92399202 327.92138370 294.06027100 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 166]
[7 165]
[8 164]
[9 158]
[10 157]
[11 156]
[12 155]
[19 148]
[20 147]
[21 146]
[22 145]
[23 144]
[26 36]
[27 35]
[28 34]
[29 33]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
[66 110]
[67 109]
[69 107]
[70 106]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[130 139]
[131 138]
[132 137]
] def

init

% Start Annotations
45 82 12 1.00 0.60 0.67 omark 94 131 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
