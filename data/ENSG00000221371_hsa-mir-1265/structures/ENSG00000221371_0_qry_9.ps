%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUAGGAGAGCAGAGGKCUAYUGAUUUGHUKUUUUAGCUAAUCGACMUAUGGUUUGGGACUCAGGAUGUGGUCAAAUGUUGUUAAGGYAUGUUCAGCGAYAAUACUUGACCACAUUUUGAGUMCCAAACCAUAUUCUACAACUUUUUUCAUAUAUUUGGUGUAAUCCUCAAUUUUCUAUUUUUA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[100.00000000 275.00000000]
[100.00000000 300.00000000]
[100.00000000 325.00000000]
[100.00000000 350.00000000]
[82.11197662 367.46478271]
[78.14200592 392.14755249]
[89.65147400 414.34063721]
[112.11371613 425.31549072]
[119.95290375 449.05462646]
[127.79209137 472.79379272]
[135.63128662 496.53292847]
[115.36791992 511.17520142]
[99.45828247 530.45947266]
[88.93338776 553.13604736]
[84.47530365 577.73535156]
[86.37292480 602.66320801]
[94.50328827 626.30426025]
[108.33950806 647.12634277]
[92.66808319 666.60467529]
[76.99666595 686.08306885]
[61.32524109 705.56140137]
[36.75761795 700.93194580]
[12.36834049 706.42401123]
[-7.84362698 721.13714600]
[-20.56424332 742.65893555]
[-23.70778084 767.46051025]
[-16.75881577 791.47534180]
[-0.85672492 810.76580811]
[21.39111519 822.16906738]
[46.33685303 823.81530762]
[69.89028168 815.43457031]
[88.18948364 798.40112305]
[98.23404694 775.50775146]
[98.37701416 750.50817871]
[88.59494781 727.50140381]
[104.26637268 708.02301025]
[119.93778992 688.54467773]
[135.60920715 669.06628418]
[158.91081238 678.12365723]
[183.74433899 681.00390625]
[208.50045776 677.52044678]
[231.57485962 667.89904785]
[251.47219849 652.76312256]
[271.91030884 667.16046143]
[292.34841919 681.55780029]
[312.78652954 695.95513916]
[333.22463989 710.35253906]
[353.66271973 724.74987793]
[374.10083008 739.14721680]
[394.53894043 753.54455566]
[414.97705078 767.94189453]
[435.41516113 782.33929443]
[447.45843506 804.24725342]
[472.14218140 808.21112061]
[492.58029175 822.60845947]
[513.01837158 837.00585938]
[533.45648193 851.40319824]
[553.89459229 865.80053711]
[574.33270264 880.19787598]
[594.77081299 894.59521484]
[615.20892334 908.99261475]
[635.64703369 923.38995361]
[656.08514404 937.78729248]
[676.52325439 952.18463135]
[696.96136475 966.58197021]
[717.39947510 980.97937012]
[737.83758545 995.37670898]
[758.27569580 1009.77404785]
[778.71380615 1024.17138672]
[799.15191650 1038.56872559]
[811.19519043 1060.47668457]
[835.87890625 1064.44055176]
[856.31701660 1078.83801270]
[876.75512695 1093.23535156]
[897.19323730 1107.63269043]
[905.98278809 1131.03662109]
[900.07470703 1155.32849121]
[894.16656494 1179.62036133]
[888.25848389 1203.91223145]
[882.35040283 1228.20397949]
[862.72985840 1243.69714355]
[858.80786133 1268.38757324]
[872.66162109 1289.19799805]
[896.95349121 1295.10607910]
[918.81719971 1282.98266602]
[926.67254639 1259.24877930]
[916.35900879 1236.47534180]
[922.26708984 1212.18347168]
[946.25848389 1205.15417480]
[928.17517090 1187.89160156]
[934.08325195 1163.59985352]
[939.99139404 1139.30798340]
[958.54760742 1122.55480957]
[959.52990723 1097.57409668]
[942.34643555 1079.41577148]
[917.34954834 1079.01928711]
[896.91143799 1064.62194824]
[876.47332764 1050.22460938]
[856.03521729 1035.82727051]
[843.99194336 1013.91925049]
[819.30822754 1009.95538330]
[798.87011719 995.55804443]
[778.43200684 981.16070557]
[757.99389648 966.76336670]
[737.55578613 952.36596680]
[717.11767578 937.96862793]
[696.67956543 923.57128906]
[676.24145508 909.17395020]
[655.80334473 894.77661133]
[635.36523438 880.37921143]
[614.92712402 865.98187256]
[594.48901367 851.58453369]
[574.05090332 837.18719482]
[553.61279297 822.78985596]
[533.17468262 808.39245605]
[512.73657227 793.99511719]
[492.29846191 779.59777832]
[480.25521851 757.68981934]
[455.57147217 753.72589111]
[435.13336182 739.32855225]
[414.69525146 724.93121338]
[394.25714111 710.53387451]
[373.81903076 696.13653564]
[353.38092041 681.73913574]
[332.94281006 667.34179688]
[312.50469971 652.94445801]
[292.06658936 638.54711914]
[271.62847900 624.14978027]
[279.18139648 600.31799316]
[280.47213745 575.35131836]
[275.41702271 550.86773682]
[264.34365845 528.45391846]
[282.36691284 511.12869263]
[300.39013672 493.80346680]
[318.41339111 476.47827148]
[342.42907715 483.42425537]
[336.43661499 459.15304565]
[354.45986938 441.82785034]
[377.99508667 450.25955200]
[402.97616577 449.28701782]
[425.78466797 439.05117798]
[443.11682129 421.03460693]
[452.46212769 397.84701538]
[452.46694946 372.84701538]
[443.13058472 349.65579224]
[425.80538940 331.63256836]
[403.00082397 321.38790894]
[378.02014160 320.40576172]
[354.48165894 328.82836914]
[335.79489136 345.43576050]
[324.66659546 367.82235718]
[322.70858765 392.74557495]
[330.20455933 416.59530640]
[312.18133545 433.92053223]
[294.15808105 451.24572754]
[276.13485718 468.57095337]
[258.11160278 485.89614868]
[240.08837891 503.22134399]
[218.12916565 491.27175903]
[193.86424255 485.25399780]
[168.86608887 485.55807495]
[161.02690125 461.81890869]
[153.18771362 438.07977295]
[145.34852600 414.34063721]
[156.85798645 392.14755249]
[152.88801575 367.46478271]
[135.00000000 350.00000000]
[135.00000000 325.00000000]
[135.00000000 300.00000000]
[135.00000000 275.00000000]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[117.49999735 385.81723469 39.86382195 243.96025387 207.41153737 1.00000000]
[117.49999735 385.81723469 39.86382195 207.41153737 170.86282088 1.00000000]
[117.49999735 385.81723469 39.86382195 170.86282088 134.31410438 1.00000000]
[117.49999735 385.81723469 39.86382195 134.31410438 97.76538788 1.00000000]
[]
[]
[]
[182.54989164 582.80562389 98.20556563 241.46084677 226.83549729 1.00000000]
[182.54989164 582.80562389 98.20556563 226.83549729 212.21014781 1.00000000]
[182.54989164 582.80562389 98.20556563 212.21014781 197.58479833 1.00000000]
[182.54989164 582.80562389 98.20556563 197.58479833 182.95944885 1.00000000]
[182.54989164 582.80562389 98.20556563 182.95944885 168.33409937 1.00000000]
[182.54989164 582.80562389 98.20556563 168.33409937 153.70874989 1.00000000]
[182.54989164 582.80562389 98.20556563 153.70874989 139.08340041 1.00000000]
[]
[]
[]
[37.84531363 762.66219211 61.73983513 292.35253676 268.99054657 1.00000000]
[37.84531363 762.66219211 61.73983513 268.99054657 245.62855637 1.00000000]
[37.84531363 762.66219211 61.73983513 245.62855637 222.26656618 1.00000000]
[37.84531363 762.66219211 61.73983513 222.26656618 198.90457599 1.00000000]
[37.84531363 762.66219211 61.73983513 198.90457599 175.54258580 1.00000000]
[37.84531363 762.66219211 61.73983513 175.54258580 152.18059561 1.00000000]
[37.84531363 762.66219211 61.73983513 152.18059561 128.81860542 1.00000000]
[37.84531363 762.66219211 61.73983513 128.81860542 105.45661523 1.00000000]
[37.84531363 762.66219211 61.73983513 105.45661523 82.09462504 1.00000000]
[37.84531363 762.66219211 61.73983513 82.09462504 58.73263485 1.00000000]
[37.84531363 762.66219211 61.73983513 58.73263485 35.37064466 1.00000000]
[37.84531363 762.66219211 61.73983513 35.37064466 12.00865447 1.00000000]
[37.84531363 762.66219211 61.73983513 12.00865447 348.64666428 1.00000000]
[37.84531363 762.66219211 61.73983513 348.64666428 325.28467409 1.00000000]
[]
[]
[]
[182.54989164 582.80562389 98.20556563 118.55381044 103.92846096 1.00000000]
[182.54989164 582.80562389 98.20556563 103.92846096 89.30311148 1.00000000]
[182.54989164 582.80562389 98.20556563 89.30311148 74.67776200 1.00000000]
[182.54989164 582.80562389 98.20556563 74.67776200 60.05241252 1.00000000]
[182.54989164 582.80562389 98.20556563 60.05241252 45.42706304 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[463.85682216 780.96852315 28.47466729 177.24075995 125.16226803 1.00000000]
[463.85682216 780.96852315 28.47466729 125.16226803 73.08377610 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[827.59357124 1037.19800353 28.47466729 177.24075991 125.16226798 1.00000000]
[827.59357124 1037.19800353 28.47466729 125.16226798 73.08377605 1.00000000]
[]
[]
[]
[929.37728111 1108.89817437 32.20889362 182.25177582 136.58016953 1.00000000]
[]
[]
[]
[]
[892.36904873 1261.06197609 34.35139098 253.04308870 210.36497118 1.00000000]
[892.36904873 1261.06197609 34.35139098 210.36497118 167.68685367 1.00000000]
[892.36904873 1261.06197609 34.35139098 167.68685367 125.00873615 1.00000000]
[892.36904873 1261.06197609 34.35139098 125.00873615 82.33061863 1.00000000]
[892.36904873 1261.06197609 34.35139098 82.33061863 39.65250112 1.00000000]
[892.36904873 1261.06197609 34.35139098 39.65250112 356.97438360 1.00000000]
[892.36904873 1261.06197609 34.35139098 356.97438360 314.29626608 1.00000000]
[]
[]
[]
[]
[]
[929.37728111 1108.89817437 32.20889362 70.75918525 25.08757896 1.00000000]
[929.37728111 1108.89817437 32.20889362 25.08757896 339.41597267 1.00000000]
[929.37728111 1108.89817437 32.20889362 339.41597267 293.74436638 1.00000000]
[929.37728111 1108.89817437 32.20889362 293.74436638 248.07276009 1.00000000]
[]
[]
[]
[827.59357124 1037.19800353 28.47466729 357.24075986 305.16226793 1.00000000]
[827.59357124 1037.19800353 28.47466729 305.16226793 253.08377610 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[463.85682216 780.96852315 28.47466729 357.24075991 305.16226798 1.00000000]
[463.85682216 780.96852315 28.47466729 305.16226798 253.08377615 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[182.54989164 582.80562389 98.20556563 24.89747307 10.27212359 1.00000000]
[182.54989164 582.80562389 98.20556563 10.27212359 355.64677411 1.00000000]
[182.54989164 582.80562389 98.20556563 355.64677411 341.02142463 1.00000000]
[182.54989164 582.80562389 98.20556563 341.02142463 326.39607515 1.00000000]
[]
[]
[]
[]
[]
[]
[387.97702563 385.33457265 65.68782325 120.68043125 98.74054444 1.00000000]
[387.97702563 385.33457265 65.68782325 98.74054444 76.80065763 1.00000000]
[387.97702563 385.33457265 65.68782325 76.80065763 54.86077082 1.00000000]
[387.97702563 385.33457265 65.68782325 54.86077082 32.92088400 1.00000000]
[387.97702563 385.33457265 65.68782325 32.92088400 10.98099719 1.00000000]
[387.97702563 385.33457265 65.68782325 10.98099719 349.04111038 1.00000000]
[387.97702563 385.33457265 65.68782325 349.04111038 327.10122357 1.00000000]
[387.97702563 385.33457265 65.68782325 327.10122357 305.16133675 1.00000000]
[387.97702563 385.33457265 65.68782325 305.16133675 283.22144994 1.00000000]
[387.97702563 385.33457265 65.68782325 283.22144994 261.28156313 1.00000000]
[387.97702563 385.33457265 65.68782325 261.28156313 239.34167632 1.00000000]
[387.97702563 385.33457265 65.68782325 239.34167632 217.40178951 1.00000000]
[387.97702563 385.33457265 65.68782325 217.40178951 195.46190269 1.00000000]
[387.97702563 385.33457265 65.68782325 195.46190269 173.52201588 1.00000000]
[387.97702563 385.33457265 65.68782325 173.52201588 151.58212907 1.00000000]
[]
[]
[]
[]
[]
[182.54989164 582.80562389 98.20556563 305.86648518 291.24113570 1.00000000]
[182.54989164 582.80562389 98.20556563 291.24113570 276.61578622 1.00000000]
[182.54989164 582.80562389 98.20556563 276.61578622 261.99043674 1.00000000]
[]
[]
[]
[117.49999735 385.81723469 39.86382195 45.68589562 9.13717912 1.00000000]
[117.49999735 385.81723469 39.86382195 9.13717912 332.58846263 1.00000000]
[117.49999735 385.81723469 39.86382195 332.58846263 296.03974613 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[15 171]
[16 170]
[17 169]
[18 168]
[25 45]
[26 44]
[27 43]
[28 42]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
[75 110]
[76 109]
[77 108]
[79 106]
[80 105]
[81 104]
[82 103]
[83 99]
[84 98]
[85 97]
[86 95]
[87 94]
[139 165]
[140 164]
[141 163]
[142 162]
[144 161]
[145 160]
] def

init

% Start Annotations
49 82 12 1.00 0.60 0.67 omark 103 136 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
