%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:50 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUAGGAGAGCAGACGUCUAUUGAUUUGGUGUUUUAGCUAAUCGACCUAUGGUUUGGGACUCAGGAUGUGGUCAAGUGUUGUUAAGGCAUGUUCAGGAACAAUACUUGACCACAUUUUGAAUUCCAAACCAUAUUCUACAACUUUUUCCACAUAUUUGGUGUAAUCCUCCAUUUUCUAUUUUUG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[128.34936523 137.50000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[150.00000000 200.00000000]
[150.00000000 225.00000000]
[133.72460938 243.97660828]
[133.72460938 268.97662354]
[150.00000000 287.95321655]
[150.00000000 312.95321655]
[150.00000000 337.95321655]
[125.62753296 343.51943970]
[102.71435547 353.51876831]
[82.05900574 367.60266113]
[64.38133240 385.28033447]
[50.29742813 405.93569946]
[40.29811478 428.84887695]
[34.73188400 453.22134399]
[33.79271698 478.20367432]
[37.51335144 502.92526245]
[14.24070549 512.05676270]
[-9.03193951 521.18823242]
[-32.30458450 530.31970215]
[-55.57722855 539.45123291]
[-78.84987640 548.58270264]
[-98.39429474 532.99371338]
[-102.12252045 557.71417236]
[-125.39516449 566.84564209]
[-148.66781616 575.97711182]
[-172.62452698 568.83038330]
[-195.08148193 579.81610107]
[-204.14430237 603.11553955]
[-195.01281738 626.38818359]
[-172.52355957 637.30761719]
[-148.58801270 630.09027100]
[-135.88372803 608.55883789]
[-112.61109161 599.42736816]
[-89.33844757 590.29589844]
[-66.06579590 581.16436768]
[-42.79315567 572.03289795]
[-19.52050972 562.90142822]
[3.75213647 553.76995850]
[27.02478218 544.63848877]
[50.29742813 535.50695801]
[64.38133240 556.16235352]
[82.05900574 573.84002686]
[102.71435547 587.92388916]
[93.58287048 611.19653320]
[84.45139313 634.46917725]
[75.31990814 657.74182129]
[66.18842316 681.01446533]
[57.05694199 704.28710938]
[47.92545700 727.55975342]
[38.79397583 750.83239746]
[29.66249084 774.10504150]
[20.53100777 797.37768555]
[11.39952469 820.65039062]
[2.26804161 843.92303467]
[-16.15291786 860.82470703]
[-14.14111614 885.74365234]
[-23.27259827 909.01629639]
[-32.40408325 932.28894043]
[-41.53556442 955.56158447]
[-50.66704941 978.83422852]
[-59.79853058 1002.10687256]
[-68.93001556 1025.37951660]
[-78.06150055 1048.65222168]
[-87.19297791 1071.92480469]
[-96.32446289 1095.19750977]
[-105.45594788 1118.47009277]
[-114.58743286 1141.74279785]
[-123.71891022 1165.01538086]
[-132.85040283 1188.28808594]
[-141.98187256 1211.56066895]
[-151.11335754 1234.83337402]
[-160.24484253 1258.10595703]
[-169.37632751 1281.37866211]
[-178.50781250 1304.65124512]
[-187.63929749 1327.92395020]
[-196.77078247 1351.19653320]
[-205.90226746 1374.46923828]
[-215.03373718 1397.74182129]
[-238.70513916 1405.78332520]
[-254.10629272 1425.47607422]
[-256.20654297 1450.38769531]
[-244.31990051 1472.38098145]
[-265.85131836 1485.08532715]
[-273.06866455 1509.02087402]
[-262.14926147 1531.51013184]
[-238.87661743 1540.64160156]
[-215.57714844 1531.57873535]
[-204.59147644 1509.12182617]
[-211.73820496 1485.16516113]
[-188.06680298 1477.12365723]
[-172.66566467 1457.43090820]
[-170.56539917 1432.51928711]
[-182.45204163 1410.52587891]
[-173.32055664 1387.25329590]
[-164.18907166 1363.98059082]
[-155.05758667 1340.70800781]
[-145.92610168 1317.43530273]
[-136.79463196 1294.16271973]
[-127.66313934 1270.89001465]
[-118.53166199 1247.61743164]
[-109.40017700 1224.34472656]
[-100.26869202 1201.07214355]
[-91.13720703 1177.79943848]
[-82.00572968 1154.52685547]
[-72.87424469 1131.25415039]
[-63.74275970 1107.98156738]
[-54.61127853 1084.70886230]
[-45.47979355 1061.43627930]
[-36.34831238 1038.16357422]
[-27.21682739 1014.89093018]
[-18.08534431 991.61828613]
[-8.95386219 968.34564209]
[0.17762129 945.07299805]
[9.30910397 921.80035400]
[18.44058800 898.52770996]
[36.86154938 881.62597656]
[34.84974670 856.70709229]
[43.98122787 833.43444824]
[53.11271286 810.16180420]
[62.24419403 786.88916016]
[71.37567902 763.61651611]
[80.50716400 740.34387207]
[89.63864136 717.07122803]
[98.77012634 693.79858398]
[107.90161133 670.52593994]
[117.03309631 647.25329590]
[126.16457367 623.98065186]
[135.29606628 600.70800781]
[160.01763916 604.42858887]
[185.00000000 603.48944092]
[209.37246704 597.92321777]
[232.28564453 587.92388916]
[252.94099426 573.84002686]
[270.61865234 556.16235352]
[284.70257568 535.50695801]
[294.70187378 512.59381104]
[300.26812744 488.22134399]
[301.20727539 463.23898315]
[297.48666382 438.51739502]
[289.23590088 414.91815186]
[276.74252319 393.26367188]
[260.44201660 374.30865479]
[240.90237427 358.71368408]
[251.75540161 336.19232178]
[262.60842896 313.67095947]
[285.03289795 302.61911011]
[294.02694702 279.29299927]
[284.82687378 256.04739380]
[262.30551147 245.19436646]
[238.39135742 252.48226929]
[225.75062561 274.05105591]
[231.07850647 298.47671509]
[220.22549438 320.99807739]
[209.37246704 343.51943970]
[185.00000000 337.95321655]
[185.00000000 312.95321655]
[185.00000000 287.95321655]
[201.27539062 268.97662354]
[201.27539062 243.97660828]
[185.00000000 225.00000000]
[185.00000000 200.00000000]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999973 256.47660926 36.01426010 240.92732378 200.30910793 1.00000000]
[167.49999973 256.47660926 36.01426010 200.30910793 159.69089207 1.00000000]
[167.49999973 256.47660926 36.01426010 159.69089207 119.07267622 1.00000000]
[]
[]
[167.49999973 470.72133505 133.91647683 262.49119988 251.77942849 1.00000000]
[167.49999973 470.72133505 133.91647683 251.77942849 241.06765709 1.00000000]
[167.49999973 470.72133505 133.91647683 241.06765709 230.35588570 1.00000000]
[167.49999973 470.72133505 133.91647683 230.35588570 219.64411430 1.00000000]
[167.49999973 470.72133505 133.91647683 219.64411430 208.93234291 1.00000000]
[167.49999973 470.72133505 133.91647683 208.93234291 198.22057151 1.00000000]
[167.49999973 470.72133505 133.91647683 198.22057151 187.50880012 1.00000000]
[167.49999973 470.72133505 133.91647683 187.50880012 176.79702873 1.00000000]
[167.49999973 470.72133505 133.91647683 176.79702873 166.08525733 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-169.79294684 603.06490003 34.35139098 307.94986852 265.27175100 1.00000000]
[-169.79294684 603.06490003 34.35139098 265.27175100 222.59363349 1.00000000]
[-169.79294684 603.06490003 34.35139098 222.59363349 179.91551597 1.00000000]
[-169.79294684 603.06490003 34.35139098 179.91551597 137.23739845 1.00000000]
[-169.79294684 603.06490003 34.35139098 137.23739845 94.55928094 1.00000000]
[-169.79294684 603.06490003 34.35139098 94.55928094 51.88116342 1.00000000]
[-169.79294684 603.06490003 34.35139098 51.88116342 9.20304590 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999973 470.72133505 133.91647683 151.06765709 140.35588570 1.00000000]
[167.49999973 470.72133505 133.91647683 140.35588570 129.64411430 1.00000000]
[167.49999973 470.72133505 133.91647683 129.64411430 118.93234291 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[10.35431452 871.22536569 28.47466729 253.50203469 201.42354276 1.00000000]
[10.35431452 871.22536569 28.47466729 201.42354276 149.34505084 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-213.38597312 1441.45347670 43.74267812 267.84117862 234.63236074 1.00000000]
[-213.38597312 1441.45347670 43.74267812 234.63236074 201.42354283 1.00000000]
[-213.38597312 1441.45347670 43.74267812 201.42354283 168.21472489 1.00000000]
[-213.38597312 1441.45347670 43.74267812 168.21472489 135.00590688 1.00000000]
[-238.82596216 1506.29024375 34.35139098 260.79695397 218.11883653 1.00000000]
[-238.82596216 1506.29024375 34.35139098 218.11883653 175.44071902 1.00000000]
[-238.82596216 1506.29024375 34.35139098 175.44071902 132.76260150 1.00000000]
[-238.82596216 1506.29024375 34.35139098 132.76260150 90.08448398 1.00000000]
[-238.82596216 1506.29024375 34.35139098 90.08448398 47.40636647 1.00000000]
[-238.82596216 1506.29024375 34.35139098 47.40636647 4.72824895 1.00000000]
[-238.82596216 1506.29024375 34.35139098 4.72824895 322.05013135 1.00000000]
[-213.38597312 1441.45347670 43.74267812 87.84117845 54.63236056 1.00000000]
[-213.38597312 1441.45347670 43.74267812 54.63236056 21.42354265 1.00000000]
[-213.38597312 1441.45347670 43.74267812 21.42354265 348.21472477 1.00000000]
[-213.38597312 1441.45347670 43.74267812 348.21472477 315.00590691 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[10.35431452 871.22536569 28.47466729 73.50203464 21.42354272 1.00000000]
[10.35431452 871.22536569 28.47466729 21.42354272 329.34505089 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[167.49999973 470.72133505 133.91647683 103.91474267 93.20297127 1.00000000]
[167.49999973 470.72133505 133.91647683 93.20297127 82.49119988 1.00000000]
[167.49999973 470.72133505 133.91647683 82.49119988 71.77942849 1.00000000]
[167.49999973 470.72133505 133.91647683 71.77942849 61.06765709 1.00000000]
[167.49999973 470.72133505 133.91647683 61.06765709 50.35588570 1.00000000]
[167.49999973 470.72133505 133.91647683 50.35588570 39.64411430 1.00000000]
[167.49999973 470.72133505 133.91647683 39.64411430 28.93234291 1.00000000]
[167.49999973 470.72133505 133.91647683 28.93234291 18.22057151 1.00000000]
[167.49999973 470.72133505 133.91647683 18.22057151 7.50880012 1.00000000]
[167.49999973 470.72133505 133.91647683 7.50880012 356.79702873 1.00000000]
[167.49999973 470.72133505 133.91647683 356.79702873 346.08525733 1.00000000]
[167.49999973 470.72133505 133.91647683 346.08525733 335.37348594 1.00000000]
[167.49999973 470.72133505 133.91647683 335.37348594 324.66171454 1.00000000]
[167.49999973 470.72133505 133.91647683 324.66171454 313.94994315 1.00000000]
[167.49999973 470.72133505 133.91647683 313.94994315 303.23817176 1.00000000]
[]
[]
[259.67589549 279.44496466 34.35139098 85.10278294 42.42466543 1.00000000]
[259.67589549 279.44496466 34.35139098 42.42466543 359.74654791 1.00000000]
[259.67589549 279.44496466 34.35139098 359.74654791 317.06843039 1.00000000]
[259.67589549 279.44496466 34.35139098 317.06843039 274.39031288 1.00000000]
[259.67589549 279.44496466 34.35139098 274.39031288 231.71219536 1.00000000]
[259.67589549 279.44496466 34.35139098 231.71219536 189.03407784 1.00000000]
[259.67589549 279.44496466 34.35139098 189.03407784 146.35596033 1.00000000]
[]
[]
[167.49999973 470.72133505 133.91647683 288.22057151 277.50880012 1.00000000]
[]
[]
[167.49999973 256.47660926 36.01426010 60.92732378 20.30910793 1.00000000]
[167.49999973 256.47660926 36.01426010 20.30910793 339.69089207 1.00000000]
[167.49999973 256.47660926 36.01426010 339.69089207 299.07267622 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[6 170]
[7 169]
[8 168]
[9 167]
[12 164]
[13 163]
[14 162]
[23 47]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[30 41]
[31 40]
[32 39]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
[75 110]
[76 109]
[77 108]
[78 107]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[89 96]
[150 161]
[151 160]
[152 159]
] def

init

% Start Annotations
49 82 12 1.00 0.60 0.67 omark 103 136 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
