%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUGCUGGGAUUACAGGUVUGARCCACCGYKCCKGGCCAAUAUURUGCUGUUUUAAGAYCAAAGACUGUGCMCWAAUCUCUUAGCACUGAAGAUUAGUGCAUAGUCUUUGGUCUCAAAAUAUCACGAGGCUCACCAGCCCAGGGGGCCAAUUGUCUUGGUCUCAUUAGAAC\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[249.99998474 100.00000000]
[249.99998474 125.00000000]
[249.99998474 150.00000000]
[249.99998474 175.00000000]
[249.99998474 200.00000000]
[226.11297607 207.37637329]
[204.78343201 220.41671753]
[187.32939148 238.31521606]
[174.82939148 259.96585083]
[168.05586243 284.03073120]
[167.42736816 309.02282715]
[172.98274231 333.39779663]
[151.33210754 345.89779663]
[129.68147278 358.39779663]
[105.38780212 352.49713135]
[82.64496613 362.87802124]
[71.18668365 385.09756470]
[75.91699982 409.64596558]
[94.81138611 426.01675415]
[119.78320312 427.20336914]
[140.14476013 412.69793701]
[147.18147278 388.70867920]
[168.83210754 376.20867920]
[190.48274231 363.70867920]
[208.81437683 380.70724487]
[230.77241516 392.65899658]
[254.99998474 398.82540894]
[280.00000000 398.82540894]
[304.22756958 392.65899658]
[326.18560791 380.70724487]
[344.51724243 363.70867920]
[366.16787720 376.20867920]
[387.81851196 388.70867920]
[409.46914673 401.20867920]
[414.82223511 425.62884521]
[433.20617676 442.57080078]
[457.98138428 445.91577148]
[480.19998169 434.45562744]
[491.83737183 412.32937622]
[516.02770996 406.01846313]
[540.53295898 410.96737671]
[559.49743652 394.67782593]
[583.68774414 388.36691284]
[608.19305420 393.31582642]
[627.15747070 377.02627563]
[651.34783936 370.71536255]
[675.53814697 364.40444946]
[699.72851562 358.09353638]
[723.91882324 351.78262329]
[748.10919189 345.47171021]
[772.61444092 350.42062378]
[791.57891846 334.13107300]
[815.76922607 327.82015991]
[839.95959473 321.50924683]
[864.46484375 326.45816040]
[883.42926025 310.16860962]
[907.61962891 303.85769653]
[931.80993652 297.54678345]
[956.00030518 291.23587036]
[980.19061279 284.92495728]
[1004.38098145 278.61404419]
[1028.57128906 272.30310059]
[1052.76159668 265.99218750]
[1076.95202637 259.68127441]
[1101.14233398 253.37036133]
[1125.33264160 247.05944824]
[1149.52294922 240.74853516]
[1174.02819824 245.69746399]
[1192.99267578 229.40789795]
[1217.49792480 234.35682678]
[1236.46240234 218.06727600]
[1260.65270996 211.75634766]
[1284.84313965 205.44543457]
[1309.03344727 199.13452148]
[1333.22375488 192.82360840]
[1357.41406250 186.51269531]
[1378.25000000 200.32818604]
[1403.24621582 199.89393616]
[1423.58959961 185.36308289]
[1432.10742188 161.85890198]
[1425.79650879 137.66857910]
[1406.88195801 121.32113647]
[1382.03259277 118.58041382]
[1360.01000977 130.41273499]
[1348.57885742 152.64622498]
[1331.01818848 134.85223389]
[1324.38854980 158.95713806]
[1300.19812012 165.26805115]
[1276.00781250 171.57896423]
[1251.81750488 177.88987732]
[1227.62719727 184.20080566]
[1203.12182617 179.25187683]
[1184.15747070 195.54142761]
[1159.65209961 190.59251404]
[1140.68774414 206.88206482]
[1116.49731445 213.19297791]
[1092.30700684 219.50389099]
[1068.11669922 225.81481934]
[1043.92639160 232.12573242]
[1019.73602295 238.43664551]
[995.54571533 244.74755859]
[971.35534668 251.05847168]
[947.16503906 257.36938477]
[922.97467041 263.68029785]
[898.78436279 269.99121094]
[874.59399414 276.30212402]
[850.08874512 271.35321045]
[831.12426758 287.64276123]
[806.93395996 293.95367432]
[782.74359131 300.26458740]
[758.23834229 295.31567383]
[739.27386475 311.60522461]
[715.08355713 317.91613770]
[690.89324951 324.22705078]
[666.70288086 330.53799438]
[642.51257324 336.84890747]
[618.32220459 343.15982056]
[593.81695557 338.21090698]
[574.85247803 354.50045776]
[550.66217041 360.81137085]
[526.15686035 355.86242676]
[507.19244385 372.15200806]
[483.00210571 378.46292114]
[426.96914673 370.89779663]
[405.31851196 358.39779663]
[383.66787720 345.89779663]
[362.01724243 333.39779663]
[367.57260132 309.02282715]
[366.94412231 284.03073120]
[360.17059326 259.96585083]
[347.67059326 238.31521606]
[330.21655273 220.41671753]
[308.88699341 207.37637329]
[285.00000000 200.00000000]
[285.00000000 175.00000000]
[285.00000000 150.00000000]
[285.00000000 125.00000000]
[285.00000000 100.00000000]
[410.00000000 100.00000000]
[410.00000000 125.00000000]
[410.00000000 150.00000000]
[410.00000000 175.00000000]
[410.00000000 200.00000000]
[410.00000000 225.00000000]
[410.00000000 250.00000000]
[410.00000000 275.00000000]
[397.17904663 296.46212769]
[404.69174194 320.30661011]
[427.50000000 330.54299927]
[450.30825806 320.30661011]
[457.82095337 296.46212769]
[445.00000000 275.00000000]
[445.00000000 250.00000000]
[445.00000000 225.00000000]
[445.00000000 200.00000000]
[445.00000000 175.00000000]
[445.00000000 150.00000000]
[445.00000000 125.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[267.49998886 299.03548507 100.56976336 259.97903223 245.69930874 1.00000000]
[267.49998886 299.03548507 100.56976336 245.69930874 231.41958524 1.00000000]
[267.49998886 299.03548507 100.56976336 231.41958524 217.13986175 1.00000000]
[267.49998886 299.03548507 100.56976336 217.13986175 202.86013825 1.00000000]
[267.49998886 299.03548507 100.56976336 202.86013825 188.58041476 1.00000000]
[267.49998886 299.03548507 100.56976336 188.58041476 174.30069126 1.00000000]
[267.49998886 299.03548507 100.56976336 174.30069126 160.02096777 1.00000000]
[]
[]
[109.01131116 390.53896580 38.21401848 302.74528147 264.55896110 1.00000000]
[109.01131116 390.53896580 38.21401848 264.55896110 226.37264073 1.00000000]
[109.01131116 390.53896580 38.21401848 226.37264073 188.18632037 1.00000000]
[109.01131116 390.53896580 38.21401848 188.18632037 150.00000000 1.00000000]
[109.01131116 390.53896580 38.21401848 150.00000000 111.81367963 1.00000000]
[109.01131116 390.53896580 38.21401848 111.81367963 73.62735927 1.00000000]
[109.01131116 390.53896580 38.21401848 73.62735927 35.44103890 1.00000000]
[109.01131116 390.53896580 38.21401848 35.44103890 357.25471853 1.00000000]
[]
[]
[267.49998886 299.03548507 100.56976336 139.97903223 125.69930874 1.00000000]
[267.49998886 299.03548507 100.56976336 125.69930874 111.41958524 1.00000000]
[267.49998886 299.03548507 100.56976336 111.41958524 97.13986175 1.00000000]
[267.49998886 299.03548507 100.56976336 97.13986175 82.86013825 1.00000000]
[267.49998886 299.03548507 100.56976336 82.86013825 68.58041476 1.00000000]
[267.49998886 299.03548507 100.56976336 68.58041476 54.30069126 1.00000000]
[267.49998886 299.03548507 100.56976336 54.30069126 40.02096777 1.00000000]
[]
[]
[]
[450.90249858 404.92297342 41.59950997 185.12259810 150.14920980 1.00000000]
[450.90249858 404.92297342 41.59950997 150.14920980 115.17582151 1.00000000]
[450.90249858 404.92297342 41.59950997 115.17582151 80.20243322 1.00000000]
[450.90249858 404.92297342 41.59950997 80.20243322 45.22904493 1.00000000]
[450.90249858 404.92297342 41.59950997 45.22904493 10.25565663 1.00000000]
[]
[533.34493458 383.41491199 28.47466729 127.45674663 75.37825471 1.00000000]
[533.34493458 383.41491199 28.47466729 75.37825471 23.29976278 1.00000000]
[]
[601.00499252 365.76336312 28.47466729 127.45674658 75.37825466 1.00000000]
[601.00499252 365.76336312 28.47466729 75.37825466 23.29976273 1.00000000]
[]
[]
[]
[]
[]
[765.42639378 322.86815289 28.47466729 127.45674654 75.37825461 1.00000000]
[765.42639378 322.86815289 28.47466729 75.37825461 23.29976268 1.00000000]
[]
[]
[857.27678753 298.90568856 28.47466729 127.45674649 75.37825456 1.00000000]
[857.27678753 298.90568856 28.47466729 75.37825456 23.29976264 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1166.84020375 218.14498585 28.47466729 127.45674657 75.37825472 1.00000000]
[1166.84020375 218.14498585 28.47466729 75.37825472 23.29976259 1.00000000]
[1210.30992572 206.80435216 28.47466729 127.45674627 75.37825447 1.00000000]
[1210.30992572 206.80435216 28.47466729 75.37825447 23.29976254 1.00000000]
[]
[]
[]
[]
[]
[1390.04972891 159.91278763 42.10271758 140.81798956 106.27582620 1.00000000]
[1390.04972891 159.91278763 42.10271758 106.27582620 71.73366284 1.00000000]
[1390.04972891 159.91278763 42.10271758 71.73366284 37.19149948 1.00000000]
[1390.04972891 159.91278763 42.10271758 37.19149948 2.64933612 1.00000000]
[1390.04972891 159.91278763 42.10271758 2.64933612 328.10717277 1.00000000]
[1390.04972891 159.91278763 42.10271758 328.10717277 293.56500941 1.00000000]
[1390.04972891 159.91278763 42.10271758 293.56500941 259.02284605 1.00000000]
[1390.04972891 159.91278763 42.10271758 259.02284605 224.48068269 1.00000000]
[1390.04972891 159.91278763 42.10271758 224.48068269 189.93851933 1.00000000]
[]
[]
[]
[]
[]
[]
[1210.30992572 206.80435216 28.47466729 307.45674635 255.37825442 1.00000000]
[1210.30992572 206.80435216 28.47466729 255.37825442 203.29976247 1.00000000]
[1166.84020375 218.14498585 28.47466729 307.45674615 255.37825427 1.00000000]
[1166.84020375 218.14498585 28.47466729 255.37825427 203.29976251 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[857.27678753 298.90568856 28.47466729 307.45674644 255.37825452 1.00000000]
[857.27678753 298.90568856 28.47466729 255.37825452 203.29976268 1.00000000]
[]
[]
[765.42639378 322.86815289 28.47466729 307.45674649 255.37825456 1.00000000]
[765.42639378 322.86815289 28.47466729 255.37825456 203.29976273 1.00000000]
[]
[]
[]
[]
[]
[601.00499252 365.76336312 28.47466729 307.45674654 255.37825461 1.00000000]
[601.00499252 365.76336312 28.47466729 255.37825461 203.29976278 1.00000000]
[]
[533.34493458 383.41491199 28.47466729 307.45674658 255.37825466 1.00000000]
[533.34493458 383.41491199 28.47466729 255.37825466 203.29976283 1.00000000]
[]
[450.90249858 404.92297342 41.59950997 320.50085283 234.87740190 1.00000000]
[]
[]
[]
[267.49998886 299.03548507 100.56976336 19.97903223 5.69930874 1.00000000]
[267.49998886 299.03548507 100.56976336 5.69930874 351.41958524 1.00000000]
[267.49998886 299.03548507 100.56976336 351.41958524 337.13986175 1.00000000]
[267.49998886 299.03548507 100.56976336 337.13986175 322.86013825 1.00000000]
[267.49998886 299.03548507 100.56976336 322.86013825 308.58041476 1.00000000]
[267.49998886 299.03548507 100.56976336 308.58041476 294.30069126 1.00000000]
[267.49998886 299.03548507 100.56976336 294.30069126 280.02096777 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[427.50000218 300.01461919 30.52836670 235.02371410 186.68247606 1.00000000]
[427.50000218 300.01461919 30.52836670 186.68247606 138.34123803 1.00000000]
[427.50000218 300.01461919 30.52836670 138.34123803 90.00000000 1.00000000]
[427.50000218 300.01461919 30.52836670 90.00000000 41.65876197 1.00000000]
[427.50000218 300.01461919 30.52836670 41.65876197 353.31752394 1.00000000]
[427.50000218 300.01461919 30.52836670 353.31752394 304.97628590 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 144]
[8 143]
[9 142]
[10 141]
[11 140]
[18 30]
[19 29]
[20 28]
[37 133]
[38 132]
[39 131]
[40 130]
[45 129]
[46 128]
[48 126]
[49 125]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[58 116]
[59 115]
[60 114]
[62 112]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[71 103]
[72 102]
[73 101]
[75 99]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 91]
[145 165]
[146 164]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% Start Annotations
45 80 12 1.00 0.60 0.67 omark 94 129 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
