%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:51 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUUGCUUUUCUUUGUUCUUUCUUUCUUGUUCAUUCAUUCAUCAAGCACUUUAUUGAGUCCCUACUAUGUUCCAGGCACUGGGUAUCAUAGGUGCCUGGAACAUAGUAGGGACUCAGUAAAGGARCUGUGCUUCCUUUAUGUGAAUUAAAUGUCACUGAUGUACCUGGCAUU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[600.00000000 100.00000000]
[625.00000000 100.00000000]
[650.00000000 100.00000000]
[675.00000000 100.00000000]
[700.00000000 100.00000000]
[725.00000000 100.00000000]
[750.00000000 100.00000000]
[775.00000000 100.00000000]
[800.00000000 100.00000000]
[825.00000000 100.00000000]
[850.00000000 100.00000000]
[850.00000000 125.00000000]
[850.00000000 150.00000000]
[850.00000000 175.00000000]
[850.00000000 200.00000000]
[839.02532959 222.46234131]
[850.00000000 244.92468262]
[874.46429443 250.07220459]
[894.18566895 265.43673706]
[913.90698242 280.80126953]
[910.14855957 305.51715088]
[916.88983154 329.59109497]
[932.93725586 348.76086426]
[955.44970703 359.63238525]
[980.44128418 360.28094482]
[1003.48730469 350.59164429]
[1023.20861816 365.95617676]
[1042.92993164 381.32070923]
[1062.65124512 396.68524170]
[1082.37268066 412.04977417]
[1102.09399414 427.41430664]
[1103.08215332 452.39477539]
[1084.63598633 469.26910400]
[1066.18994141 486.14343262]
[1047.74389648 503.01773071]
[1029.29785156 519.89208984]
[1010.85180664 536.76635742]
[992.40570068 553.64068604]
[973.95965576 570.51501465]
[955.51361084 587.38934326]
[937.06750488 604.26367188]
[918.62145996 621.13800049]
[900.17541504 638.01232910]
[881.72930908 654.88659668]
[863.28326416 671.76092529]
[844.83721924 688.63525391]
[826.39111328 705.50958252]
[807.94506836 722.38391113]
[789.49902344 739.25823975]
[771.05291748 756.13256836]
[752.60687256 773.00689697]
[734.16082764 789.88116455]
[715.71472168 806.75549316]
[697.26867676 823.62982178]
[678.82263184 840.50415039]
[660.37652588 857.37847900]
[641.93048096 874.25280762]
[623.48443604 891.12713623]
[605.03833008 908.00140381]
[586.59228516 924.87573242]
[568.14624023 941.75006104]
[549.70013428 958.62438965]
[525.29577637 953.19976807]
[501.32092285 960.28540039]
[483.78625488 978.10491943]
[477.08779907 1002.19085693]
[482.90493774 1026.50463867]
[499.77926636 1044.95068359]
[523.48028564 1052.90454102]
[548.06597900 1048.37194824]
[567.37249756 1032.48937988]
[576.55969238 1009.23864746]
[573.32421875 984.44885254]
[591.77026367 967.57458496]
[610.21630859 950.70025635]
[628.66241455 933.82592773]
[647.10845947 916.95159912]
[665.55450439 900.07727051]
[684.00061035 883.20294189]
[702.44665527 866.32861328]
[720.89270020 849.45434570]
[739.33880615 832.58001709]
[757.78485107 815.70568848]
[776.23089600 798.83135986]
[794.67700195 781.95703125]
[813.12304688 765.08270264]
[831.56909180 748.20837402]
[850.01519775 731.33410645]
[868.46124268 714.45977783]
[886.90728760 697.58544922]
[905.35339355 680.71112061]
[923.79943848 663.83679199]
[942.24548340 646.96246338]
[960.69158936 630.08813477]
[979.13763428 613.21386719]
[997.58367920 596.33953857]
[1016.02978516 579.46520996]
[1034.47583008 562.59088135]
[1052.92187500 545.71655273]
[1071.36791992 528.84222412]
[1089.81408691 511.96792603]
[1108.26013184 495.09359741]
[1126.70617676 478.21926880]
[1151.50012207 481.42236328]
[1173.99902344 470.52288818]
[1186.85388184 449.08102417]
[1185.86572266 424.10055542]
[1171.35729980 403.74111938]
[1148.06774902 394.65289307]
[1123.60424805 399.80444336]
[1103.88293457 384.43991089]
[1084.16162109 369.07537842]
[1064.44030762 353.71084595]
[1044.71899414 338.34631348]
[1024.99768066 322.98178101]
[1028.75610352 298.26589966]
[1022.01477051 274.19195557]
[1005.96734619 255.02220154]
[983.45489502 244.15066528]
[958.46331787 243.50212097]
[935.41735840 253.19140625]
[915.69598389 237.82687378]
[895.97467041 222.46234131]
[885.00000000 200.00000000]
[885.00000000 175.00000000]
[885.00000000 150.00000000]
[885.00000000 125.00000000]
[885.00000000 100.00000000]
[960.00000000 100.00000000]
[1035.00000000 100.00000000]
[1110.00000000 100.00000000]
[1110.00000000 125.00000000]
[1110.00000000 150.00000000]
[1110.00000000 175.00000000]
[1110.00000000 200.00000000]
[1110.00000000 225.00000000]
[1110.00000000 250.00000000]
[1089.52514648 264.34512329]
[1078.57092285 286.81741333]
[1079.88354492 311.78292847]
[1093.13378906 332.98263550]
[1115.00000000 345.10168457]
[1140.00000000 345.10168457]
[1161.86621094 332.98263550]
[1175.11645508 311.78292847]
[1176.42907715 286.81741333]
[1165.47485352 264.34512329]
[1145.00000000 250.00000000]
[1145.00000000 225.00000000]
[1145.00000000 200.00000000]
[1145.00000000 175.00000000]
[1145.00000000 150.00000000]
[1145.00000000 125.00000000]
[1145.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[867.49999982 222.46233918 28.47466711 232.07849231 180.00000000 1.00000000]
[867.49999982 222.46233918 28.47466711 180.00000000 127.92150787 1.00000000]
[867.49999982 222.46233918 28.47466711 127.92150787 75.84301572 1.00000000]
[]
[]
[969.45230868 301.89152900 59.41448475 200.79149402 176.50149869 1.00000000]
[969.45230868 301.89152900 59.41448475 176.50149869 152.21150336 1.00000000]
[969.45230868 301.89152900 59.41448475 152.21150336 127.92150803 1.00000000]
[969.45230868 301.89152900 59.41448475 127.92150803 103.63151269 1.00000000]
[969.45230868 301.89152900 59.41448475 103.63151269 79.34151736 1.00000000]
[969.45230868 301.89152900 59.41448475 79.34151736 55.05152203 1.00000000]
[]
[]
[]
[]
[]
[1144.47390960 438.24767589 43.74267810 194.33914384 161.13032594 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[527.00902735 1003.09985107 49.92949042 297.03041227 268.03360308 1.00000000]
[527.00902735 1003.09985107 49.92949042 268.03360308 239.03679390 1.00000000]
[527.00902735 1003.09985107 49.92949042 239.03679390 210.03998471 1.00000000]
[527.00902735 1003.09985107 49.92949042 210.03998471 181.04317553 1.00000000]
[527.00902735 1003.09985107 49.92949042 181.04317553 152.04636635 1.00000000]
[527.00902735 1003.09985107 49.92949042 152.04636635 123.04955716 1.00000000]
[527.00902735 1003.09985107 49.92949042 123.04955716 94.05274798 1.00000000]
[527.00902735 1003.09985107 49.92949042 94.05274798 65.05593879 1.00000000]
[527.00902735 1003.09985107 49.92949042 65.05593879 36.05912961 1.00000000]
[527.00902735 1003.09985107 49.92949042 36.05912961 7.06232042 1.00000000]
[527.00902735 1003.09985107 49.92949042 7.06232042 338.06551124 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1144.47390960 438.24767589 43.74267810 113.96559757 80.75677966 1.00000000]
[1144.47390960 438.24767589 43.74267810 80.75677966 47.54796175 1.00000000]
[1144.47390960 438.24767589 43.74267810 47.54796175 14.33914384 1.00000000]
[1144.47390960 438.24767589 43.74267810 14.33914384 341.13032594 1.00000000]
[1144.47390960 438.24767589 43.74267810 341.13032594 307.92150803 1.00000000]
[1144.47390960 438.24767589 43.74267810 307.92150803 274.71269012 1.00000000]
[1144.47390960 438.24767589 43.74267810 274.71269012 241.50387221 1.00000000]
[]
[]
[]
[]
[]
[969.45230868 301.89152900 59.41448475 20.79149402 356.50149869 1.00000000]
[969.45230868 301.89152900 59.41448475 356.50149869 332.21150336 1.00000000]
[969.45230868 301.89152900 59.41448475 332.21150336 307.92150803 1.00000000]
[969.45230868 301.89152900 59.41448475 307.92150803 283.63151269 1.00000000]
[969.45230868 301.89152900 59.41448475 283.63151269 259.34151736 1.00000000]
[969.45230868 301.89152900 59.41448475 259.34151736 235.05152203 1.00000000]
[]
[]
[867.49999982 222.46233918 28.47466711 360.00000000 307.92150828 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1127.50000012 296.76220711 49.92949042 249.48245051 220.48564133 1.00000000]
[1127.50000012 296.76220711 49.92949042 220.48564133 191.48883214 1.00000000]
[1127.50000012 296.76220711 49.92949042 191.48883214 162.49202296 1.00000000]
[1127.50000012 296.76220711 49.92949042 162.49202296 133.49521378 1.00000000]
[1127.50000012 296.76220711 49.92949042 133.49521378 104.49840459 1.00000000]
[1127.50000012 296.76220711 49.92949042 104.49840459 75.50159541 1.00000000]
[1127.50000012 296.76220711 49.92949042 75.50159541 46.50478622 1.00000000]
[1127.50000012 296.76220711 49.92949042 46.50478622 17.50797704 1.00000000]
[1127.50000012 296.76220711 49.92949042 17.50797704 348.51116786 1.00000000]
[1127.50000012 296.76220711 49.92949042 348.51116786 319.51435867 1.00000000]
[1127.50000012 296.76220711 49.92949042 319.51435867 290.51754949 1.00000000]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[38 143]
[39 142]
[40 141]
[46 135]
[47 134]
[48 133]
[49 132]
[50 131]
[51 130]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[57 118]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[151 174]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
] def

init

% Start Annotations
94 124 12 1.00 0.60 0.67 omark 51 81 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
