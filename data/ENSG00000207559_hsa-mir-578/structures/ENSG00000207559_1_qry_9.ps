%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:49 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCAACAAUUAUUAUUACCUCAUUAUGGCAUUUUCCAUUGUUGGUCUACAUGGGAUAAAUAUAYAGASAAWAUACAAUCCUGGACUACAAGAAGCUCCURUAGCUCCUGUAGCUUCUUGUGCUCUGGGAUUGUAUUUUGUUAMUAUUUUUUUAUCCCAAAUGUCUAGUAKUAUGCUUGGGACAUAGUGGCCACU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[99.99999237 125.00000000]
[99.99999237 150.00000000]
[99.99999237 175.00000000]
[89.02532959 197.46234131]
[99.99999237 219.92468262]
[99.99999237 244.92468262]
[75.99926758 251.92218018]
[54.30115509 264.33959961]
[36.10955429 281.48794556]
[22.43379593 302.41574097]
[14.03266716 325.96188354]
[11.37229252 350.81994629]
[14.60027981 375.61065674]
[23.53752899 398.95858765]
[37.68816757 419.56829834]
[56.26706314 436.29623413]
[78.24339294 448.21435547]
[72.95285034 472.64813232]
[67.66231537 497.08193970]
[44.05142212 505.29931641]
[26.44515419 523.04809570]
[18.41837120 546.72448730]
[21.60087204 571.52111816]
[35.34646225 592.40313721]
[56.86417770 605.13055420]
[57.21465683 630.12811279]
[57.56513977 655.12567139]
[57.91561890 680.12316895]
[42.78984070 700.02825928]
[45.16297913 724.91534424]
[63.77809143 741.60296631]
[88.77563477 741.25250244]
[106.91558838 724.04956055]
[108.59006500 699.10565186]
[92.91217804 679.63250732]
[92.56169891 654.63494873]
[92.21121979 629.63745117]
[91.86074066 604.63989258]
[113.01317596 591.31414795]
[126.16792297 570.05499268]
[128.65397644 545.17889404]
[119.96657562 521.73687744]
[101.86962891 504.48867798]
[107.16016388 480.05487061]
[112.45069885 455.62109375]
[137.38867188 453.86114502]
[161.22314453 446.31674194]
[182.63169861 433.40652466]
[200.42649841 415.84677124]
[213.62022400 394.61175537]
[221.48085022 370.87969971]
[246.46450806 371.78350830]
[271.44815063 372.68731689]
[296.43182373 373.59112549]
[321.41546631 374.49493408]
[346.39913940 375.39877319]
[371.38278198 376.30258179]
[396.36645508 377.20639038]
[421.35009766 378.11019897]
[439.72592163 395.06100464]
[464.70956421 395.96481323]
[483.08538818 412.91561890]
[501.46118164 429.86639404]
[504.37438965 454.69610596]
[522.75018311 471.64688110]
[547.73382568 472.55072021]
[566.10968018 489.50149536]
[575.17901611 512.79840088]
[599.13073730 519.96185303]
[617.50653076 536.91265869]
[626.57592773 560.20959473]
[650.52764893 567.37304688]
[668.90344238 584.32385254]
[687.27923584 601.27465820]
[705.65509033 618.22546387]
[724.03088379 635.17626953]
[742.40667725 652.12707520]
[760.78247070 669.07788086]
[779.15832520 686.02868652]
[797.53411865 702.97943115]
[815.90991211 719.93023682]
[834.28570557 736.88104248]
[852.66156006 753.83184814]
[871.03735352 770.78265381]
[880.10668945 794.07958984]
[904.05841064 801.24304199]
[922.43426514 818.19384766]
[940.81005859 835.14465332]
[959.18585205 852.09545898]
[977.56164551 869.04626465]
[995.93750000 885.99700928]
[1014.31329346 902.94781494]
[1032.68908691 919.89862061]
[1051.06494141 936.84942627]
[1069.44067383 953.80023193]
[1087.81652832 970.75103760]
[1096.88586426 994.04797363]
[1120.83764648 1001.21142578]
[1117.49914551 1025.98754883]
[1126.58972168 1049.27612305]
[1145.83007812 1065.23876953]
[1170.39672852 1069.87353516]
[1194.13061523 1062.01818848]
[1211.08142090 1043.64245605]
[1216.99951172 1019.35302734]
[1210.40112305 995.23950195]
[1192.94067383 977.34729004]
[1168.99548340 970.16210938]
[1144.56872559 975.48529053]
[1135.49938965 952.18835449]
[1111.54760742 945.02490234]
[1093.17187500 928.07409668]
[1074.79602051 911.12329102]
[1056.42016602 894.17248535]
[1038.04443359 877.22167969]
[1019.66857910 860.27093506]
[1001.29278564 843.32012939]
[982.91699219 826.36932373]
[964.54119873 809.41851807]
[946.16534424 792.46771240]
[927.78955078 775.51690674]
[918.72021484 752.21997070]
[894.76849365 745.05651855]
[876.39263916 728.10571289]
[858.01684570 711.15490723]
[839.64105225 694.20410156]
[821.26525879 677.25329590]
[802.88940430 660.30255127]
[784.51361084 643.35174561]
[766.13781738 626.40093994]
[747.76202393 609.45013428]
[729.38616943 592.49932861]
[711.01037598 575.54852295]
[692.63458252 558.59771729]
[674.25878906 541.64691162]
[665.18939209 518.34997559]
[641.23767090 511.18655396]
[622.86187744 494.23574829]
[613.79248047 470.93881226]
[589.84075928 463.77536011]
[571.46496582 446.82458496]
[568.55175781 421.99487305]
[550.17596436 405.04409790]
[525.19232178 404.14028931]
[506.81649780 387.18948364]
[488.44070435 370.23867798]
[485.52749634 345.40899658]
[467.15170288 328.45819092]
[442.16802979 327.55438232]
[422.61544800 343.13308716]
[397.63177490 342.22924805]
[372.64813232 341.32543945]
[347.66445923 340.42163086]
[322.68081665 339.51782227]
[297.69714355 338.61401367]
[272.71350098 337.71020508]
[247.72984314 336.80639648]
[222.74618530 335.90258789]
[216.62094116 311.66458130]
[204.99609375 289.53170776]
[222.99046326 272.17654419]
[240.98484802 254.82135010]
[258.97921753 237.46617126]
[276.97360229 220.11099243]
[294.96798706 202.75581360]
[318.75451660 195.06158447]
[343.50421143 198.59033203]
[368.25390625 202.11909485]
[393.00363159 205.64784241]
[417.00555420 212.64115906]
[433.34912109 193.72323608]
[422.94387817 170.99151611]
[397.94387817 170.99826050]
[373.19418335 167.46949768]
[348.44445801 163.94075012]
[323.69476318 160.41198730]
[303.00637817 146.37663269]
[279.21984863 154.07086182]
[270.67071533 177.56367493]
[252.67634583 194.91885376]
[234.68196106 212.27404785]
[216.68759155 229.62922668]
[198.69320679 246.98440552]
[180.69883728 264.33959961]
[159.00071716 251.92218018]
[135.00000000 244.92468262]
[135.00000000 219.92468262]
[145.97465515 197.46234131]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[117.49999507 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[117.49999507 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[117.49999536 349.60663177 106.13463812 260.50945137 246.98204130 1.00000000]
[117.49999536 349.60663177 106.13463812 246.98204130 233.45463124 1.00000000]
[117.49999536 349.60663177 106.13463812 233.45463124 219.92722118 1.00000000]
[117.49999536 349.60663177 106.13463812 219.92722118 206.39981112 1.00000000]
[117.49999536 349.60663177 106.13463812 206.39981112 192.87240105 1.00000000]
[117.49999536 349.60663177 106.13463812 192.87240105 179.34499099 1.00000000]
[117.49999536 349.60663177 106.13463812 179.34499099 165.81758093 1.00000000]
[117.49999536 349.60663177 106.13463812 165.81758093 152.29017086 1.00000000]
[117.49999536 349.60663177 106.13463812 152.29017086 138.76276080 1.00000000]
[117.49999536 349.60663177 106.13463812 138.76276080 125.23535074 1.00000000]
[117.49999536 349.60663177 106.13463812 125.23535074 111.70794068 1.00000000]
[]
[]
[73.62436513 552.24164666 55.48099457 263.83102043 237.78970103 1.00000000]
[73.62436513 552.24164666 55.48099457 237.78970103 211.74838164 1.00000000]
[73.62436513 552.24164666 55.48099457 211.74838164 185.70706224 1.00000000]
[73.62436513 552.24164666 55.48099457 185.70706224 159.66574285 1.00000000]
[73.62436513 552.24164666 55.48099457 159.66574285 133.62442345 1.00000000]
[73.62436513 552.24164666 55.48099457 133.62442345 107.58310405 1.00000000]
[]
[]
[]
[75.82830079 709.43451409 34.35139098 238.57014370 195.89202619 1.00000000]
[75.82830079 709.43451409 34.35139098 195.89202619 153.21390867 1.00000000]
[75.82830079 709.43451409 34.35139098 153.21390867 110.53579115 1.00000000]
[75.82830079 709.43451409 34.35139098 110.53579115 67.85767363 1.00000000]
[75.82830079 709.43451409 34.35139098 67.85767363 25.17955612 1.00000000]
[75.82830079 709.43451409 34.35139098 25.17955612 342.50143860 1.00000000]
[75.82830079 709.43451409 34.35139098 342.50143860 299.82332108 1.00000000]
[]
[]
[]
[73.62436513 552.24164666 55.48099457 70.81036073 44.76904134 1.00000000]
[73.62436513 552.24164666 55.48099457 44.76904134 18.72772194 1.00000000]
[73.62436513 552.24164666 55.48099457 18.72772194 352.68640254 1.00000000]
[73.62436513 552.24164666 55.48099457 352.68640254 326.64508315 1.00000000]
[73.62436513 552.24164666 55.48099457 326.64508315 300.60376375 1.00000000]
[]
[]
[117.49999536 349.60663177 106.13463812 92.72684351 79.19943344 1.00000000]
[117.49999536 349.60663177 106.13463812 79.19943344 65.67202338 1.00000000]
[117.49999536 349.60663177 106.13463812 65.67202338 52.14461332 1.00000000]
[117.49999536 349.60663177 106.13463812 52.14461332 38.61720325 1.00000000]
[117.49999536 349.60663177 106.13463812 38.61720325 25.08979319 1.00000000]
[117.49999536 349.60663177 106.13463812 25.08979319 11.56238313 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[453.43880677 361.75958892 36.01426010 152.99915832 112.38094247 1.00000000]
[453.43880677 361.75958892 36.01426010 112.38094247 71.76272662 1.00000000]
[]
[]
[536.46307628 438.34549002 36.01426010 193.61737418 152.99915832 1.00000000]
[536.46307628 438.34549002 36.01426010 152.99915832 112.38094247 1.00000000]
[536.46307628 438.34549002 36.01426010 112.38094247 71.76272662 1.00000000]
[]
[594.48575690 491.86862615 28.47466729 184.76854230 132.69005037 1.00000000]
[594.48575690 491.86862615 28.47466729 132.69005037 80.61155845 1.00000000]
[]
[645.88265737 539.27979825 28.47466729 184.76854225 132.69005033 1.00000000]
[645.88265737 539.27979825 28.47466729 132.69005033 80.61155840 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[899.41345410 773.14978077 28.47466729 184.76854221 132.69005028 1.00000000]
[899.41345410 773.14978077 28.47466729 132.69005028 80.61155835 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1116.19263358 973.11816128 28.47466729 184.76854228 132.69005043 1.00000000]
[1116.19263358 973.11816128 28.47466729 132.69005043 80.61155831 1.00000000]
[1167.07491444 1020.05462127 49.92949042 202.17250068 173.17569154 1.00000000]
[1167.07491444 1020.05462127 49.92949042 173.17569154 144.17888235 1.00000000]
[1167.07491444 1020.05462127 49.92949042 144.17888235 115.18207317 1.00000000]
[1167.07491444 1020.05462127 49.92949042 115.18207317 86.18526398 1.00000000]
[1167.07491444 1020.05462127 49.92949042 86.18526398 57.18845480 1.00000000]
[1167.07491444 1020.05462127 49.92949042 57.18845480 28.19164562 1.00000000]
[1167.07491444 1020.05462127 49.92949042 28.19164562 359.19483643 1.00000000]
[1167.07491444 1020.05462127 49.92949042 359.19483643 330.19802725 1.00000000]
[1167.07491444 1020.05462127 49.92949042 330.19802725 301.20121806 1.00000000]
[1167.07491444 1020.05462127 49.92949042 301.20121806 272.20440888 1.00000000]
[1167.07491444 1020.05462127 49.92949042 272.20440888 243.20759965 1.00000000]
[1116.19263358 973.11816128 28.47466729 4.76854186 312.69004998 1.00000000]
[1116.19263358 973.11816128 28.47466729 312.69004998 260.61155823 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[899.41345410 773.14978077 28.47466729 4.76854216 312.69005023 1.00000000]
[899.41345410 773.14978077 28.47466729 312.69005023 260.61155840 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[645.88265737 539.27979825 28.47466729 4.76854221 312.69005028 1.00000000]
[645.88265737 539.27979825 28.47466729 312.69005028 260.61155845 1.00000000]
[]
[594.48575690 491.86862615 28.47466729 4.76854225 312.69005033 1.00000000]
[594.48575690 491.86862615 28.47466729 312.69005033 260.61155849 1.00000000]
[]
[536.46307628 438.34549002 36.01426010 13.61737418 332.99915832 1.00000000]
[536.46307628 438.34549002 36.01426010 332.99915832 292.38094247 1.00000000]
[536.46307628 438.34549002 36.01426010 292.38094247 251.76272662 1.00000000]
[]
[]
[453.43880677 361.75958892 36.01426010 13.61737418 332.99915832 1.00000000]
[453.43880677 361.75958892 36.01426010 332.99915832 292.38094247 1.00000000]
[453.43880677 361.75958892 36.01426010 292.38094247 251.76272662 1.00000000]
[453.43880677 361.75958892 36.01426010 251.76272662 211.14451076 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[117.49999536 349.60663177 106.13463812 352.58128596 339.05387590 1.00000000]
[117.49999536 349.60663177 106.13463812 339.05387590 325.52646583 1.00000000]
[]
[]
[]
[]
[]
[298.98718449 174.56622354 28.47466729 98.11440915 46.03591722 1.00000000]
[]
[]
[]
[410.44912195 190.45820638 23.13159456 138.95420618 73.53430765 1.00000000]
[410.44912195 190.45820638 23.13159456 73.53430765 8.11440913 1.00000000]
[410.44912195 190.45820638 23.13159456 8.11440913 302.69451060 1.00000000]
[410.44912195 190.45820638 23.13159456 302.69451060 237.27461207 1.00000000]
[]
[]
[]
[298.98718449 174.56622354 28.47466729 330.19290103 278.11440910 1.00000000]
[298.98718449 174.56622354 28.47466729 278.11440910 226.03591718 1.00000000]
[298.98718449 174.56622354 28.47466729 226.03591718 173.95742535 1.00000000]
[]
[]
[]
[]
[]
[117.49999536 349.60663177 106.13463812 306.54536866 293.01795860 1.00000000]
[117.49999536 349.60663177 106.13463812 293.01795860 279.49054854 1.00000000]
[]
[117.49999507 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[117.49999507 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[4 190]
[6 188]
[7 187]
[18 46]
[19 45]
[20 44]
[26 39]
[27 38]
[28 37]
[29 36]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[60 151]
[62 147]
[63 146]
[64 145]
[67 142]
[68 141]
[70 139]
[71 138]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[99 110]
[161 185]
[162 184]
[163 183]
[164 182]
[165 181]
[166 180]
[167 177]
[168 176]
[169 175]
[170 174]
] def

init

% Start Annotations
52 104 12 1.00 0.60 0.67 omark 86 159 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
