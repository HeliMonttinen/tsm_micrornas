%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:49 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCAACAAUUAUUAUUACCUCUAUUAUGGCAUUUUCCAUUGUUGGUCUACGUGUUCCYYCAGUAGACUAUGAGAGCUUCUUGUGCUCAGGGAUUGUAUUUUGUUAAUUUCUUUAUCCCAAAUGUCUAGUACUAUGCUUAGGACAUAGUGGCCACU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[89.02532959 197.46234131]
[100.00000000 219.92468262]
[100.00000000 244.92468262]
[75.36062622 249.16230774]
[51.56797028 256.84124756]
[29.10011864 267.80722046]
[8.40852451 281.83981323]
[-10.09104824 298.65713501]
[-26.02687836 317.92126465]
[-39.07876205 339.24505615]
[-48.98443985 362.20010376]
[-55.54487610 386.32513428]
[-58.62824631 411.13540649]
[-58.17259598 436.13238525]
[-54.18708038 460.81378174]
[-46.75178528 484.68371582]
[-36.01610565 507.26248169]
[-22.19576073 528.09643555]
[-5.56844854 546.76702881]
[13.53173065 562.89892578]
[34.72098923 576.16815186]
[57.57356262 586.30798340]
[81.63026428 593.11474609]
[78.99969482 617.97595215]
[76.36912537 642.83715820]
[73.73855591 667.69836426]
[56.34877777 685.65930176]
[55.73961639 710.65191650]
[72.23371887 729.43872070]
[97.09493256 732.06927490]
[117.15544891 717.15032959]
[121.79015350 692.58367920]
[108.54425812 671.38116455]
[111.17482758 646.51995850]
[113.80539703 621.65875244]
[116.43596649 596.79754639]
[141.38333130 595.17620850]
[165.85084534 590.04388428]
[189.34692383 581.50366211]
[211.39945984 569.72723389]
[226.74333191 589.46466064]
[242.08718872 609.20208740]
[257.43106079 628.93951416]
[272.77490234 648.67694092]
[288.11877441 668.41430664]
[303.46264648 688.15173340]
[318.80648804 707.88916016]
[309.38531494 731.04608154]
[334.15036011 727.62658691]
[349.49423218 747.36401367]
[349.41879272 772.36389160]
[366.31024170 790.79431152]
[391.22195435 792.89349365]
[410.95935059 777.54962158]
[415.06851196 752.88964844]
[401.37298584 731.97479248]
[377.12661743 725.88262939]
[361.78274536 706.14520264]
[346.43890381 686.40777588]
[331.09503174 666.67034912]
[315.75115967 646.93292236]
[300.40731812 627.19549561]
[285.06344604 607.45806885]
[269.71957397 587.72064209]
[254.37571716 567.98321533]
[239.03186035 548.24578857]
[255.88301086 529.77856445]
[269.95379639 509.11428833]
[280.96157837 486.66815186]
[288.68511963 462.89111328]
[313.42721558 466.47283936]
[338.16931152 470.05456543]
[362.91140747 473.63629150]
[378.34103394 493.30676270]
[402.62945557 499.22894287]
[425.38146973 488.86816406]
[436.85943604 466.65878296]
[432.15084839 442.10620117]
[413.27096558 425.71868896]
[388.30020142 424.50997925]
[367.92581177 438.99737549]
[343.18371582 435.41564941]
[318.44165039 431.83392334]
[293.69955444 428.25219727]
[292.90478516 401.97033691]
[288.21160889 376.09866333]
[311.66625977 367.44537354]
[335.12091064 358.79208374]
[358.57556152 350.13876343]
[382.03021240 341.48547363]
[397.95529175 360.75701904]
[418.59222412 374.86788940]
[442.32858276 382.71554565]
[467.30969238 383.68682861]
[491.58370972 377.70587158]
[513.25402832 365.23995972]
[530.62738037 347.26312256]
[542.34631348 325.17999268]
[547.49523926 300.71594238]
[545.67181396 275.78253174]
[537.01855469 252.32789612]
[522.21148682 232.18463135]
[502.40762329 216.92662048]
[479.15429688 207.74604797]
[454.26840210 205.36022949]
[429.69436646 209.95556641]
[407.35229492 221.17303467]
[388.98782349 238.13612366]
[376.03588867 259.51947021]
[369.50848389 283.65228271]
[369.91558838 308.64898682]
[346.46093750 317.30227661]
[323.00628662 325.95556641]
[299.55163574 334.60885620]
[276.09698486 343.26214600]
[262.94085693 320.65548706]
[246.58605957 300.24310303]
[227.39225769 282.47393799]
[240.95187378 261.47067261]
[254.51147461 240.46742249]
[268.07107544 219.46415710]
[281.63067627 198.46089172]
[295.19027710 177.45762634]
[316.59365845 164.53880310]
[341.49563599 162.32713318]
[366.39761353 160.11546326]
[391.29959106 157.90379333]
[416.26406860 159.23590088]
[427.85983276 137.08779907]
[412.54220581 117.33000946]
[388.20324707 123.04102325]
[363.30126953 125.25269318]
[338.39929199 127.46437073]
[313.49731445 129.67604065]
[290.15216064 120.73158264]
[268.74877930 133.65039062]
[265.78570557 158.47418213]
[252.22612000 179.47743225]
[238.66650391 200.48069763]
[225.10690308 221.48396301]
[211.54730225 242.48722839]
[197.98768616 263.49050903]
[167.36550903 251.25030518]
[135.00000000 244.92468262]
[135.00000000 219.92468262]
[145.97467041 197.46234131]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[117.49999973 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[117.49999973 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[117.50000007 420.42753712 176.37319382 264.30566139 256.17709515 1.00000000]
[117.50000007 420.42753712 176.37319382 256.17709515 248.04852892 1.00000000]
[117.50000007 420.42753712 176.37319382 248.04852892 239.91996268 1.00000000]
[117.50000007 420.42753712 176.37319382 239.91996268 231.79139645 1.00000000]
[117.50000007 420.42753712 176.37319382 231.79139645 223.66283021 1.00000000]
[117.50000007 420.42753712 176.37319382 223.66283021 215.53426397 1.00000000]
[117.50000007 420.42753712 176.37319382 215.53426397 207.40569774 1.00000000]
[117.50000007 420.42753712 176.37319382 207.40569774 199.27713150 1.00000000]
[117.50000007 420.42753712 176.37319382 199.27713150 191.14856527 1.00000000]
[117.50000007 420.42753712 176.37319382 191.14856527 183.01999903 1.00000000]
[117.50000007 420.42753712 176.37319382 183.01999903 174.89143280 1.00000000]
[117.50000007 420.42753712 176.37319382 174.89143280 166.76286656 1.00000000]
[117.50000007 420.42753712 176.37319382 166.76286656 158.63430032 1.00000000]
[117.50000007 420.42753712 176.37319382 158.63430032 150.50573409 1.00000000]
[117.50000007 420.42753712 176.37319382 150.50573409 142.37716785 1.00000000]
[117.50000007 420.42753712 176.37319382 142.37716785 134.24860162 1.00000000]
[117.50000007 420.42753712 176.37319382 134.24860162 126.12003538 1.00000000]
[117.50000007 420.42753712 176.37319382 126.12003538 117.99146915 1.00000000]
[117.50000007 420.42753712 176.37319382 117.99146915 109.86290291 1.00000000]
[117.50000007 420.42753712 176.37319382 109.86290291 101.73433668 1.00000000]
[]
[]
[]
[88.03107192 698.93524846 34.35139098 245.41340942 202.73529190 1.00000000]
[88.03107192 698.93524846 34.35139098 202.73529190 160.05717439 1.00000000]
[88.03107192 698.93524846 34.35139098 160.05717439 117.37905687 1.00000000]
[88.03107192 698.93524846 34.35139098 117.37905687 74.70093935 1.00000000]
[88.03107192 698.93524846 34.35139098 74.70093935 32.02282183 1.00000000]
[88.03107192 698.93524846 34.35139098 32.02282183 349.34470432 1.00000000]
[88.03107192 698.93524846 34.35139098 349.34470432 306.66658680 1.00000000]
[]
[]
[]
[117.50000007 420.42753712 176.37319382 90.34565955 82.21746101 1.00000000]
[117.50000007 420.42753712 176.37319382 82.21746101 74.08926247 1.00000000]
[117.50000007 420.42753712 176.37319382 74.08926247 65.96106393 1.00000000]
[117.50000007 420.42753712 176.37319382 65.96106393 57.83286539 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[381.45273503 759.96051756 34.35139098 201.51193813 158.83382062 1.00000000]
[381.45273503 759.96051756 34.35139098 158.83382062 116.15570310 1.00000000]
[381.45273503 759.96051756 34.35139098 116.15570310 73.47758558 1.00000000]
[381.45273503 759.96051756 34.35139098 73.47758558 30.79946807 1.00000000]
[381.45273503 759.96051756 34.35139098 30.79946807 348.12135055 1.00000000]
[381.45273503 759.96051756 34.35139098 348.12135055 305.44323303 1.00000000]
[381.45273503 759.96051756 34.35139098 305.44323303 262.76511551 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[117.50000007 420.42753712 176.37319382 46.44418826 38.31598972 1.00000000]
[117.50000007 420.42753712 176.37319382 38.31598972 30.18779118 1.00000000]
[117.50000007 420.42753712 176.37319382 30.18779118 22.05959264 1.00000000]
[117.50000007 420.42753712 176.37319382 22.05959264 13.93139410 1.00000000]
[]
[]
[]
[399.03963556 461.18390001 38.21401848 160.98233700 122.79601664 1.00000000]
[399.03963556 461.18390001 38.21401848 122.79601664 84.60969627 1.00000000]
[399.03963556 461.18390001 38.21401848 84.60969627 46.42337590 1.00000000]
[399.03963556 461.18390001 38.21401848 46.42337590 8.23705554 1.00000000]
[399.03963556 461.18390001 38.21401848 8.23705554 330.05073517 1.00000000]
[399.03963556 461.18390001 38.21401848 330.05073517 291.86441480 1.00000000]
[399.03963556 461.18390001 38.21401848 291.86441480 253.67809444 1.00000000]
[399.03963556 461.18390001 38.21401848 253.67809444 215.49177407 1.00000000]
[]
[]
[]
[117.50000007 420.42753712 176.37319382 2.54271697 353.99307686 1.00000000]
[117.50000007 420.42753712 176.37319382 353.99307686 345.44343674 1.00000000]
[]
[]
[]
[]
[458.25985052 294.70849777 89.43738462 148.46537157 132.39715506 1.00000000]
[458.25985052 294.70849777 89.43738462 132.39715506 116.32893855 1.00000000]
[458.25985052 294.70849777 89.43738462 116.32893855 100.26072203 1.00000000]
[458.25985052 294.70849777 89.43738462 100.26072203 84.19250552 1.00000000]
[458.25985052 294.70849777 89.43738462 84.19250552 68.12428900 1.00000000]
[458.25985052 294.70849777 89.43738462 68.12428900 52.05607249 1.00000000]
[458.25985052 294.70849777 89.43738462 52.05607249 35.98785598 1.00000000]
[458.25985052 294.70849777 89.43738462 35.98785598 19.91963946 1.00000000]
[458.25985052 294.70849777 89.43738462 19.91963946 3.85142295 1.00000000]
[458.25985052 294.70849777 89.43738462 3.85142295 347.78320643 1.00000000]
[458.25985052 294.70849777 89.43738462 347.78320643 331.71498992 1.00000000]
[458.25985052 294.70849777 89.43738462 331.71498992 315.64677341 1.00000000]
[458.25985052 294.70849777 89.43738462 315.64677341 299.57855689 1.00000000]
[458.25985052 294.70849777 89.43738462 299.57855689 283.51034038 1.00000000]
[458.25985052 294.70849777 89.43738462 283.51034038 267.44212386 1.00000000]
[458.25985052 294.70849777 89.43738462 267.44212386 251.37390735 1.00000000]
[458.25985052 294.70849777 89.43738462 251.37390735 235.30569084 1.00000000]
[458.25985052 294.70849777 89.43738462 235.30569084 219.23747432 1.00000000]
[458.25985052 294.70849777 89.43738462 219.23747432 203.16925781 1.00000000]
[458.25985052 294.70849777 89.43738462 203.16925781 187.10104129 1.00000000]
[458.25985052 294.70849777 89.43738462 187.10104129 171.03282478 1.00000000]
[]
[]
[]
[]
[117.50000007 420.42753712 176.37319382 334.05475961 325.54998255 1.00000000]
[117.50000007 420.42753712 176.37319382 325.54998255 317.04520549 1.00000000]
[117.50000007 420.42753712 176.37319382 317.04520549 308.54042843 1.00000000]
[]
[]
[]
[]
[]
[292.67122175 149.09460098 28.47466729 84.92458177 32.84608984 1.00000000]
[]
[]
[]
[404.81893084 139.13418098 23.13159456 125.76437880 60.34448027 1.00000000]
[404.81893084 139.13418098 23.13159456 60.34448027 354.92458174 1.00000000]
[404.81893084 139.13418098 23.13159456 354.92458174 289.50468322 1.00000000]
[404.81893084 139.13418098 23.13159456 289.50468322 224.08478469 1.00000000]
[]
[]
[]
[292.67122175 149.09460098 28.47466729 317.00307365 264.92458172 1.00000000]
[292.67122175 149.09460098 28.47466729 264.92458172 212.84608979 1.00000000]
[292.67122175 149.09460098 28.47466729 212.84608979 160.76759796 1.00000000]
[]
[]
[]
[]
[]
[117.50000007 420.42753712 176.37319382 297.15175130 286.42304491 1.00000000]
[117.50000007 420.42753712 176.37319382 286.42304491 275.69433852 1.00000000]
[]
[117.49999973 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[117.49999973 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[6 149]
[7 148]
[27 40]
[28 39]
[29 38]
[30 37]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[50 64]
[51 63]
[53 62]
[54 61]
[74 88]
[75 87]
[76 86]
[77 85]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[128 138]
[129 137]
[130 136]
[131 135]
] def

init

% Start Annotations
53 74 12 1.00 0.60 0.67 omark 68 120 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
