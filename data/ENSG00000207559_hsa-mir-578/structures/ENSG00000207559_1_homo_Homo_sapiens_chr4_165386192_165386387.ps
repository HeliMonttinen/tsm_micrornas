%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:49 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCAACAAUUAUUAUUACCUCAUUAUGGUAUUUCCCACUGUUGGUCUACAGAUAAAUCUAUAGACAAAAUACAAUCCCGGACAACAAGAAGCUCCUAUAGCUCCUGUAGCUUCUUGUGCUCUAGGAUUGUAUUUUGUUUAUAUAUAUUUUUUAAUCCUGAAUGUCUAGUAUUAUGCUUGGGACAUAGUGGCCACU\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[89.02532959 197.46234131]
[100.00000000 219.92468262]
[100.00000000 244.92468262]
[75.03182220 248.33576965]
[50.61150742 254.55618286]
[27.05408096 263.50564575]
[4.66344500 275.06872559]
[-16.27155113 289.09625244]
[-35.48083878 305.40725708]
[-52.71660614 323.79129028]
[-67.75650787 344.01126099]
[-80.40651703 365.80627441]
[-90.50345612 388.89517212]
[-114.55406952 382.07110596]
[-138.60469055 375.24703979]
[-162.65530396 368.42297363]
[-175.34649658 346.88385010]
[-198.63775635 337.79995728]
[-222.56063843 345.05914307]
[-236.87637329 365.55447388]
[-235.45796204 390.51422119]
[-218.91244507 409.25576782]
[-194.32118225 413.75796509]
[-172.20899963 402.09384155]
[-148.15837097 408.91790771]
[-124.10775757 415.74197388]
[-100.05714417 422.56604004]
[-103.57407379 447.31741333]
[-104.28416443 472.30734253]
[-102.17841339 497.21850586]
[-97.28353882 521.73461914]
[-89.66168976 545.54443359]
[-79.40964508 568.34564209]
[-66.65756226 589.84875488]
[-51.56735229 609.78082275]
[-69.28128052 627.42211914]
[-86.99520874 645.06347656]
[-104.70913696 662.70483398]
[-129.53077698 665.68572998]
[-145.75831604 684.70324707]
[-144.79676819 709.68475342]
[-127.15542603 727.39868164]
[-102.17808533 728.46282959]
[-83.09406281 712.31353760]
[-80.01126099 687.50433350]
[-62.29733276 669.86297607]
[-44.58340836 652.22161865]
[-26.86948013 634.58032227]
[-6.99959087 649.75219727]
[14.45099068 662.59246826]
[37.20991898 672.93811035]
[60.98823929 680.65765381]
[85.48405457 685.65313721]
[110.38636017 687.86114502]
[135.37898254 687.25372314]
[160.14459229 683.83843994]
[166.86984253 707.91687012]
[173.59509277 731.99530029]
[180.32032776 756.07373047]
[187.04557800 780.15216064]
[193.77082825 804.23059082]
[200.49606323 828.30902100]
[207.22131348 852.38745117]
[213.94656372 876.46594238]
[220.67179871 900.54437256]
[227.39704895 924.62280273]
[234.12229919 948.70123291]
[240.84753418 972.77966309]
[247.57278442 996.85809326]
[254.29803467 1020.93652344]
[261.02328491 1045.01501465]
[267.74853516 1069.09338379]
[274.47375488 1093.17187500]
[281.19900513 1117.25024414]
[276.67147827 1141.83691406]
[293.28417969 1160.51892090]
[300.00942993 1184.59729004]
[306.73468018 1208.67578125]
[296.16415405 1231.33105469]
[302.88937378 1255.40954590]
[323.66970825 1269.30834961]
[330.39495850 1293.38684082]
[337.12020874 1317.46520996]
[343.84545898 1341.54370117]
[350.57070923 1365.62207031]
[357.29595947 1389.70056152]
[364.02117920 1413.77905273]
[370.74642944 1437.85742188]
[377.47167969 1461.93591309]
[384.19692993 1486.01428223]
[376.20294189 1509.70178223]
[387.56176758 1531.97229004]
[411.43011475 1539.40881348]
[433.42828369 1527.53112793]
[458.29641724 1530.09533691]
[483.16455078 1532.65966797]
[508.03271484 1535.22387695]
[532.28826904 1541.27917480]
[547.88433838 1521.74047852]
[536.60351562 1499.43029785]
[511.62268066 1500.40856934]
[486.75454712 1497.84423828]
[461.88641357 1495.28002930]
[437.01824951 1492.71569824]
[417.90673828 1476.59899902]
[411.18148804 1452.52050781]
[404.45623779 1428.44213867]
[397.73101807 1404.36364746]
[391.00576782 1380.28527832]
[384.28051758 1356.20678711]
[377.55526733 1332.12829590]
[370.83001709 1308.04992676]
[364.10476685 1283.97143555]
[357.37951660 1259.89306641]
[367.95007324 1237.23767090]
[361.22482300 1213.15930176]
[340.44448853 1199.26049805]
[333.71923828 1175.18200684]
[326.99401855 1151.10351562]
[331.52151489 1126.51696777]
[314.90881348 1107.83496094]
[308.18359375 1083.75646973]
[301.45834351 1059.67810059]
[294.73309326 1035.59960938]
[288.00784302 1011.52117920]
[281.28259277 987.44274902]
[274.55734253 963.36431885]
[267.83209229 939.28588867]
[261.10687256 915.20745850]
[254.38162231 891.12902832]
[247.65637207 867.05059814]
[240.93112183 842.97210693]
[234.20587158 818.89367676]
[227.48063660 794.81524658]
[220.75538635 770.73681641]
[214.03013611 746.65838623]
[207.30490112 722.57995605]
[200.57965088 698.50152588]
[193.85440063 674.42309570]
[216.87710571 664.47491455]
[238.62998962 651.99200439]
[258.83508301 637.13385010]
[277.23422241 620.09027100]
[293.59231567 601.07910156]
[307.70031738 580.34326172]
[319.37796021 558.14770508]
[328.47604370 534.77600098]
[334.87832642 510.52685547]
[338.50296021 485.71008301]
[339.30364990 460.64276123]
[337.27020264 435.64526367]
[332.42852783 411.03692627]
[324.84054565 387.13226318]
[314.60321045 364.23666382]
[301.84729004 342.64273071]
[286.73583984 322.62637329]
[269.46191406 304.44335938]
[250.24623108 288.32601929]
[263.57723999 267.17691040]
[276.90823364 246.02781677]
[290.23922729 224.87872314]
[303.57025146 203.72962952]
[316.90124512 182.58052063]
[338.16323853 169.43032837]
[363.03976440 166.94868469]
[387.91629028 164.46705627]
[412.79281616 161.98542786]
[437.77026367 163.04669189]
[449.12512207 140.77410889]
[433.59408569 121.18363190]
[409.31851196 127.15828705]
[384.44198608 129.63992310]
[359.56546021 132.12155151]
[334.68893433 134.60319519]
[311.24813843 125.91246033]
[289.98614502 139.06265259]
[287.29251099 163.91712952]
[273.96148682 185.06622314]
[260.63049316 206.21531677]
[247.29949951 227.36442566]
[233.96849060 248.51351929]
[220.63749695 269.66262817]
[179.07388306 252.94863892]
[135.00000000 244.92468262]
[135.00000000 219.92468262]
[145.97467041 197.46234131]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[117.49999874 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[117.49999874 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[117.49999912 466.10434216 221.87089435 265.47611362 258.96495346 1.00000000]
[117.49999912 466.10434216 221.87089435 258.96495346 252.45379331 1.00000000]
[117.49999912 466.10434216 221.87089435 252.45379331 245.94263316 1.00000000]
[117.49999912 466.10434216 221.87089435 245.94263316 239.43147301 1.00000000]
[117.49999912 466.10434216 221.87089435 239.43147301 232.92031285 1.00000000]
[117.49999912 466.10434216 221.87089435 232.92031285 226.40915270 1.00000000]
[117.49999912 466.10434216 221.87089435 226.40915270 219.89799255 1.00000000]
[117.49999912 466.10434216 221.87089435 219.89799255 213.38683239 1.00000000]
[117.49999912 466.10434216 221.87089435 213.38683239 206.87567224 1.00000000]
[117.49999912 466.10434216 221.87089435 206.87567224 200.36451209 1.00000000]
[]
[]
[]
[-200.11354952 375.98548058 38.21401848 348.58590722 310.39958685 1.00000000]
[-200.11354952 375.98548058 38.21401848 310.39958685 272.21326648 1.00000000]
[-200.11354952 375.98548058 38.21401848 272.21326648 234.02694612 1.00000000]
[-200.11354952 375.98548058 38.21401848 234.02694612 195.84062575 1.00000000]
[-200.11354952 375.98548058 38.21401848 195.84062575 157.65430539 1.00000000]
[-200.11354952 375.98548058 38.21401848 157.65430539 119.46798502 1.00000000]
[-200.11354952 375.98548058 38.21401848 119.46798502 81.28166465 1.00000000]
[-200.11354952 375.98548058 38.21401848 81.28166465 43.09534429 1.00000000]
[]
[]
[]
[117.49999912 466.10434216 221.87089435 191.31673942 184.85733727 1.00000000]
[117.49999912 466.10434216 221.87089435 184.85733727 178.39793513 1.00000000]
[117.49999912 466.10434216 221.87089435 178.39793513 171.93853298 1.00000000]
[117.49999912 466.10434216 221.87089435 171.93853298 165.47913084 1.00000000]
[117.49999912 466.10434216 221.87089435 165.47913084 159.01972870 1.00000000]
[117.49999912 466.10434216 221.87089435 159.01972870 152.56032655 1.00000000]
[117.49999912 466.10434216 221.87089435 152.56032655 146.10092441 1.00000000]
[117.49999912 466.10434216 221.87089435 146.10092441 139.64152227 1.00000000]
[]
[]
[]
[-113.30483832 695.96337349 34.35139098 284.49104724 241.81292972 1.00000000]
[-113.30483832 695.96337349 34.35139098 241.81292972 199.13481221 1.00000000]
[-113.30483832 695.96337349 34.35139098 199.13481221 156.45669469 1.00000000]
[-113.30483832 695.96337349 34.35139098 156.45669469 113.77857717 1.00000000]
[-113.30483832 695.96337349 34.35139098 113.77857717 71.10045965 1.00000000]
[-113.30483832 695.96337349 34.35139098 71.10045965 28.42234214 1.00000000]
[-113.30483832 695.96337349 34.35139098 28.42234214 345.74422462 1.00000000]
[]
[]
[]
[117.49999912 466.10434216 221.87089435 130.59374959 124.13434745 1.00000000]
[117.49999912 466.10434216 221.87089435 124.13434745 117.67494531 1.00000000]
[117.49999912 466.10434216 221.87089435 117.67494531 111.21554316 1.00000000]
[117.49999912 466.10434216 221.87089435 111.21554316 104.75614102 1.00000000]
[117.49999912 466.10434216 221.87089435 104.75614102 98.29673888 1.00000000]
[117.49999912 466.10434216 221.87089435 98.29673888 91.83733673 1.00000000]
[117.49999912 466.10434216 221.87089435 91.83733673 85.37793459 1.00000000]
[117.49999912 466.10434216 221.87089435 85.37793459 78.91853244 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[304.09650971 1134.17692105 28.47466729 216.47313801 164.39464608 1.00000000]
[304.09650971 1134.17692105 28.47466729 164.39464608 112.31615416 1.00000000]
[]
[]
[332.05710761 1234.28441303 36.01426010 225.32196984 184.70375399 1.00000000]
[332.05710761 1234.28441303 36.01426010 184.70375399 144.08553813 1.00000000]
[332.05710761 1234.28441303 36.01426010 144.08553813 103.46732228 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[408.32586604 1507.34989435 32.20889362 221.48415392 175.81254763 1.00000000]
[408.32586604 1507.34989435 32.20889362 175.81254763 130.14094134 1.00000000]
[408.32586604 1507.34989435 32.20889362 130.14094134 84.46933505 1.00000000]
[408.32586604 1507.34989435 32.20889362 84.46933505 38.79772876 1.00000000]
[]
[]
[]
[524.87473405 1519.36780882 23.13159456 136.72703368 71.30713515 1.00000000]
[524.87473405 1519.36780882 23.13159456 71.30713515 5.88723663 1.00000000]
[524.87473405 1519.36780882 23.13159456 5.88723663 300.46733810 1.00000000]
[524.87473405 1519.36780882 23.13159456 300.46733810 235.04743957 1.00000000]
[]
[]
[]
[408.32586604 1507.34989435 32.20889362 332.97674449 287.30513820 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[332.05710761 1234.28441303 36.01426010 45.32196984 4.70375399 1.00000000]
[332.05710761 1234.28441303 36.01426010 4.70375399 324.08553813 1.00000000]
[332.05710761 1234.28441303 36.01426010 324.08553813 283.46732228 1.00000000]
[]
[]
[304.09650971 1134.17692105 28.47466729 36.47313796 344.39464604 1.00000000]
[304.09650971 1134.17692105 28.47466729 344.39464604 292.31615421 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[117.49999912 466.10434216 221.87089435 69.87075977 63.39064203 1.00000000]
[117.49999912 466.10434216 221.87089435 63.39064203 56.91052429 1.00000000]
[117.49999912 466.10434216 221.87089435 56.91052429 50.43040656 1.00000000]
[117.49999912 466.10434216 221.87089435 50.43040656 43.95028882 1.00000000]
[117.49999912 466.10434216 221.87089435 43.95028882 37.47017108 1.00000000]
[117.49999912 466.10434216 221.87089435 37.47017108 30.99005334 1.00000000]
[117.49999912 466.10434216 221.87089435 30.99005334 24.50993560 1.00000000]
[117.49999912 466.10434216 221.87089435 24.50993560 18.02981786 1.00000000]
[117.49999912 466.10434216 221.87089435 18.02981786 11.54970012 1.00000000]
[117.49999912 466.10434216 221.87089435 11.54970012 5.06958238 1.00000000]
[117.49999912 466.10434216 221.87089435 5.06958238 358.58946464 1.00000000]
[117.49999912 466.10434216 221.87089435 358.58946464 352.10934690 1.00000000]
[117.49999912 466.10434216 221.87089435 352.10934690 345.62922916 1.00000000]
[117.49999912 466.10434216 221.87089435 345.62922916 339.14911143 1.00000000]
[117.49999912 466.10434216 221.87089435 339.14911143 332.66899369 1.00000000]
[117.49999912 466.10434216 221.87089435 332.66899369 326.18887595 1.00000000]
[117.49999912 466.10434216 221.87089435 326.18887595 319.70875821 1.00000000]
[117.49999912 466.10434216 221.87089435 319.70875821 313.22864047 1.00000000]
[117.49999912 466.10434216 221.87089435 313.22864047 306.74852273 1.00000000]
[]
[]
[]
[]
[]
[314.07468966 154.24649399 28.47466729 84.30312830 32.22463637 1.00000000]
[]
[]
[]
[426.10776936 143.07028378 23.13159456 125.14292533 59.72302680 1.00000000]
[426.10776936 143.07028378 23.13159456 59.72302680 354.30312827 1.00000000]
[426.10776936 143.07028378 23.13159456 354.30312827 288.88322975 1.00000000]
[426.10776936 143.07028378 23.13159456 288.88322975 223.46333122 1.00000000]
[]
[]
[]
[314.07468966 154.24649399 28.47466729 316.38162018 264.30312825 1.00000000]
[314.07468966 154.24649399 28.47466729 264.30312825 212.22463632 1.00000000]
[314.07468966 154.24649399 28.47466729 212.22463632 160.14614449 1.00000000]
[]
[]
[]
[]
[]
[117.49999912 466.10434216 221.87089435 297.70075006 286.11231817 1.00000000]
[117.49999912 466.10434216 221.87089435 286.11231817 274.52388629 1.00000000]
[]
[117.49999874 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[117.49999874 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[6 189]
[7 188]
[17 31]
[18 30]
[19 29]
[20 28]
[39 52]
[40 51]
[41 50]
[42 49]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[65 138]
[66 137]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[80 123]
[81 122]
[82 121]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[98 108]
[99 107]
[100 106]
[101 105]
[162 186]
[163 185]
[164 184]
[165 183]
[166 182]
[167 181]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% Start Annotations
52 101 12 1.00 0.60 0.67 omark 83 160 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
