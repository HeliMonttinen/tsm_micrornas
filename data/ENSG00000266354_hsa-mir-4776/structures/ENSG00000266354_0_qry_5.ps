%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUUUGGACAACAGKCCAGGAUGAGGGUUCCAGGUCAGUGGGAGCUCKGCUAUAUGCAGUGGACCAGGAUGGCAAGGGCUCUCCUGAAAGGACAGUAGAGCCCUUGCCAUCCUGGUCCACUGCAUAUAGUCUGCUCCAUCUCAGGAAGCCAGAAGGUAGAAGGGGAUGCAAAAACACAG\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[100.00000000 225.00000000]
[100.00000000 250.00000000]
[100.00000000 275.00000000]
[81.37222290 291.67349243]
[75.48242950 315.96981812]
[84.40727234 339.32247925]
[105.00000000 353.49780273]
[130.00000000 353.49780273]
[150.59272766 339.32247925]
[159.51756287 315.96981812]
[153.62777710 291.67349243]
[135.00000000 275.00000000]
[135.00000000 250.00000000]
[135.00000000 225.00000000]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[156.65063477 137.50000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[310.00000000 100.00000000]
[310.00000000 125.00000000]
[299.02532959 147.46234131]
[310.00000000 169.92468262]
[310.00000000 194.92468262]
[310.00000000 219.92468262]
[310.00000000 244.92468262]
[299.02532959 267.38702393]
[279.30398560 282.75155640]
[259.58267212 298.11608887]
[239.86132812 313.48062134]
[215.09053040 310.10311890]
[193.17956543 322.14099121]
[182.74598694 344.85971069]
[187.89331055 369.32406616]
[206.59709167 385.91226196]
[231.50115967 388.10021973]
[247.33341980 407.44805908]
[263.16567993 426.79592896]
[278.99792480 446.14376831]
[294.83020020 465.49163818]
[292.04669189 490.33618164]
[304.60562134 511.95269775]
[327.56762695 521.83941650]
[351.90176392 516.10784912]
[373.00238037 529.51544189]
[394.10302734 542.92303467]
[415.20364380 556.33062744]
[436.30429077 569.73822021]
[457.40490723 583.14581299]
[478.50555420 596.55334473]
[499.60617065 609.96093750]
[520.70678711 623.36853027]
[541.80743408 636.77612305]
[562.90808105 650.18371582]
[584.00872803 663.59130859]
[605.10937500 676.99884033]
[626.20996094 690.40643311]
[647.31060791 703.81402588]
[668.41125488 717.22161865]
[689.51190186 730.62921143]
[710.61248779 744.03680420]
[731.71313477 757.44433594]
[752.81378174 770.85192871]
[773.91442871 784.25952148]
[795.01507568 797.66711426]
[816.11566162 811.07470703]
[837.21630859 824.48229980]
[858.31695557 837.88983154]
[879.41760254 851.29742432]
[900.51818848 864.70501709]
[921.61883545 878.11260986]
[942.71948242 891.52020264]
[963.82012939 904.92779541]
[984.92077637 918.33538818]
[1006.02136230 931.74291992]
[1027.12207031 945.15051270]
[1048.22265625 958.55810547]
[1061.29565430 979.86761475]
[1086.14025879 982.65136719]
[1107.24084473 996.05895996]
[1128.34143066 1009.46655273]
[1136.70031738 1033.02770996]
[1158.81713867 1044.68298340]
[1182.97778320 1038.25903320]
[1196.38537598 1017.15844727]
[1191.93859863 992.55706787]
[1171.99267578 977.48516846]
[1147.11206055 979.92565918]
[1126.01147461 966.51806641]
[1104.91088867 953.11047363]
[1091.83776855 931.80096436]
[1066.99328613 929.01721191]
[1045.89257812 915.60961914]
[1024.79199219 902.20202637]
[1003.69134521 888.79449463]
[982.59075928 875.38690186]
[961.49011230 861.97930908]
[940.38946533 848.57171631]
[919.28881836 835.16412354]
[898.18817139 821.75653076]
[877.08758545 808.34899902]
[855.98693848 794.94140625]
[834.88629150 781.53381348]
[813.78564453 768.12622070]
[792.68505859 754.71862793]
[771.58441162 741.31103516]
[750.48376465 727.90350342]
[729.38311768 714.49591064]
[708.28247070 701.08831787]
[687.18188477 687.68072510]
[666.08123779 674.27313232]
[644.98059082 660.86553955]
[623.87994385 647.45800781]
[602.77935791 634.05041504]
[581.67871094 620.64282227]
[560.57806396 607.23522949]
[539.47741699 593.82763672]
[518.37677002 580.42004395]
[497.27615356 567.01251221]
[476.17553711 553.60491943]
[455.07489014 540.19732666]
[433.97427368 526.78973389]
[412.87362671 513.38214111]
[391.77301025 499.97457886]
[370.67236328 486.56698608]
[365.52505493 462.10263062]
[346.82125854 445.51440430]
[321.91720581 443.32647705]
[306.08493042 423.97860718]
[290.25268555 404.63076782]
[274.42041016 385.28289795]
[258.58816528 365.93505859]
[261.37167358 341.09048462]
[281.09301758 325.72595215]
[300.81433105 310.36141968]
[320.53567505 294.99688721]
[345.00000000 289.84936523]
[355.97467041 267.38702393]
[345.00000000 244.92468262]
[345.00000000 219.92468262]
[345.00000000 194.92468262]
[345.00000000 169.92468262]
[355.97467041 147.46234131]
[345.00000000 125.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[495.00000000 125.00000000]
[495.00000000 150.00000000]
[476.37222290 166.67350769]
[470.48242188 190.96980286]
[479.40725708 214.32247925]
[500.00000000 228.49780273]
[525.00000000 228.49780273]
[545.59271240 214.32247925]
[554.51757812 190.96980286]
[548.62780762 166.67350769]
[530.00000000 150.00000000]
[530.00000000 125.00000000]
[530.00000000 100.00000000]
[555.00000000 100.00000000]
[580.00000000 100.00000000]
[605.00000000 100.00000000]
[630.00000000 100.00000000]
[655.00000000 100.00000000]
[680.00000000 100.00000000]
[705.00000000 100.00000000]
[730.00000000 100.00000000]
[755.00000000 100.00000000]
[780.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[117.50000000 313.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[117.50000000 313.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[117.50000000 313.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[117.50000000 313.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[117.50000000 313.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[117.50000000 313.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[117.50000000 313.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[117.50000000 313.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[117.50000000 313.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[327.49999832 147.46233915 28.47466717 232.07849217 180.00000000 1.00000000]
[327.49999832 147.46233915 28.47466717 180.00000000 127.92150793 1.00000000]
[]
[]
[]
[327.49999810 267.38701761 28.47466685 232.07849298 180.00000000 1.00000000]
[]
[]
[]
[222.36194912 349.29816028 39.86382195 296.03874570 259.49002920 1.00000000]
[222.36194912 349.29816028 39.86382195 259.49002920 222.94131271 1.00000000]
[222.36194912 349.29816028 39.86382195 222.94131271 186.39259621 1.00000000]
[222.36194912 349.29816028 39.86382195 186.39259621 149.84387971 1.00000000]
[222.36194912 349.29816028 39.86382195 149.84387971 113.29516322 1.00000000]
[222.36194912 349.29816028 39.86382195 113.29516322 76.74644672 1.00000000]
[]
[]
[]
[]
[331.05640569 482.12852650 39.86382195 204.66695446 168.11823796 1.00000000]
[331.05640569 482.12852650 39.86382195 168.11823796 131.56952146 1.00000000]
[331.05640569 482.12852650 39.86382195 131.56952146 95.02080497 1.00000000]
[331.05640569 482.12852650 39.86382195 95.02080497 58.47208847 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[1076.56673706 955.83429095 28.47466729 174.51083424 122.43234232 1.00000000]
[1076.56673706 955.83429095 28.47466729 122.43234232 70.35385039 1.00000000]
[]
[]
[1162.67581066 1010.54897798 34.35139098 181.80575360 139.12763609 1.00000000]
[1162.67581066 1010.54897798 34.35139098 139.12763609 96.44951857 1.00000000]
[1162.67581066 1010.54897798 34.35139098 96.44951857 53.77140105 1.00000000]
[1162.67581066 1010.54897798 34.35139098 53.77140105 11.09328353 1.00000000]
[1162.67581066 1010.54897798 34.35139098 11.09328353 328.41516602 1.00000000]
[1162.67581066 1010.54897798 34.35139098 328.41516602 285.73704850 1.00000000]
[1162.67581066 1010.54897798 34.35139098 285.73704850 243.05893098 1.00000000]
[]
[]
[1076.56673706 955.83429095 28.47466729 354.51083420 302.43234227 1.00000000]
[1076.56673706 955.83429095 28.47466729 302.43234227 250.35385044 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[331.05640569 482.12852650 39.86382195 6.39259621 329.84387971 1.00000000]
[331.05640569 482.12852650 39.86382195 329.84387971 293.29516322 1.00000000]
[331.05640569 482.12852650 39.86382195 293.29516322 256.74644672 1.00000000]
[]
[]
[]
[]
[222.36194912 349.29816028 39.86382195 24.66695446 348.11823796 1.00000000]
[]
[]
[]
[327.49999810 267.38701761 28.47466685 104.15698304 52.07849068 1.00000000]
[327.49999810 267.38701761 28.47466685 52.07849068 360.00000000 1.00000000]
[327.49999810 267.38701761 28.47466685 360.00000000 307.92150833 1.00000000]
[]
[]
[]
[327.49999832 147.46233915 28.47466717 52.07849159 360.00000000 1.00000000]
[327.49999832 147.46233915 28.47466717 360.00000000 307.92150822 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[512.49999867 188.29345672 42.10271758 245.43973511 210.89757175 1.00000000]
[512.49999867 188.29345672 42.10271758 210.89757175 176.35540840 1.00000000]
[512.49999867 188.29345672 42.10271758 176.35540840 141.81324504 1.00000000]
[512.49999867 188.29345672 42.10271758 141.81324504 107.27108168 1.00000000]
[512.49999867 188.29345672 42.10271758 107.27108168 72.72891832 1.00000000]
[512.49999867 188.29345672 42.10271758 72.72891832 38.18675496 1.00000000]
[512.49999867 188.29345672 42.10271758 38.18675496 3.64459160 1.00000000]
[512.49999867 188.29345672 42.10271758 3.64459160 329.10242825 1.00000000]
[512.49999867 188.29345672 42.10271758 329.10242825 294.56026489 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[26 151]
[27 150]
[29 148]
[30 147]
[31 146]
[32 145]
[33 142]
[34 141]
[35 140]
[36 139]
[42 138]
[43 137]
[44 136]
[45 135]
[46 134]
[50 131]
[51 130]
[52 129]
[53 128]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[85 96]
[86 95]
[87 94]
[157 170]
[158 169]
[159 168]
] def

init

% Start Annotations
86 126 12 1.00 0.60 0.67 omark 57 114 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
