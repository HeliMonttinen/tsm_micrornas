%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:56 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUAUAACUUUUGCACAAAUAUGGAAUAGAUCUAUGACGUGGAGCUAACCAAACUAAUAUACCCAUAUUCUGGCUAGGUGAUCAUCAGAAUAUGGGUAUAUUAGUUUGGUUAGCUCUACAUUGUAGAUCUAUUCCAUAGAUCCUUCUGUUUUUUGAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[375.00000000 100.00000000]
[400.00000000 100.00000000]
[425.00000000 100.00000000]
[450.00000000 100.00000000]
[475.00000000 100.00000000]
[500.00000000 100.00000000]
[525.00000000 100.00000000]
[550.00000000 100.00000000]
[575.00000000 100.00000000]
[600.00000000 100.00000000]
[625.00000000 100.00000000]
[625.00000000 125.00000000]
[625.00000000 150.00000000]
[625.00000000 175.00000000]
[625.00000000 200.00000000]
[625.00000000 225.00000000]
[625.00000000 250.00000000]
[625.00000000 275.00000000]
[625.00000000 300.00000000]
[625.00000000 325.00000000]
[625.00000000 350.00000000]
[625.00000000 375.00000000]
[625.00000000 400.00000000]
[625.00000000 425.00000000]
[625.00000000 450.00000000]
[625.00000000 475.00000000]
[625.00000000 500.00000000]
[625.00000000 525.00000000]
[614.02532959 547.46234131]
[625.00000000 569.92468262]
[625.00000000 594.92468262]
[625.00000000 619.92468262]
[625.00000000 644.92468262]
[625.00000000 669.92468262]
[625.00000000 694.92468262]
[625.00000000 719.92468262]
[625.00000000 744.92468262]
[625.00000000 769.92468262]
[625.00000000 794.92468262]
[625.00000000 819.92468262]
[625.00000000 844.92468262]
[625.00000000 869.92468262]
[625.00000000 894.92468262]
[625.00000000 919.92468262]
[625.00000000 944.92468262]
[625.00000000 969.92468262]
[625.00000000 994.92468262]
[625.00000000 1019.92468262]
[625.00000000 1044.92468262]
[625.00000000 1069.92468262]
[625.00000000 1094.92468262]
[625.00000000 1119.92468262]
[625.00000000 1144.92468262]
[625.00000000 1169.92468262]
[625.00000000 1194.92468262]
[625.00000000 1219.92468262]
[625.00000000 1244.92468262]
[625.00000000 1269.92468262]
[625.00000000 1294.92468262]
[625.00000000 1319.92468262]
[625.00000000 1344.92468262]
[625.00000000 1369.92468262]
[625.00000000 1394.92468262]
[625.00000000 1419.92468262]
[603.88726807 1433.31323242]
[591.09393311 1454.79187012]
[589.37634277 1479.73278809]
[599.10455322 1502.76232910]
[618.18261719 1518.91870117]
[642.50000000 1524.72082520]
[666.81738281 1518.91870117]
[685.89544678 1502.76232910]
[695.62365723 1479.73278809]
[693.90606689 1454.79187012]
[681.11273193 1433.31323242]
[660.00000000 1419.92468262]
[660.00000000 1394.92468262]
[660.00000000 1369.92468262]
[660.00000000 1344.92468262]
[660.00000000 1319.92468262]
[660.00000000 1294.92468262]
[660.00000000 1269.92468262]
[660.00000000 1244.92468262]
[660.00000000 1219.92468262]
[660.00000000 1194.92468262]
[660.00000000 1169.92468262]
[660.00000000 1144.92468262]
[660.00000000 1119.92468262]
[660.00000000 1094.92468262]
[660.00000000 1069.92468262]
[660.00000000 1044.92468262]
[660.00000000 1019.92468262]
[660.00000000 994.92468262]
[660.00000000 969.92468262]
[660.00000000 944.92468262]
[660.00000000 919.92468262]
[660.00000000 894.92468262]
[660.00000000 869.92468262]
[660.00000000 844.92468262]
[660.00000000 819.92468262]
[660.00000000 794.92468262]
[660.00000000 769.92468262]
[660.00000000 744.92468262]
[660.00000000 719.92468262]
[660.00000000 694.92468262]
[660.00000000 669.92468262]
[660.00000000 644.92468262]
[660.00000000 619.92468262]
[660.00000000 594.92468262]
[660.00000000 569.92468262]
[670.97467041 547.46234131]
[660.00000000 525.00000000]
[660.00000000 500.00000000]
[660.00000000 475.00000000]
[660.00000000 450.00000000]
[660.00000000 425.00000000]
[660.00000000 400.00000000]
[660.00000000 375.00000000]
[660.00000000 350.00000000]
[660.00000000 325.00000000]
[660.00000000 300.00000000]
[660.00000000 275.00000000]
[660.00000000 250.00000000]
[660.00000000 225.00000000]
[660.00000000 200.00000000]
[660.00000000 175.00000000]
[660.00000000 150.00000000]
[660.00000000 125.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
[760.00000000 100.00000000]
[785.00000000 100.00000000]
[810.00000000 100.00000000]
[835.00000000 100.00000000]
[860.00000000 100.00000000]
[885.00000000 100.00000000]
[910.00000000 100.00000000]
[935.00000000 100.00000000]
[960.00000000 100.00000000]
[985.00000000 100.00000000]
[1010.00000000 100.00000000]
[1035.00000000 100.00000000]
[1060.00000000 100.00000000]
[1085.00000000 100.00000000]
[1110.00000000 100.00000000]
[1135.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[642.49999955 547.46233931 28.47466684 232.07849289 180.00000000 1.00000000]
[642.49999955 547.46233931 28.47466684 180.00000000 127.92150761 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[642.50000076 1470.86160406 53.85926493 251.03921808 224.19934839 1.00000000]
[642.50000076 1470.86160406 53.85926493 224.19934839 197.35947871 1.00000000]
[642.50000076 1470.86160406 53.85926493 197.35947871 170.51960902 1.00000000]
[642.50000076 1470.86160406 53.85926493 170.51960902 143.67973933 1.00000000]
[642.50000076 1470.86160406 53.85926493 143.67973933 116.83986964 1.00000000]
[642.50000076 1470.86160406 53.85926493 116.83986964 89.99999995 1.00000000]
[642.50000076 1470.86160406 53.85926493 89.99999995 63.16013026 1.00000000]
[642.50000076 1470.86160406 53.85926493 63.16013026 36.32026058 1.00000000]
[642.50000076 1470.86160406 53.85926493 36.32026058 9.48039089 1.00000000]
[642.50000076 1470.86160406 53.85926493 9.48039089 342.64052120 1.00000000]
[642.50000076 1470.86160406 53.85926493 342.64052120 315.80065151 1.00000000]
[642.50000076 1470.86160406 53.85926493 315.80065151 288.96078182 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[642.49999955 547.46233931 28.47466684 52.07849086 360.00000000 1.00000000]
[642.49999955 547.46233931 28.47466684 360.00000000 307.92150854 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 140]
[23 139]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[30 132]
[31 131]
[32 130]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 124]
[39 123]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 113]
[50 112]
[51 111]
[52 110]
[53 109]
[54 108]
[55 107]
[56 106]
[57 105]
[58 104]
[59 103]
[60 102]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[69 93]
[70 92]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
] def

init

% Start Annotations
88 140 12 1.00 0.60 0.67 omark 22 74 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
