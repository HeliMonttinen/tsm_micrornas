%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:55 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUUGUUGAAGAUUCUCUUGGGGUGUGAUGUUCCAAGAGCACUGGAGUGGUCCCCAUUUUUCUCCCACUACCAGGCUCCCAUAAGGGUCGAAUGGGAUCCAGACAGUGGGAGAAAAAUGGGGACCACUAUCACCACAUUCCCAAGAAUAAGAGAAAAUGAUGAGUGGAAUAAAGA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[100.00000000 125.00000000]
[100.00000000 150.00000000]
[100.00000000 175.00000000]
[100.00000000 200.00000000]
[90.90147400 223.28555298]
[105.00000000 243.93092346]
[130.00000000 243.93092346]
[144.09852600 223.28555298]
[135.00000000 200.00000000]
[135.00000000 175.00000000]
[135.00000000 150.00000000]
[135.00000000 125.00000000]
[135.00000000 100.00000000]
[160.00000000 100.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[210.00000000 125.00000000]
[210.00000000 150.00000000]
[210.00000000 175.00000000]
[210.00000000 200.00000000]
[210.00000000 225.00000000]
[210.00000000 250.00000000]
[210.00000000 275.00000000]
[210.00000000 300.00000000]
[210.00000000 325.00000000]
[210.00000000 350.00000000]
[210.00000000 375.00000000]
[191.55932617 391.88021851]
[186.16096497 416.29040527]
[164.51033020 428.79040527]
[142.85969543 441.29040527]
[121.20906067 453.79040527]
[99.55842590 466.29040527]
[76.35766602 475.60302734]
[75.17566681 500.57507324]
[97.39308929 512.03741455]
[117.05842590 496.60128784]
[138.70906067 484.10128784]
[160.35969543 471.60128784]
[182.01033020 459.10128784]
[203.66096497 446.60128784]
[227.50000000 454.13128662]
[251.33901978 446.60128784]
[272.98965454 459.10128784]
[294.64028931 471.60128784]
[316.29092407 484.10128784]
[337.94155884 496.60128784]
[359.59219360 509.10128784]
[381.24282837 521.60131836]
[402.89346313 534.10131836]
[424.54409790 546.60131836]
[446.19473267 559.10131836]
[467.84536743 571.60131836]
[489.49600220 584.10131836]
[511.14663696 596.60131836]
[532.79730225 609.10131836]
[554.44793701 621.60131836]
[576.09857178 634.10131836]
[597.74920654 646.60131836]
[619.39984131 659.10131836]
[641.05047607 671.60131836]
[662.70111084 684.10131836]
[684.35174561 696.60131836]
[706.00238037 709.10131836]
[727.65301514 721.60131836]
[749.30364990 734.10131836]
[770.95428467 746.60131836]
[792.60491943 759.10131836]
[814.25555420 771.60131836]
[822.55206299 795.18450928]
[844.20269775 807.68450928]
[868.77459717 803.07788086]
[882.74023438 823.81341553]
[907.68054199 825.54022217]
[929.33117676 838.04022217]
[943.29681396 858.77575684]
[968.23706055 860.50256348]
[989.88769531 873.00256348]
[1011.53833008 885.50256348]
[1033.18896484 898.00256348]
[1054.83959961 910.50256348]
[1076.49023438 923.00256348]
[1080.02148438 947.75195312]
[1095.97351074 967.00109863]
[1119.63671875 975.06689453]
[1144.02441406 969.56787109]
[1161.93640137 952.12762451]
[1168.08410645 927.89532471]
[1160.65246582 904.02545166]
[1141.83581543 887.56549072]
[1117.18945312 883.37518311]
[1093.99023438 892.69171143]
[1072.33959961 880.19171143]
[1050.68896484 867.69171143]
[1029.03833008 855.19171143]
[1007.38769531 842.69171143]
[985.73706055 830.19171143]
[971.77148438 809.45617676]
[946.83117676 807.72937012]
[925.18054199 795.22937012]
[911.21490479 774.49383545]
[886.27459717 772.76702881]
[877.97808838 749.18383789]
[856.32745361 736.68383789]
[831.75555420 741.29040527]
[810.10491943 728.79040527]
[788.45428467 716.29040527]
[766.80364990 703.79040527]
[745.15301514 691.29040527]
[723.50238037 678.79040527]
[701.85174561 666.29040527]
[680.20111084 653.79040527]
[658.55047607 641.29040527]
[636.89984131 628.79040527]
[615.24920654 616.29040527]
[593.59857178 603.79040527]
[571.94793701 591.29040527]
[550.29730225 578.79040527]
[528.64666748 566.29040527]
[506.99600220 553.79040527]
[485.34536743 541.29040527]
[463.69473267 528.79040527]
[442.04409790 516.29040527]
[420.39346313 503.79040527]
[398.74282837 491.29040527]
[377.09219360 478.79040527]
[355.44155884 466.29040527]
[333.79092407 453.79040527]
[333.79092407 428.79040527]
[312.14028931 441.29040527]
[290.48965454 428.79040527]
[268.83901978 416.29040527]
[263.44067383 391.88021851]
[245.00000000 375.00000000]
[245.00000000 350.00000000]
[245.00000000 325.00000000]
[245.00000000 300.00000000]
[266.65063477 287.50000000]
[245.00000000 275.00000000]
[245.00000000 250.00000000]
[245.00000000 225.00000000]
[245.00000000 200.00000000]
[245.00000000 175.00000000]
[245.00000000 150.00000000]
[245.00000000 125.00000000]
[245.00000000 100.00000000]
[270.00000000 100.00000000]
[295.00000000 100.00000000]
[320.00000000 100.00000000]
[345.00000000 100.00000000]
[370.00000000 100.00000000]
[395.00000000 100.00000000]
[420.00000000 100.00000000]
[445.00000000 100.00000000]
[470.00000000 100.00000000]
[495.00000000 100.00000000]
[520.00000000 100.00000000]
[545.00000000 100.00000000]
[570.00000000 100.00000000]
[595.00000000 100.00000000]
[620.00000000 100.00000000]
[645.00000000 100.00000000]
[670.00000000 100.00000000]
[695.00000000 100.00000000]
[720.00000000 100.00000000]
[745.00000000 100.00000000]
[770.00000000 100.00000000]
[795.00000000 100.00000000]
[820.00000000 100.00000000]
[845.00000000 100.00000000]
[870.00000000 100.00000000]
[895.00000000 100.00000000]
[920.00000000 100.00000000]
[945.00000000 100.00000000]
[970.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[117.50000000 220.25823761 26.77024824 229.17803299 173.50681980 1.00000000]
[117.50000000 220.25823761 26.77024824 173.50681980 117.83560660 1.00000000]
[117.50000000 220.25823761 26.77024824 117.83560660 62.16439340 1.00000000]
[117.50000000 220.25823761 26.77024824 62.16439340 6.49318020 1.00000000]
[117.50000000 220.25823761 26.77024824 6.49318020 310.82196701 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[227.49999685 412.63056801 41.50071865 245.05933666 209.99999999 1.00000000]
[227.49999685 412.63056801 41.50071865 209.99999999 174.94066332 1.00000000]
[]
[]
[]
[]
[95.20821872 489.00926179 23.13159456 280.83979703 215.41989851 1.00000000]
[95.20821872 489.00926179 23.13159456 215.41989851 149.99999998 1.00000000]
[95.20821872 489.00926179 23.13159456 149.99999998 84.58010145 1.00000000]
[95.20821872 489.00926179 23.13159456 84.58010145 19.16020292 1.00000000]
[]
[]
[]
[]
[227.49999685 412.63056801 41.50071865 125.05933663 89.99999997 1.00000000]
[227.49999685 412.63056801 41.50071865 89.99999997 54.94066330 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[850.26508074 772.18415623 36.01426010 180.92732384 140.30910802 1.00000000]
[850.26508074 772.18415623 36.01426010 140.30910802 99.69089214 1.00000000]
[850.26508074 772.18415623 36.01426010 99.69089214 59.07267612 1.00000000]
[896.97758023 799.15363030 28.47466729 172.07849173 119.99999993 1.00000000]
[896.97758023 799.15363030 28.47466729 119.99999993 67.92150801 1.00000000]
[]
[957.53412794 834.11596929 28.47466729 172.07849181 119.99999988 1.00000000]
[957.53412794 834.11596929 28.47466729 119.99999988 67.92150796 1.00000000]
[]
[]
[]
[]
[]
[1122.09091553 929.12287437 46.00953986 187.64427012 156.11541607 1.00000000]
[1122.09091553 929.12287437 46.00953986 156.11541607 124.58656202 1.00000000]
[1122.09091553 929.12287437 46.00953986 124.58656202 93.05770796 1.00000000]
[1122.09091553 929.12287437 46.00953986 93.05770796 61.52885391 1.00000000]
[1122.09091553 929.12287437 46.00953986 61.52885391 29.99999986 1.00000000]
[1122.09091553 929.12287437 46.00953986 29.99999986 358.47114581 1.00000000]
[1122.09091553 929.12287437 46.00953986 358.47114581 326.94229176 1.00000000]
[1122.09091553 929.12287437 46.00953986 326.94229176 295.41343771 1.00000000]
[1122.09091553 929.12287437 46.00953986 295.41343771 263.88458365 1.00000000]
[1122.09091553 929.12287437 46.00953986 263.88458365 232.35572960 1.00000000]
[]
[]
[]
[]
[]
[957.53412794 834.11596929 28.47466729 352.07849176 299.99999984 1.00000000]
[957.53412794 834.11596929 28.47466729 299.99999984 247.92150801 1.00000000]
[]
[896.97758023 799.15363030 28.47466729 352.07849181 299.99999988 1.00000000]
[896.97758023 799.15363030 28.47466729 299.99999988 247.92150793 1.00000000]
[850.26508074 772.18415623 36.01426010 0.92732355 320.30910774 1.00000000]
[850.26508074 772.18415623 36.01426010 320.30910774 279.69089192 1.00000000]
[850.26508074 772.18415623 36.01426010 279.69089192 239.07267615 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[227.49999685 412.63056801 41.50071865 5.05933661 329.99999994 1.00000000]
[227.49999685 412.63056801 41.50071865 329.99999994 294.94066334 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[17 147]
[18 146]
[19 145]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[25 138]
[26 137]
[27 136]
[28 135]
[30 42]
[31 41]
[32 40]
[33 39]
[34 38]
[44 133]
[45 132]
[46 131]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[70 106]
[73 103]
[75 101]
[76 100]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
] def

init

% Start Annotations
47 129 12 1.00 0.60 0.67 omark 47 129 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
