%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:54 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UACAAAAGUUAUUGCAUUUGAUCUCUACCCAACAGCCCCCACUGGUUGGUUUCCUCAUCUAUAAAAUGGGGGUAGUAAGACAAGGAAGGAAGGUCUUACUGCCCUCAUUUUAUAGAUGAGGAAACCAAGGCUUGAAGAAGCUAAGGAACUUGCUGAUCAGGGCUAAGCCUGAA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[150.00000000 125.00000000]
[150.00000000 150.00000000]
[150.00000000 175.00000000]
[139.02532959 197.46234131]
[150.00000000 219.92468262]
[150.00000000 244.92468262]
[140.90147400 268.21023560]
[155.00000000 288.85559082]
[180.00000000 288.85559082]
[194.09852600 268.21023560]
[185.00000000 244.92468262]
[185.00000000 219.92468262]
[195.97467041 197.46234131]
[185.00000000 175.00000000]
[185.00000000 150.00000000]
[185.00000000 125.00000000]
[185.00000000 100.00000000]
[210.00000000 100.00000000]
[235.00000000 100.00000000]
[260.00000000 100.00000000]
[285.00000000 100.00000000]
[310.00000000 100.00000000]
[335.00000000 100.00000000]
[360.00000000 100.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[510.00000000 125.00000000]
[510.00000000 150.00000000]
[510.00000000 175.00000000]
[486.83157349 184.39277649]
[467.79699707 200.60031128]
[445.62536621 189.04960632]
[429.17797852 170.22184753]
[404.35440063 173.18659973]
[392.80371094 195.35821533]
[404.59945679 217.40046692]
[429.45437622 220.08988953]
[451.62597656 231.64059448]
[449.25164795 256.52758789]
[425.29589844 263.67752075]
[401.34011841 270.82745361]
[377.38436890 277.97738647]
[353.42861938 285.12731934]
[329.47283936 292.27725220]
[305.51708984 299.42718506]
[281.56134033 306.57711792]
[257.60556030 313.72705078]
[233.64981079 320.87698364]
[209.69404602 328.02691650]
[185.73828125 335.17684937]
[161.78251648 342.32678223]
[137.82676697 349.47671509]
[113.87100220 356.62664795]
[89.91523743 363.77658081]
[65.95948029 370.92651367]
[42.00371933 378.07644653]
[18.04796028 385.22637939]
[-5.90780115 392.37631226]
[-29.86356163 399.52624512]
[-53.81932068 406.67617798]
[-77.77508545 413.82611084]
[-101.73084259 420.97604370]
[-125.68660736 428.12597656]
[-149.64236450 435.27590942]
[-173.59812927 442.42584229]
[-197.55387878 449.57577515]
[-221.50964355 456.72570801]
[-245.46540833 463.87564087]
[-269.42117310 471.02557373]
[-293.37692261 478.17550659]
[-317.33270264 485.32543945]
[-341.28845215 492.47537231]
[-365.24420166 499.62530518]
[-389.19998169 506.77523804]
[-408.06747437 490.37347412]
[-432.30780029 484.25732422]
[-456.69818115 489.74450684]
[-475.98355103 505.65280151]
[-486.00881958 528.55462646]
[-484.61392212 553.51568604]
[-472.09939575 575.15795898]
[-451.16162109 588.81842041]
[-426.31173706 591.55389404]
[-402.90380859 582.77502441]
[-385.98123169 564.37322998]
[-379.19006348 540.31329346]
[-355.23431396 533.16333008]
[-331.27853394 526.01342773]
[-307.32278442 518.86346436]
[-283.36703491 511.71356201]
[-259.41125488 504.56362915]
[-235.45550537 497.41369629]
[-211.49974060 490.26376343]
[-187.54397583 483.11383057]
[-163.58822632 475.96389771]
[-139.63246155 468.81396484]
[-115.67669678 461.66403198]
[-91.72093964 454.51409912]
[-67.76517487 447.36416626]
[-43.80941772 440.21423340]
[-19.85365677 433.06430054]
[4.10210419 425.91436768]
[28.05786514 418.76443481]
[52.01362610 411.61450195]
[75.96938324 404.46456909]
[99.92514801 397.31463623]
[123.88090515 390.16470337]
[147.83666992 383.01477051]
[171.79243469 375.86483765]
[195.74818420 368.71490479]
[219.70394897 361.56497192]
[243.65971375 354.41503906]
[267.61547852 347.26510620]
[291.57122803 340.11517334]
[315.52697754 332.96524048]
[339.48275757 325.81530762]
[363.43850708 318.66537476]
[387.39428711 311.51544189]
[411.35003662 304.36550903]
[435.30578613 297.21557617]
[459.26156616 290.06564331]
[474.88809204 309.58001709]
[462.67449951 331.39349365]
[450.46087646 353.20697021]
[438.24725342 375.02044678]
[426.03363037 396.83389282]
[406.71878052 412.70642090]
[408.93408203 437.60806274]
[430.74755859 449.82168579]
[453.13525391 438.69555664]
[456.57247925 413.93298340]
[468.78610229 392.11950684]
[480.99972534 370.30603027]
[493.21334839 348.49255371]
[505.42697144 326.67910767]
[530.23107910 329.80233765]
[554.75762939 324.95989990]
[576.51348877 312.64398193]
[593.28729248 294.10644531]
[603.37402344 271.23159790]
[605.74835205 246.34461975]
[600.16900635 221.97515869]
[587.20300293 200.60031128]
[568.16839600 184.39277649]
[545.00000000 175.00000000]
[545.00000000 150.00000000]
[545.00000000 125.00000000]
[545.00000000 100.00000000]
[595.00000000 100.00000000]
[645.00000000 100.00000000]
[645.00000000 125.00000000]
[645.00000000 150.00000000]
[645.00000000 175.00000000]
[645.00000000 200.00000000]
[629.59667969 219.69104004]
[631.62066650 244.60896301]
[650.00000000 261.55593872]
[675.00000000 261.55593872]
[693.37933350 244.60896301]
[695.40332031 219.69104004]
[680.00000000 200.00000000]
[680.00000000 175.00000000]
[680.00000000 150.00000000]
[680.00000000 125.00000000]
[680.00000000 100.00000000]
[705.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[167.49999984 197.46233917 28.47466713 232.07849226 180.00000000 1.00000000]
[167.49999984 197.46233917 28.47466713 180.00000000 127.92150789 1.00000000]
[]
[167.49999984 265.18291593 26.77024801 229.17803351 173.50682001 1.00000000]
[167.49999984 265.18291593 26.77024801 173.50682001 117.83560629 1.00000000]
[167.49999984 265.18291593 26.77024801 117.83560629 62.16439279 1.00000000]
[167.49999984 265.18291593 26.77024801 62.16439279 6.49317979 1.00000000]
[167.49999984 265.18291593 26.77024801 6.49317979 310.82196710 1.00000000]
[]
[167.49999984 197.46233917 28.47466713 52.07849150 360.00000000 1.00000000]
[167.49999984 197.46233917 28.47466713 360.00000000 307.92150826 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[527.50000009 251.43610102 78.41382237 257.10441883 238.75903664 1.00000000]
[527.50000009 251.43610102 78.41382237 238.75903664 220.41365445 1.00000000]
[]
[419.57353394 195.20986198 26.77024824 346.69610628 291.02489308 1.00000000]
[419.57353394 195.20986198 26.77024824 291.02489308 235.35367988 1.00000000]
[419.57353394 195.20986198 26.77024824 235.35367988 179.68246669 1.00000000]
[419.57353394 195.20986198 26.77024824 179.68246669 124.01125349 1.00000000]
[419.57353394 195.20986198 26.77024824 124.01125349 68.34004029 1.00000000]
[]
[527.50000009 251.43610102 78.41382237 194.62249212 176.27710993 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[-433.00432980 538.11208071 53.85926493 324.42074689 297.58087720 1.00000000]
[-433.00432980 538.11208071 53.85926493 297.58087720 270.74100751 1.00000000]
[-433.00432980 538.11208071 53.85926493 270.74100751 243.90113782 1.00000000]
[-433.00432980 538.11208071 53.85926493 243.90113782 217.06126813 1.00000000]
[-433.00432980 538.11208071 53.85926493 217.06126813 190.22139845 1.00000000]
[-433.00432980 538.11208071 53.85926493 190.22139845 163.38152876 1.00000000]
[-433.00432980 538.11208071 53.85926493 163.38152876 136.54165907 1.00000000]
[-433.00432980 538.11208071 53.85926493 136.54165907 109.70178938 1.00000000]
[-433.00432980 538.11208071 53.85926493 109.70178938 82.86191969 1.00000000]
[-433.00432980 538.11208071 53.85926493 82.86191969 56.02205001 1.00000000]
[-433.00432980 538.11208071 53.85926493 56.02205001 29.18218032 1.00000000]
[-433.00432980 538.11208071 53.85926493 29.18218032 2.34231063 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[527.50000009 251.43610102 78.41382237 150.48594759 132.14056540 1.00000000]
[]
[]
[]
[]
[431.40599199 423.05953897 26.77024824 258.42301723 202.75180403 1.00000000]
[431.40599199 423.05953897 26.77024824 202.75180403 147.08059083 1.00000000]
[431.40599199 423.05953897 26.77024824 147.08059083 91.40937763 1.00000000]
[431.40599199 423.05953897 26.77024824 91.40937763 35.73816444 1.00000000]
[431.40599199 423.05953897 26.77024824 35.73816444 340.06695124 1.00000000]
[]
[]
[]
[]
[527.50000009 251.43610102 78.41382237 106.34940306 88.00402087 1.00000000]
[527.50000009 251.43610102 78.41382237 88.00402087 69.65863869 1.00000000]
[527.50000009 251.43610102 78.41382237 69.65863869 51.31325650 1.00000000]
[527.50000009 251.43610102 78.41382237 51.31325650 32.96787431 1.00000000]
[527.50000009 251.43610102 78.41382237 32.96787431 14.62249212 1.00000000]
[527.50000009 251.43610102 78.41382237 14.62249212 356.27710993 1.00000000]
[527.50000009 251.43610102 78.41382237 356.27710993 337.93172774 1.00000000]
[527.50000009 251.43610102 78.41382237 337.93172774 319.58634555 1.00000000]
[527.50000009 251.43610102 78.41382237 319.58634555 301.24096336 1.00000000]
[527.50000009 251.43610102 78.41382237 301.24096336 282.89558117 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[662.50000005 229.55956803 34.35139098 239.37341131 196.69529379 1.00000000]
[662.50000005 229.55956803 34.35139098 196.69529379 154.01717628 1.00000000]
[662.50000005 229.55956803 34.35139098 154.01717628 111.33905876 1.00000000]
[662.50000005 229.55956803 34.35139098 111.33905876 68.66094124 1.00000000]
[662.50000005 229.55956803 34.35139098 68.66094124 25.98282372 1.00000000]
[662.50000005 229.55956803 34.35139098 25.98282372 343.30470621 1.00000000]
[662.50000005 229.55956803 34.35139098 343.30470621 300.62658869 1.00000000]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[4 19]
[5 18]
[6 17]
[8 15]
[9 14]
[33 155]
[34 154]
[35 153]
[36 152]
[38 45]
[39 44]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
[51 123]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[60 114]
[61 113]
[62 112]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[129 142]
[130 141]
[131 140]
[132 139]
[133 138]
[157 172]
[158 171]
[159 170]
[160 169]
[161 168]
] def

init

% Start Annotations
46 81 12 1.00 0.60 0.67 omark 93 128 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
