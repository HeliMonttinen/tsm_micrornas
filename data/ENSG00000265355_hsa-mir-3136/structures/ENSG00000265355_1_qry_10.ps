%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Nov  6 23:08:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUGAUUCAUCUCAUAAUAACAGGCUUUACUUAUCAAUAUGAAAUAAACUAAUAUGAAACUGACUGAAUAGGYAGGGCCAUGUGCAGUCACAGAAAAAUGACCCAACCUAUUCAGUCAGUUUCAUAUUAAUUUUUACUUGUAAUAUCAGUAAUAAAAUAGUUAUGAGCUAGACAAAGGGCA\
) } def
/len { sequence length } bind def

/coor [
[100.00000000 100.00000000]
[125.00000000 100.00000000]
[150.00000000 100.00000000]
[175.00000000 100.00000000]
[200.00000000 100.00000000]
[225.00000000 100.00000000]
[250.00000000 100.00000000]
[275.00000000 100.00000000]
[300.00000000 100.00000000]
[325.00000000 100.00000000]
[350.00000000 100.00000000]
[350.00000000 125.00000000]
[350.00000000 150.00000000]
[350.00000000 175.00000000]
[350.00000000 200.00000000]
[350.00000000 225.00000000]
[350.00000000 250.00000000]
[350.00000000 275.00000000]
[326.79724121 284.30758667]
[307.65426636 300.38699341]
[294.48046875 321.63436890]
[288.58987427 345.93048096]
[290.56997681 370.85195923]
[300.22326660 393.91302490]
[316.58697510 412.81356812]
[338.02883911 425.66833496]
[362.41027832 431.19519043]
[366.35803223 455.88153076]
[370.30578613 480.56787109]
[374.25354004 505.25421143]
[378.20132446 529.94055176]
[358.10482788 544.81103516]
[345.32562256 566.29803467]
[341.85351562 591.05578613]
[348.22921753 615.22912598]
[363.45993042 635.05395508]
[385.17404175 647.44335938]
[409.99038696 650.46813965]
[418.73123169 673.89031982]
[427.47204590 697.31250000]
[436.21286011 720.73468018]
[444.95370483 744.15686035]
[431.42071533 765.17724609]
[430.39492798 790.15618896]
[442.15881348 812.21545410]
[463.47305298 825.28076172]
[465.76229858 850.17578125]
[468.05154419 875.07073975]
[459.17984009 898.44366455]
[472.16525269 919.80664062]
[474.45449829 944.70159912]
[476.74374390 969.59661865]
[479.03295898 994.49157715]
[481.32220459 1019.38653564]
[483.61145020 1044.28149414]
[485.90069580 1069.17651367]
[488.18991089 1094.07141113]
[490.47915649 1118.96643066]
[492.76840210 1143.86132812]
[495.05761719 1168.75634766]
[497.34686279 1193.65124512]
[499.63610840 1218.54626465]
[501.92535400 1243.44128418]
[504.21456909 1268.33618164]
[506.50381470 1293.23120117]
[508.79306030 1318.12609863]
[511.08227539 1343.02111816]
[513.37152100 1367.91601562]
[515.66076660 1392.81103516]
[517.95001221 1417.70605469]
[520.23925781 1442.60095215]
[522.52850342 1467.49597168]
[508.05914307 1487.88317871]
[510.34838867 1512.77807617]
[528.29309082 1530.18469238]
[530.58227539 1555.07958984]
[532.87152100 1579.97460938]
[523.99981689 1603.34753418]
[536.98529053 1624.71057129]
[539.27453613 1649.60546875]
[521.73333740 1667.41857910]
[496.80609131 1665.51257324]
[471.87884521 1663.60656738]
[446.95162964 1661.70056152]
[424.42752075 1650.85314941]
[402.76736450 1663.33666992]
[400.86132812 1688.26379395]
[420.37170410 1703.89538574]
[444.28317261 1696.59863281]
[469.21041870 1698.50463867]
[494.13763428 1700.41076660]
[519.06488037 1702.31677246]
[533.69384766 1722.58972168]
[557.03698730 1731.53955078]
[581.46942139 1726.24279785]
[599.01062012 1708.42968750]
[603.93084717 1683.91870117]
[594.62304688 1660.71594238]
[574.12744141 1646.40063477]
[571.83819580 1621.50561523]
[580.70989990 1598.13269043]
[567.72448730 1576.76965332]
[565.43524170 1551.87475586]
[563.14599609 1526.97973633]
[577.61535645 1506.59252930]
[575.32611084 1481.69750977]
[557.38140869 1464.29101562]
[555.09216309 1439.39599609]
[552.80297852 1414.50109863]
[550.51373291 1389.60607910]
[548.22448730 1364.71118164]
[545.93524170 1339.81616211]
[543.64599609 1314.92126465]
[541.35675049 1290.02624512]
[539.06750488 1265.13122559]
[536.77832031 1240.23632812]
[534.48907471 1215.34130859]
[532.19982910 1190.44641113]
[529.91058350 1165.55139160]
[527.62133789 1140.65649414]
[525.33209229 1115.76147461]
[523.04284668 1090.86645508]
[520.75366211 1065.97155762]
[518.46441650 1041.07653809]
[516.17517090 1016.18157959]
[513.88592529 991.28662109]
[511.59667969 966.39166260]
[509.30746460 941.49670410]
[507.01821899 916.60174561]
[515.88989258 893.22882080]
[502.90447998 871.86578369]
[500.61523438 846.97082520]
[498.32601929 822.07586670]
[516.90008545 805.34259033]
[524.44378662 781.50787354]
[518.87976074 757.13488770]
[501.74026489 738.93499756]
[477.74472046 731.91967773]
[469.00390625 708.49749756]
[460.26309204 685.07531738]
[451.52224731 661.65319824]
[442.78143311 638.23101807]
[459.54888916 619.68774414]
[467.83746338 596.10174561]
[466.35653687 571.14562988]
[455.33673096 548.70544434]
[436.49389648 532.27532959]
[412.76217651 524.41369629]
[408.81442261 499.72735596]
[404.86666870 475.04101562]
[400.91891479 450.35467529]
[396.97113037 425.66833496]
[418.41302490 412.81356812]
[434.77670288 393.91302490]
[444.43002319 370.85195923]
[446.41012573 345.93048096]
[440.51950073 321.63436890]
[427.34573364 300.38699341]
[408.20275879 284.30758667]
[385.00000000 275.00000000]
[385.00000000 250.00000000]
[385.00000000 225.00000000]
[385.00000000 200.00000000]
[385.00000000 175.00000000]
[385.00000000 150.00000000]
[385.00000000 125.00000000]
[385.00000000 100.00000000]
[410.00000000 100.00000000]
[435.00000000 100.00000000]
[460.00000000 100.00000000]
[485.00000000 100.00000000]
[510.00000000 100.00000000]
[535.00000000 100.00000000]
[560.00000000 100.00000000]
[585.00000000 100.00000000]
[610.00000000 100.00000000]
[635.00000000 100.00000000]
[660.00000000 100.00000000]
[685.00000000 100.00000000]
[710.00000000 100.00000000]
[735.00000000 100.00000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[367.49999741 352.20018257 79.15881624 257.22784544 239.05658769 1.00000000]
[367.49999741 352.20018257 79.15881624 239.05658769 220.88532994 1.00000000]
[367.49999741 352.20018257 79.15881624 220.88532994 202.71407219 1.00000000]
[367.49999741 352.20018257 79.15881624 202.71407219 184.54281444 1.00000000]
[367.49999741 352.20018257 79.15881624 184.54281444 166.37155669 1.00000000]
[367.49999741 352.20018257 79.15881624 166.37155669 148.20029893 1.00000000]
[367.49999741 352.20018257 79.15881624 148.20029893 130.02904118 1.00000000]
[367.49999741 352.20018257 79.15881624 130.02904118 111.85778343 1.00000000]
[367.49999741 352.20018257 79.15881624 111.85778343 93.68652568 1.00000000]
[]
[]
[]
[]
[405.09686258 587.30284237 63.35458712 244.87945535 222.12096790 1.00000000]
[405.09686258 587.30284237 63.35458712 222.12096790 199.36248044 1.00000000]
[405.09686258 587.30284237 63.35458712 199.36248044 176.60399299 1.00000000]
[405.09686258 587.30284237 63.35458712 176.60399299 153.84550553 1.00000000]
[405.09686258 587.30284237 63.35458712 153.84550553 131.08701808 1.00000000]
[405.09686258 587.30284237 63.35458712 131.08701808 108.32853062 1.00000000]
[405.09686258 587.30284237 63.35458712 108.32853062 85.57004317 1.00000000]
[]
[]
[]
[]
[476.84195823 779.55305154 47.64193249 227.98448419 197.56254784 1.00000000]
[476.84195823 779.55305154 47.64193249 197.56254784 167.14061149 1.00000000]
[476.84195823 779.55305154 47.64193249 167.14061149 136.71867513 1.00000000]
[476.84195823 779.55305154 47.64193249 136.71867513 106.29673878 1.00000000]
[]
[]
[487.53487221 895.83622796 28.47466729 226.82458748 174.74609555 1.00000000]
[487.53487221 895.83622796 28.47466729 174.74609555 122.66760362 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[542.83724674 1497.23784144 36.01426010 235.67341931 195.05520345 1.00000000]
[542.83724674 1497.23784144 36.01426010 195.05520345 154.43698760 1.00000000]
[542.83724674 1497.23784144 36.01426010 154.43698760 113.81877175 1.00000000]
[]
[]
[552.35488204 1600.74011003 28.47466729 226.82458743 174.74609550 1.00000000]
[552.35488204 1600.74011003 28.47466729 174.74609550 122.66760358 1.00000000]
[]
[560.37196278 1687.92416483 43.74267810 241.16373130 207.95491339 1.00000000]
[]
[]
[]
[425.41812085 1677.60507034 26.77024824 323.55058220 267.87936900 1.00000000]
[425.41812085 1677.60507034 26.77024824 267.87936900 212.20815581 1.00000000]
[425.41812085 1677.60507034 26.77024824 212.20815581 156.53694261 1.00000000]
[425.41812085 1677.60507034 26.77024824 156.53694261 100.86572941 1.00000000]
[425.41812085 1677.60507034 26.77024824 100.86572941 45.19451621 1.00000000]
[]
[]
[]
[560.37196278 1687.92416483 43.74267810 160.79018503 127.58136712 1.00000000]
[560.37196278 1687.92416483 43.74267810 127.58136712 94.37254921 1.00000000]
[560.37196278 1687.92416483 43.74267810 94.37254921 61.16373130 1.00000000]
[560.37196278 1687.92416483 43.74267810 61.16373130 27.95491339 1.00000000]
[560.37196278 1687.92416483 43.74267810 27.95491339 354.74609548 1.00000000]
[560.37196278 1687.92416483 43.74267810 354.74609548 321.53727757 1.00000000]
[560.37196278 1687.92416483 43.74267810 321.53727757 288.32845966 1.00000000]
[]
[552.35488204 1600.74011003 28.47466729 46.82458738 354.74609546 1.00000000]
[552.35488204 1600.74011003 28.47466729 354.74609546 302.66760362 1.00000000]
[]
[]
[542.83724674 1497.23784144 36.01426010 55.67341931 15.05520345 1.00000000]
[542.83724674 1497.23784144 36.01426010 15.05520345 334.43698760 1.00000000]
[542.83724674 1497.23784144 36.01426010 334.43698760 293.81877175 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[487.53487221 895.83622796 28.47466729 46.82458743 354.74609550 1.00000000]
[487.53487221 895.83622796 28.47466729 354.74609550 302.66760367 1.00000000]
[]
[]
[476.84195823 779.55305154 47.64193249 63.19545237 32.77351602 1.00000000]
[476.84195823 779.55305154 47.64193249 32.77351602 2.35157966 1.00000000]
[476.84195823 779.55305154 47.64193249 2.35157966 331.92964331 1.00000000]
[476.84195823 779.55305154 47.64193249 331.92964331 301.50770695 1.00000000]
[476.84195823 779.55305154 47.64193249 301.50770695 271.08577060 1.00000000]
[]
[]
[]
[]
[405.09686258 587.30284237 63.35458712 53.50021162 30.74172417 1.00000000]
[405.09686258 587.30284237 63.35458712 30.74172417 7.98323672 1.00000000]
[405.09686258 587.30284237 63.35458712 7.98323672 345.22474926 1.00000000]
[405.09686258 587.30284237 63.35458712 345.22474926 322.46626181 1.00000000]
[405.09686258 587.30284237 63.35458712 322.46626181 299.70777435 1.00000000]
[405.09686258 587.30284237 63.35458712 299.70777435 276.94928690 1.00000000]
[]
[]
[]
[]
[367.49999741 352.20018257 79.15881624 68.14221657 49.97095882 1.00000000]
[367.49999741 352.20018257 79.15881624 49.97095882 31.79970107 1.00000000]
[367.49999741 352.20018257 79.15881624 31.79970107 13.62844331 1.00000000]
[367.49999741 352.20018257 79.15881624 13.62844331 355.45718556 1.00000000]
[367.49999741 352.20018257 79.15881624 355.45718556 337.28592781 1.00000000]
[367.49999741 352.20018257 79.15881624 337.28592781 319.11467006 1.00000000]
[367.49999741 352.20018257 79.15881624 319.11467006 300.94341231 1.00000000]
[367.49999741 352.20018257 79.15881624 300.94341231 282.77215456 1.00000000]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[27 152]
[28 151]
[29 150]
[30 149]
[31 148]
[38 142]
[39 141]
[40 140]
[41 139]
[42 138]
[46 133]
[47 132]
[48 131]
[50 129]
[51 128]
[52 127]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[71 108]
[72 107]
[75 104]
[76 103]
[77 102]
[79 100]
[80 99]
[81 92]
[82 91]
[83 90]
[84 89]
] def

init

% Start Annotations
41 81 12 1.00 0.60 0.67 omark 98 137 12 0.72 0.69 0.47 omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
